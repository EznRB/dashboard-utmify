fa22c4b917e838c6b47918bbb0d3a463
/* istanbul ignore next */
function cov_1rmlqkp9td() {
  var path = "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\config\\plugins.ts";
  var hash = "c78edda7736ab352a0b1d8f984a8a693ecfdf2cc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\config\\plugins.ts",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 31
        },
        end: {
          line: 182,
          column: 1
        }
      },
      "1": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 22,
          column: 7
        }
      },
      "2": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 41
        }
      },
      "3": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 68
        }
      },
      "4": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 46,
          column: 7
        }
      },
      "5": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 73,
          column: 5
        }
      },
      "6": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 72,
          column: 11
        }
      },
      "7": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 56,
          column: 45
        }
      },
      "8": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 63,
          column: 45
        }
      },
      "9": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 70,
          column: 42
        }
      },
      "10": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 135,
          column: 5
        }
      },
      "11": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 121,
          column: 11
        }
      },
      "12": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 134,
          column: 11
        }
      },
      "13": {
        start: {
          line: 129,
          column: 44
        },
        end: {
          line: 129,
          column: 50
        }
      },
      "14": {
        start: {
          line: 131,
          column: 16
        },
        end: {
          line: 131,
          column: 37
        }
      },
      "15": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 146,
          column: 7
        }
      },
      "16": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 51
        }
      },
      "17": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 145,
          column: 11
        }
      },
      "18": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 142,
          column: 95
        }
      },
      "19": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 78
        }
      },
      "20": {
        start: {
          line: 148,
          column: 4
        },
        end: {
          line: 165,
          column: 7
        }
      },
      "21": {
        start: {
          line: 149,
          column: 23
        },
        end: {
          line: 149,
          column: 55
        }
      },
      "22": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 35
        }
      },
      "23": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 159,
          column: 9
        }
      },
      "24": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 42
        }
      },
      "25": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 61
        }
      },
      "26": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 157,
          column: 64
        }
      },
      "27": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 158,
          column: 24
        }
      },
      "28": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 164,
          column: 11
        }
      },
      "29": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 162,
          column: 35
        }
      },
      "30": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 163,
          column: 54
        }
      },
      "31": {
        start: {
          line: 181,
          column: 4
        },
        end: {
          line: 181,
          column: 57
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 31
          },
          end: {
            line: 10,
            column: 32
          }
        },
        loc: {
          start: {
            line: 10,
            column: 46
          },
          end: {
            line: 182,
            column: 1
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 54,
            column: 23
          },
          end: {
            line: 54,
            column: 24
          }
        },
        loc: {
          start: {
            line: 54,
            column: 32
          },
          end: {
            line: 57,
            column: 13
          }
        },
        line: 54
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 58,
            column: 25
          },
          end: {
            line: 58,
            column: 26
          }
        },
        loc: {
          start: {
            line: 58,
            column: 34
          },
          end: {
            line: 64,
            column: 13
          }
        },
        line: 58
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 65,
            column: 24
          },
          end: {
            line: 65,
            column: 25
          }
        },
        loc: {
          start: {
            line: 65,
            column: 33
          },
          end: {
            line: 71,
            column: 13
          }
        },
        line: 65
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 129,
            column: 32
          },
          end: {
            line: 129,
            column: 33
          }
        },
        loc: {
          start: {
            line: 129,
            column: 44
          },
          end: {
            line: 129,
            column: 50
          }
        },
        line: 129
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 130,
            column: 36
          },
          end: {
            line: 130,
            column: 37
          }
        },
        loc: {
          start: {
            line: 130,
            column: 55
          },
          end: {
            line: 132,
            column: 13
          }
        },
        line: 130
      },
      "6": {
        name: "contextPlugin",
        decl: {
          start: {
            line: 137,
            column: 38
          },
          end: {
            line: 137,
            column: 51
          }
        },
        loc: {
          start: {
            line: 137,
            column: 61
          },
          end: {
            line: 146,
            column: 5
          }
        },
        line: 137
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 140,
            column: 37
          },
          end: {
            line: 140,
            column: 38
          }
        },
        loc: {
          start: {
            line: 140,
            column: 56
          },
          end: {
            line: 145,
            column: 9
          }
        },
        line: 140
      },
      "8": {
        name: "databasePlugin",
        decl: {
          start: {
            line: 148,
            column: 38
          },
          end: {
            line: 148,
            column: 52
          }
        },
        loc: {
          start: {
            line: 148,
            column: 62
          },
          end: {
            line: 165,
            column: 5
          }
        },
        line: 148
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 161,
            column: 35
          },
          end: {
            line: 161,
            column: 36
          }
        },
        loc: {
          start: {
            line: 161,
            column: 47
          },
          end: {
            line: 164,
            column: 9
          }
        },
        line: 161
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "1": {
        loc: {
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 135,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 135,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\config\\plugins.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\config\\plugins.ts"],
      sourcesContent: ["import type { FastifyInstance } from 'fastify'\nimport cors from '@fastify/cors'\nimport helmet from '@fastify/helmet'\nimport rateLimit from '@fastify/rate-limit'\nimport jwt from '@fastify/jwt'\nimport redis from '@fastify/redis'\nimport swagger from '@fastify/swagger'\nimport swaggerUi from '@fastify/swagger-ui'\n\nimport { config, corsConfig, rateLimitConfig, redisConfig, jwtConfig } from './env'\nimport { logger } from '@/utils/logger'\nimport websocketPlugin from '../plugins/websocket.plugin'\n// import { tenantMiddleware } from '../middleware/tenant.middleware'\n\nexport const registerPlugins = async (app: FastifyInstance) => {\n  // Security headers\n  await app.register(helmet, {\n    contentSecurityPolicy: {\n      directives: {\n        defaultSrc: [\"'self'\"],\n        styleSrc: [\"'self'\", \"'unsafe-inline'\"],\n        scriptSrc: [\"'self'\"],\n        imgSrc: [\"'self'\", 'data:', 'https:'],\n      },\n    },\n    crossOriginEmbedderPolicy: false,\n  })\n\n  // CORS\n  await app.register(cors, corsConfig)\n\n  // Redis connection disabled for now\n  // TODO: Re-enable when Redis is available\n  // await app.register(redis, {\n  //   ...redisConfig,\n  //   closeClient: true,\n  // })\n  logger.info('Redis plugin disabled - continuing without Redis')\n\n  // JWT authentication\n  await app.register(jwt, {\n    secret: jwtConfig.secret,\n    sign: {\n      algorithm: jwtConfig.algorithm,\n      issuer: jwtConfig.issuer,\n      audience: jwtConfig.audience,\n      expiresIn: jwtConfig.accessExpiresIn,\n    },\n    verify: {\n      algorithms: [jwtConfig.algorithm],\n      issuer: jwtConfig.issuer,\n      audience: jwtConfig.audience,\n    },\n  })\n\n  // Rate limiting (using in-memory store since Redis is disabled)\n  if (config.ENABLE_RATE_LIMITING) {\n    await app.register(rateLimit, {\n      ...rateLimitConfig,\n      // redis: app.redis, // Disabled since Redis is not available\n      nameSpace: 'utmify-rate-limit:',\n      continueExceeding: true,\n      allowList: (req) => {\n        // Skip rate limiting for health checks\n        return req.url === '/health'\n      },\n      onExceeding: (req) => {\n        logger.warn({\n          ip: req.ip,\n          url: req.url,\n          method: req.method,\n        }, 'Rate limit approaching')\n      },\n      onExceeded: (req) => {\n        logger.warn({\n          ip: req.ip,\n          url: req.url,\n          method: req.method,\n        }, 'Rate limit exceeded')\n      },\n    })\n  }\n\n  // Swagger documentation\n  if (config.ENABLE_SWAGGER) {\n    await app.register(swagger, {\n      openapi: {\n        info: {\n          title: 'Utmify API',\n          description: 'UTM tracking and campaign management API',\n          version: '1.0.0',\n          contact: {\n            name: 'Utmify Team',\n            email: 'support@utmify.com',\n          },\n          license: {\n            name: 'MIT',\n            url: 'https://opensource.org/licenses/MIT',\n          },\n        },\n        servers: [\n          {\n            url: `http://localhost:${config.PORT}`,\n            description: 'Development server',\n          },\n        ],\n        components: {\n          securitySchemes: {\n            bearerAuth: {\n              type: 'http',\n              scheme: 'bearer',\n              bearerFormat: 'JWT',\n            },\n          },\n        },\n        security: [\n          {\n            bearerAuth: [],\n          },\n        ],\n        tags: [\n          { name: 'Auth', description: 'Authentication endpoints' },\n          { name: 'Users', description: 'User management endpoints' },\n          { name: 'Organizations', description: 'Organization management endpoints' },\n          { name: 'Campaigns', description: 'Campaign management endpoints' },\n          { name: 'Metrics', description: 'Metrics and analytics endpoints' },\n          { name: 'Webhooks', description: 'Webhook management endpoints' },\n          { name: 'Ad Accounts', description: 'Ad account integration endpoints' },\n        ],\n      },\n    })\n\n    await app.register(swaggerUi, {\n      routePrefix: '/docs',\n      uiConfig: {\n        docExpansion: 'list',\n        deepLinking: false,\n      },\n      staticCSP: true,\n      transformStaticCSP: (header) => header,\n      transformSpecification: (swaggerObject) => {\n        return swaggerObject\n      },\n      transformSpecificationClone: true,\n    })\n  }\n\n  // Custom plugin for request context\n  await app.register(async function contextPlugin(fastify) {\n    // Note: user and organization decorators are handled by auth middleware\n    fastify.decorateRequest('requestId', null)\n    \n    fastify.addHook('onRequest', async (request) => {\n      // Generate unique request ID\n      request.requestId = `req_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\n      \n      // Add request ID to logger context\n      request.log = request.log.child({ requestId: request.requestId })\n    })\n  })\n\n  // Custom plugin for database connection\n  await app.register(async function databasePlugin(fastify) {\n    const { db } = await import('@utmify/database')\n    \n    fastify.decorate('db', db)\n    \n    // Test database connection\n    try {\n      await db.$queryRaw`SELECT 1`\n      logger.info('\u2705 Database connected successfully')\n    } catch (error) {\n      logger.error(error, '\u274C Database connection failed')\n      throw error\n    }\n    \n    // Graceful shutdown\n    fastify.addHook('onClose', async () => {\n      await db.$disconnect()\n      logger.info('Database connection closed')\n    })\n  })\n\n  // Custom plugin for Redis connection test - TEMPORARILY DISABLED\n  // await app.register(async function redisPlugin(fastify) {\n  //   try {\n  //     await fastify.redis.ping()\n  //     logger.info('\u2705 Redis connected successfully')\n  //   } catch (error) {\n  //     logger.error(error, '\u274C Redis connection failed')\n  //     throw error\n  //   }\n  // })\n\n  // WebSocket plugin for real-time metrics - TEMPORARILY DISABLED\n  // await app.register(websocketPlugin)\n\n  // Tenant middleware for multi-tenancy - TEMPORARILY DISABLED\n  // app.addHook('preHandler', tenantMiddleware)\n  // logger.info('\u2705 Tenant middleware registered')\n\n  logger.info('\u2705 All plugins registered successfully')\n}\n\n// Extend Fastify types\ndeclare module 'fastify' {\n  interface FastifyInstance {\n    db: typeof import('@utmify/database').db\n  }\n  \n  interface FastifyRequest {\n    user?: {\n      id: string\n      email: string\n      role: string\n      organizationId: string\n    } | null\n    organization?: {\n      id: string\n      name: string\n      slug: string\n      planType: string\n    } | null\n    requestId?: string\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c78edda7736ab352a0b1d8f984a8a693ecfdf2cc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1rmlqkp9td = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1rmlqkp9td();
import cors from '@fastify/cors';
import helmet from '@fastify/helmet';
import rateLimit from '@fastify/rate-limit';
import jwt from '@fastify/jwt';
import swagger from '@fastify/swagger';
import swaggerUi from '@fastify/swagger-ui';
import { config, corsConfig, rateLimitConfig, jwtConfig } from './env';
import { logger } from '@/utils/logger';
// import { tenantMiddleware } from '../middleware/tenant.middleware'
/* istanbul ignore next */
cov_1rmlqkp9td().s[0]++;
export const registerPlugins = async app => {
  /* istanbul ignore next */
  cov_1rmlqkp9td().f[0]++;
  cov_1rmlqkp9td().s[1]++;
  // Security headers
  await app.register(helmet, {
    contentSecurityPolicy: {
      directives: {
        defaultSrc: ["'self'"],
        styleSrc: ["'self'", "'unsafe-inline'"],
        scriptSrc: ["'self'"],
        imgSrc: ["'self'", 'data:', 'https:']
      }
    },
    crossOriginEmbedderPolicy: false
  });
  // CORS
  /* istanbul ignore next */
  cov_1rmlqkp9td().s[2]++;
  await app.register(cors, corsConfig);
  // Redis connection disabled for now
  // TODO: Re-enable when Redis is available
  // await app.register(redis, {
  //   ...redisConfig,
  //   closeClient: true,
  // })
  /* istanbul ignore next */
  cov_1rmlqkp9td().s[3]++;
  logger.info('Redis plugin disabled - continuing without Redis');
  // JWT authentication
  /* istanbul ignore next */
  cov_1rmlqkp9td().s[4]++;
  await app.register(jwt, {
    secret: jwtConfig.secret,
    sign: {
      algorithm: jwtConfig.algorithm,
      issuer: jwtConfig.issuer,
      audience: jwtConfig.audience,
      expiresIn: jwtConfig.accessExpiresIn
    },
    verify: {
      algorithms: [jwtConfig.algorithm],
      issuer: jwtConfig.issuer,
      audience: jwtConfig.audience
    }
  });
  // Rate limiting (using in-memory store since Redis is disabled)
  /* istanbul ignore next */
  cov_1rmlqkp9td().s[5]++;
  if (config.ENABLE_RATE_LIMITING) {
    /* istanbul ignore next */
    cov_1rmlqkp9td().b[0][0]++;
    cov_1rmlqkp9td().s[6]++;
    await app.register(rateLimit, {
      ...rateLimitConfig,
      // redis: app.redis, // Disabled since Redis is not available
      nameSpace: 'utmify-rate-limit:',
      continueExceeding: true,
      allowList: req => {
        /* istanbul ignore next */
        cov_1rmlqkp9td().f[1]++;
        cov_1rmlqkp9td().s[7]++;
        // Skip rate limiting for health checks
        return req.url === '/health';
      },
      onExceeding: req => {
        /* istanbul ignore next */
        cov_1rmlqkp9td().f[2]++;
        cov_1rmlqkp9td().s[8]++;
        logger.warn({
          ip: req.ip,
          url: req.url,
          method: req.method
        }, 'Rate limit approaching');
      },
      onExceeded: req => {
        /* istanbul ignore next */
        cov_1rmlqkp9td().f[3]++;
        cov_1rmlqkp9td().s[9]++;
        logger.warn({
          ip: req.ip,
          url: req.url,
          method: req.method
        }, 'Rate limit exceeded');
      }
    });
  } else
  /* istanbul ignore next */
  {
    cov_1rmlqkp9td().b[0][1]++;
  }
  // Swagger documentation
  cov_1rmlqkp9td().s[10]++;
  if (config.ENABLE_SWAGGER) {
    /* istanbul ignore next */
    cov_1rmlqkp9td().b[1][0]++;
    cov_1rmlqkp9td().s[11]++;
    await app.register(swagger, {
      openapi: {
        info: {
          title: 'Utmify API',
          description: 'UTM tracking and campaign management API',
          version: '1.0.0',
          contact: {
            name: 'Utmify Team',
            email: 'support@utmify.com'
          },
          license: {
            name: 'MIT',
            url: 'https://opensource.org/licenses/MIT'
          }
        },
        servers: [{
          url: `http://localhost:${config.PORT}`,
          description: 'Development server'
        }],
        components: {
          securitySchemes: {
            bearerAuth: {
              type: 'http',
              scheme: 'bearer',
              bearerFormat: 'JWT'
            }
          }
        },
        security: [{
          bearerAuth: []
        }],
        tags: [{
          name: 'Auth',
          description: 'Authentication endpoints'
        }, {
          name: 'Users',
          description: 'User management endpoints'
        }, {
          name: 'Organizations',
          description: 'Organization management endpoints'
        }, {
          name: 'Campaigns',
          description: 'Campaign management endpoints'
        }, {
          name: 'Metrics',
          description: 'Metrics and analytics endpoints'
        }, {
          name: 'Webhooks',
          description: 'Webhook management endpoints'
        }, {
          name: 'Ad Accounts',
          description: 'Ad account integration endpoints'
        }]
      }
    });
    /* istanbul ignore next */
    cov_1rmlqkp9td().s[12]++;
    await app.register(swaggerUi, {
      routePrefix: '/docs',
      uiConfig: {
        docExpansion: 'list',
        deepLinking: false
      },
      staticCSP: true,
      transformStaticCSP: header => {
        /* istanbul ignore next */
        cov_1rmlqkp9td().f[4]++;
        cov_1rmlqkp9td().s[13]++;
        return header;
      },
      transformSpecification: swaggerObject => {
        /* istanbul ignore next */
        cov_1rmlqkp9td().f[5]++;
        cov_1rmlqkp9td().s[14]++;
        return swaggerObject;
      },
      transformSpecificationClone: true
    });
  } else
  /* istanbul ignore next */
  {
    cov_1rmlqkp9td().b[1][1]++;
  }
  // Custom plugin for request context
  cov_1rmlqkp9td().s[15]++;
  await app.register(async function contextPlugin(fastify) {
    /* istanbul ignore next */
    cov_1rmlqkp9td().f[6]++;
    cov_1rmlqkp9td().s[16]++;
    // Note: user and organization decorators are handled by auth middleware
    fastify.decorateRequest('requestId', null);
    /* istanbul ignore next */
    cov_1rmlqkp9td().s[17]++;
    fastify.addHook('onRequest', async request => {
      /* istanbul ignore next */
      cov_1rmlqkp9td().f[7]++;
      cov_1rmlqkp9td().s[18]++;
      // Generate unique request ID
      request.requestId = `req_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
      // Add request ID to logger context
      /* istanbul ignore next */
      cov_1rmlqkp9td().s[19]++;
      request.log = request.log.child({
        requestId: request.requestId
      });
    });
  });
  // Custom plugin for database connection
  /* istanbul ignore next */
  cov_1rmlqkp9td().s[20]++;
  await app.register(async function databasePlugin(fastify) {
    /* istanbul ignore next */
    cov_1rmlqkp9td().f[8]++;
    const {
      db
    } =
    /* istanbul ignore next */
    (cov_1rmlqkp9td().s[21]++, await import('@utmify/database'));
    /* istanbul ignore next */
    cov_1rmlqkp9td().s[22]++;
    fastify.decorate('db', db);
    // Test database connection
    /* istanbul ignore next */
    cov_1rmlqkp9td().s[23]++;
    try {
      /* istanbul ignore next */
      cov_1rmlqkp9td().s[24]++;
      await db.$queryRaw`SELECT 1`;
      /* istanbul ignore next */
      cov_1rmlqkp9td().s[25]++;
      logger.info('✅ Database connected successfully');
    } catch (error) {
      /* istanbul ignore next */
      cov_1rmlqkp9td().s[26]++;
      logger.error(error, '❌ Database connection failed');
      /* istanbul ignore next */
      cov_1rmlqkp9td().s[27]++;
      throw error;
    }
    // Graceful shutdown
    /* istanbul ignore next */
    cov_1rmlqkp9td().s[28]++;
    fastify.addHook('onClose', async () => {
      /* istanbul ignore next */
      cov_1rmlqkp9td().f[9]++;
      cov_1rmlqkp9td().s[29]++;
      await db.$disconnect();
      /* istanbul ignore next */
      cov_1rmlqkp9td().s[30]++;
      logger.info('Database connection closed');
    });
  });
  // Custom plugin for Redis connection test - TEMPORARILY DISABLED
  // await app.register(async function redisPlugin(fastify) {
  //   try {
  //     await fastify.redis.ping()
  //     logger.info('✅ Redis connected successfully')
  //   } catch (error) {
  //     logger.error(error, '❌ Redis connection failed')
  //     throw error
  //   }
  // })
  // WebSocket plugin for real-time metrics - TEMPORARILY DISABLED
  // await app.register(websocketPlugin)
  // Tenant middleware for multi-tenancy - TEMPORARILY DISABLED
  // app.addHook('preHandler', tenantMiddleware)
  // logger.info('✅ Tenant middleware registered')
  /* istanbul ignore next */
  cov_1rmlqkp9td().s[31]++;
  logger.info('✅ All plugins registered successfully');
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,