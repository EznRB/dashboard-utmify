{"version":3,"names":["cors","helmet","rateLimit","jwt","swagger","swaggerUi","config","corsConfig","rateLimitConfig","jwtConfig","logger","cov_1rmlqkp9td","s","registerPlugins","app","f","register","contentSecurityPolicy","directives","defaultSrc","styleSrc","scriptSrc","imgSrc","crossOriginEmbedderPolicy","info","secret","sign","algorithm","issuer","audience","expiresIn","accessExpiresIn","verify","algorithms","ENABLE_RATE_LIMITING","b","nameSpace","continueExceeding","allowList","req","url","onExceeding","warn","ip","method","onExceeded","ENABLE_SWAGGER","openapi","title","description","version","contact","name","email","license","servers","PORT","components","securitySchemes","bearerAuth","type","scheme","bearerFormat","security","tags","routePrefix","uiConfig","docExpansion","deepLinking","staticCSP","transformStaticCSP","header","transformSpecification","swaggerObject","transformSpecificationClone","contextPlugin","fastify","decorateRequest","addHook","request","requestId","Date","now","Math","random","toString","substr","log","child","databasePlugin","db","decorate","$queryRaw","error","$disconnect"],"sources":["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\config\\plugins.ts"],"sourcesContent":["import type { FastifyInstance } from 'fastify'\nimport cors from '@fastify/cors'\nimport helmet from '@fastify/helmet'\nimport rateLimit from '@fastify/rate-limit'\nimport jwt from '@fastify/jwt'\nimport redis from '@fastify/redis'\nimport swagger from '@fastify/swagger'\nimport swaggerUi from '@fastify/swagger-ui'\n\nimport { config, corsConfig, rateLimitConfig, redisConfig, jwtConfig } from './env'\nimport { logger } from '@/utils/logger'\nimport websocketPlugin from '../plugins/websocket.plugin'\n// import { tenantMiddleware } from '../middleware/tenant.middleware'\n\nexport const registerPlugins = async (app: FastifyInstance) => {\n  // Security headers\n  await app.register(helmet, {\n    contentSecurityPolicy: {\n      directives: {\n        defaultSrc: [\"'self'\"],\n        styleSrc: [\"'self'\", \"'unsafe-inline'\"],\n        scriptSrc: [\"'self'\"],\n        imgSrc: [\"'self'\", 'data:', 'https:'],\n      },\n    },\n    crossOriginEmbedderPolicy: false,\n  })\n\n  // CORS\n  await app.register(cors, corsConfig)\n\n  // Redis connection disabled for now\n  // TODO: Re-enable when Redis is available\n  // await app.register(redis, {\n  //   ...redisConfig,\n  //   closeClient: true,\n  // })\n  logger.info('Redis plugin disabled - continuing without Redis')\n\n  // JWT authentication\n  await app.register(jwt, {\n    secret: jwtConfig.secret,\n    sign: {\n      algorithm: jwtConfig.algorithm,\n      issuer: jwtConfig.issuer,\n      audience: jwtConfig.audience,\n      expiresIn: jwtConfig.accessExpiresIn,\n    },\n    verify: {\n      algorithms: [jwtConfig.algorithm],\n      issuer: jwtConfig.issuer,\n      audience: jwtConfig.audience,\n    },\n  })\n\n  // Rate limiting (using in-memory store since Redis is disabled)\n  if (config.ENABLE_RATE_LIMITING) {\n    await app.register(rateLimit, {\n      ...rateLimitConfig,\n      // redis: app.redis, // Disabled since Redis is not available\n      nameSpace: 'utmify-rate-limit:',\n      continueExceeding: true,\n      allowList: (req) => {\n        // Skip rate limiting for health checks\n        return req.url === '/health'\n      },\n      onExceeding: (req) => {\n        logger.warn({\n          ip: req.ip,\n          url: req.url,\n          method: req.method,\n        }, 'Rate limit approaching')\n      },\n      onExceeded: (req) => {\n        logger.warn({\n          ip: req.ip,\n          url: req.url,\n          method: req.method,\n        }, 'Rate limit exceeded')\n      },\n    })\n  }\n\n  // Swagger documentation\n  if (config.ENABLE_SWAGGER) {\n    await app.register(swagger, {\n      openapi: {\n        info: {\n          title: 'Utmify API',\n          description: 'UTM tracking and campaign management API',\n          version: '1.0.0',\n          contact: {\n            name: 'Utmify Team',\n            email: 'support@utmify.com',\n          },\n          license: {\n            name: 'MIT',\n            url: 'https://opensource.org/licenses/MIT',\n          },\n        },\n        servers: [\n          {\n            url: `http://localhost:${config.PORT}`,\n            description: 'Development server',\n          },\n        ],\n        components: {\n          securitySchemes: {\n            bearerAuth: {\n              type: 'http',\n              scheme: 'bearer',\n              bearerFormat: 'JWT',\n            },\n          },\n        },\n        security: [\n          {\n            bearerAuth: [],\n          },\n        ],\n        tags: [\n          { name: 'Auth', description: 'Authentication endpoints' },\n          { name: 'Users', description: 'User management endpoints' },\n          { name: 'Organizations', description: 'Organization management endpoints' },\n          { name: 'Campaigns', description: 'Campaign management endpoints' },\n          { name: 'Metrics', description: 'Metrics and analytics endpoints' },\n          { name: 'Webhooks', description: 'Webhook management endpoints' },\n          { name: 'Ad Accounts', description: 'Ad account integration endpoints' },\n        ],\n      },\n    })\n\n    await app.register(swaggerUi, {\n      routePrefix: '/docs',\n      uiConfig: {\n        docExpansion: 'list',\n        deepLinking: false,\n      },\n      staticCSP: true,\n      transformStaticCSP: (header) => header,\n      transformSpecification: (swaggerObject) => {\n        return swaggerObject\n      },\n      transformSpecificationClone: true,\n    })\n  }\n\n  // Custom plugin for request context\n  await app.register(async function contextPlugin(fastify) {\n    // Note: user and organization decorators are handled by auth middleware\n    fastify.decorateRequest('requestId', null)\n    \n    fastify.addHook('onRequest', async (request) => {\n      // Generate unique request ID\n      request.requestId = `req_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\n      \n      // Add request ID to logger context\n      request.log = request.log.child({ requestId: request.requestId })\n    })\n  })\n\n  // Custom plugin for database connection\n  await app.register(async function databasePlugin(fastify) {\n    const { db } = await import('@utmify/database')\n    \n    fastify.decorate('db', db)\n    \n    // Test database connection\n    try {\n      await db.$queryRaw`SELECT 1`\n      logger.info('✅ Database connected successfully')\n    } catch (error) {\n      logger.error(error, '❌ Database connection failed')\n      throw error\n    }\n    \n    // Graceful shutdown\n    fastify.addHook('onClose', async () => {\n      await db.$disconnect()\n      logger.info('Database connection closed')\n    })\n  })\n\n  // Custom plugin for Redis connection test - TEMPORARILY DISABLED\n  // await app.register(async function redisPlugin(fastify) {\n  //   try {\n  //     await fastify.redis.ping()\n  //     logger.info('✅ Redis connected successfully')\n  //   } catch (error) {\n  //     logger.error(error, '❌ Redis connection failed')\n  //     throw error\n  //   }\n  // })\n\n  // WebSocket plugin for real-time metrics - TEMPORARILY DISABLED\n  // await app.register(websocketPlugin)\n\n  // Tenant middleware for multi-tenancy - TEMPORARILY DISABLED\n  // app.addHook('preHandler', tenantMiddleware)\n  // logger.info('✅ Tenant middleware registered')\n\n  logger.info('✅ All plugins registered successfully')\n}\n\n// Extend Fastify types\ndeclare module 'fastify' {\n  interface FastifyInstance {\n    db: typeof import('@utmify/database').db\n  }\n  \n  interface FastifyRequest {\n    user?: {\n      id: string\n      email: string\n      role: string\n      organizationId: string\n    } | null\n    organization?: {\n      id: string\n      name: string\n      slug: string\n      planType: string\n    } | null\n    requestId?: string\n  }\n}"],"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","ignoreList":[]}