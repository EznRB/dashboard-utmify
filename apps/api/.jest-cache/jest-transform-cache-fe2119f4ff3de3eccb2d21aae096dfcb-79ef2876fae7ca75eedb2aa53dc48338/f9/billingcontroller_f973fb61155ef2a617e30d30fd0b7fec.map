{"version":3,"names":["cov_198zzzajq1","actualCoverage","BillingService","StripeService","StripeWebhookService","z","createCheckoutSchema","s","object","planId","string","successUrl","url","cancelUrl","couponCode","optional","upgradeSubscriptionSchema","updatePaymentMethodSchema","paymentMethodId","recordUsageSchema","metricName","enum","quantity","number","positive","BillingController","billingService","stripeService","webhookService","constructor","f","createCheckout","request","reply","body","parse","organizationId","user","b","status","send","error","session","createCheckoutSession","success","data","console","Error","message","handleWebhook","signature","headers","payload","event","constructWebhookEvent","received","getSubscription","subscription","cancelSubscription","cancelAtPeriodEnd","upgradeSubscription","getInvoices","invoices","updatePaymentMethod","result","getUsage","usageData","checkUsageLimits","recordUsage","createPortalSession","returnUrl","stripeCustomerId","getPlans","plans","id","name","type","price","currency","interval","maxIntegrations","maxUsers","maxApiCalls","features","trialDays","restoreSubscription","getDeletedSubscriptions","isAdmin","role","subscriptions","undefined","permanentlyDeleteSubscription","userRole"],"sources":["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\controllers\\billing.controller.ts"],"sourcesContent":["import { FastifyRequest, FastifyReply } from 'fastify';\nimport { BillingService } from '../services/billing.service';\nimport { StripeService } from '../services/stripe.service';\nimport { StripeWebhookService } from '../services/stripe-webhook.service';\nimport { z } from 'zod';\nimport Stripe from 'stripe';\n\n// Validation schemas\nconst createCheckoutSchema = z.object({\n  planId: z.string(),\n  successUrl: z.string().url(),\n  cancelUrl: z.string().url(),\n  couponCode: z.string().optional(),\n});\n\nconst upgradeSubscriptionSchema = z.object({\n  planId: z.string(),\n});\n\nconst updatePaymentMethodSchema = z.object({\n  paymentMethodId: z.string(),\n});\n\nconst recordUsageSchema = z.object({\n  metricName: z.enum(['integrations', 'users', 'api_calls']),\n  quantity: z.number().positive(),\n});\n\nexport class BillingController {\n  private billingService: BillingService;\n  private stripeService: StripeService;\n  private webhookService: StripeWebhookService;\n\n  constructor() {\n    this.billingService = new BillingService();\n    this.stripeService = new StripeService();\n    this.webhookService = new StripeWebhookService();\n  }\n\n  async createCheckout(request: FastifyRequest, reply: FastifyReply) {\n    try {\n      const body = createCheckoutSchema.parse(request.body);\n      const organizationId = (request as any).user.organizationId;\n\n      if (!organizationId) {\n        return reply.status(400).send({\n          error: 'Organization ID is required',\n        });\n      }\n\n      const session = await this.billingService.createCheckoutSession(\n        organizationId,\n        body.planId,\n        body.successUrl,\n        body.cancelUrl,\n        body.couponCode\n      );\n\n      return reply.send({\n        success: true,\n        data: session,\n      });\n    } catch (error) {\n      console.error('Error creating checkout session:', error);\n      return reply.status(400).send({\n        error: error instanceof Error ? error.message : 'Failed to create checkout session',\n      });\n    }\n  }\n\n  async handleWebhook(request: FastifyRequest, reply: FastifyReply) {\n    try {\n      const signature = request.headers['stripe-signature'] as string;\n      const payload = request.body as string;\n\n      if (!signature) {\n        return reply.status(400).send({ error: 'Missing stripe-signature header' });\n      }\n\n      const event = await this.stripeService.constructWebhookEvent(payload, signature);\n      \n      await this.webhookService.handleWebhook(event);\n\n      return reply.send({ received: true });\n    } catch (error) {\n      console.error('Webhook error:', error);\n      return reply.status(400).send({\n        error: error instanceof Error ? error.message : 'Webhook processing failed',\n      });\n    }\n  }\n\n  async getSubscription(request: FastifyRequest, reply: FastifyReply) {\n    try {\n      const organizationId = (request as any).user.organizationId;\n\n      if (!organizationId) {\n        return reply.status(400).send({\n          error: 'Organization ID is required',\n        });\n      }\n\n      const subscription = await this.billingService.getSubscription(organizationId);\n\n      if (!subscription) {\n        return reply.status(404).send({\n          error: 'Subscription not found',\n        });\n      }\n\n      return reply.send({\n        success: true,\n        data: subscription,\n      });\n    } catch (error) {\n      console.error('Error getting subscription:', error);\n      return reply.status(500).send({\n        error: 'Failed to get subscription',\n      });\n    }\n  }\n\n  async cancelSubscription(request: FastifyRequest, reply: FastifyReply) {\n    try {\n      const organizationId = (request as any).user.organizationId;\n      const { cancelAtPeriodEnd = true } = request.body as { cancelAtPeriodEnd?: boolean };\n\n      if (!organizationId) {\n        return reply.status(400).send({\n          error: 'Organization ID is required',\n        });\n      }\n\n      const subscription = await this.billingService.cancelSubscription(\n        organizationId,\n        cancelAtPeriodEnd\n      );\n\n      return reply.send({\n        success: true,\n        data: subscription,\n      });\n    } catch (error) {\n      console.error('Error canceling subscription:', error);\n      return reply.status(400).send({\n        error: error instanceof Error ? error.message : 'Failed to cancel subscription',\n      });\n    }\n  }\n\n  async upgradeSubscription(request: FastifyRequest, reply: FastifyReply) {\n    try {\n      const body = upgradeSubscriptionSchema.parse(request.body);\n      const organizationId = (request as any).user.organizationId;\n\n      if (!organizationId) {\n        return reply.status(400).send({\n          error: 'Organization ID is required',\n        });\n      }\n\n      const subscription = await this.billingService.upgradeSubscription(\n        organizationId,\n        body.planId\n      );\n\n      return reply.send({\n        success: true,\n        data: subscription,\n      });\n    } catch (error) {\n      console.error('Error upgrading subscription:', error);\n      return reply.status(400).send({\n        error: error instanceof Error ? error.message : 'Failed to upgrade subscription',\n      });\n    }\n  }\n\n  async getInvoices(request: FastifyRequest, reply: FastifyReply) {\n    try {\n      const organizationId = (request as any).user.organizationId;\n\n      if (!organizationId) {\n        return reply.status(400).send({\n          error: 'Organization ID is required',\n        });\n      }\n\n      const invoices = await this.billingService.getInvoices(organizationId);\n\n      return reply.send({\n        success: true,\n        data: invoices,\n      });\n    } catch (error) {\n      console.error('Error getting invoices:', error);\n      return reply.status(500).send({\n        error: 'Failed to get invoices',\n      });\n    }\n  }\n\n  async updatePaymentMethod(request: FastifyRequest, reply: FastifyReply) {\n    try {\n      const body = updatePaymentMethodSchema.parse(request.body);\n      const organizationId = (request as any).user.organizationId;\n\n      if (!organizationId) {\n        return reply.status(400).send({\n          error: 'Organization ID is required',\n        });\n      }\n\n      const result = await this.billingService.updatePaymentMethod(\n        organizationId,\n        body.paymentMethodId\n      );\n\n      return reply.send({\n        success: true,\n        data: result,\n      });\n    } catch (error) {\n      console.error('Error updating payment method:', error);\n      return reply.status(400).send({\n        error: error instanceof Error ? error.message : 'Failed to update payment method',\n      });\n    }\n  }\n\n  async getUsage(request: FastifyRequest, reply: FastifyReply) {\n    try {\n      const organizationId = (request as any).user.organizationId;\n\n      if (!organizationId) {\n        return reply.status(400).send({\n          error: 'Organization ID is required',\n        });\n      }\n\n      const usageData = await this.billingService.checkUsageLimits(organizationId);\n\n      return reply.send({\n        success: true,\n        data: usageData,\n      });\n    } catch (error) {\n      console.error('Error getting usage:', error);\n      return reply.status(500).send({\n        error: 'Failed to get usage data',\n      });\n    }\n  }\n\n  async recordUsage(request: FastifyRequest, reply: FastifyReply) {\n    try {\n      const body = recordUsageSchema.parse(request.body);\n      const organizationId = (request as any).user.organizationId;\n\n      if (!organizationId) {\n        return reply.status(400).send({\n          error: 'Organization ID is required',\n        });\n      }\n\n      await this.billingService.recordUsage(\n        organizationId,\n        body.metricName,\n        body.quantity\n      );\n\n      return reply.send({\n        success: true,\n        message: 'Usage recorded successfully',\n      });\n    } catch (error) {\n      console.error('Error recording usage:', error);\n      return reply.status(400).send({\n        error: error instanceof Error ? error.message : 'Failed to record usage',\n      });\n    }\n  }\n\n  async createPortalSession(request: FastifyRequest, reply: FastifyReply) {\n    try {\n      const organizationId = (request as any).user.organizationId;\n      const { returnUrl } = request.body as { returnUrl: string };\n\n      if (!organizationId) {\n        return reply.status(400).send({\n          error: 'Organization ID is required',\n        });\n      }\n\n      if (!returnUrl) {\n        return reply.status(400).send({\n          error: 'Return URL is required',\n        });\n      }\n\n      const subscription = await this.billingService.getSubscription(organizationId);\n\n      if (!subscription || !subscription.stripeCustomerId) {\n        return reply.status(404).send({\n          error: 'Customer not found',\n        });\n      }\n\n      const session = await this.stripeService.createPortalSession(\n        subscription.stripeCustomerId,\n        returnUrl\n      );\n\n      return reply.send({\n        success: true,\n        data: {\n          url: session.url,\n        },\n      });\n    } catch (error) {\n      console.error('Error creating portal session:', error);\n      return reply.status(400).send({\n        error: error instanceof Error ? error.message : 'Failed to create portal session',\n      });\n    }\n  }\n\n  async getPlans(request: FastifyRequest, reply: FastifyReply) {\n    try {\n      // This would typically come from your database\n      const plans = [\n        {\n          id: 'free',\n          name: 'Free',\n          type: 'FREE',\n          price: 0,\n          currency: 'BRL',\n          interval: 'month',\n          maxIntegrations: 1,\n          maxUsers: 1,\n          maxApiCalls: 1000,\n          features: [\n            '1 integração',\n            '1 usuário',\n            '1.000 chamadas de API/mês',\n            'Suporte por email',\n          ],\n          trialDays: 0,\n        },\n        {\n          id: 'starter',\n          name: 'Starter',\n          type: 'STARTER',\n          price: 9700, // R$ 97.00 in cents\n          currency: 'BRL',\n          interval: 'month',\n          maxIntegrations: 3,\n          maxUsers: 5,\n          maxApiCalls: 10000,\n          features: [\n            '3 integrações',\n            '5 usuários',\n            '10.000 chamadas de API/mês',\n            'Suporte prioritário',\n            'Relatórios avançados',\n          ],\n          trialDays: 7,\n        },\n        {\n          id: 'pro',\n          name: 'Pro',\n          type: 'PRO',\n          price: 29700, // R$ 297.00 in cents\n          currency: 'BRL',\n          interval: 'month',\n          maxIntegrations: null, // unlimited\n          maxUsers: null, // unlimited\n          maxApiCalls: null, // unlimited\n          features: [\n            'Integrações ilimitadas',\n            'Usuários ilimitados',\n            'Chamadas de API ilimitadas',\n            'Suporte 24/7',\n            'Relatórios personalizados',\n            'API avançada',\n            'Webhooks',\n          ],\n          trialDays: 7,\n        },\n        {\n          id: 'enterprise',\n          name: 'Enterprise',\n          type: 'ENTERPRISE',\n          price: null, // custom pricing\n          currency: 'BRL',\n          interval: 'month',\n          maxIntegrations: null,\n          maxUsers: null,\n          maxApiCalls: null,\n          features: [\n            'Tudo do Pro',\n            'Implementação dedicada',\n            'Gerente de conta',\n            'SLA garantido',\n            'Integração personalizada',\n            'Treinamento da equipe',\n          ],\n          trialDays: 14,\n        },\n      ];\n\n      return reply.send({\n        success: true,\n        data: plans,\n      });\n    } catch (error) {\n      console.error('Error getting plans:', error);\n      return reply.status(500).send({\n        error: 'Failed to get plans',\n      });\n    }\n  }\n\n  async restoreSubscription(request: FastifyRequest, reply: FastifyReply) {\n    try {\n      const organizationId = (request as any).user.organizationId;\n\n      if (!organizationId) {\n        return reply.status(400).send({\n          error: 'Organization ID is required',\n        });\n      }\n\n      const subscription = await this.billingService.restoreSubscription(organizationId);\n\n      return reply.send({\n        success: true,\n        data: subscription,\n      });\n    } catch (error) {\n      console.error('Error restoring subscription:', error);\n      return reply.status(400).send({\n        error: error instanceof Error ? error.message : 'Failed to restore subscription',\n      });\n    }\n  }\n\n  async getDeletedSubscriptions(request: FastifyRequest, reply: FastifyReply) {\n    try {\n      const organizationId = (request as any).user.organizationId;\n      const isAdmin = (request as any).user.role === 'ADMIN' || (request as any).user.role === 'OWNER';\n\n      // Only admins can see all deleted subscriptions, regular users only see their own\n      const subscriptions = await this.billingService.getDeletedSubscriptions(\n        isAdmin ? undefined : organizationId\n      );\n\n      return reply.send({\n        success: true,\n        data: subscriptions,\n      });\n    } catch (error) {\n      console.error('Error getting deleted subscriptions:', error);\n      return reply.status(500).send({\n        error: 'Failed to get deleted subscriptions',\n      });\n    }\n  }\n\n  async permanentlyDeleteSubscription(request: FastifyRequest, reply: FastifyReply) {\n    try {\n      const organizationId = (request as any).user.organizationId;\n      const userRole = (request as any).user.role;\n\n      // Only owners can permanently delete subscriptions\n      if (userRole !== 'OWNER') {\n        return reply.status(403).send({\n          error: 'Only organization owners can permanently delete subscriptions',\n        });\n      }\n\n      if (!organizationId) {\n        return reply.status(400).send({\n          error: 'Organization ID is required',\n        });\n      }\n\n      await this.billingService.permanentlyDeleteSubscription(organizationId);\n\n      return reply.send({\n        success: true,\n        message: 'Subscription permanently deleted',\n      });\n    } catch (error) {\n      console.error('Error permanently deleting subscription:', error);\n      return reply.status(400).send({\n        error: error instanceof Error ? error.message : 'Failed to permanently delete subscription',\n      });\n    }\n  }\n}"],"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","ignoreList":[]}