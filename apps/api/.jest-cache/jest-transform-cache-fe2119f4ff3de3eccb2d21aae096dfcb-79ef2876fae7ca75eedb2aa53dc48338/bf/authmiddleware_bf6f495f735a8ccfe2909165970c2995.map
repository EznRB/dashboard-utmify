{"version":3,"names":["cov_1v0jfo0930","actualCoverage","AuthService","ApiError","logAuth","logSecurity","authMiddleware","request","reply","options","b","f","required","roles","permissions","organizationRequired","s","authHeader","headers","authorization","startsWith","ip","token","substring","authService","server","user","organization","sessionId","verifyToken","id","length","includes","role","requiredRoles","userRole","email","error","undefined","Error","message","userAgent","createAuthMiddleware","requireAuth","optionalAuth","requireOwner","requireAdmin","requireMember","organizationMiddleware","isActive","organizationId","requestId","slug","Date","now","Math","random","toString","substr","organizationRateLimit","orgId","key","floor","current","redis","incr","expire","limits","STARTER","PROFESSIONAL","ENTERPRISE","limit","planType","header","max","toISOString","apiKeyMiddleware","apiKey","db","findFirst","where","include","users","take","webhookMiddleware","signature","timestamp","webhookTime","parseInt","currentTime","abs","diff"],"sources":["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\middleware\\auth.middleware.ts"],"sourcesContent":["import type { FastifyRequest, FastifyReply } from 'fastify'\nimport type { User, Organization, UserRole } from '@utmify/shared'\nimport { AuthService } from '@/services/auth.service'\nimport { ApiError } from '@/utils/errors'\nimport { logAuth, logSecurity } from '@/utils/logger'\n\n// Extend Fastify types\ndeclare module 'fastify' {\n  interface FastifyRequest {\n    user?: Omit<User, 'password'>\n    organization?: Organization\n    sessionId?: string\n  }\n}\n\nexport interface AuthMiddlewareOptions {\n  required?: boolean\n  roles?: UserRole[]\n  permissions?: string[]\n  organizationRequired?: boolean\n}\n\n// Authentication middleware\nexport async function authMiddleware(\n  request: FastifyRequest,\n  reply: FastifyReply,\n  options: AuthMiddlewareOptions = {}\n) {\n  const {\n    required = true,\n    roles = [],\n    permissions = [],\n    organizationRequired = true,\n  } = options\n\n  try {\n    // Extract token from Authorization header\n    const authHeader = request.headers.authorization\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      if (required) {\n        logSecurity('missing_auth_header', request.ip, request.headers['user-agent'])\n        throw new ApiError('Authorization header required', 'MISSING_AUTH_HEADER', 401)\n      }\n      return\n    }\n\n    const token = authHeader.substring(7) // Remove 'Bearer ' prefix\n    if (!token) {\n      if (required) {\n        logSecurity('empty_auth_token', request.ip, request.headers['user-agent'])\n        throw new ApiError('Access token required', 'MISSING_ACCESS_TOKEN', 401)\n      }\n      return\n    }\n\n    // Verify token and get user\n    const authService = new AuthService(request.server)\n    const { user, organization, sessionId } = await authService.verifyToken(token)\n\n    // Check if organization is required\n    if (organizationRequired && !organization) {\n      logSecurity('missing_organization', user.id, request.ip)\n      throw new ApiError('Organization required', 'ORGANIZATION_REQUIRED', 403)\n    }\n\n    // Check user role if specified\n    if (roles.length > 0 && !roles.includes(user.role)) {\n      logSecurity('insufficient_role', user.id, request.ip, {\n        requiredRoles: roles,\n        userRole: user.role,\n      })\n      throw new ApiError('Insufficient permissions', 'INSUFFICIENT_PERMISSIONS', 403)\n    }\n\n    // Check permissions if specified (placeholder for future implementation)\n    if (permissions.length > 0) {\n      // TODO: Implement permission checking logic\n      // This would check against user permissions or role-based permissions\n    }\n\n    // Attach user and organization to request\n    request.user = user\n    request.organization = organization\n    request.sessionId = sessionId\n\n    // Log successful authentication\n    logAuth('auth_success', user.id, user.email, request.ip)\n  } catch (error) {\n    if (error instanceof ApiError) {\n      throw error\n    }\n\n    logSecurity('auth_error', undefined, request.ip, {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      userAgent: request.headers['user-agent'],\n    })\n\n    if (required) {\n      throw new ApiError('Authentication failed', 'AUTH_FAILED', 401)\n    }\n  }\n}\n\n// Helper function to create auth middleware with specific options\nexport function createAuthMiddleware(options: AuthMiddlewareOptions = {}) {\n  return async (request: FastifyRequest, reply: FastifyReply) => {\n    return authMiddleware(request, reply, options)\n  }\n}\n\n// Predefined middleware functions\nexport const requireAuth = createAuthMiddleware({ required: true })\nexport const optionalAuth = createAuthMiddleware({ required: false })\n\n// Role-based middleware\nexport const requireOwner = createAuthMiddleware({\n  required: true,\n  roles: ['OWNER'],\n})\n\nexport const requireAdmin = createAuthMiddleware({\n  required: true,\n  roles: ['OWNER', 'ADMIN'],\n})\n\nexport const requireMember = createAuthMiddleware({\n  required: true,\n  roles: ['OWNER', 'ADMIN', 'MEMBER'],\n})\n\n// Organization middleware\nexport async function organizationMiddleware(\n  request: FastifyRequest,\n  reply: FastifyReply\n) {\n  // This middleware should run after auth middleware\n  if (!request.user || !request.organization) {\n    throw new ApiError('Authentication required', 'AUTH_REQUIRED', 401)\n  }\n\n  // Check if organization is active\n  if (!request.organization.isActive) {\n    logSecurity('inactive_organization_access', request.user.id, request.ip, {\n      organizationId: request.organization.id,\n    })\n    throw new ApiError('Organization is disabled', 'ORGANIZATION_DISABLED', 403)\n  }\n\n  // Add organization context to request\n  request.requestId = `${request.organization.slug}-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`\n}\n\n// Rate limiting middleware per organization\nexport async function organizationRateLimit(\n  request: FastifyRequest,\n  reply: FastifyReply\n) {\n  if (!request.organization) {\n    throw new ApiError('Organization required', 'ORGANIZATION_REQUIRED', 403)\n  }\n\n  const orgId = request.organization.id\n  const key = `rate_limit:org:${orgId}:${Math.floor(Date.now() / 60000)}` // Per minute\n\n  // Get current count\n  const current = await request.server.redis.incr(key)\n  \n  // Set expiration on first increment\n  if (current === 1) {\n    await request.server.redis.expire(key, 60) // 1 minute\n  }\n\n  // Check organization plan limits\n  const limits = {\n    STARTER: 100,\n    PROFESSIONAL: 500,\n    ENTERPRISE: 2000,\n  }\n\n  const limit = limits[request.organization.planType] || limits.STARTER\n\n  if (current > limit) {\n    logSecurity('rate_limit_exceeded', request.user?.id, request.ip, {\n      organizationId: orgId,\n      limit,\n      current,\n    })\n    \n    reply.header('X-RateLimit-Limit', limit)\n    reply.header('X-RateLimit-Remaining', Math.max(0, limit - current))\n    reply.header('X-RateLimit-Reset', new Date(Date.now() + 60000).toISOString())\n    \n    throw new ApiError('Rate limit exceeded', 'RATE_LIMIT_EXCEEDED', 429)\n  }\n\n  // Add rate limit headers\n  reply.header('X-RateLimit-Limit', limit)\n  reply.header('X-RateLimit-Remaining', Math.max(0, limit - current))\n  reply.header('X-RateLimit-Reset', new Date(Date.now() + 60000).toISOString())\n}\n\n// API key authentication middleware (for webhooks and external integrations)\nexport async function apiKeyMiddleware(\n  request: FastifyRequest,\n  reply: FastifyReply\n) {\n  const apiKey = request.headers['x-api-key'] as string\n  \n  if (!apiKey) {\n    logSecurity('missing_api_key', undefined, request.ip)\n    throw new ApiError('API key required', 'MISSING_API_KEY', 401)\n  }\n\n  // Find organization by API key\n  const organization = await request.server.db.organization.findFirst({\n    where: {\n      apiKey,\n      isActive: true,\n    },\n    include: {\n      users: {\n        where: { role: 'OWNER', isActive: true },\n        take: 1,\n      },\n    },\n  })\n\n  if (!organization || !organization.users[0]) {\n    logSecurity('invalid_api_key', undefined, request.ip, { apiKey: apiKey.substring(0, 8) + '...' })\n    throw new ApiError('Invalid API key', 'INVALID_API_KEY', 401)\n  }\n\n  // Attach organization and owner to request\n  request.organization = organization\n  request.user = organization.users[0]\n\n  logAuth('api_key_auth_success', organization.users[0].id, organization.users[0].email, request.ip)\n}\n\n// Webhook signature verification middleware\nexport async function webhookMiddleware(\n  request: FastifyRequest,\n  reply: FastifyReply\n) {\n  const signature = request.headers['x-webhook-signature'] as string\n  const timestamp = request.headers['x-webhook-timestamp'] as string\n  \n  if (!signature || !timestamp) {\n    logSecurity('missing_webhook_signature', undefined, request.ip)\n    throw new ApiError('Webhook signature required', 'MISSING_WEBHOOK_SIGNATURE', 401)\n  }\n\n  // Check timestamp to prevent replay attacks (within 5 minutes)\n  const webhookTime = parseInt(timestamp)\n  const currentTime = Math.floor(Date.now() / 1000)\n  \n  if (Math.abs(currentTime - webhookTime) > 300) {\n    logSecurity('webhook_timestamp_invalid', undefined, request.ip, {\n      webhookTime,\n      currentTime,\n      diff: Math.abs(currentTime - webhookTime),\n    })\n    throw new ApiError('Webhook timestamp invalid', 'INVALID_WEBHOOK_TIMESTAMP', 401)\n  }\n\n  // TODO: Implement signature verification based on webhook source\n  // This would verify the signature using the webhook secret\n  \n  logAuth('webhook_auth_success', undefined, undefined, request.ip)\n}"],"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","ignoreList":[]}