280e5ce870a38d1fb541b4089fd10405
"use strict";

/* istanbul ignore next */
function cov_2a41pbrpvj() {
  var path = "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\utils\\errors.ts";
  var hash = "fc5aebce0f3a14546bc4298fc528d226bff0c9fc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\utils\\errors.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 129
        }
      },
      "2": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 36
        }
      },
      "3": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 42
        }
      },
      "4": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 36
        }
      },
      "5": {
        start: {
          line: 7,
          column: 17
        },
        end: {
          line: 7,
          column: 36
        }
      },
      "6": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 64,
          column: 2
        }
      },
      "7": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 23
        }
      },
      "8": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 31
        }
      },
      "9": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 25
        }
      },
      "10": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 37
        }
      },
      "11": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 31
        }
      },
      "12": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 50
        }
      },
      "13": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "14": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 52
        }
      },
      "15": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 93,
          column: 10
        }
      },
      "16": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 97,
          column: 94
        }
      },
      "17": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 94
        }
      },
      "18": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 105
        }
      },
      "19": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 90
        }
      },
      "20": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 109,
          column: 95
        }
      },
      "21": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 100
        }
      },
      "22": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 95
        }
      },
      "23": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 100
        }
      },
      "24": {
        start: {
          line: 121,
          column: 0
        },
        end: {
          line: 121,
          column: 28
        }
      },
      "25": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 125,
          column: 75
        }
      },
      "26": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 38
        }
      },
      "27": {
        start: {
          line: 129,
          column: 24
        },
        end: {
          line: 133,
          column: 11
        }
      },
      "28": {
        start: {
          line: 129,
          column: 52
        },
        end: {
          line: 133,
          column: 9
        }
      },
      "29": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 65
        }
      },
      "30": {
        start: {
          line: 137,
          column: 0
        },
        end: {
          line: 137,
          column: 42
        }
      },
      "31": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 73
        }
      },
      "32": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 142,
          column: 36
        }
      },
      "33": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 145,
          column: 9
        }
      },
      "34": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 45
        }
      },
      "35": {
        start: {
          line: 148,
          column: 22
        },
        end: {
          line: 148,
          column: 49
        }
      },
      "36": {
        start: {
          line: 149,
          column: 19
        },
        end: {
          line: 149,
          column: 53
        }
      },
      "37": {
        start: {
          line: 150,
          column: 25
        },
        end: {
          line: 150,
          column: 28
        }
      },
      "38": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 175,
          column: 9
        }
      },
      "39": {
        start: {
          line: 154,
          column: 16
        },
        end: {
          line: 154,
          column: 68
        }
      },
      "40": {
        start: {
          line: 155,
          column: 16
        },
        end: {
          line: 155,
          column: 58
        }
      },
      "41": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 156,
          column: 33
        }
      },
      "42": {
        start: {
          line: 157,
          column: 16
        },
        end: {
          line: 157,
          column: 22
        }
      },
      "43": {
        start: {
          line: 159,
          column: 16
        },
        end: {
          line: 159,
          column: 45
        }
      },
      "44": {
        start: {
          line: 160,
          column: 16
        },
        end: {
          line: 160,
          column: 53
        }
      },
      "45": {
        start: {
          line: 161,
          column: 16
        },
        end: {
          line: 161,
          column: 33
        }
      },
      "46": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 162,
          column: 22
        }
      },
      "47": {
        start: {
          line: 164,
          column: 16
        },
        end: {
          line: 164,
          column: 58
        }
      },
      "48": {
        start: {
          line: 165,
          column: 16
        },
        end: {
          line: 165,
          column: 60
        }
      },
      "49": {
        start: {
          line: 166,
          column: 16
        },
        end: {
          line: 166,
          column: 33
        }
      },
      "50": {
        start: {
          line: 167,
          column: 16
        },
        end: {
          line: 167,
          column: 22
        }
      },
      "51": {
        start: {
          line: 169,
          column: 16
        },
        end: {
          line: 169,
          column: 48
        }
      },
      "52": {
        start: {
          line: 170,
          column: 16
        },
        end: {
          line: 170,
          column: 57
        }
      },
      "53": {
        start: {
          line: 171,
          column: 16
        },
        end: {
          line: 171,
          column: 33
        }
      },
      "54": {
        start: {
          line: 172,
          column: 16
        },
        end: {
          line: 172,
          column: 22
        }
      },
      "55": {
        start: {
          line: 174,
          column: 16
        },
        end: {
          line: 174,
          column: 71
        }
      },
      "56": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 179,
          column: 11
        }
      },
      "57": {
        start: {
          line: 182,
          column: 0
        },
        end: {
          line: 182,
          column: 38
        }
      },
      "58": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 187,
          column: 81
        }
      },
      "59": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 43
        }
      },
      "60": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 31
        }
      },
      "61": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 192,
          column: 9
        }
      },
      "62": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 191,
          column: 45
        }
      },
      "63": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 198,
          column: 11
        }
      },
      "64": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 204,
          column: 11
        }
      },
      "65": {
        start: {
          line: 207,
          column: 0
        },
        end: {
          line: 207,
          column: 52
        }
      },
      "66": {
        start: {
          line: 211,
          column: 4
        },
        end: {
          line: 226,
          column: 24
        }
      },
      "67": {
        start: {
          line: 228,
          column: 4
        },
        end: {
          line: 230,
          column: 5
        }
      },
      "68": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 229,
          column: 67
        }
      },
      "69": {
        start: {
          line: 231,
          column: 4
        },
        end: {
          line: 233,
          column: 5
        }
      },
      "70": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 232,
          column: 67
        }
      },
      "71": {
        start: {
          line: 234,
          column: 4
        },
        end: {
          line: 236,
          column: 5
        }
      },
      "72": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 235,
          column: 67
        }
      },
      "73": {
        start: {
          line: 237,
          column: 4
        },
        end: {
          line: 239,
          column: 5
        }
      },
      "74": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 238,
          column: 67
        }
      },
      "75": {
        start: {
          line: 241,
          column: 4
        },
        end: {
          line: 244,
          column: 5
        }
      },
      "76": {
        start: {
          line: 242,
          column: 32
        },
        end: {
          line: 242,
          column: 67
        }
      },
      "77": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 243,
          column: 87
        }
      },
      "78": {
        start: {
          line: 246,
          column: 4
        },
        end: {
          line: 249,
          column: 5
        }
      },
      "79": {
        start: {
          line: 247,
          column: 31
        },
        end: {
          line: 247,
          column: 141
        }
      },
      "80": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 248,
          column: 63
        }
      },
      "81": {
        start: {
          line: 251,
          column: 4
        },
        end: {
          line: 254,
          column: 5
        }
      },
      "82": {
        start: {
          line: 252,
          column: 25
        },
        end: {
          line: 252,
          column: 122
        }
      },
      "83": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 253,
          column: 70
        }
      },
      "84": {
        start: {
          line: 256,
          column: 26
        },
        end: {
          line: 256,
          column: 203
        }
      },
      "85": {
        start: {
          line: 257,
          column: 4
        },
        end: {
          line: 257,
          column: 58
        }
      },
      "86": {
        start: {
          line: 261,
          column: 26
        },
        end: {
          line: 261,
          column: 126
        }
      },
      "87": {
        start: {
          line: 262,
          column: 4
        },
        end: {
          line: 262,
          column: 58
        }
      },
      "88": {
        start: {
          line: 266,
          column: 4
        },
        end: {
          line: 270,
          column: 6
        }
      },
      "89": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 269,
          column: 11
        }
      },
      "90": {
        start: {
          line: 268,
          column: 12
        },
        end: {
          line: 268,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        },
        loc: {
          start: {
            line: 71,
            column: 95
          },
          end: {
            line: 82,
            column: 5
          }
        },
        line: 71
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        },
        loc: {
          start: {
            line: 84,
            column: 13
          },
          end: {
            line: 94,
            column: 5
          }
        },
        line: 84
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 96,
            column: 4
          },
          end: {
            line: 96,
            column: 5
          }
        },
        loc: {
          start: {
            line: 96,
            column: 46
          },
          end: {
            line: 98,
            column: 5
          }
        },
        line: 96
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 99,
            column: 5
          }
        },
        loc: {
          start: {
            line: 99,
            column: 48
          },
          end: {
            line: 101,
            column: 5
          }
        },
        line: 99
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 102,
            column: 4
          },
          end: {
            line: 102,
            column: 5
          }
        },
        loc: {
          start: {
            line: 102,
            column: 45
          },
          end: {
            line: 104,
            column: 5
          }
        },
        line: 102
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 105,
            column: 4
          },
          end: {
            line: 105,
            column: 5
          }
        },
        loc: {
          start: {
            line: 105,
            column: 44
          },
          end: {
            line: 107,
            column: 5
          }
        },
        line: 105
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 108,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        },
        loc: {
          start: {
            line: 108,
            column: 44
          },
          end: {
            line: 110,
            column: 5
          }
        },
        line: 108
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        },
        loc: {
          start: {
            line: 111,
            column: 51
          },
          end: {
            line: 113,
            column: 5
          }
        },
        line: 111
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 114,
            column: 5
          }
        },
        loc: {
          start: {
            line: 114,
            column: 49
          },
          end: {
            line: 116,
            column: 5
          }
        },
        line: 114
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 117,
            column: 5
          }
        },
        loc: {
          start: {
            line: 117,
            column: 54
          },
          end: {
            line: 119,
            column: 5
          }
        },
        line: 117
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 124,
            column: 4
          },
          end: {
            line: 124,
            column: 5
          }
        },
        loc: {
          start: {
            line: 124,
            column: 34
          },
          end: {
            line: 127,
            column: 5
          }
        },
        line: 124
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 128,
            column: 4
          },
          end: {
            line: 128,
            column: 5
          }
        },
        loc: {
          start: {
            line: 128,
            column: 31
          },
          end: {
            line: 135,
            column: 5
          }
        },
        line: 128
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 129,
            column: 42
          },
          end: {
            line: 129,
            column: 43
          }
        },
        loc: {
          start: {
            line: 129,
            column: 52
          },
          end: {
            line: 133,
            column: 9
          }
        },
        line: 129
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 140,
            column: 5
          }
        },
        loc: {
          start: {
            line: 140,
            column: 49
          },
          end: {
            line: 146,
            column: 5
          }
        },
        line: 140
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 147,
            column: 4
          },
          end: {
            line: 147,
            column: 5
          }
        },
        loc: {
          start: {
            line: 147,
            column: 34
          },
          end: {
            line: 180,
            column: 5
          }
        },
        line: 147
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 186,
            column: 4
          },
          end: {
            line: 186,
            column: 5
          }
        },
        loc: {
          start: {
            line: 186,
            column: 58
          },
          end: {
            line: 193,
            column: 5
          }
        },
        line: 186
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 194,
            column: 4
          },
          end: {
            line: 194,
            column: 5
          }
        },
        loc: {
          start: {
            line: 194,
            column: 45
          },
          end: {
            line: 199,
            column: 5
          }
        },
        line: 194
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 200,
            column: 4
          },
          end: {
            line: 200,
            column: 5
          }
        },
        loc: {
          start: {
            line: 200,
            column: 43
          },
          end: {
            line: 205,
            column: 5
          }
        },
        line: 200
      },
      "18": {
        name: "errorHandler",
        decl: {
          start: {
            line: 209,
            column: 9
          },
          end: {
            line: 209,
            column: 21
          }
        },
        loc: {
          start: {
            line: 209,
            column: 45
          },
          end: {
            line: 258,
            column: 1
          }
        },
        line: 209
      },
      "19": {
        name: "notFoundHandler",
        decl: {
          start: {
            line: 260,
            column: 9
          },
          end: {
            line: 260,
            column: 24
          }
        },
        loc: {
          start: {
            line: 260,
            column: 41
          },
          end: {
            line: 263,
            column: 1
          }
        },
        line: 260
      },
      "20": {
        name: "asyncHandler",
        decl: {
          start: {
            line: 265,
            column: 9
          },
          end: {
            line: 265,
            column: 21
          }
        },
        loc: {
          start: {
            line: 265,
            column: 26
          },
          end: {
            line: 271,
            column: 1
          }
        },
        line: 265
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 266,
            column: 11
          },
          end: {
            line: 266,
            column: 12
          }
        },
        loc: {
          start: {
            line: 266,
            column: 31
          },
          end: {
            line: 270,
            column: 5
          }
        },
        line: 266
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 267,
            column: 57
          },
          end: {
            line: 267,
            column: 58
          }
        },
        loc: {
          start: {
            line: 267,
            column: 68
          },
          end: {
            line: 269,
            column: 9
          }
        },
        line: 267
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 71,
            column: 25
          },
          end: {
            line: 71,
            column: 66
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 71,
            column: 32
          },
          end: {
            line: 71,
            column: 66
          }
        }],
        line: 71
      },
      "1": {
        loc: {
          start: {
            line: 71,
            column: 68
          },
          end: {
            line: 71,
            column: 84
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 71,
            column: 81
          },
          end: {
            line: 71,
            column: 84
          }
        }],
        line: 71
      },
      "2": {
        loc: {
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "3": {
        loc: {
          start: {
            line: 91,
            column: 20
          },
          end: {
            line: 91,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 20
          },
          end: {
            line: 91,
            column: 32
          }
        }, {
          start: {
            line: 91,
            column: 36
          },
          end: {
            line: 91,
            column: 61
          }
        }],
        line: 91
      },
      "4": {
        loc: {
          start: {
            line: 97,
            column: 37
          },
          end: {
            line: 97,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 97,
            column: 37
          },
          end: {
            line: 97,
            column: 41
          }
        }, {
          start: {
            line: 97,
            column: 45
          },
          end: {
            line: 97,
            column: 78
          }
        }],
        line: 97
      },
      "5": {
        loc: {
          start: {
            line: 100,
            column: 37
          },
          end: {
            line: 100,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 100,
            column: 37
          },
          end: {
            line: 100,
            column: 41
          }
        }, {
          start: {
            line: 100,
            column: 45
          },
          end: {
            line: 100,
            column: 78
          }
        }],
        line: 100
      },
      "6": {
        loc: {
          start: {
            line: 103,
            column: 37
          },
          end: {
            line: 103,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 37
          },
          end: {
            line: 103,
            column: 41
          }
        }, {
          start: {
            line: 103,
            column: 45
          },
          end: {
            line: 103,
            column: 89
          }
        }],
        line: 103
      },
      "7": {
        loc: {
          start: {
            line: 106,
            column: 37
          },
          end: {
            line: 106,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 106,
            column: 37
          },
          end: {
            line: 106,
            column: 41
          }
        }, {
          start: {
            line: 106,
            column: 45
          },
          end: {
            line: 106,
            column: 74
          }
        }],
        line: 106
      },
      "8": {
        loc: {
          start: {
            line: 109,
            column: 37
          },
          end: {
            line: 109,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 109,
            column: 37
          },
          end: {
            line: 109,
            column: 41
          }
        }, {
          start: {
            line: 109,
            column: 45
          },
          end: {
            line: 109,
            column: 79
          }
        }],
        line: 109
      },
      "9": {
        loc: {
          start: {
            line: 112,
            column: 37
          },
          end: {
            line: 112,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 112,
            column: 37
          },
          end: {
            line: 112,
            column: 41
          }
        }, {
          start: {
            line: 112,
            column: 45
          },
          end: {
            line: 112,
            column: 84
          }
        }],
        line: 112
      },
      "10": {
        loc: {
          start: {
            line: 115,
            column: 37
          },
          end: {
            line: 115,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 37
          },
          end: {
            line: 115,
            column: 41
          }
        }, {
          start: {
            line: 115,
            column: 45
          },
          end: {
            line: 115,
            column: 79
          }
        }],
        line: 115
      },
      "11": {
        loc: {
          start: {
            line: 118,
            column: 37
          },
          end: {
            line: 118,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 118,
            column: 37
          },
          end: {
            line: 118,
            column: 41
          }
        }, {
          start: {
            line: 118,
            column: 45
          },
          end: {
            line: 118,
            column: 84
          }
        }],
        line: 118
      },
      "12": {
        loc: {
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 145,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 145,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 143
      },
      "13": {
        loc: {
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 175,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 153,
            column: 12
          },
          end: {
            line: 157,
            column: 22
          }
        }, {
          start: {
            line: 158,
            column: 12
          },
          end: {
            line: 162,
            column: 22
          }
        }, {
          start: {
            line: 163,
            column: 12
          },
          end: {
            line: 167,
            column: 22
          }
        }, {
          start: {
            line: 168,
            column: 12
          },
          end: {
            line: 172,
            column: 22
          }
        }, {
          start: {
            line: 173,
            column: 12
          },
          end: {
            line: 174,
            column: 71
          }
        }],
        line: 152
      },
      "14": {
        loc: {
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 192,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 192,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "15": {
        loc: {
          start: {
            line: 228,
            column: 4
          },
          end: {
            line: 230,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 228,
            column: 4
          },
          end: {
            line: 230,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 228
      },
      "16": {
        loc: {
          start: {
            line: 231,
            column: 4
          },
          end: {
            line: 233,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 231,
            column: 4
          },
          end: {
            line: 233,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 231
      },
      "17": {
        loc: {
          start: {
            line: 234,
            column: 4
          },
          end: {
            line: 236,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 4
          },
          end: {
            line: 236,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "18": {
        loc: {
          start: {
            line: 237,
            column: 4
          },
          end: {
            line: 239,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 4
          },
          end: {
            line: 239,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 237
      },
      "19": {
        loc: {
          start: {
            line: 241,
            column: 4
          },
          end: {
            line: 244,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 241,
            column: 4
          },
          end: {
            line: 244,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 241
      },
      "20": {
        loc: {
          start: {
            line: 246,
            column: 4
          },
          end: {
            line: 249,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 246,
            column: 4
          },
          end: {
            line: 249,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 246
      },
      "21": {
        loc: {
          start: {
            line: 251,
            column: 4
          },
          end: {
            line: 254,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 4
          },
          end: {
            line: 254,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      },
      "22": {
        loc: {
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 251,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 251,
            column: 24
          }
        }, {
          start: {
            line: 251,
            column: 28
          },
          end: {
            line: 251,
            column: 50
          }
        }],
        line: 251
      },
      "23": {
        loc: {
          start: {
            line: 252,
            column: 38
          },
          end: {
            line: 252,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 252,
            column: 38
          },
          end: {
            line: 252,
            column: 51
          }
        }, {
          start: {
            line: 252,
            column: 55
          },
          end: {
            line: 252,
            column: 68
          }
        }],
        line: 252
      },
      "24": {
        loc: {
          start: {
            line: 256,
            column: 117
          },
          end: {
            line: 256,
            column: 202
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 256,
            column: 158
          },
          end: {
            line: 256,
            column: 190
          }
        }, {
          start: {
            line: 256,
            column: 193
          },
          end: {
            line: 256,
            column: 202
          }
        }],
        line: 256
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\utils\\errors.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\utils\\errors.ts"],
      sourcesContent: ["import type { FastifyError } from 'fastify'\nimport { logger } from './logger'\n\n// Custom error codes\nexport const ERROR_CODES = {\n  // Authentication errors\n  INVALID_CREDENTIALS: 'INVALID_CREDENTIALS',\n  INVALID_TOKEN: 'INVALID_TOKEN',\n  INVALID_REFRESH_TOKEN: 'INVALID_REFRESH_TOKEN',\n  MISSING_AUTH_HEADER: 'MISSING_AUTH_HEADER',\n  MISSING_ACCESS_TOKEN: 'MISSING_ACCESS_TOKEN',\n  SESSION_EXPIRED: 'SESSION_EXPIRED',\n  AUTH_FAILED: 'AUTH_FAILED',\n  AUTH_REQUIRED: 'AUTH_REQUIRED',\n  \n  // Authorization errors\n  INSUFFICIENT_PERMISSIONS: 'INSUFFICIENT_PERMISSIONS',\n  ORGANIZATION_REQUIRED: 'ORGANIZATION_REQUIRED',\n  ORGANIZATION_DISABLED: 'ORGANIZATION_DISABLED',\n  ACCOUNT_DISABLED: 'ACCOUNT_DISABLED',\n  \n  // Validation errors\n  VALIDATION_ERROR: 'VALIDATION_ERROR',\n  INVALID_INPUT: 'INVALID_INPUT',\n  MISSING_REQUIRED_FIELD: 'MISSING_REQUIRED_FIELD',\n  INVALID_EMAIL: 'INVALID_EMAIL',\n  INVALID_PASSWORD: 'INVALID_PASSWORD',\n  \n  // Resource errors\n  NOT_FOUND: 'NOT_FOUND',\n  ALREADY_EXISTS: 'ALREADY_EXISTS',\n  EMAIL_ALREADY_EXISTS: 'EMAIL_ALREADY_EXISTS',\n  SLUG_ALREADY_EXISTS: 'SLUG_ALREADY_EXISTS',\n  \n  // Rate limiting\n  RATE_LIMIT_EXCEEDED: 'RATE_LIMIT_EXCEEDED',\n  TOO_MANY_REQUESTS: 'TOO_MANY_REQUESTS',\n  \n  // API errors\n  MISSING_API_KEY: 'MISSING_API_KEY',\n  INVALID_API_KEY: 'INVALID_API_KEY',\n  \n  // Webhook errors\n  MISSING_WEBHOOK_SIGNATURE: 'MISSING_WEBHOOK_SIGNATURE',\n  INVALID_WEBHOOK_SIGNATURE: 'INVALID_WEBHOOK_SIGNATURE',\n  INVALID_WEBHOOK_TIMESTAMP: 'INVALID_WEBHOOK_TIMESTAMP',\n  \n  // Business logic errors\n  PLAN_LIMIT_EXCEEDED: 'PLAN_LIMIT_EXCEEDED',\n  FEATURE_NOT_AVAILABLE: 'FEATURE_NOT_AVAILABLE',\n  QUOTA_EXCEEDED: 'QUOTA_EXCEEDED',\n  \n  // External service errors\n  EXTERNAL_SERVICE_ERROR: 'EXTERNAL_SERVICE_ERROR',\n  FACEBOOK_API_ERROR: 'FACEBOOK_API_ERROR',\n  GOOGLE_API_ERROR: 'GOOGLE_API_ERROR',\n  \n  // File upload errors\n  FILE_TOO_LARGE: 'FILE_TOO_LARGE',\n  INVALID_FILE_TYPE: 'INVALID_FILE_TYPE',\n  UPLOAD_FAILED: 'UPLOAD_FAILED',\n  \n  // Database errors\n  DATABASE_ERROR: 'DATABASE_ERROR',\n  TRANSACTION_FAILED: 'TRANSACTION_FAILED',\n  \n  // Generic errors\n  INTERNAL_ERROR: 'INTERNAL_ERROR',\n  SERVICE_UNAVAILABLE: 'SERVICE_UNAVAILABLE',\n  LOGOUT_FAILED: 'LOGOUT_FAILED',\n} as const\n\nexport type ErrorCode = keyof typeof ERROR_CODES\n\n// Custom API Error class\nexport class ApiError extends Error {\n  public readonly code: string\n  public readonly statusCode: number\n  public readonly details?: any\n  public readonly timestamp: string\n\n  constructor(\n    message: string,\n    code: string = ERROR_CODES.INTERNAL_ERROR,\n    statusCode: number = 500,\n    details?: any\n  ) {\n    super(message)\n    this.name = 'ApiError'\n    this.code = code\n    this.statusCode = statusCode\n    this.details = details\n    this.timestamp = new Date().toISOString()\n\n    // Maintain proper stack trace\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ApiError)\n    }\n  }\n\n  // Convert to JSON for API responses\n  toJSON() {\n    return {\n      error: {\n        message: this.message,\n        code: this.code,\n        statusCode: this.statusCode,\n        timestamp: this.timestamp,\n        ...(this.details && { details: this.details }),\n      },\n    }\n  }\n\n  // Static factory methods for common errors\n  static badRequest(message: string, code?: string, details?: any) {\n    return new ApiError(message, code || ERROR_CODES.INVALID_INPUT, 400, details)\n  }\n\n  static unauthorized(message: string, code?: string, details?: any) {\n    return new ApiError(message, code || ERROR_CODES.AUTH_REQUIRED, 401, details)\n  }\n\n  static forbidden(message: string, code?: string, details?: any) {\n    return new ApiError(message, code || ERROR_CODES.INSUFFICIENT_PERMISSIONS, 403, details)\n  }\n\n  static notFound(message: string, code?: string, details?: any) {\n    return new ApiError(message, code || ERROR_CODES.NOT_FOUND, 404, details)\n  }\n\n  static conflict(message: string, code?: string, details?: any) {\n    return new ApiError(message, code || ERROR_CODES.ALREADY_EXISTS, 409, details)\n  }\n\n  static tooManyRequests(message: string, code?: string, details?: any) {\n    return new ApiError(message, code || ERROR_CODES.RATE_LIMIT_EXCEEDED, 429, details)\n  }\n\n  static internalError(message: string, code?: string, details?: any) {\n    return new ApiError(message, code || ERROR_CODES.INTERNAL_ERROR, 500, details)\n  }\n\n  static serviceUnavailable(message: string, code?: string, details?: any) {\n    return new ApiError(message, code || ERROR_CODES.SERVICE_UNAVAILABLE, 503, details)\n  }\n}\n\n// Validation Error class\nexport class ValidationError extends ApiError {\n  constructor(message: string, details?: any) {\n    super(message, ERROR_CODES.VALIDATION_ERROR, 400, details)\n    this.name = 'ValidationError'\n  }\n\n  static fromZodError(error: any) {\n    const details = error.errors?.map((err: any) => ({\n      field: err.path.join('.'),\n      message: err.message,\n      code: err.code,\n    }))\n\n    return new ValidationError('Validation failed', details)\n  }\n}\n\n// Database Error class\nexport class DatabaseError extends ApiError {\n  constructor(message: string, originalError?: Error, details?: any) {\n    super(message, ERROR_CODES.DATABASE_ERROR, 500, details)\n    this.name = 'DatabaseError'\n    \n    if (originalError) {\n      this.stack = originalError.stack\n    }\n  }\n\n  static fromPrismaError(error: any) {\n    let message = 'Database operation failed'\n    let code = ERROR_CODES.DATABASE_ERROR\n    let statusCode = 500\n\n    // Handle specific Prisma error codes\n    switch (error.code) {\n      case 'P2002':\n        message = 'A record with this value already exists'\n        code = ERROR_CODES.ALREADY_EXISTS\n        statusCode = 409\n        break\n      case 'P2025':\n        message = 'Record not found'\n        code = ERROR_CODES.NOT_FOUND\n        statusCode = 404\n        break\n      case 'P2003':\n        message = 'Foreign key constraint failed'\n        code = ERROR_CODES.VALIDATION_ERROR\n        statusCode = 400\n        break\n      case 'P2014':\n        message = 'Invalid ID provided'\n        code = ERROR_CODES.INVALID_INPUT\n        statusCode = 400\n        break\n      default:\n        logger.error(error, 'Unhandled Prisma error')\n    }\n\n    return new DatabaseError(message, error, {\n      prismaCode: error.code,\n      meta: error.meta,\n    })\n  }\n}\n\n// External Service Error class\nexport class ExternalServiceError extends ApiError {\n  public readonly service: string\n\n  constructor(service: string, message: string, originalError?: Error, details?: any) {\n    super(message, ERROR_CODES.EXTERNAL_SERVICE_ERROR, 502, details)\n    this.name = 'ExternalServiceError'\n    this.service = service\n    \n    if (originalError) {\n      this.stack = originalError.stack\n    }\n  }\n\n  static facebook(message: string, error?: Error, details?: any) {\n    return new ExternalServiceError('Facebook', message, error, {\n      ...details,\n      code: ERROR_CODES.FACEBOOK_API_ERROR,\n    })\n  }\n\n  static google(message: string, error?: Error, details?: any) {\n    return new ExternalServiceError('Google', message, error, {\n      ...details,\n      code: ERROR_CODES.GOOGLE_API_ERROR,\n    })\n  }\n}\n\n// Error handler for Fastify\nexport function errorHandler(error: FastifyError, request: any, reply: any) {\n  // Log error\n  logger.error({\n    error: {\n      message: error.message,\n      stack: error.stack,\n      code: (error as any).code,\n      statusCode: error.statusCode,\n    },\n    request: {\n      method: request.method,\n      url: request.url,\n      headers: request.headers,\n      ip: request.ip,\n      userId: request.user?.id,\n      organizationId: request.organization?.id,\n    },\n  }, 'Request error')\n\n  // Handle different error types\n  if (error instanceof ApiError) {\n    return reply.status(error.statusCode).send(error.toJSON())\n  }\n\n  if (error instanceof ValidationError) {\n    return reply.status(error.statusCode).send(error.toJSON())\n  }\n\n  if (error instanceof DatabaseError) {\n    return reply.status(error.statusCode).send(error.toJSON())\n  }\n\n  if (error instanceof ExternalServiceError) {\n    return reply.status(error.statusCode).send(error.toJSON())\n  }\n\n  // Handle Fastify validation errors\n  if (error.validation) {\n    const validationError = ValidationError.fromZodError(error)\n    return reply.status(validationError.statusCode).send(validationError.toJSON())\n  }\n\n  // Handle rate limiting errors\n  if (error.statusCode === 429) {\n    const rateLimitError = ApiError.tooManyRequests(\n      'Too many requests, please try again later',\n      ERROR_CODES.RATE_LIMIT_EXCEEDED\n    )\n    return reply.status(429).send(rateLimitError.toJSON())\n  }\n\n  // Handle generic HTTP errors\n  if (error.statusCode && error.statusCode < 500) {\n    const apiError = new ApiError(\n      error.message || 'Bad request',\n      ERROR_CODES.INVALID_INPUT,\n      error.statusCode\n    )\n    return reply.status(error.statusCode).send(apiError.toJSON())\n  }\n\n  // Handle unexpected errors\n  const internalError = ApiError.internalError(\n    'An unexpected error occurred',\n    ERROR_CODES.INTERNAL_ERROR,\n    process.env.NODE_ENV === 'development' ? { originalError: error.message } : undefined\n  )\n\n  return reply.status(500).send(internalError.toJSON())\n}\n\n// Not found handler\nexport function notFoundHandler(request: any, reply: any) {\n  const notFoundError = ApiError.notFound(\n    `Route ${request.method} ${request.url} not found`,\n    ERROR_CODES.NOT_FOUND\n  )\n\n  return reply.status(404).send(notFoundError.toJSON())\n}\n\n// Async error wrapper for route handlers\nexport function asyncHandler(fn: Function) {\n  return (request: any, reply: any) => {\n    return Promise.resolve(fn(request, reply)).catch((error) => {\n      throw error\n    })\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fc5aebce0f3a14546bc4298fc528d226bff0c9fc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2a41pbrpvj = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2a41pbrpvj();
cov_2a41pbrpvj().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2a41pbrpvj().s[1]++;
exports.ExternalServiceError = exports.DatabaseError = exports.ValidationError = exports.ApiError = exports.ERROR_CODES = void 0;
/* istanbul ignore next */
cov_2a41pbrpvj().s[2]++;
exports.errorHandler = errorHandler;
/* istanbul ignore next */
cov_2a41pbrpvj().s[3]++;
exports.notFoundHandler = notFoundHandler;
/* istanbul ignore next */
cov_2a41pbrpvj().s[4]++;
exports.asyncHandler = asyncHandler;
const logger_1 =
/* istanbul ignore next */
(cov_2a41pbrpvj().s[5]++, require("./logger"));
// Custom error codes
/* istanbul ignore next */
cov_2a41pbrpvj().s[6]++;
exports.ERROR_CODES = {
  // Authentication errors
  INVALID_CREDENTIALS: 'INVALID_CREDENTIALS',
  INVALID_TOKEN: 'INVALID_TOKEN',
  INVALID_REFRESH_TOKEN: 'INVALID_REFRESH_TOKEN',
  MISSING_AUTH_HEADER: 'MISSING_AUTH_HEADER',
  MISSING_ACCESS_TOKEN: 'MISSING_ACCESS_TOKEN',
  SESSION_EXPIRED: 'SESSION_EXPIRED',
  AUTH_FAILED: 'AUTH_FAILED',
  AUTH_REQUIRED: 'AUTH_REQUIRED',
  // Authorization errors
  INSUFFICIENT_PERMISSIONS: 'INSUFFICIENT_PERMISSIONS',
  ORGANIZATION_REQUIRED: 'ORGANIZATION_REQUIRED',
  ORGANIZATION_DISABLED: 'ORGANIZATION_DISABLED',
  ACCOUNT_DISABLED: 'ACCOUNT_DISABLED',
  // Validation errors
  VALIDATION_ERROR: 'VALIDATION_ERROR',
  INVALID_INPUT: 'INVALID_INPUT',
  MISSING_REQUIRED_FIELD: 'MISSING_REQUIRED_FIELD',
  INVALID_EMAIL: 'INVALID_EMAIL',
  INVALID_PASSWORD: 'INVALID_PASSWORD',
  // Resource errors
  NOT_FOUND: 'NOT_FOUND',
  ALREADY_EXISTS: 'ALREADY_EXISTS',
  EMAIL_ALREADY_EXISTS: 'EMAIL_ALREADY_EXISTS',
  SLUG_ALREADY_EXISTS: 'SLUG_ALREADY_EXISTS',
  // Rate limiting
  RATE_LIMIT_EXCEEDED: 'RATE_LIMIT_EXCEEDED',
  TOO_MANY_REQUESTS: 'TOO_MANY_REQUESTS',
  // API errors
  MISSING_API_KEY: 'MISSING_API_KEY',
  INVALID_API_KEY: 'INVALID_API_KEY',
  // Webhook errors
  MISSING_WEBHOOK_SIGNATURE: 'MISSING_WEBHOOK_SIGNATURE',
  INVALID_WEBHOOK_SIGNATURE: 'INVALID_WEBHOOK_SIGNATURE',
  INVALID_WEBHOOK_TIMESTAMP: 'INVALID_WEBHOOK_TIMESTAMP',
  // Business logic errors
  PLAN_LIMIT_EXCEEDED: 'PLAN_LIMIT_EXCEEDED',
  FEATURE_NOT_AVAILABLE: 'FEATURE_NOT_AVAILABLE',
  QUOTA_EXCEEDED: 'QUOTA_EXCEEDED',
  // External service errors
  EXTERNAL_SERVICE_ERROR: 'EXTERNAL_SERVICE_ERROR',
  FACEBOOK_API_ERROR: 'FACEBOOK_API_ERROR',
  GOOGLE_API_ERROR: 'GOOGLE_API_ERROR',
  // File upload errors
  FILE_TOO_LARGE: 'FILE_TOO_LARGE',
  INVALID_FILE_TYPE: 'INVALID_FILE_TYPE',
  UPLOAD_FAILED: 'UPLOAD_FAILED',
  // Database errors
  DATABASE_ERROR: 'DATABASE_ERROR',
  TRANSACTION_FAILED: 'TRANSACTION_FAILED',
  // Generic errors
  INTERNAL_ERROR: 'INTERNAL_ERROR',
  SERVICE_UNAVAILABLE: 'SERVICE_UNAVAILABLE',
  LOGOUT_FAILED: 'LOGOUT_FAILED'
};
// Custom API Error class
class ApiError extends Error {
  code;
  statusCode;
  details;
  timestamp;
  constructor(message, code =
  /* istanbul ignore next */
  (cov_2a41pbrpvj().b[0][0]++, exports.ERROR_CODES.INTERNAL_ERROR), statusCode =
  /* istanbul ignore next */
  (cov_2a41pbrpvj().b[1][0]++, 500), details) {
    /* istanbul ignore next */
    cov_2a41pbrpvj().f[0]++;
    cov_2a41pbrpvj().s[7]++;
    super(message);
    /* istanbul ignore next */
    cov_2a41pbrpvj().s[8]++;
    this.name = 'ApiError';
    /* istanbul ignore next */
    cov_2a41pbrpvj().s[9]++;
    this.code = code;
    /* istanbul ignore next */
    cov_2a41pbrpvj().s[10]++;
    this.statusCode = statusCode;
    /* istanbul ignore next */
    cov_2a41pbrpvj().s[11]++;
    this.details = details;
    /* istanbul ignore next */
    cov_2a41pbrpvj().s[12]++;
    this.timestamp = new Date().toISOString();
    // Maintain proper stack trace
    /* istanbul ignore next */
    cov_2a41pbrpvj().s[13]++;
    if (Error.captureStackTrace) {
      /* istanbul ignore next */
      cov_2a41pbrpvj().b[2][0]++;
      cov_2a41pbrpvj().s[14]++;
      Error.captureStackTrace(this, ApiError);
    } else
    /* istanbul ignore next */
    {
      cov_2a41pbrpvj().b[2][1]++;
    }
  }
  // Convert to JSON for API responses
  toJSON() {
    /* istanbul ignore next */
    cov_2a41pbrpvj().f[1]++;
    cov_2a41pbrpvj().s[15]++;
    return {
      error: {
        message: this.message,
        code: this.code,
        statusCode: this.statusCode,
        timestamp: this.timestamp,
        ...(
        /* istanbul ignore next */
        (cov_2a41pbrpvj().b[3][0]++, this.details) &&
        /* istanbul ignore next */
        (cov_2a41pbrpvj().b[3][1]++, {
          details: this.details
        }))
      }
    };
  }
  // Static factory methods for common errors
  static badRequest(message, code, details) {
    /* istanbul ignore next */
    cov_2a41pbrpvj().f[2]++;
    cov_2a41pbrpvj().s[16]++;
    return new ApiError(message,
    /* istanbul ignore next */
    (cov_2a41pbrpvj().b[4][0]++, code) ||
    /* istanbul ignore next */
    (cov_2a41pbrpvj().b[4][1]++, exports.ERROR_CODES.INVALID_INPUT), 400, details);
  }
  static unauthorized(message, code, details) {
    /* istanbul ignore next */
    cov_2a41pbrpvj().f[3]++;
    cov_2a41pbrpvj().s[17]++;
    return new ApiError(message,
    /* istanbul ignore next */
    (cov_2a41pbrpvj().b[5][0]++, code) ||
    /* istanbul ignore next */
    (cov_2a41pbrpvj().b[5][1]++, exports.ERROR_CODES.AUTH_REQUIRED), 401, details);
  }
  static forbidden(message, code, details) {
    /* istanbul ignore next */
    cov_2a41pbrpvj().f[4]++;
    cov_2a41pbrpvj().s[18]++;
    return new ApiError(message,
    /* istanbul ignore next */
    (cov_2a41pbrpvj().b[6][0]++, code) ||
    /* istanbul ignore next */
    (cov_2a41pbrpvj().b[6][1]++, exports.ERROR_CODES.INSUFFICIENT_PERMISSIONS), 403, details);
  }
  static notFound(message, code, details) {
    /* istanbul ignore next */
    cov_2a41pbrpvj().f[5]++;
    cov_2a41pbrpvj().s[19]++;
    return new ApiError(message,
    /* istanbul ignore next */
    (cov_2a41pbrpvj().b[7][0]++, code) ||
    /* istanbul ignore next */
    (cov_2a41pbrpvj().b[7][1]++, exports.ERROR_CODES.NOT_FOUND), 404, details);
  }
  static conflict(message, code, details) {
    /* istanbul ignore next */
    cov_2a41pbrpvj().f[6]++;
    cov_2a41pbrpvj().s[20]++;
    return new ApiError(message,
    /* istanbul ignore next */
    (cov_2a41pbrpvj().b[8][0]++, code) ||
    /* istanbul ignore next */
    (cov_2a41pbrpvj().b[8][1]++, exports.ERROR_CODES.ALREADY_EXISTS), 409, details);
  }
  static tooManyRequests(message, code, details) {
    /* istanbul ignore next */
    cov_2a41pbrpvj().f[7]++;
    cov_2a41pbrpvj().s[21]++;
    return new ApiError(message,
    /* istanbul ignore next */
    (cov_2a41pbrpvj().b[9][0]++, code) ||
    /* istanbul ignore next */
    (cov_2a41pbrpvj().b[9][1]++, exports.ERROR_CODES.RATE_LIMIT_EXCEEDED), 429, details);
  }
  static internalError(message, code, details) {
    /* istanbul ignore next */
    cov_2a41pbrpvj().f[8]++;
    cov_2a41pbrpvj().s[22]++;
    return new ApiError(message,
    /* istanbul ignore next */
    (cov_2a41pbrpvj().b[10][0]++, code) ||
    /* istanbul ignore next */
    (cov_2a41pbrpvj().b[10][1]++, exports.ERROR_CODES.INTERNAL_ERROR), 500, details);
  }
  static serviceUnavailable(message, code, details) {
    /* istanbul ignore next */
    cov_2a41pbrpvj().f[9]++;
    cov_2a41pbrpvj().s[23]++;
    return new ApiError(message,
    /* istanbul ignore next */
    (cov_2a41pbrpvj().b[11][0]++, code) ||
    /* istanbul ignore next */
    (cov_2a41pbrpvj().b[11][1]++, exports.ERROR_CODES.SERVICE_UNAVAILABLE), 503, details);
  }
}
/* istanbul ignore next */
cov_2a41pbrpvj().s[24]++;
exports.ApiError = ApiError;
// Validation Error class
class ValidationError extends ApiError {
  constructor(message, details) {
    /* istanbul ignore next */
    cov_2a41pbrpvj().f[10]++;
    cov_2a41pbrpvj().s[25]++;
    super(message, exports.ERROR_CODES.VALIDATION_ERROR, 400, details);
    /* istanbul ignore next */
    cov_2a41pbrpvj().s[26]++;
    this.name = 'ValidationError';
  }
  static fromZodError(error) {
    /* istanbul ignore next */
    cov_2a41pbrpvj().f[11]++;
    const details =
    /* istanbul ignore next */
    (cov_2a41pbrpvj().s[27]++, error.errors?.map(err => {
      /* istanbul ignore next */
      cov_2a41pbrpvj().f[12]++;
      cov_2a41pbrpvj().s[28]++;
      return {
        field: err.path.join('.'),
        message: err.message,
        code: err.code
      };
    }));
    /* istanbul ignore next */
    cov_2a41pbrpvj().s[29]++;
    return new ValidationError('Validation failed', details);
  }
}
/* istanbul ignore next */
cov_2a41pbrpvj().s[30]++;
exports.ValidationError = ValidationError;
// Database Error class
class DatabaseError extends ApiError {
  constructor(message, originalError, details) {
    /* istanbul ignore next */
    cov_2a41pbrpvj().f[13]++;
    cov_2a41pbrpvj().s[31]++;
    super(message, exports.ERROR_CODES.DATABASE_ERROR, 500, details);
    /* istanbul ignore next */
    cov_2a41pbrpvj().s[32]++;
    this.name = 'DatabaseError';
    /* istanbul ignore next */
    cov_2a41pbrpvj().s[33]++;
    if (originalError) {
      /* istanbul ignore next */
      cov_2a41pbrpvj().b[12][0]++;
      cov_2a41pbrpvj().s[34]++;
      this.stack = originalError.stack;
    } else
    /* istanbul ignore next */
    {
      cov_2a41pbrpvj().b[12][1]++;
    }
  }
  static fromPrismaError(error) {
    /* istanbul ignore next */
    cov_2a41pbrpvj().f[14]++;
    let message =
    /* istanbul ignore next */
    (cov_2a41pbrpvj().s[35]++, 'Database operation failed');
    let code =
    /* istanbul ignore next */
    (cov_2a41pbrpvj().s[36]++, exports.ERROR_CODES.DATABASE_ERROR);
    let statusCode =
    /* istanbul ignore next */
    (cov_2a41pbrpvj().s[37]++, 500);
    // Handle specific Prisma error codes
    /* istanbul ignore next */
    cov_2a41pbrpvj().s[38]++;
    switch (error.code) {
      case 'P2002':
        /* istanbul ignore next */
        cov_2a41pbrpvj().b[13][0]++;
        cov_2a41pbrpvj().s[39]++;
        message = 'A record with this value already exists';
        /* istanbul ignore next */
        cov_2a41pbrpvj().s[40]++;
        code = exports.ERROR_CODES.ALREADY_EXISTS;
        /* istanbul ignore next */
        cov_2a41pbrpvj().s[41]++;
        statusCode = 409;
        /* istanbul ignore next */
        cov_2a41pbrpvj().s[42]++;
        break;
      case 'P2025':
        /* istanbul ignore next */
        cov_2a41pbrpvj().b[13][1]++;
        cov_2a41pbrpvj().s[43]++;
        message = 'Record not found';
        /* istanbul ignore next */
        cov_2a41pbrpvj().s[44]++;
        code = exports.ERROR_CODES.NOT_FOUND;
        /* istanbul ignore next */
        cov_2a41pbrpvj().s[45]++;
        statusCode = 404;
        /* istanbul ignore next */
        cov_2a41pbrpvj().s[46]++;
        break;
      case 'P2003':
        /* istanbul ignore next */
        cov_2a41pbrpvj().b[13][2]++;
        cov_2a41pbrpvj().s[47]++;
        message = 'Foreign key constraint failed';
        /* istanbul ignore next */
        cov_2a41pbrpvj().s[48]++;
        code = exports.ERROR_CODES.VALIDATION_ERROR;
        /* istanbul ignore next */
        cov_2a41pbrpvj().s[49]++;
        statusCode = 400;
        /* istanbul ignore next */
        cov_2a41pbrpvj().s[50]++;
        break;
      case 'P2014':
        /* istanbul ignore next */
        cov_2a41pbrpvj().b[13][3]++;
        cov_2a41pbrpvj().s[51]++;
        message = 'Invalid ID provided';
        /* istanbul ignore next */
        cov_2a41pbrpvj().s[52]++;
        code = exports.ERROR_CODES.INVALID_INPUT;
        /* istanbul ignore next */
        cov_2a41pbrpvj().s[53]++;
        statusCode = 400;
        /* istanbul ignore next */
        cov_2a41pbrpvj().s[54]++;
        break;
      default:
        /* istanbul ignore next */
        cov_2a41pbrpvj().b[13][4]++;
        cov_2a41pbrpvj().s[55]++;
        logger_1.logger.error(error, 'Unhandled Prisma error');
    }
    /* istanbul ignore next */
    cov_2a41pbrpvj().s[56]++;
    return new DatabaseError(message, error, {
      prismaCode: error.code,
      meta: error.meta
    });
  }
}
/* istanbul ignore next */
cov_2a41pbrpvj().s[57]++;
exports.DatabaseError = DatabaseError;
// External Service Error class
class ExternalServiceError extends ApiError {
  service;
  constructor(service, message, originalError, details) {
    /* istanbul ignore next */
    cov_2a41pbrpvj().f[15]++;
    cov_2a41pbrpvj().s[58]++;
    super(message, exports.ERROR_CODES.EXTERNAL_SERVICE_ERROR, 502, details);
    /* istanbul ignore next */
    cov_2a41pbrpvj().s[59]++;
    this.name = 'ExternalServiceError';
    /* istanbul ignore next */
    cov_2a41pbrpvj().s[60]++;
    this.service = service;
    /* istanbul ignore next */
    cov_2a41pbrpvj().s[61]++;
    if (originalError) {
      /* istanbul ignore next */
      cov_2a41pbrpvj().b[14][0]++;
      cov_2a41pbrpvj().s[62]++;
      this.stack = originalError.stack;
    } else
    /* istanbul ignore next */
    {
      cov_2a41pbrpvj().b[14][1]++;
    }
  }
  static facebook(message, error, details) {
    /* istanbul ignore next */
    cov_2a41pbrpvj().f[16]++;
    cov_2a41pbrpvj().s[63]++;
    return new ExternalServiceError('Facebook', message, error, {
      ...details,
      code: exports.ERROR_CODES.FACEBOOK_API_ERROR
    });
  }
  static google(message, error, details) {
    /* istanbul ignore next */
    cov_2a41pbrpvj().f[17]++;
    cov_2a41pbrpvj().s[64]++;
    return new ExternalServiceError('Google', message, error, {
      ...details,
      code: exports.ERROR_CODES.GOOGLE_API_ERROR
    });
  }
}
/* istanbul ignore next */
cov_2a41pbrpvj().s[65]++;
exports.ExternalServiceError = ExternalServiceError;
// Error handler for Fastify
function errorHandler(error, request, reply) {
  /* istanbul ignore next */
  cov_2a41pbrpvj().f[18]++;
  cov_2a41pbrpvj().s[66]++;
  // Log error
  logger_1.logger.error({
    error: {
      message: error.message,
      stack: error.stack,
      code: error.code,
      statusCode: error.statusCode
    },
    request: {
      method: request.method,
      url: request.url,
      headers: request.headers,
      ip: request.ip,
      userId: request.user?.id,
      organizationId: request.organization?.id
    }
  }, 'Request error');
  // Handle different error types
  /* istanbul ignore next */
  cov_2a41pbrpvj().s[67]++;
  if (error instanceof ApiError) {
    /* istanbul ignore next */
    cov_2a41pbrpvj().b[15][0]++;
    cov_2a41pbrpvj().s[68]++;
    return reply.status(error.statusCode).send(error.toJSON());
  } else
  /* istanbul ignore next */
  {
    cov_2a41pbrpvj().b[15][1]++;
  }
  cov_2a41pbrpvj().s[69]++;
  if (error instanceof ValidationError) {
    /* istanbul ignore next */
    cov_2a41pbrpvj().b[16][0]++;
    cov_2a41pbrpvj().s[70]++;
    return reply.status(error.statusCode).send(error.toJSON());
  } else
  /* istanbul ignore next */
  {
    cov_2a41pbrpvj().b[16][1]++;
  }
  cov_2a41pbrpvj().s[71]++;
  if (error instanceof DatabaseError) {
    /* istanbul ignore next */
    cov_2a41pbrpvj().b[17][0]++;
    cov_2a41pbrpvj().s[72]++;
    return reply.status(error.statusCode).send(error.toJSON());
  } else
  /* istanbul ignore next */
  {
    cov_2a41pbrpvj().b[17][1]++;
  }
  cov_2a41pbrpvj().s[73]++;
  if (error instanceof ExternalServiceError) {
    /* istanbul ignore next */
    cov_2a41pbrpvj().b[18][0]++;
    cov_2a41pbrpvj().s[74]++;
    return reply.status(error.statusCode).send(error.toJSON());
  } else
  /* istanbul ignore next */
  {
    cov_2a41pbrpvj().b[18][1]++;
  }
  // Handle Fastify validation errors
  cov_2a41pbrpvj().s[75]++;
  if (error.validation) {
    /* istanbul ignore next */
    cov_2a41pbrpvj().b[19][0]++;
    const validationError =
    /* istanbul ignore next */
    (cov_2a41pbrpvj().s[76]++, ValidationError.fromZodError(error));
    /* istanbul ignore next */
    cov_2a41pbrpvj().s[77]++;
    return reply.status(validationError.statusCode).send(validationError.toJSON());
  } else
  /* istanbul ignore next */
  {
    cov_2a41pbrpvj().b[19][1]++;
  }
  // Handle rate limiting errors
  cov_2a41pbrpvj().s[78]++;
  if (error.statusCode === 429) {
    /* istanbul ignore next */
    cov_2a41pbrpvj().b[20][0]++;
    const rateLimitError =
    /* istanbul ignore next */
    (cov_2a41pbrpvj().s[79]++, ApiError.tooManyRequests('Too many requests, please try again later', exports.ERROR_CODES.RATE_LIMIT_EXCEEDED));
    /* istanbul ignore next */
    cov_2a41pbrpvj().s[80]++;
    return reply.status(429).send(rateLimitError.toJSON());
  } else
  /* istanbul ignore next */
  {
    cov_2a41pbrpvj().b[20][1]++;
  }
  // Handle generic HTTP errors
  cov_2a41pbrpvj().s[81]++;
  if (
  /* istanbul ignore next */
  (cov_2a41pbrpvj().b[22][0]++, error.statusCode) &&
  /* istanbul ignore next */
  (cov_2a41pbrpvj().b[22][1]++, error.statusCode < 500)) {
    /* istanbul ignore next */
    cov_2a41pbrpvj().b[21][0]++;
    const apiError =
    /* istanbul ignore next */
    (cov_2a41pbrpvj().s[82]++, new ApiError(
    /* istanbul ignore next */
    (cov_2a41pbrpvj().b[23][0]++, error.message) ||
    /* istanbul ignore next */
    (cov_2a41pbrpvj().b[23][1]++, 'Bad request'), exports.ERROR_CODES.INVALID_INPUT, error.statusCode));
    /* istanbul ignore next */
    cov_2a41pbrpvj().s[83]++;
    return reply.status(error.statusCode).send(apiError.toJSON());
  } else
  /* istanbul ignore next */
  {
    cov_2a41pbrpvj().b[21][1]++;
  }
  // Handle unexpected errors
  const internalError =
  /* istanbul ignore next */
  (cov_2a41pbrpvj().s[84]++, ApiError.internalError('An unexpected error occurred', exports.ERROR_CODES.INTERNAL_ERROR, process.env.NODE_ENV === 'development' ?
  /* istanbul ignore next */
  (cov_2a41pbrpvj().b[24][0]++, {
    originalError: error.message
  }) :
  /* istanbul ignore next */
  (cov_2a41pbrpvj().b[24][1]++, undefined)));
  /* istanbul ignore next */
  cov_2a41pbrpvj().s[85]++;
  return reply.status(500).send(internalError.toJSON());
}
// Not found handler
function notFoundHandler(request, reply) {
  /* istanbul ignore next */
  cov_2a41pbrpvj().f[19]++;
  const notFoundError =
  /* istanbul ignore next */
  (cov_2a41pbrpvj().s[86]++, ApiError.notFound(`Route ${request.method} ${request.url} not found`, exports.ERROR_CODES.NOT_FOUND));
  /* istanbul ignore next */
  cov_2a41pbrpvj().s[87]++;
  return reply.status(404).send(notFoundError.toJSON());
}
// Async error wrapper for route handlers
function asyncHandler(fn) {
  /* istanbul ignore next */
  cov_2a41pbrpvj().f[20]++;
  cov_2a41pbrpvj().s[88]++;
  return (request, reply) => {
    /* istanbul ignore next */
    cov_2a41pbrpvj().f[21]++;
    cov_2a41pbrpvj().s[89]++;
    return Promise.resolve(fn(request, reply)).catch(error => {
      /* istanbul ignore next */
      cov_2a41pbrpvj().f[22]++;
      cov_2a41pbrpvj().s[90]++;
      throw error;
    });
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMmE0MXBicnB2aiIsImFjdHVhbENvdmVyYWdlIiwicyIsImV4cG9ydHMiLCJlcnJvckhhbmRsZXIiLCJub3RGb3VuZEhhbmRsZXIiLCJhc3luY0hhbmRsZXIiLCJsb2dnZXJfMSIsInJlcXVpcmUiLCJFUlJPUl9DT0RFUyIsIklOVkFMSURfQ1JFREVOVElBTFMiLCJJTlZBTElEX1RPS0VOIiwiSU5WQUxJRF9SRUZSRVNIX1RPS0VOIiwiTUlTU0lOR19BVVRIX0hFQURFUiIsIk1JU1NJTkdfQUNDRVNTX1RPS0VOIiwiU0VTU0lPTl9FWFBJUkVEIiwiQVVUSF9GQUlMRUQiLCJBVVRIX1JFUVVJUkVEIiwiSU5TVUZGSUNJRU5UX1BFUk1JU1NJT05TIiwiT1JHQU5JWkFUSU9OX1JFUVVJUkVEIiwiT1JHQU5JWkFUSU9OX0RJU0FCTEVEIiwiQUNDT1VOVF9ESVNBQkxFRCIsIlZBTElEQVRJT05fRVJST1IiLCJJTlZBTElEX0lOUFVUIiwiTUlTU0lOR19SRVFVSVJFRF9GSUVMRCIsIklOVkFMSURfRU1BSUwiLCJJTlZBTElEX1BBU1NXT1JEIiwiTk9UX0ZPVU5EIiwiQUxSRUFEWV9FWElTVFMiLCJFTUFJTF9BTFJFQURZX0VYSVNUUyIsIlNMVUdfQUxSRUFEWV9FWElTVFMiLCJSQVRFX0xJTUlUX0VYQ0VFREVEIiwiVE9PX01BTllfUkVRVUVTVFMiLCJNSVNTSU5HX0FQSV9LRVkiLCJJTlZBTElEX0FQSV9LRVkiLCJNSVNTSU5HX1dFQkhPT0tfU0lHTkFUVVJFIiwiSU5WQUxJRF9XRUJIT09LX1NJR05BVFVSRSIsIklOVkFMSURfV0VCSE9PS19USU1FU1RBTVAiLCJQTEFOX0xJTUlUX0VYQ0VFREVEIiwiRkVBVFVSRV9OT1RfQVZBSUxBQkxFIiwiUVVPVEFfRVhDRUVERUQiLCJFWFRFUk5BTF9TRVJWSUNFX0VSUk9SIiwiRkFDRUJPT0tfQVBJX0VSUk9SIiwiR09PR0xFX0FQSV9FUlJPUiIsIkZJTEVfVE9PX0xBUkdFIiwiSU5WQUxJRF9GSUxFX1RZUEUiLCJVUExPQURfRkFJTEVEIiwiREFUQUJBU0VfRVJST1IiLCJUUkFOU0FDVElPTl9GQUlMRUQiLCJJTlRFUk5BTF9FUlJPUiIsIlNFUlZJQ0VfVU5BVkFJTEFCTEUiLCJMT0dPVVRfRkFJTEVEIiwiQXBpRXJyb3IiLCJFcnJvciIsImNvZGUiLCJzdGF0dXNDb2RlIiwiZGV0YWlscyIsInRpbWVzdGFtcCIsImNvbnN0cnVjdG9yIiwibWVzc2FnZSIsImIiLCJmIiwibmFtZSIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsImNhcHR1cmVTdGFja1RyYWNlIiwidG9KU09OIiwiZXJyb3IiLCJiYWRSZXF1ZXN0IiwidW5hdXRob3JpemVkIiwiZm9yYmlkZGVuIiwibm90Rm91bmQiLCJjb25mbGljdCIsInRvb01hbnlSZXF1ZXN0cyIsImludGVybmFsRXJyb3IiLCJzZXJ2aWNlVW5hdmFpbGFibGUiLCJWYWxpZGF0aW9uRXJyb3IiLCJmcm9tWm9kRXJyb3IiLCJlcnJvcnMiLCJtYXAiLCJlcnIiLCJmaWVsZCIsInBhdGgiLCJqb2luIiwiRGF0YWJhc2VFcnJvciIsIm9yaWdpbmFsRXJyb3IiLCJzdGFjayIsImZyb21QcmlzbWFFcnJvciIsImxvZ2dlciIsInByaXNtYUNvZGUiLCJtZXRhIiwiRXh0ZXJuYWxTZXJ2aWNlRXJyb3IiLCJzZXJ2aWNlIiwiZmFjZWJvb2siLCJnb29nbGUiLCJyZXF1ZXN0IiwicmVwbHkiLCJtZXRob2QiLCJ1cmwiLCJoZWFkZXJzIiwiaXAiLCJ1c2VySWQiLCJ1c2VyIiwiaWQiLCJvcmdhbml6YXRpb25JZCIsIm9yZ2FuaXphdGlvbiIsInN0YXR1cyIsInNlbmQiLCJ2YWxpZGF0aW9uIiwidmFsaWRhdGlvbkVycm9yIiwicmF0ZUxpbWl0RXJyb3IiLCJhcGlFcnJvciIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsInVuZGVmaW5lZCIsIm5vdEZvdW5kRXJyb3IiLCJmbiIsIlByb21pc2UiLCJyZXNvbHZlIiwiY2F0Y2giXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXEVuem8gTWFyY2Vsb1xcRGVza3RvcFxcUHJvamV0b3MgRW1wcmVzYVxcU2FhcyBVdG1pZnlcXHV0bWlmeS1jbG9uZVxcYXBwc1xcYXBpXFxzcmNcXHV0aWxzXFxlcnJvcnMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBGYXN0aWZ5RXJyb3IgfSBmcm9tICdmYXN0aWZ5J1xuaW1wb3J0IHsgbG9nZ2VyIH0gZnJvbSAnLi9sb2dnZXInXG5cbi8vIEN1c3RvbSBlcnJvciBjb2Rlc1xuZXhwb3J0IGNvbnN0IEVSUk9SX0NPREVTID0ge1xuICAvLyBBdXRoZW50aWNhdGlvbiBlcnJvcnNcbiAgSU5WQUxJRF9DUkVERU5USUFMUzogJ0lOVkFMSURfQ1JFREVOVElBTFMnLFxuICBJTlZBTElEX1RPS0VOOiAnSU5WQUxJRF9UT0tFTicsXG4gIElOVkFMSURfUkVGUkVTSF9UT0tFTjogJ0lOVkFMSURfUkVGUkVTSF9UT0tFTicsXG4gIE1JU1NJTkdfQVVUSF9IRUFERVI6ICdNSVNTSU5HX0FVVEhfSEVBREVSJyxcbiAgTUlTU0lOR19BQ0NFU1NfVE9LRU46ICdNSVNTSU5HX0FDQ0VTU19UT0tFTicsXG4gIFNFU1NJT05fRVhQSVJFRDogJ1NFU1NJT05fRVhQSVJFRCcsXG4gIEFVVEhfRkFJTEVEOiAnQVVUSF9GQUlMRUQnLFxuICBBVVRIX1JFUVVJUkVEOiAnQVVUSF9SRVFVSVJFRCcsXG4gIFxuICAvLyBBdXRob3JpemF0aW9uIGVycm9yc1xuICBJTlNVRkZJQ0lFTlRfUEVSTUlTU0lPTlM6ICdJTlNVRkZJQ0lFTlRfUEVSTUlTU0lPTlMnLFxuICBPUkdBTklaQVRJT05fUkVRVUlSRUQ6ICdPUkdBTklaQVRJT05fUkVRVUlSRUQnLFxuICBPUkdBTklaQVRJT05fRElTQUJMRUQ6ICdPUkdBTklaQVRJT05fRElTQUJMRUQnLFxuICBBQ0NPVU5UX0RJU0FCTEVEOiAnQUNDT1VOVF9ESVNBQkxFRCcsXG4gIFxuICAvLyBWYWxpZGF0aW9uIGVycm9yc1xuICBWQUxJREFUSU9OX0VSUk9SOiAnVkFMSURBVElPTl9FUlJPUicsXG4gIElOVkFMSURfSU5QVVQ6ICdJTlZBTElEX0lOUFVUJyxcbiAgTUlTU0lOR19SRVFVSVJFRF9GSUVMRDogJ01JU1NJTkdfUkVRVUlSRURfRklFTEQnLFxuICBJTlZBTElEX0VNQUlMOiAnSU5WQUxJRF9FTUFJTCcsXG4gIElOVkFMSURfUEFTU1dPUkQ6ICdJTlZBTElEX1BBU1NXT1JEJyxcbiAgXG4gIC8vIFJlc291cmNlIGVycm9yc1xuICBOT1RfRk9VTkQ6ICdOT1RfRk9VTkQnLFxuICBBTFJFQURZX0VYSVNUUzogJ0FMUkVBRFlfRVhJU1RTJyxcbiAgRU1BSUxfQUxSRUFEWV9FWElTVFM6ICdFTUFJTF9BTFJFQURZX0VYSVNUUycsXG4gIFNMVUdfQUxSRUFEWV9FWElTVFM6ICdTTFVHX0FMUkVBRFlfRVhJU1RTJyxcbiAgXG4gIC8vIFJhdGUgbGltaXRpbmdcbiAgUkFURV9MSU1JVF9FWENFRURFRDogJ1JBVEVfTElNSVRfRVhDRUVERUQnLFxuICBUT09fTUFOWV9SRVFVRVNUUzogJ1RPT19NQU5ZX1JFUVVFU1RTJyxcbiAgXG4gIC8vIEFQSSBlcnJvcnNcbiAgTUlTU0lOR19BUElfS0VZOiAnTUlTU0lOR19BUElfS0VZJyxcbiAgSU5WQUxJRF9BUElfS0VZOiAnSU5WQUxJRF9BUElfS0VZJyxcbiAgXG4gIC8vIFdlYmhvb2sgZXJyb3JzXG4gIE1JU1NJTkdfV0VCSE9PS19TSUdOQVRVUkU6ICdNSVNTSU5HX1dFQkhPT0tfU0lHTkFUVVJFJyxcbiAgSU5WQUxJRF9XRUJIT09LX1NJR05BVFVSRTogJ0lOVkFMSURfV0VCSE9PS19TSUdOQVRVUkUnLFxuICBJTlZBTElEX1dFQkhPT0tfVElNRVNUQU1QOiAnSU5WQUxJRF9XRUJIT09LX1RJTUVTVEFNUCcsXG4gIFxuICAvLyBCdXNpbmVzcyBsb2dpYyBlcnJvcnNcbiAgUExBTl9MSU1JVF9FWENFRURFRDogJ1BMQU5fTElNSVRfRVhDRUVERUQnLFxuICBGRUFUVVJFX05PVF9BVkFJTEFCTEU6ICdGRUFUVVJFX05PVF9BVkFJTEFCTEUnLFxuICBRVU9UQV9FWENFRURFRDogJ1FVT1RBX0VYQ0VFREVEJyxcbiAgXG4gIC8vIEV4dGVybmFsIHNlcnZpY2UgZXJyb3JzXG4gIEVYVEVSTkFMX1NFUlZJQ0VfRVJST1I6ICdFWFRFUk5BTF9TRVJWSUNFX0VSUk9SJyxcbiAgRkFDRUJPT0tfQVBJX0VSUk9SOiAnRkFDRUJPT0tfQVBJX0VSUk9SJyxcbiAgR09PR0xFX0FQSV9FUlJPUjogJ0dPT0dMRV9BUElfRVJST1InLFxuICBcbiAgLy8gRmlsZSB1cGxvYWQgZXJyb3JzXG4gIEZJTEVfVE9PX0xBUkdFOiAnRklMRV9UT09fTEFSR0UnLFxuICBJTlZBTElEX0ZJTEVfVFlQRTogJ0lOVkFMSURfRklMRV9UWVBFJyxcbiAgVVBMT0FEX0ZBSUxFRDogJ1VQTE9BRF9GQUlMRUQnLFxuICBcbiAgLy8gRGF0YWJhc2UgZXJyb3JzXG4gIERBVEFCQVNFX0VSUk9SOiAnREFUQUJBU0VfRVJST1InLFxuICBUUkFOU0FDVElPTl9GQUlMRUQ6ICdUUkFOU0FDVElPTl9GQUlMRUQnLFxuICBcbiAgLy8gR2VuZXJpYyBlcnJvcnNcbiAgSU5URVJOQUxfRVJST1I6ICdJTlRFUk5BTF9FUlJPUicsXG4gIFNFUlZJQ0VfVU5BVkFJTEFCTEU6ICdTRVJWSUNFX1VOQVZBSUxBQkxFJyxcbiAgTE9HT1VUX0ZBSUxFRDogJ0xPR09VVF9GQUlMRUQnLFxufSBhcyBjb25zdFxuXG5leHBvcnQgdHlwZSBFcnJvckNvZGUgPSBrZXlvZiB0eXBlb2YgRVJST1JfQ09ERVNcblxuLy8gQ3VzdG9tIEFQSSBFcnJvciBjbGFzc1xuZXhwb3J0IGNsYXNzIEFwaUVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICBwdWJsaWMgcmVhZG9ubHkgY29kZTogc3RyaW5nXG4gIHB1YmxpYyByZWFkb25seSBzdGF0dXNDb2RlOiBudW1iZXJcbiAgcHVibGljIHJlYWRvbmx5IGRldGFpbHM/OiBhbnlcbiAgcHVibGljIHJlYWRvbmx5IHRpbWVzdGFtcDogc3RyaW5nXG5cbiAgY29uc3RydWN0b3IoXG4gICAgbWVzc2FnZTogc3RyaW5nLFxuICAgIGNvZGU6IHN0cmluZyA9IEVSUk9SX0NPREVTLklOVEVSTkFMX0VSUk9SLFxuICAgIHN0YXR1c0NvZGU6IG51bWJlciA9IDUwMCxcbiAgICBkZXRhaWxzPzogYW55XG4gICkge1xuICAgIHN1cGVyKG1lc3NhZ2UpXG4gICAgdGhpcy5uYW1lID0gJ0FwaUVycm9yJ1xuICAgIHRoaXMuY29kZSA9IGNvZGVcbiAgICB0aGlzLnN0YXR1c0NvZGUgPSBzdGF0dXNDb2RlXG4gICAgdGhpcy5kZXRhaWxzID0gZGV0YWlsc1xuICAgIHRoaXMudGltZXN0YW1wID0gbmV3IERhdGUoKS50b0lTT1N0cmluZygpXG5cbiAgICAvLyBNYWludGFpbiBwcm9wZXIgc3RhY2sgdHJhY2VcbiAgICBpZiAoRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UpIHtcbiAgICAgIEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKHRoaXMsIEFwaUVycm9yKVxuICAgIH1cbiAgfVxuXG4gIC8vIENvbnZlcnQgdG8gSlNPTiBmb3IgQVBJIHJlc3BvbnNlc1xuICB0b0pTT04oKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGVycm9yOiB7XG4gICAgICAgIG1lc3NhZ2U6IHRoaXMubWVzc2FnZSxcbiAgICAgICAgY29kZTogdGhpcy5jb2RlLFxuICAgICAgICBzdGF0dXNDb2RlOiB0aGlzLnN0YXR1c0NvZGUsXG4gICAgICAgIHRpbWVzdGFtcDogdGhpcy50aW1lc3RhbXAsXG4gICAgICAgIC4uLih0aGlzLmRldGFpbHMgJiYgeyBkZXRhaWxzOiB0aGlzLmRldGFpbHMgfSksXG4gICAgICB9LFxuICAgIH1cbiAgfVxuXG4gIC8vIFN0YXRpYyBmYWN0b3J5IG1ldGhvZHMgZm9yIGNvbW1vbiBlcnJvcnNcbiAgc3RhdGljIGJhZFJlcXVlc3QobWVzc2FnZTogc3RyaW5nLCBjb2RlPzogc3RyaW5nLCBkZXRhaWxzPzogYW55KSB7XG4gICAgcmV0dXJuIG5ldyBBcGlFcnJvcihtZXNzYWdlLCBjb2RlIHx8IEVSUk9SX0NPREVTLklOVkFMSURfSU5QVVQsIDQwMCwgZGV0YWlscylcbiAgfVxuXG4gIHN0YXRpYyB1bmF1dGhvcml6ZWQobWVzc2FnZTogc3RyaW5nLCBjb2RlPzogc3RyaW5nLCBkZXRhaWxzPzogYW55KSB7XG4gICAgcmV0dXJuIG5ldyBBcGlFcnJvcihtZXNzYWdlLCBjb2RlIHx8IEVSUk9SX0NPREVTLkFVVEhfUkVRVUlSRUQsIDQwMSwgZGV0YWlscylcbiAgfVxuXG4gIHN0YXRpYyBmb3JiaWRkZW4obWVzc2FnZTogc3RyaW5nLCBjb2RlPzogc3RyaW5nLCBkZXRhaWxzPzogYW55KSB7XG4gICAgcmV0dXJuIG5ldyBBcGlFcnJvcihtZXNzYWdlLCBjb2RlIHx8IEVSUk9SX0NPREVTLklOU1VGRklDSUVOVF9QRVJNSVNTSU9OUywgNDAzLCBkZXRhaWxzKVxuICB9XG5cbiAgc3RhdGljIG5vdEZvdW5kKG1lc3NhZ2U6IHN0cmluZywgY29kZT86IHN0cmluZywgZGV0YWlscz86IGFueSkge1xuICAgIHJldHVybiBuZXcgQXBpRXJyb3IobWVzc2FnZSwgY29kZSB8fCBFUlJPUl9DT0RFUy5OT1RfRk9VTkQsIDQwNCwgZGV0YWlscylcbiAgfVxuXG4gIHN0YXRpYyBjb25mbGljdChtZXNzYWdlOiBzdHJpbmcsIGNvZGU/OiBzdHJpbmcsIGRldGFpbHM/OiBhbnkpIHtcbiAgICByZXR1cm4gbmV3IEFwaUVycm9yKG1lc3NhZ2UsIGNvZGUgfHwgRVJST1JfQ09ERVMuQUxSRUFEWV9FWElTVFMsIDQwOSwgZGV0YWlscylcbiAgfVxuXG4gIHN0YXRpYyB0b29NYW55UmVxdWVzdHMobWVzc2FnZTogc3RyaW5nLCBjb2RlPzogc3RyaW5nLCBkZXRhaWxzPzogYW55KSB7XG4gICAgcmV0dXJuIG5ldyBBcGlFcnJvcihtZXNzYWdlLCBjb2RlIHx8IEVSUk9SX0NPREVTLlJBVEVfTElNSVRfRVhDRUVERUQsIDQyOSwgZGV0YWlscylcbiAgfVxuXG4gIHN0YXRpYyBpbnRlcm5hbEVycm9yKG1lc3NhZ2U6IHN0cmluZywgY29kZT86IHN0cmluZywgZGV0YWlscz86IGFueSkge1xuICAgIHJldHVybiBuZXcgQXBpRXJyb3IobWVzc2FnZSwgY29kZSB8fCBFUlJPUl9DT0RFUy5JTlRFUk5BTF9FUlJPUiwgNTAwLCBkZXRhaWxzKVxuICB9XG5cbiAgc3RhdGljIHNlcnZpY2VVbmF2YWlsYWJsZShtZXNzYWdlOiBzdHJpbmcsIGNvZGU/OiBzdHJpbmcsIGRldGFpbHM/OiBhbnkpIHtcbiAgICByZXR1cm4gbmV3IEFwaUVycm9yKG1lc3NhZ2UsIGNvZGUgfHwgRVJST1JfQ09ERVMuU0VSVklDRV9VTkFWQUlMQUJMRSwgNTAzLCBkZXRhaWxzKVxuICB9XG59XG5cbi8vIFZhbGlkYXRpb24gRXJyb3IgY2xhc3NcbmV4cG9ydCBjbGFzcyBWYWxpZGF0aW9uRXJyb3IgZXh0ZW5kcyBBcGlFcnJvciB7XG4gIGNvbnN0cnVjdG9yKG1lc3NhZ2U6IHN0cmluZywgZGV0YWlscz86IGFueSkge1xuICAgIHN1cGVyKG1lc3NhZ2UsIEVSUk9SX0NPREVTLlZBTElEQVRJT05fRVJST1IsIDQwMCwgZGV0YWlscylcbiAgICB0aGlzLm5hbWUgPSAnVmFsaWRhdGlvbkVycm9yJ1xuICB9XG5cbiAgc3RhdGljIGZyb21ab2RFcnJvcihlcnJvcjogYW55KSB7XG4gICAgY29uc3QgZGV0YWlscyA9IGVycm9yLmVycm9ycz8ubWFwKChlcnI6IGFueSkgPT4gKHtcbiAgICAgIGZpZWxkOiBlcnIucGF0aC5qb2luKCcuJyksXG4gICAgICBtZXNzYWdlOiBlcnIubWVzc2FnZSxcbiAgICAgIGNvZGU6IGVyci5jb2RlLFxuICAgIH0pKVxuXG4gICAgcmV0dXJuIG5ldyBWYWxpZGF0aW9uRXJyb3IoJ1ZhbGlkYXRpb24gZmFpbGVkJywgZGV0YWlscylcbiAgfVxufVxuXG4vLyBEYXRhYmFzZSBFcnJvciBjbGFzc1xuZXhwb3J0IGNsYXNzIERhdGFiYXNlRXJyb3IgZXh0ZW5kcyBBcGlFcnJvciB7XG4gIGNvbnN0cnVjdG9yKG1lc3NhZ2U6IHN0cmluZywgb3JpZ2luYWxFcnJvcj86IEVycm9yLCBkZXRhaWxzPzogYW55KSB7XG4gICAgc3VwZXIobWVzc2FnZSwgRVJST1JfQ09ERVMuREFUQUJBU0VfRVJST1IsIDUwMCwgZGV0YWlscylcbiAgICB0aGlzLm5hbWUgPSAnRGF0YWJhc2VFcnJvcidcbiAgICBcbiAgICBpZiAob3JpZ2luYWxFcnJvcikge1xuICAgICAgdGhpcy5zdGFjayA9IG9yaWdpbmFsRXJyb3Iuc3RhY2tcbiAgICB9XG4gIH1cblxuICBzdGF0aWMgZnJvbVByaXNtYUVycm9yKGVycm9yOiBhbnkpIHtcbiAgICBsZXQgbWVzc2FnZSA9ICdEYXRhYmFzZSBvcGVyYXRpb24gZmFpbGVkJ1xuICAgIGxldCBjb2RlID0gRVJST1JfQ09ERVMuREFUQUJBU0VfRVJST1JcbiAgICBsZXQgc3RhdHVzQ29kZSA9IDUwMFxuXG4gICAgLy8gSGFuZGxlIHNwZWNpZmljIFByaXNtYSBlcnJvciBjb2Rlc1xuICAgIHN3aXRjaCAoZXJyb3IuY29kZSkge1xuICAgICAgY2FzZSAnUDIwMDInOlxuICAgICAgICBtZXNzYWdlID0gJ0EgcmVjb3JkIHdpdGggdGhpcyB2YWx1ZSBhbHJlYWR5IGV4aXN0cydcbiAgICAgICAgY29kZSA9IEVSUk9SX0NPREVTLkFMUkVBRFlfRVhJU1RTXG4gICAgICAgIHN0YXR1c0NvZGUgPSA0MDlcbiAgICAgICAgYnJlYWtcbiAgICAgIGNhc2UgJ1AyMDI1JzpcbiAgICAgICAgbWVzc2FnZSA9ICdSZWNvcmQgbm90IGZvdW5kJ1xuICAgICAgICBjb2RlID0gRVJST1JfQ09ERVMuTk9UX0ZPVU5EXG4gICAgICAgIHN0YXR1c0NvZGUgPSA0MDRcbiAgICAgICAgYnJlYWtcbiAgICAgIGNhc2UgJ1AyMDAzJzpcbiAgICAgICAgbWVzc2FnZSA9ICdGb3JlaWduIGtleSBjb25zdHJhaW50IGZhaWxlZCdcbiAgICAgICAgY29kZSA9IEVSUk9SX0NPREVTLlZBTElEQVRJT05fRVJST1JcbiAgICAgICAgc3RhdHVzQ29kZSA9IDQwMFxuICAgICAgICBicmVha1xuICAgICAgY2FzZSAnUDIwMTQnOlxuICAgICAgICBtZXNzYWdlID0gJ0ludmFsaWQgSUQgcHJvdmlkZWQnXG4gICAgICAgIGNvZGUgPSBFUlJPUl9DT0RFUy5JTlZBTElEX0lOUFVUXG4gICAgICAgIHN0YXR1c0NvZGUgPSA0MDBcbiAgICAgICAgYnJlYWtcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIGxvZ2dlci5lcnJvcihlcnJvciwgJ1VuaGFuZGxlZCBQcmlzbWEgZXJyb3InKVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgRGF0YWJhc2VFcnJvcihtZXNzYWdlLCBlcnJvciwge1xuICAgICAgcHJpc21hQ29kZTogZXJyb3IuY29kZSxcbiAgICAgIG1ldGE6IGVycm9yLm1ldGEsXG4gICAgfSlcbiAgfVxufVxuXG4vLyBFeHRlcm5hbCBTZXJ2aWNlIEVycm9yIGNsYXNzXG5leHBvcnQgY2xhc3MgRXh0ZXJuYWxTZXJ2aWNlRXJyb3IgZXh0ZW5kcyBBcGlFcnJvciB7XG4gIHB1YmxpYyByZWFkb25seSBzZXJ2aWNlOiBzdHJpbmdcblxuICBjb25zdHJ1Y3RvcihzZXJ2aWNlOiBzdHJpbmcsIG1lc3NhZ2U6IHN0cmluZywgb3JpZ2luYWxFcnJvcj86IEVycm9yLCBkZXRhaWxzPzogYW55KSB7XG4gICAgc3VwZXIobWVzc2FnZSwgRVJST1JfQ09ERVMuRVhURVJOQUxfU0VSVklDRV9FUlJPUiwgNTAyLCBkZXRhaWxzKVxuICAgIHRoaXMubmFtZSA9ICdFeHRlcm5hbFNlcnZpY2VFcnJvcidcbiAgICB0aGlzLnNlcnZpY2UgPSBzZXJ2aWNlXG4gICAgXG4gICAgaWYgKG9yaWdpbmFsRXJyb3IpIHtcbiAgICAgIHRoaXMuc3RhY2sgPSBvcmlnaW5hbEVycm9yLnN0YWNrXG4gICAgfVxuICB9XG5cbiAgc3RhdGljIGZhY2Vib29rKG1lc3NhZ2U6IHN0cmluZywgZXJyb3I/OiBFcnJvciwgZGV0YWlscz86IGFueSkge1xuICAgIHJldHVybiBuZXcgRXh0ZXJuYWxTZXJ2aWNlRXJyb3IoJ0ZhY2Vib29rJywgbWVzc2FnZSwgZXJyb3IsIHtcbiAgICAgIC4uLmRldGFpbHMsXG4gICAgICBjb2RlOiBFUlJPUl9DT0RFUy5GQUNFQk9PS19BUElfRVJST1IsXG4gICAgfSlcbiAgfVxuXG4gIHN0YXRpYyBnb29nbGUobWVzc2FnZTogc3RyaW5nLCBlcnJvcj86IEVycm9yLCBkZXRhaWxzPzogYW55KSB7XG4gICAgcmV0dXJuIG5ldyBFeHRlcm5hbFNlcnZpY2VFcnJvcignR29vZ2xlJywgbWVzc2FnZSwgZXJyb3IsIHtcbiAgICAgIC4uLmRldGFpbHMsXG4gICAgICBjb2RlOiBFUlJPUl9DT0RFUy5HT09HTEVfQVBJX0VSUk9SLFxuICAgIH0pXG4gIH1cbn1cblxuLy8gRXJyb3IgaGFuZGxlciBmb3IgRmFzdGlmeVxuZXhwb3J0IGZ1bmN0aW9uIGVycm9ySGFuZGxlcihlcnJvcjogRmFzdGlmeUVycm9yLCByZXF1ZXN0OiBhbnksIHJlcGx5OiBhbnkpIHtcbiAgLy8gTG9nIGVycm9yXG4gIGxvZ2dlci5lcnJvcih7XG4gICAgZXJyb3I6IHtcbiAgICAgIG1lc3NhZ2U6IGVycm9yLm1lc3NhZ2UsXG4gICAgICBzdGFjazogZXJyb3Iuc3RhY2ssXG4gICAgICBjb2RlOiAoZXJyb3IgYXMgYW55KS5jb2RlLFxuICAgICAgc3RhdHVzQ29kZTogZXJyb3Iuc3RhdHVzQ29kZSxcbiAgICB9LFxuICAgIHJlcXVlc3Q6IHtcbiAgICAgIG1ldGhvZDogcmVxdWVzdC5tZXRob2QsXG4gICAgICB1cmw6IHJlcXVlc3QudXJsLFxuICAgICAgaGVhZGVyczogcmVxdWVzdC5oZWFkZXJzLFxuICAgICAgaXA6IHJlcXVlc3QuaXAsXG4gICAgICB1c2VySWQ6IHJlcXVlc3QudXNlcj8uaWQsXG4gICAgICBvcmdhbml6YXRpb25JZDogcmVxdWVzdC5vcmdhbml6YXRpb24/LmlkLFxuICAgIH0sXG4gIH0sICdSZXF1ZXN0IGVycm9yJylcblxuICAvLyBIYW5kbGUgZGlmZmVyZW50IGVycm9yIHR5cGVzXG4gIGlmIChlcnJvciBpbnN0YW5jZW9mIEFwaUVycm9yKSB7XG4gICAgcmV0dXJuIHJlcGx5LnN0YXR1cyhlcnJvci5zdGF0dXNDb2RlKS5zZW5kKGVycm9yLnRvSlNPTigpKVxuICB9XG5cbiAgaWYgKGVycm9yIGluc3RhbmNlb2YgVmFsaWRhdGlvbkVycm9yKSB7XG4gICAgcmV0dXJuIHJlcGx5LnN0YXR1cyhlcnJvci5zdGF0dXNDb2RlKS5zZW5kKGVycm9yLnRvSlNPTigpKVxuICB9XG5cbiAgaWYgKGVycm9yIGluc3RhbmNlb2YgRGF0YWJhc2VFcnJvcikge1xuICAgIHJldHVybiByZXBseS5zdGF0dXMoZXJyb3Iuc3RhdHVzQ29kZSkuc2VuZChlcnJvci50b0pTT04oKSlcbiAgfVxuXG4gIGlmIChlcnJvciBpbnN0YW5jZW9mIEV4dGVybmFsU2VydmljZUVycm9yKSB7XG4gICAgcmV0dXJuIHJlcGx5LnN0YXR1cyhlcnJvci5zdGF0dXNDb2RlKS5zZW5kKGVycm9yLnRvSlNPTigpKVxuICB9XG5cbiAgLy8gSGFuZGxlIEZhc3RpZnkgdmFsaWRhdGlvbiBlcnJvcnNcbiAgaWYgKGVycm9yLnZhbGlkYXRpb24pIHtcbiAgICBjb25zdCB2YWxpZGF0aW9uRXJyb3IgPSBWYWxpZGF0aW9uRXJyb3IuZnJvbVpvZEVycm9yKGVycm9yKVxuICAgIHJldHVybiByZXBseS5zdGF0dXModmFsaWRhdGlvbkVycm9yLnN0YXR1c0NvZGUpLnNlbmQodmFsaWRhdGlvbkVycm9yLnRvSlNPTigpKVxuICB9XG5cbiAgLy8gSGFuZGxlIHJhdGUgbGltaXRpbmcgZXJyb3JzXG4gIGlmIChlcnJvci5zdGF0dXNDb2RlID09PSA0MjkpIHtcbiAgICBjb25zdCByYXRlTGltaXRFcnJvciA9IEFwaUVycm9yLnRvb01hbnlSZXF1ZXN0cyhcbiAgICAgICdUb28gbWFueSByZXF1ZXN0cywgcGxlYXNlIHRyeSBhZ2FpbiBsYXRlcicsXG4gICAgICBFUlJPUl9DT0RFUy5SQVRFX0xJTUlUX0VYQ0VFREVEXG4gICAgKVxuICAgIHJldHVybiByZXBseS5zdGF0dXMoNDI5KS5zZW5kKHJhdGVMaW1pdEVycm9yLnRvSlNPTigpKVxuICB9XG5cbiAgLy8gSGFuZGxlIGdlbmVyaWMgSFRUUCBlcnJvcnNcbiAgaWYgKGVycm9yLnN0YXR1c0NvZGUgJiYgZXJyb3Iuc3RhdHVzQ29kZSA8IDUwMCkge1xuICAgIGNvbnN0IGFwaUVycm9yID0gbmV3IEFwaUVycm9yKFxuICAgICAgZXJyb3IubWVzc2FnZSB8fCAnQmFkIHJlcXVlc3QnLFxuICAgICAgRVJST1JfQ09ERVMuSU5WQUxJRF9JTlBVVCxcbiAgICAgIGVycm9yLnN0YXR1c0NvZGVcbiAgICApXG4gICAgcmV0dXJuIHJlcGx5LnN0YXR1cyhlcnJvci5zdGF0dXNDb2RlKS5zZW5kKGFwaUVycm9yLnRvSlNPTigpKVxuICB9XG5cbiAgLy8gSGFuZGxlIHVuZXhwZWN0ZWQgZXJyb3JzXG4gIGNvbnN0IGludGVybmFsRXJyb3IgPSBBcGlFcnJvci5pbnRlcm5hbEVycm9yKFxuICAgICdBbiB1bmV4cGVjdGVkIGVycm9yIG9jY3VycmVkJyxcbiAgICBFUlJPUl9DT0RFUy5JTlRFUk5BTF9FUlJPUixcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50JyA/IHsgb3JpZ2luYWxFcnJvcjogZXJyb3IubWVzc2FnZSB9IDogdW5kZWZpbmVkXG4gIClcblxuICByZXR1cm4gcmVwbHkuc3RhdHVzKDUwMCkuc2VuZChpbnRlcm5hbEVycm9yLnRvSlNPTigpKVxufVxuXG4vLyBOb3QgZm91bmQgaGFuZGxlclxuZXhwb3J0IGZ1bmN0aW9uIG5vdEZvdW5kSGFuZGxlcihyZXF1ZXN0OiBhbnksIHJlcGx5OiBhbnkpIHtcbiAgY29uc3Qgbm90Rm91bmRFcnJvciA9IEFwaUVycm9yLm5vdEZvdW5kKFxuICAgIGBSb3V0ZSAke3JlcXVlc3QubWV0aG9kfSAke3JlcXVlc3QudXJsfSBub3QgZm91bmRgLFxuICAgIEVSUk9SX0NPREVTLk5PVF9GT1VORFxuICApXG5cbiAgcmV0dXJuIHJlcGx5LnN0YXR1cyg0MDQpLnNlbmQobm90Rm91bmRFcnJvci50b0pTT04oKSlcbn1cblxuLy8gQXN5bmMgZXJyb3Igd3JhcHBlciBmb3Igcm91dGUgaGFuZGxlcnNcbmV4cG9ydCBmdW5jdGlvbiBhc3luY0hhbmRsZXIoZm46IEZ1bmN0aW9uKSB7XG4gIHJldHVybiAocmVxdWVzdDogYW55LCByZXBseTogYW55KSA9PiB7XG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShmbihyZXF1ZXN0LCByZXBseSkpLmNhdGNoKChlcnJvcikgPT4ge1xuICAgICAgdGhyb3cgZXJyb3JcbiAgICB9KVxuICB9XG59Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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