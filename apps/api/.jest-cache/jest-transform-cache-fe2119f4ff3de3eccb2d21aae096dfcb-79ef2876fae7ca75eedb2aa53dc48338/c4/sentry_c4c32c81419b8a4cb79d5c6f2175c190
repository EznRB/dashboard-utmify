f60503b26015a95ca04661dbd3b63443
/* istanbul ignore next */
function cov_99pzqqwkf() {
  var path = "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\lib\\sentry.ts";
  var hash = "94ec23bb224b46f1ed23aeb3d4c7ad04a27b36f8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\lib\\sentry.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 19
        },
        end: {
          line: 3,
          column: 41
        }
      },
      "1": {
        start: {
          line: 4,
          column: 20
        },
        end: {
          line: 4,
          column: 57
        }
      },
      "2": {
        start: {
          line: 5,
          column: 16
        },
        end: {
          line: 5,
          column: 50
        }
      },
      "3": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 46,
          column: 3
        }
      },
      "4": {
        start: {
          line: 26,
          column: 22
        },
        end: {
          line: 26,
          column: 44
        }
      },
      "5": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 35,
          column: 9
        }
      },
      "6": {
        start: {
          line: 28,
          column: 28
        },
        end: {
          line: 28,
          column: 41
        }
      },
      "7": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 34,
          column: 13
        }
      },
      "8": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 33,
          column: 28
        }
      },
      "9": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 21
        }
      },
      "10": {
        start: {
          line: 48,
          column: 28
        },
        end: {
          line: 117,
          column: 1
        }
      },
      "11": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 64,
          column: 7
        }
      },
      "12": {
        start: {
          line: 51,
          column: 28
        },
        end: {
          line: 54,
          column: 10
        }
      },
      "13": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 48
        }
      },
      "14": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "15": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 62,
          column: 15
        }
      },
      "16": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 79,
          column: 7
        }
      },
      "17": {
        start: {
          line: 67,
          column: 28
        },
        end: {
          line: 67,
          column: 53
        }
      },
      "18": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "19": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 56
        }
      },
      "20": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 69
        }
      },
      "21": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 76,
          column: 13
        }
      },
      "22": {
        start: {
          line: 72,
          column: 16
        },
        end: {
          line: 72,
          column: 56
        }
      },
      "23": {
        start: {
          line: 75,
          column: 16
        },
        end: {
          line: 75,
          column: 44
        }
      },
      "24": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 33
        }
      },
      "25": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 116,
          column: 7
        }
      },
      "26": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 99,
          column: 11
        }
      },
      "27": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 59
        }
      },
      "28": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 91,
          column: 15
        }
      },
      "29": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 97,
          column: 13
        }
      },
      "30": {
        start: {
          line: 93,
          column: 16
        },
        end: {
          line: 96,
          column: 19
        }
      },
      "31": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 43
        }
      },
      "32": {
        start: {
          line: 101,
          column: 28
        },
        end: {
          line: 101,
          column: 53
        }
      },
      "33": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 104,
          column: 9
        }
      },
      "34": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 52
        }
      },
      "35": {
        start: {
          line: 106,
          column: 27
        },
        end: {
          line: 106,
          column: 50
        }
      },
      "36": {
        start: {
          line: 107,
          column: 24
        },
        end: {
          line: 109,
          column: 27
        }
      },
      "37": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 115,
          column: 11
        }
      },
      "38": {
        start: {
          line: 119,
          column: 27
        },
        end: {
          line: 126,
          column: 1
        }
      },
      "39": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 125,
          column: 7
        }
      },
      "40": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 123,
          column: 9
        }
      },
      "41": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 57
        }
      },
      "42": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 124,
          column: 39
        }
      },
      "43": {
        start: {
          line: 127,
          column: 29
        },
        end: {
          line: 129,
          column: 1
        }
      },
      "44": {
        start: {
          line: 128,
          column: 4
        },
        end: {
          line: 128,
          column: 42
        }
      },
      "45": {
        start: {
          line: 130,
          column: 30
        },
        end: {
          line: 132,
          column: 1
        }
      },
      "46": {
        start: {
          line: 131,
          column: 4
        },
        end: {
          line: 131,
          column: 25
        }
      },
      "47": {
        start: {
          line: 133,
          column: 29
        },
        end: {
          line: 140,
          column: 1
        }
      },
      "48": {
        start: {
          line: 134,
          column: 4
        },
        end: {
          line: 139,
          column: 7
        }
      },
      "49": {
        start: {
          line: 142,
          column: 32
        },
        end: {
          line: 144,
          column: 1
        }
      },
      "50": {
        start: {
          line: 143,
          column: 4
        },
        end: {
          line: 143,
          column: 49
        }
      },
      "51": {
        start: {
          line: 145,
          column: 34
        },
        end: {
          line: 162,
          column: 1
        }
      },
      "52": {
        start: {
          line: 146,
          column: 24
        },
        end: {
          line: 149,
          column: 6
        }
      },
      "53": {
        start: {
          line: 150,
          column: 4
        },
        end: {
          line: 161,
          column: 5
        }
      },
      "54": {
        start: {
          line: 151,
          column: 23
        },
        end: {
          line: 151,
          column: 40
        }
      },
      "55": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 152,
          column: 36
        }
      },
      "56": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 153,
          column: 22
        }
      },
      "57": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 48
        }
      },
      "58": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 157,
          column: 20
        }
      },
      "59": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 160,
          column: 29
        }
      },
      "60": {
        start: {
          line: 164,
          column: 36
        },
        end: {
          line: 181,
          column: 1
        }
      },
      "61": {
        start: {
          line: 165,
          column: 17
        },
        end: {
          line: 168,
          column: 6
        }
      },
      "62": {
        start: {
          line: 169,
          column: 4
        },
        end: {
          line: 180,
          column: 5
        }
      },
      "63": {
        start: {
          line: 170,
          column: 23
        },
        end: {
          line: 170,
          column: 36
        }
      },
      "64": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 171,
          column: 30
        }
      },
      "65": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 22
        }
      },
      "66": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 175,
          column: 42
        }
      },
      "67": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 176,
          column: 20
        }
      },
      "68": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 179,
          column: 23
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 28
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 24
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 48,
            column: 28
          },
          end: {
            line: 48,
            column: 29
          }
        },
        loc: {
          start: {
            line: 48,
            column: 47
          },
          end: {
            line: 117,
            column: 1
          }
        },
        line: 48
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 50,
            column: 33
          },
          end: {
            line: 50,
            column: 34
          }
        },
        loc: {
          start: {
            line: 50,
            column: 59
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 50
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 66,
            column: 34
          },
          end: {
            line: 66,
            column: 35
          }
        },
        loc: {
          start: {
            line: 66,
            column: 60
          },
          end: {
            line: 79,
            column: 5
          }
        },
        line: 66
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 81,
            column: 28
          },
          end: {
            line: 81,
            column: 29
          }
        },
        loc: {
          start: {
            line: 81,
            column: 61
          },
          end: {
            line: 116,
            column: 5
          }
        },
        line: 81
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 83,
            column: 25
          },
          end: {
            line: 83,
            column: 26
          }
        },
        loc: {
          start: {
            line: 83,
            column: 36
          },
          end: {
            line: 99,
            column: 9
          }
        },
        line: 83
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 119,
            column: 27
          },
          end: {
            line: 119,
            column: 28
          }
        },
        loc: {
          start: {
            line: 119,
            column: 47
          },
          end: {
            line: 126,
            column: 1
          }
        },
        line: 119
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 120,
            column: 21
          },
          end: {
            line: 120,
            column: 22
          }
        },
        loc: {
          start: {
            line: 120,
            column: 32
          },
          end: {
            line: 125,
            column: 5
          }
        },
        line: 120
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 127,
            column: 29
          },
          end: {
            line: 127,
            column: 30
          }
        },
        loc: {
          start: {
            line: 127,
            column: 58
          },
          end: {
            line: 129,
            column: 1
          }
        },
        line: 127
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 130,
            column: 30
          },
          end: {
            line: 130,
            column: 31
          }
        },
        loc: {
          start: {
            line: 130,
            column: 40
          },
          end: {
            line: 132,
            column: 1
          }
        },
        line: 130
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 133,
            column: 29
          },
          end: {
            line: 133,
            column: 30
          }
        },
        loc: {
          start: {
            line: 133,
            column: 58
          },
          end: {
            line: 140,
            column: 1
          }
        },
        line: 133
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 142,
            column: 32
          },
          end: {
            line: 142,
            column: 33
          }
        },
        loc: {
          start: {
            line: 142,
            column: 46
          },
          end: {
            line: 144,
            column: 1
          }
        },
        line: 142
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 145,
            column: 34
          },
          end: {
            line: 145,
            column: 35
          }
        },
        loc: {
          start: {
            line: 145,
            column: 61
          },
          end: {
            line: 162,
            column: 1
          }
        },
        line: 145
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 164,
            column: 36
          },
          end: {
            line: 164,
            column: 37
          }
        },
        loc: {
          start: {
            line: 164,
            column: 64
          },
          end: {
            line: 181,
            column: 1
          }
        },
        line: 164
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 4,
            column: 20
          },
          end: {
            line: 4,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 20
          },
          end: {
            line: 4,
            column: 40
          }
        }, {
          start: {
            line: 4,
            column: 44
          },
          end: {
            line: 4,
            column: 57
          }
        }],
        line: 4
      },
      "1": {
        loc: {
          start: {
            line: 5,
            column: 16
          },
          end: {
            line: 5,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 16
          },
          end: {
            line: 5,
            column: 39
          }
        }, {
          start: {
            line: 5,
            column: 43
          },
          end: {
            line: 5,
            column: 50
          }
        }],
        line: 5
      },
      "2": {
        loc: {
          start: {
            line: 12,
            column: 22
          },
          end: {
            line: 12,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 12,
            column: 53
          },
          end: {
            line: 12,
            column: 56
          }
        }, {
          start: {
            line: 12,
            column: 59
          },
          end: {
            line: 12,
            column: 62
          }
        }],
        line: 12
      },
      "3": {
        loc: {
          start: {
            line: 14,
            column: 24
          },
          end: {
            line: 14,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 14,
            column: 55
          },
          end: {
            line: 14,
            column: 58
          }
        }, {
          start: {
            line: 14,
            column: 61
          },
          end: {
            line: 14,
            column: 64
          }
        }],
        line: 14
      },
      "4": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 35,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 35,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "5": {
        loc: {
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 27,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 27,
            column: 17
          }
        }, {
          start: {
            line: 27,
            column: 21
          },
          end: {
            line: 27,
            column: 46
          }
        }, {
          start: {
            line: 27,
            column: 50
          },
          end: {
            line: 27,
            column: 68
          }
        }],
        line: 27
      },
      "6": {
        loc: {
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 34,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 34,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "7": {
        loc: {
          start: {
            line: 30,
            column: 16
          },
          end: {
            line: 32,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 16
          },
          end: {
            line: 30,
            column: 46
          }
        }, {
          start: {
            line: 31,
            column: 16
          },
          end: {
            line: 31,
            column: 45
          }
        }, {
          start: {
            line: 32,
            column: 16
          },
          end: {
            line: 32,
            column: 45
          }
        }],
        line: 30
      },
      "8": {
        loc: {
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "9": {
        loc: {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "10": {
        loc: {
          start: {
            line: 71,
            column: 12
          },
          end: {
            line: 76,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 12
          },
          end: {
            line: 76,
            column: 13
          }
        }, {
          start: {
            line: 74,
            column: 17
          },
          end: {
            line: 76,
            column: 13
          }
        }],
        line: 71
      },
      "11": {
        loc: {
          start: {
            line: 92,
            column: 12
          },
          end: {
            line: 97,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 12
          },
          end: {
            line: 97,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "12": {
        loc: {
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "13": {
        loc: {
          start: {
            line: 106,
            column: 27
          },
          end: {
            line: 106,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 106,
            column: 27
          },
          end: {
            line: 106,
            column: 43
          }
        }, {
          start: {
            line: 106,
            column: 47
          },
          end: {
            line: 106,
            column: 50
          }
        }],
        line: 106
      },
      "14": {
        loc: {
          start: {
            line: 107,
            column: 24
          },
          end: {
            line: 109,
            column: 27
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 108,
            column: 14
          },
          end: {
            line: 108,
            column: 37
          }
        }, {
          start: {
            line: 109,
            column: 14
          },
          end: {
            line: 109,
            column: 27
          }
        }],
        line: 107
      },
      "15": {
        loc: {
          start: {
            line: 107,
            column: 24
          },
          end: {
            line: 107,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 107,
            column: 24
          },
          end: {
            line: 107,
            column: 52
          }
        }, {
          start: {
            line: 107,
            column: 56
          },
          end: {
            line: 107,
            column: 74
          }
        }],
        line: 107
      },
      "16": {
        loc: {
          start: {
            line: 114,
            column: 16
          },
          end: {
            line: 114,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 114,
            column: 16
          },
          end: {
            line: 114,
            column: 45
          }
        }, {
          start: {
            line: 114,
            column: 49
          },
          end: {
            line: 114,
            column: 71
          }
        }],
        line: 114
      },
      "17": {
        loc: {
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 123,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 123,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "18": {
        loc: {
          start: {
            line: 127,
            column: 39
          },
          end: {
            line: 127,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 127,
            column: 47
          },
          end: {
            line: 127,
            column: 53
          }
        }],
        line: 127
      },
      "19": {
        loc: {
          start: {
            line: 136,
            column: 18
          },
          end: {
            line: 136,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 136,
            column: 18
          },
          end: {
            line: 136,
            column: 26
          }
        }, {
          start: {
            line: 136,
            column: 30
          },
          end: {
            line: 136,
            column: 38
          }
        }],
        line: 136
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0],
      "19": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\lib\\sentry.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\lib\\sentry.ts"],
      sourcesContent: ["import * as Sentry from '@sentry/node';\nimport { ProfilingIntegration } from '@sentry/profiling-node';\nimport type { FastifyInstance } from 'fastify';\n\nconst SENTRY_DSN = process.env.SENTRY_DSN;\nconst ENVIRONMENT = process.env.NODE_ENV || 'development';\nconst RELEASE = process.env.APP_VERSION || '1.0.0';\n\n// Initialize Sentry\nSentry.init({\n  dsn: SENTRY_DSN,\n  environment: ENVIRONMENT,\n  release: RELEASE,\n  \n  // Performance Monitoring\n  tracesSampleRate: ENVIRONMENT === 'production' ? 0.1 : 1.0,\n  \n  // Profiling\n  profilesSampleRate: ENVIRONMENT === 'production' ? 0.1 : 1.0,\n  \n  integrations: [\n    // Add profiling integration\n    new ProfilingIntegration(),\n    // Add HTTP integration\n    new Sentry.Integrations.Http({ tracing: true }),\n    // Add Express integration for better request tracking\n    new Sentry.Integrations.Express({ app: undefined }),\n  ],\n  \n  // Error Filtering\n  beforeSend(event, hint) {\n    // Filter out known non-critical errors\n    const error = hint.originalException;\n    \n    if (error && typeof error === 'object' && 'message' in error) {\n      const message = error.message as string;\n      \n      // Filter out connection errors that are not actionable\n      if (message.includes('ECONNRESET') || \n          message.includes('ENOTFOUND') ||\n          message.includes('ETIMEDOUT')) {\n        return null;\n      }\n    }\n    \n    return event;\n  },\n  \n  // Debug mode for development\n  debug: ENVIRONMENT === 'development',\n  \n  // Set initial scope\n  initialScope: {\n    tags: {\n      component: 'api-server',\n    },\n  },\n});\n\n// Fastify plugin for Sentry integration\nexport const sentryPlugin = async (fastify: FastifyInstance) => {\n  // Add request tracing\n  fastify.addHook('onRequest', async (request, reply) => {\n    const transaction = Sentry.startTransaction({\n      name: `${request.method} ${request.url}`,\n      op: 'http.server',\n    });\n    \n    // Store transaction in request context\n    request.sentryTransaction = transaction;\n    \n    // Set user context if available\n    if (request.user) {\n      Sentry.setUser({\n        id: request.user.id,\n        email: request.user.email,\n      });\n    }\n  });\n  \n  // Add response tracking\n  fastify.addHook('onResponse', async (request, reply) => {\n    const transaction = request.sentryTransaction;\n    if (transaction) {\n      transaction.setHttpStatus(reply.statusCode);\n      transaction.setTag('http.status_code', reply.statusCode);\n      \n      if (reply.statusCode >= 400) {\n        transaction.setStatus('internal_error');\n      } else {\n        transaction.setStatus('ok');\n      }\n      \n      transaction.finish();\n    }\n  });\n  \n  // Add error handling\n  fastify.setErrorHandler(async (error, request, reply) => {\n    // Report error to Sentry\n    Sentry.withScope((scope) => {\n      scope.setTag('component', 'api-error-handler');\n      scope.setContext('request', {\n        method: request.method,\n        url: request.url,\n        headers: request.headers,\n        query: request.query,\n        params: request.params,\n      });\n      \n      if (request.user) {\n        scope.setUser({\n          id: request.user.id,\n          email: request.user.email,\n        });\n      }\n      \n      Sentry.captureException(error);\n    });\n    \n    // Set transaction status\n    const transaction = request.sentryTransaction;\n    if (transaction) {\n      transaction.setStatus('internal_error');\n    }\n    \n    // Return appropriate error response\n    const statusCode = error.statusCode || 500;\n    const message = ENVIRONMENT === 'production' && statusCode === 500 \n      ? 'Internal Server Error' \n      : error.message;\n    \n    reply.status(statusCode).send({\n      error: true,\n      message,\n      statusCode,\n      ...(ENVIRONMENT === 'development' && { stack: error.stack }),\n    });\n  });\n};\n\n// Custom error reporting functions\nexport const reportError = (error: Error, context?: Record<string, any>) => {\n  Sentry.withScope((scope) => {\n    if (context) {\n      scope.setContext('additional_info', context);\n    }\n    Sentry.captureException(error);\n  });\n};\n\nexport const reportMessage = (message: string, level: 'info' | 'warning' | 'error' = 'info') => {\n  Sentry.captureMessage(message, level);\n};\n\nexport const setUserContext = (user: {\n  id: string;\n  email?: string;\n  username?: string;\n}) => {\n  Sentry.setUser(user);\n};\n\nexport const addBreadcrumb = (message: string, category?: string, data?: Record<string, any>) => {\n  Sentry.addBreadcrumb({\n    message,\n    category: category || 'custom',\n    data,\n    timestamp: Date.now() / 1000,\n  });\n};\n\n// Performance monitoring helpers\nexport const startTransaction = (name: string, op: string) => {\n  return Sentry.startTransaction({ name, op });\n};\n\nexport const measurePerformance = async <T>(\n  name: string,\n  operation: () => Promise<T>\n): Promise<T> => {\n  const transaction = Sentry.startTransaction({\n    name,\n    op: 'custom',\n  });\n  \n  try {\n    const result = await operation();\n    transaction.setStatus('ok');\n    return result;\n  } catch (error) {\n    transaction.setStatus('internal_error');\n    throw error;\n  } finally {\n    transaction.finish();\n  }\n};\n\n// Database query monitoring\nexport const monitorDatabaseQuery = async <T>(\n  queryName: string,\n  query: () => Promise<T>\n): Promise<T> => {\n  const span = Sentry.getCurrentHub().getScope()?.getTransaction()?.startChild({\n    op: 'db.query',\n    description: queryName,\n  });\n  \n  try {\n    const result = await query();\n    span?.setStatus('ok');\n    return result;\n  } catch (error) {\n    span?.setStatus('internal_error');\n    throw error;\n  } finally {\n    span?.finish();\n  }\n};\n\nexport default Sentry;\n\n// Extend Fastify request interface\ndeclare module 'fastify' {\n  interface FastifyRequest {\n    sentryTransaction?: any;\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "94ec23bb224b46f1ed23aeb3d4c7ad04a27b36f8"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_99pzqqwkf = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_99pzqqwkf();
import * as Sentry from '@sentry/node';
import { ProfilingIntegration } from '@sentry/profiling-node';
const SENTRY_DSN =
/* istanbul ignore next */
(cov_99pzqqwkf().s[0]++, process.env.SENTRY_DSN);
const ENVIRONMENT =
/* istanbul ignore next */
(cov_99pzqqwkf().s[1]++,
/* istanbul ignore next */
(cov_99pzqqwkf().b[0][0]++, process.env.NODE_ENV) ||
/* istanbul ignore next */
(cov_99pzqqwkf().b[0][1]++, 'development'));
const RELEASE =
/* istanbul ignore next */
(cov_99pzqqwkf().s[2]++,
/* istanbul ignore next */
(cov_99pzqqwkf().b[1][0]++, process.env.APP_VERSION) ||
/* istanbul ignore next */
(cov_99pzqqwkf().b[1][1]++, '1.0.0'));
// Initialize Sentry
/* istanbul ignore next */
cov_99pzqqwkf().s[3]++;
Sentry.init({
  dsn: SENTRY_DSN,
  environment: ENVIRONMENT,
  release: RELEASE,
  // Performance Monitoring
  tracesSampleRate: ENVIRONMENT === 'production' ?
  /* istanbul ignore next */
  (cov_99pzqqwkf().b[2][0]++, 0.1) :
  /* istanbul ignore next */
  (cov_99pzqqwkf().b[2][1]++, 1.0),
  // Profiling
  profilesSampleRate: ENVIRONMENT === 'production' ?
  /* istanbul ignore next */
  (cov_99pzqqwkf().b[3][0]++, 0.1) :
  /* istanbul ignore next */
  (cov_99pzqqwkf().b[3][1]++, 1.0),
  integrations: [
  // Add profiling integration
  new ProfilingIntegration(),
  // Add HTTP integration
  new Sentry.Integrations.Http({
    tracing: true
  }),
  // Add Express integration for better request tracking
  new Sentry.Integrations.Express({
    app: undefined
  })],
  // Error Filtering
  beforeSend(event, hint) {
    /* istanbul ignore next */
    cov_99pzqqwkf().f[0]++;
    // Filter out known non-critical errors
    const error =
    /* istanbul ignore next */
    (cov_99pzqqwkf().s[4]++, hint.originalException);
    /* istanbul ignore next */
    cov_99pzqqwkf().s[5]++;
    if (
    /* istanbul ignore next */
    (cov_99pzqqwkf().b[5][0]++, error) &&
    /* istanbul ignore next */
    (cov_99pzqqwkf().b[5][1]++, typeof error === 'object') &&
    /* istanbul ignore next */
    (cov_99pzqqwkf().b[5][2]++, 'message' in error)) {
      /* istanbul ignore next */
      cov_99pzqqwkf().b[4][0]++;
      const message =
      /* istanbul ignore next */
      (cov_99pzqqwkf().s[6]++, error.message);
      // Filter out connection errors that are not actionable
      /* istanbul ignore next */
      cov_99pzqqwkf().s[7]++;
      if (
      /* istanbul ignore next */
      (cov_99pzqqwkf().b[7][0]++, message.includes('ECONNRESET')) ||
      /* istanbul ignore next */
      (cov_99pzqqwkf().b[7][1]++, message.includes('ENOTFOUND')) ||
      /* istanbul ignore next */
      (cov_99pzqqwkf().b[7][2]++, message.includes('ETIMEDOUT'))) {
        /* istanbul ignore next */
        cov_99pzqqwkf().b[6][0]++;
        cov_99pzqqwkf().s[8]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_99pzqqwkf().b[6][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_99pzqqwkf().b[4][1]++;
    }
    cov_99pzqqwkf().s[9]++;
    return event;
  },
  // Debug mode for development
  debug: ENVIRONMENT === 'development',
  // Set initial scope
  initialScope: {
    tags: {
      component: 'api-server'
    }
  }
});
// Fastify plugin for Sentry integration
/* istanbul ignore next */
cov_99pzqqwkf().s[10]++;
export const sentryPlugin = async fastify => {
  /* istanbul ignore next */
  cov_99pzqqwkf().f[1]++;
  cov_99pzqqwkf().s[11]++;
  // Add request tracing
  fastify.addHook('onRequest', async (request, reply) => {
    /* istanbul ignore next */
    cov_99pzqqwkf().f[2]++;
    const transaction =
    /* istanbul ignore next */
    (cov_99pzqqwkf().s[12]++, Sentry.startTransaction({
      name: `${request.method} ${request.url}`,
      op: 'http.server'
    }));
    // Store transaction in request context
    /* istanbul ignore next */
    cov_99pzqqwkf().s[13]++;
    request.sentryTransaction = transaction;
    // Set user context if available
    /* istanbul ignore next */
    cov_99pzqqwkf().s[14]++;
    if (request.user) {
      /* istanbul ignore next */
      cov_99pzqqwkf().b[8][0]++;
      cov_99pzqqwkf().s[15]++;
      Sentry.setUser({
        id: request.user.id,
        email: request.user.email
      });
    } else
    /* istanbul ignore next */
    {
      cov_99pzqqwkf().b[8][1]++;
    }
  });
  // Add response tracking
  /* istanbul ignore next */
  cov_99pzqqwkf().s[16]++;
  fastify.addHook('onResponse', async (request, reply) => {
    /* istanbul ignore next */
    cov_99pzqqwkf().f[3]++;
    const transaction =
    /* istanbul ignore next */
    (cov_99pzqqwkf().s[17]++, request.sentryTransaction);
    /* istanbul ignore next */
    cov_99pzqqwkf().s[18]++;
    if (transaction) {
      /* istanbul ignore next */
      cov_99pzqqwkf().b[9][0]++;
      cov_99pzqqwkf().s[19]++;
      transaction.setHttpStatus(reply.statusCode);
      /* istanbul ignore next */
      cov_99pzqqwkf().s[20]++;
      transaction.setTag('http.status_code', reply.statusCode);
      /* istanbul ignore next */
      cov_99pzqqwkf().s[21]++;
      if (reply.statusCode >= 400) {
        /* istanbul ignore next */
        cov_99pzqqwkf().b[10][0]++;
        cov_99pzqqwkf().s[22]++;
        transaction.setStatus('internal_error');
      } else {
        /* istanbul ignore next */
        cov_99pzqqwkf().b[10][1]++;
        cov_99pzqqwkf().s[23]++;
        transaction.setStatus('ok');
      }
      /* istanbul ignore next */
      cov_99pzqqwkf().s[24]++;
      transaction.finish();
    } else
    /* istanbul ignore next */
    {
      cov_99pzqqwkf().b[9][1]++;
    }
  });
  // Add error handling
  /* istanbul ignore next */
  cov_99pzqqwkf().s[25]++;
  fastify.setErrorHandler(async (error, request, reply) => {
    /* istanbul ignore next */
    cov_99pzqqwkf().f[4]++;
    cov_99pzqqwkf().s[26]++;
    // Report error to Sentry
    Sentry.withScope(scope => {
      /* istanbul ignore next */
      cov_99pzqqwkf().f[5]++;
      cov_99pzqqwkf().s[27]++;
      scope.setTag('component', 'api-error-handler');
      /* istanbul ignore next */
      cov_99pzqqwkf().s[28]++;
      scope.setContext('request', {
        method: request.method,
        url: request.url,
        headers: request.headers,
        query: request.query,
        params: request.params
      });
      /* istanbul ignore next */
      cov_99pzqqwkf().s[29]++;
      if (request.user) {
        /* istanbul ignore next */
        cov_99pzqqwkf().b[11][0]++;
        cov_99pzqqwkf().s[30]++;
        scope.setUser({
          id: request.user.id,
          email: request.user.email
        });
      } else
      /* istanbul ignore next */
      {
        cov_99pzqqwkf().b[11][1]++;
      }
      cov_99pzqqwkf().s[31]++;
      Sentry.captureException(error);
    });
    // Set transaction status
    const transaction =
    /* istanbul ignore next */
    (cov_99pzqqwkf().s[32]++, request.sentryTransaction);
    /* istanbul ignore next */
    cov_99pzqqwkf().s[33]++;
    if (transaction) {
      /* istanbul ignore next */
      cov_99pzqqwkf().b[12][0]++;
      cov_99pzqqwkf().s[34]++;
      transaction.setStatus('internal_error');
    } else
    /* istanbul ignore next */
    {
      cov_99pzqqwkf().b[12][1]++;
    }
    // Return appropriate error response
    const statusCode =
    /* istanbul ignore next */
    (cov_99pzqqwkf().s[35]++,
    /* istanbul ignore next */
    (cov_99pzqqwkf().b[13][0]++, error.statusCode) ||
    /* istanbul ignore next */
    (cov_99pzqqwkf().b[13][1]++, 500));
    const message =
    /* istanbul ignore next */
    (cov_99pzqqwkf().s[36]++,
    /* istanbul ignore next */
    (cov_99pzqqwkf().b[15][0]++, ENVIRONMENT === 'production') &&
    /* istanbul ignore next */
    (cov_99pzqqwkf().b[15][1]++, statusCode === 500) ?
    /* istanbul ignore next */
    (cov_99pzqqwkf().b[14][0]++, 'Internal Server Error') :
    /* istanbul ignore next */
    (cov_99pzqqwkf().b[14][1]++, error.message));
    /* istanbul ignore next */
    cov_99pzqqwkf().s[37]++;
    reply.status(statusCode).send({
      error: true,
      message,
      statusCode,
      ...(
      /* istanbul ignore next */
      (cov_99pzqqwkf().b[16][0]++, ENVIRONMENT === 'development') &&
      /* istanbul ignore next */
      (cov_99pzqqwkf().b[16][1]++, {
        stack: error.stack
      }))
    });
  });
};
// Custom error reporting functions
/* istanbul ignore next */
cov_99pzqqwkf().s[38]++;
export const reportError = (error, context) => {
  /* istanbul ignore next */
  cov_99pzqqwkf().f[6]++;
  cov_99pzqqwkf().s[39]++;
  Sentry.withScope(scope => {
    /* istanbul ignore next */
    cov_99pzqqwkf().f[7]++;
    cov_99pzqqwkf().s[40]++;
    if (context) {
      /* istanbul ignore next */
      cov_99pzqqwkf().b[17][0]++;
      cov_99pzqqwkf().s[41]++;
      scope.setContext('additional_info', context);
    } else
    /* istanbul ignore next */
    {
      cov_99pzqqwkf().b[17][1]++;
    }
    cov_99pzqqwkf().s[42]++;
    Sentry.captureException(error);
  });
};
/* istanbul ignore next */
cov_99pzqqwkf().s[43]++;
export const reportMessage = (message, level =
/* istanbul ignore next */
(cov_99pzqqwkf().b[18][0]++, 'info')) => {
  /* istanbul ignore next */
  cov_99pzqqwkf().f[8]++;
  cov_99pzqqwkf().s[44]++;
  Sentry.captureMessage(message, level);
};
/* istanbul ignore next */
cov_99pzqqwkf().s[45]++;
export const setUserContext = user => {
  /* istanbul ignore next */
  cov_99pzqqwkf().f[9]++;
  cov_99pzqqwkf().s[46]++;
  Sentry.setUser(user);
};
/* istanbul ignore next */
cov_99pzqqwkf().s[47]++;
export const addBreadcrumb = (message, category, data) => {
  /* istanbul ignore next */
  cov_99pzqqwkf().f[10]++;
  cov_99pzqqwkf().s[48]++;
  Sentry.addBreadcrumb({
    message,
    category:
    /* istanbul ignore next */
    (cov_99pzqqwkf().b[19][0]++, category) ||
    /* istanbul ignore next */
    (cov_99pzqqwkf().b[19][1]++, 'custom'),
    data,
    timestamp: Date.now() / 1000
  });
};
// Performance monitoring helpers
/* istanbul ignore next */
cov_99pzqqwkf().s[49]++;
export const startTransaction = (name, op) => {
  /* istanbul ignore next */
  cov_99pzqqwkf().f[11]++;
  cov_99pzqqwkf().s[50]++;
  return Sentry.startTransaction({
    name,
    op
  });
};
/* istanbul ignore next */
cov_99pzqqwkf().s[51]++;
export const measurePerformance = async (name, operation) => {
  /* istanbul ignore next */
  cov_99pzqqwkf().f[12]++;
  const transaction =
  /* istanbul ignore next */
  (cov_99pzqqwkf().s[52]++, Sentry.startTransaction({
    name,
    op: 'custom'
  }));
  /* istanbul ignore next */
  cov_99pzqqwkf().s[53]++;
  try {
    const result =
    /* istanbul ignore next */
    (cov_99pzqqwkf().s[54]++, await operation());
    /* istanbul ignore next */
    cov_99pzqqwkf().s[55]++;
    transaction.setStatus('ok');
    /* istanbul ignore next */
    cov_99pzqqwkf().s[56]++;
    return result;
  } catch (error) {
    /* istanbul ignore next */
    cov_99pzqqwkf().s[57]++;
    transaction.setStatus('internal_error');
    /* istanbul ignore next */
    cov_99pzqqwkf().s[58]++;
    throw error;
  } finally {
    /* istanbul ignore next */
    cov_99pzqqwkf().s[59]++;
    transaction.finish();
  }
};
// Database query monitoring
/* istanbul ignore next */
cov_99pzqqwkf().s[60]++;
export const monitorDatabaseQuery = async (queryName, query) => {
  /* istanbul ignore next */
  cov_99pzqqwkf().f[13]++;
  const span =
  /* istanbul ignore next */
  (cov_99pzqqwkf().s[61]++, Sentry.getCurrentHub().getScope()?.getTransaction()?.startChild({
    op: 'db.query',
    description: queryName
  }));
  /* istanbul ignore next */
  cov_99pzqqwkf().s[62]++;
  try {
    const result =
    /* istanbul ignore next */
    (cov_99pzqqwkf().s[63]++, await query());
    /* istanbul ignore next */
    cov_99pzqqwkf().s[64]++;
    span?.setStatus('ok');
    /* istanbul ignore next */
    cov_99pzqqwkf().s[65]++;
    return result;
  } catch (error) {
    /* istanbul ignore next */
    cov_99pzqqwkf().s[66]++;
    span?.setStatus('internal_error');
    /* istanbul ignore next */
    cov_99pzqqwkf().s[67]++;
    throw error;
  } finally {
    /* istanbul ignore next */
    cov_99pzqqwkf().s[68]++;
    span?.finish();
  }
};
export default Sentry;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,