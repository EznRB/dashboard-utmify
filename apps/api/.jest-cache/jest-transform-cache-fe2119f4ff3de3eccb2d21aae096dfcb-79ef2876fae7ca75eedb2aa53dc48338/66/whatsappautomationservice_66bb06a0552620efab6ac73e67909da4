1c6e7675a49f83ca7cdc268ed5f709d7
/* istanbul ignore next */
function cov_nyukq8s92() {
  var path = "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\services\\whatsapp-automation.service.ts";
  var hash = "5b4f9c93e16b01f47ef1a2b0a509c09fb5e98eac";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\services\\whatsapp-automation.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 17
        },
        end: {
          line: 6,
          column: 1
        }
      },
      "1": {
        start: {
          line: 2,
          column: 12
        },
        end: {
          line: 2,
          column: 28
        }
      },
      "2": {
        start: {
          line: 2,
          column: 34
        },
        end: {
          line: 2,
          column: 125
        }
      },
      "3": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 4,
          column: 150
        }
      },
      "4": {
        start: {
          line: 3,
          column: 79
        },
        end: {
          line: 3,
          column: 131
        }
      },
      "5": {
        start: {
          line: 4,
          column: 9
        },
        end: {
          line: 4,
          column: 150
        }
      },
      "6": {
        start: {
          line: 4,
          column: 22
        },
        end: {
          line: 4,
          column: 43
        }
      },
      "7": {
        start: {
          line: 4,
          column: 58
        },
        end: {
          line: 4,
          column: 150
        }
      },
      "8": {
        start: {
          line: 4,
          column: 81
        },
        end: {
          line: 4,
          column: 150
        }
      },
      "9": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 5,
          column: 66
        }
      },
      "10": {
        start: {
          line: 7,
          column: 17
        },
        end: {
          line: 9,
          column: 1
        }
      },
      "11": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 109
        }
      },
      "12": {
        start: {
          line: 8,
          column: 79
        },
        end: {
          line: 8,
          column: 109
        }
      },
      "13": {
        start: {
          line: 10,
          column: 14
        },
        end: {
          line: 12,
          column: 1
        }
      },
      "14": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 73
        }
      },
      "15": {
        start: {
          line: 11,
          column: 36
        },
        end: {
          line: 11,
          column: 71
        }
      },
      "16": {
        start: {
          line: 21,
          column: 32
        },
        end: {
          line: 448,
          column: 1
        }
      },
      "17": {
        start: {
          line: 25,
          column: 13
        },
        end: {
          line: 25,
          column: 57
        }
      },
      "18": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 29
        }
      },
      "19": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 47
        }
      },
      "20": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 43
        }
      },
      "21": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 44,
          column: 11
        }
      },
      "22": {
        start: {
          line: 50,
          column: 22
        },
        end: {
          line: 52,
          column: 9
        }
      },
      "23": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 55,
          column: 9
        }
      },
      "24": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 34
        }
      },
      "25": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 59,
          column: 11
        }
      },
      "26": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 68,
          column: 11
        }
      },
      "27": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 76,
          column: 11
        }
      },
      "28": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 107,
          column: 9
        }
      },
      "29": {
        start: {
          line: 84,
          column: 27
        },
        end: {
          line: 86,
          column: 14
        }
      },
      "30": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 90,
          column: 13
        }
      },
      "31": {
        start: {
          line: 88,
          column: 16
        },
        end: {
          line: 88,
          column: 95
        }
      },
      "32": {
        start: {
          line: 89,
          column: 16
        },
        end: {
          line: 89,
          column: 23
        }
      },
      "33": {
        start: {
          line: 92,
          column: 32
        },
        end: {
          line: 98,
          column: 14
        }
      },
      "34": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 103,
          column: 13
        }
      },
      "35": {
        start: {
          line: 100,
          column: 16
        },
        end: {
          line: 102,
          column: 17
        }
      },
      "36": {
        start: {
          line: 101,
          column: 20
        },
        end: {
          line: 101,
          column: 75
        }
      },
      "37": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 69
        }
      },
      "38": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 142,
          column: 9
        }
      },
      "39": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 71
        }
      },
      "40": {
        start: {
          line: 115,
          column: 28
        },
        end: {
          line: 115,
          column: 46
        }
      },
      "41": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 130,
          column: 13
        }
      },
      "42": {
        start: {
          line: 117,
          column: 16
        },
        end: {
          line: 129,
          column: 17
        }
      },
      "43": {
        start: {
          line: 119,
          column: 24
        },
        end: {
          line: 119,
          column: 102
        }
      },
      "44": {
        start: {
          line: 120,
          column: 24
        },
        end: {
          line: 120,
          column: 30
        }
      },
      "45": {
        start: {
          line: 122,
          column: 24
        },
        end: {
          line: 122,
          column: 103
        }
      },
      "46": {
        start: {
          line: 123,
          column: 24
        },
        end: {
          line: 123,
          column: 30
        }
      },
      "47": {
        start: {
          line: 125,
          column: 24
        },
        end: {
          line: 125,
          column: 62
        }
      },
      "48": {
        start: {
          line: 126,
          column: 24
        },
        end: {
          line: 126,
          column: 30
        }
      },
      "49": {
        start: {
          line: 128,
          column: 24
        },
        end: {
          line: 128,
          column: 80
        }
      },
      "50": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 138,
          column: 15
        }
      },
      "51": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 87
        }
      },
      "52": {
        start: {
          line: 148,
          column: 27
        },
        end: {
          line: 148,
          column: 81
        }
      },
      "53": {
        start: {
          line: 149,
          column: 24
        },
        end: {
          line: 149,
          column: 80
        }
      },
      "54": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 158,
          column: 9
        }
      },
      "55": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 157,
          column: 15
        }
      },
      "56": {
        start: {
          line: 164,
          column: 27
        },
        end: {
          line: 164,
          column: 81
        }
      },
      "57": {
        start: {
          line: 165,
          column: 31
        },
        end: {
          line: 165,
          column: 99
        }
      },
      "58": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 171,
          column: 11
        }
      },
      "59": {
        start: {
          line: 177,
          column: 24
        },
        end: {
          line: 177,
          column: 44
        }
      },
      "60": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 67
        }
      },
      "61": {
        start: {
          line: 178,
          column: 37
        },
        end: {
          line: 178,
          column: 65
        }
      },
      "62": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 186,
          column: 9
        }
      },
      "63": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 185,
          column: 24
        }
      },
      "64": {
        start: {
          line: 187,
          column: 44
        },
        end: {
          line: 187,
          column: 54
        }
      },
      "65": {
        start: {
          line: 188,
          column: 24
        },
        end: {
          line: 215,
          column: 10
        }
      },
      "66": {
        start: {
          line: 189,
          column: 55
        },
        end: {
          line: 189,
          column: 59
        }
      },
      "67": {
        start: {
          line: 190,
          column: 31
        },
        end: {
          line: 190,
          column: 70
        }
      },
      "68": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 214,
          column: 13
        }
      },
      "69": {
        start: {
          line: 193,
          column: 20
        },
        end: {
          line: 193,
          column: 48
        }
      },
      "70": {
        start: {
          line: 195,
          column: 20
        },
        end: {
          line: 195,
          column: 48
        }
      },
      "71": {
        start: {
          line: 197,
          column: 20
        },
        end: {
          line: 197,
          column: 62
        }
      },
      "72": {
        start: {
          line: 199,
          column: 20
        },
        end: {
          line: 199,
          column: 62
        }
      },
      "73": {
        start: {
          line: 201,
          column: 20
        },
        end: {
          line: 201,
          column: 63
        }
      },
      "74": {
        start: {
          line: 203,
          column: 20
        },
        end: {
          line: 203,
          column: 63
        }
      },
      "75": {
        start: {
          line: 205,
          column: 20
        },
        end: {
          line: 205,
          column: 98
        }
      },
      "76": {
        start: {
          line: 207,
          column: 20
        },
        end: {
          line: 207,
          column: 99
        }
      },
      "77": {
        start: {
          line: 209,
          column: 20
        },
        end: {
          line: 209,
          column: 75
        }
      },
      "78": {
        start: {
          line: 211,
          column: 20
        },
        end: {
          line: 211,
          column: 75
        }
      },
      "79": {
        start: {
          line: 213,
          column: 20
        },
        end: {
          line: 213,
          column: 33
        }
      },
      "80": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 216,
          column: 81
        }
      },
      "81": {
        start: {
          line: 216,
          column: 55
        },
        end: {
          line: 216,
          column: 56
        }
      },
      "82": {
        start: {
          line: 216,
          column: 78
        },
        end: {
          line: 216,
          column: 79
        }
      },
      "83": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 224,
          column: 9
        }
      },
      "84": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 223,
          column: 35
        }
      },
      "85": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 233,
          column: 9
        }
      },
      "86": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 231,
          column: 13
        }
      },
      "87": {
        start: {
          line: 228,
          column: 30
        },
        end: {
          line: 228,
          column: 58
        }
      },
      "88": {
        start: {
          line: 229,
          column: 30
        },
        end: {
          line: 229,
          column: 69
        }
      },
      "89": {
        start: {
          line: 230,
          column: 16
        },
        end: {
          line: 230,
          column: 78
        }
      },
      "90": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 232,
          column: 37
        }
      },
      "91": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 237,
          column: 9
        }
      },
      "92": {
        start: {
          line: 235,
          column: 26
        },
        end: {
          line: 235,
          column: 81
        }
      },
      "93": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 236,
          column: 74
        }
      },
      "94": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 238,
          column: 18
        }
      },
      "95": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 244,
          column: 75
        }
      },
      "96": {
        start: {
          line: 250,
          column: 26
        },
        end: {
          line: 250,
          column: 28
        }
      },
      "97": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 259,
          column: 11
        }
      },
      "98": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 258,
          column: 13
        }
      },
      "99": {
        start: {
          line: 253,
          column: 30
        },
        end: {
          line: 253,
          column: 48
        }
      },
      "100": {
        start: {
          line: 254,
          column: 16
        },
        end: {
          line: 254,
          column: 73
        }
      },
      "101": {
        start: {
          line: 257,
          column: 16
        },
        end: {
          line: 257,
          column: 39
        }
      },
      "102": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 260,
          column: 25
        }
      },
      "103": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 268,
          column: 16
        }
      },
      "104": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 267,
          column: 84
        }
      },
      "105": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 274,
          column: 59
        }
      },
      "106": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 314,
          column: 9
        }
      },
      "107": {
        start: {
          line: 277,
          column: 28
        },
        end: {
          line: 280,
          column: 14
        }
      },
      "108": {
        start: {
          line: 281,
          column: 12
        },
        end: {
          line: 310,
          column: 13
        }
      },
      "109": {
        start: {
          line: 282,
          column: 16
        },
        end: {
          line: 309,
          column: 17
        }
      },
      "110": {
        start: {
          line: 284,
          column: 39
        },
        end: {
          line: 290,
          column: 22
        }
      },
      "111": {
        start: {
          line: 291,
          column: 20
        },
        end: {
          line: 305,
          column: 21
        }
      },
      "112": {
        start: {
          line: 293,
          column: 42
        },
        end: {
          line: 293,
          column: 52
        }
      },
      "113": {
        start: {
          line: 294,
          column: 24
        },
        end: {
          line: 294,
          column: 67
        }
      },
      "114": {
        start: {
          line: 295,
          column: 24
        },
        end: {
          line: 295,
          column: 55
        }
      },
      "115": {
        start: {
          line: 296,
          column: 43
        },
        end: {
          line: 296,
          column: 103
        }
      },
      "116": {
        start: {
          line: 297,
          column: 24
        },
        end: {
          line: 304,
          column: 27
        }
      },
      "117": {
        start: {
          line: 308,
          column: 20
        },
        end: {
          line: 308,
          column: 103
        }
      },
      "118": {
        start: {
          line: 313,
          column: 12
        },
        end: {
          line: 313,
          column: 73
        }
      },
      "119": {
        start: {
          line: 322,
          column: 8
        },
        end: {
          line: 329,
          column: 10
        }
      },
      "120": {
        start: {
          line: 335,
          column: 35
        },
        end: {
          line: 434,
          column: 9
        }
      },
      "121": {
        start: {
          line: 435,
          column: 35
        },
        end: {
          line: 435,
          column: 37
        }
      },
      "122": {
        start: {
          line: 436,
          column: 8
        },
        end: {
          line: 444,
          column: 9
        }
      },
      "123": {
        start: {
          line: 437,
          column: 12
        },
        end: {
          line: 443,
          column: 13
        }
      },
      "124": {
        start: {
          line: 438,
          column: 32
        },
        end: {
          line: 438,
          column: 81
        }
      },
      "125": {
        start: {
          line: 439,
          column: 16
        },
        end: {
          line: 439,
          column: 49
        }
      },
      "126": {
        start: {
          line: 442,
          column: 16
        },
        end: {
          line: 442,
          column: 98
        }
      },
      "127": {
        start: {
          line: 445,
          column: 8
        },
        end: {
          line: 445,
          column: 107
        }
      },
      "128": {
        start: {
          line: 446,
          column: 8
        },
        end: {
          line: 446,
          column: 34
        }
      },
      "129": {
        start: {
          line: 449,
          column: 0
        },
        end: {
          line: 457,
          column: 68
        }
      },
      "130": {
        start: {
          line: 458,
          column: 0
        },
        end: {
          line: 462,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 1,
            column: 46
          },
          end: {
            line: 1,
            column: 47
          }
        },
        loc: {
          start: {
            line: 1,
            column: 87
          },
          end: {
            line: 6,
            column: 1
          }
        },
        line: 1
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 47
          }
        },
        loc: {
          start: {
            line: 7,
            column: 62
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 7
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 10,
            column: 40
          },
          end: {
            line: 10,
            column: 41
          }
        },
        loc: {
          start: {
            line: 10,
            column: 73
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 10
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 11,
            column: 11
          },
          end: {
            line: 11,
            column: 12
          }
        },
        loc: {
          start: {
            line: 11,
            column: 34
          },
          end: {
            line: 11,
            column: 73
          }
        },
        line: 11
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        loc: {
          start: {
            line: 26,
            column: 56
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        loc: {
          start: {
            line: 34,
            column: 48
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 34
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        loc: {
          start: {
            line: 49,
            column: 55
          },
          end: {
            line: 60,
            column: 5
          }
        },
        line: 49
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        },
        loc: {
          start: {
            line: 64,
            column: 53
          },
          end: {
            line: 69,
            column: 5
          }
        },
        line: 64
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        },
        loc: {
          start: {
            line: 73,
            column: 41
          },
          end: {
            line: 77,
            column: 5
          }
        },
        line: 73
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        },
        loc: {
          start: {
            line: 81,
            column: 53
          },
          end: {
            line: 108,
            column: 5
          }
        },
        line: 81
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 112,
            column: 4
          },
          end: {
            line: 112,
            column: 5
          }
        },
        loc: {
          start: {
            line: 112,
            column: 53
          },
          end: {
            line: 143,
            column: 5
          }
        },
        line: 112
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 147,
            column: 4
          },
          end: {
            line: 147,
            column: 5
          }
        },
        loc: {
          start: {
            line: 147,
            column: 66
          },
          end: {
            line: 159,
            column: 5
          }
        },
        line: 147
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 163,
            column: 4
          },
          end: {
            line: 163,
            column: 5
          }
        },
        loc: {
          start: {
            line: 163,
            column: 67
          },
          end: {
            line: 172,
            column: 5
          }
        },
        line: 163
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 176,
            column: 5
          }
        },
        loc: {
          start: {
            line: 176,
            column: 37
          },
          end: {
            line: 179,
            column: 5
          }
        },
        line: 176
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 178,
            column: 26
          },
          end: {
            line: 178,
            column: 27
          }
        },
        loc: {
          start: {
            line: 178,
            column: 37
          },
          end: {
            line: 178,
            column: 65
          }
        },
        line: 178
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 183,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        },
        loc: {
          start: {
            line: 183,
            column: 48
          },
          end: {
            line: 217,
            column: 5
          }
        },
        line: 183
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 188,
            column: 34
          },
          end: {
            line: 188,
            column: 35
          }
        },
        loc: {
          start: {
            line: 188,
            column: 44
          },
          end: {
            line: 215,
            column: 9
          }
        },
        line: 188
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 216,
            column: 50
          },
          end: {
            line: 216,
            column: 51
          }
        },
        loc: {
          start: {
            line: 216,
            column: 55
          },
          end: {
            line: 216,
            column: 56
          }
        },
        line: 216
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 216,
            column: 73
          },
          end: {
            line: 216,
            column: 74
          }
        },
        loc: {
          start: {
            line: 216,
            column: 78
          },
          end: {
            line: 216,
            column: 79
          }
        },
        line: 216
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 221,
            column: 4
          },
          end: {
            line: 221,
            column: 5
          }
        },
        loc: {
          start: {
            line: 221,
            column: 52
          },
          end: {
            line: 239,
            column: 5
          }
        },
        line: 221
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 243,
            column: 4
          },
          end: {
            line: 243,
            column: 5
          }
        },
        loc: {
          start: {
            line: 243,
            column: 50
          },
          end: {
            line: 245,
            column: 5
          }
        },
        line: 243
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 249,
            column: 4
          },
          end: {
            line: 249,
            column: 5
          }
        },
        loc: {
          start: {
            line: 249,
            column: 55
          },
          end: {
            line: 261,
            column: 5
          }
        },
        line: 249
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 251,
            column: 47
          },
          end: {
            line: 251,
            column: 48
          }
        },
        loc: {
          start: {
            line: 251,
            column: 65
          },
          end: {
            line: 259,
            column: 9
          }
        },
        line: 251
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 265,
            column: 4
          },
          end: {
            line: 265,
            column: 5
          }
        },
        loc: {
          start: {
            line: 265,
            column: 30
          },
          end: {
            line: 269,
            column: 5
          }
        },
        line: 265
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 266,
            column: 38
          },
          end: {
            line: 266,
            column: 39
          }
        },
        loc: {
          start: {
            line: 266,
            column: 56
          },
          end: {
            line: 268,
            column: 9
          }
        },
        line: 266
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 273,
            column: 4
          },
          end: {
            line: 273,
            column: 5
          }
        },
        loc: {
          start: {
            line: 273,
            column: 31
          },
          end: {
            line: 315,
            column: 5
          }
        },
        line: 273
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 319,
            column: 4
          },
          end: {
            line: 319,
            column: 5
          }
        },
        loc: {
          start: {
            line: 319,
            column: 48
          },
          end: {
            line: 330,
            column: 5
          }
        },
        line: 319
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 334,
            column: 4
          },
          end: {
            line: 334,
            column: 5
          }
        },
        loc: {
          start: {
            line: 334,
            column: 45
          },
          end: {
            line: 447,
            column: 5
          }
        },
        line: 334
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 1,
            column: 17
          },
          end: {
            line: 6,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1,
            column: 18
          },
          end: {
            line: 1,
            column: 22
          }
        }, {
          start: {
            line: 1,
            column: 26
          },
          end: {
            line: 1,
            column: 41
          }
        }, {
          start: {
            line: 1,
            column: 46
          },
          end: {
            line: 6,
            column: 1
          }
        }],
        line: 1
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 34
          },
          end: {
            line: 2,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 42
          },
          end: {
            line: 2,
            column: 48
          }
        }, {
          start: {
            line: 2,
            column: 51
          },
          end: {
            line: 2,
            column: 125
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 2,
            column: 51
          },
          end: {
            line: 2,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 67
          },
          end: {
            line: 2,
            column: 118
          }
        }, {
          start: {
            line: 2,
            column: 121
          },
          end: {
            line: 2,
            column: 125
          }
        }],
        line: 2
      },
      "3": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 4,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 4,
            column: 150
          }
        }, {
          start: {
            line: 4,
            column: 9
          },
          end: {
            line: 4,
            column: 150
          }
        }],
        line: 3
      },
      "4": {
        loc: {
          start: {
            line: 3,
            column: 8
          },
          end: {
            line: 3,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 8
          },
          end: {
            line: 3,
            column: 35
          }
        }, {
          start: {
            line: 3,
            column: 39
          },
          end: {
            line: 3,
            column: 77
          }
        }],
        line: 3
      },
      "5": {
        loc: {
          start: {
            line: 4,
            column: 58
          },
          end: {
            line: 4,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 58
          },
          end: {
            line: 4,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 4
      },
      "6": {
        loc: {
          start: {
            line: 4,
            column: 85
          },
          end: {
            line: 4,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 86
          },
          end: {
            line: 4,
            column: 143
          }
        }, {
          start: {
            line: 4,
            column: 148
          },
          end: {
            line: 4,
            column: 149
          }
        }],
        line: 4
      },
      "7": {
        loc: {
          start: {
            line: 4,
            column: 86
          },
          end: {
            line: 4,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 4,
            column: 94
          },
          end: {
            line: 4,
            column: 98
          }
        }, {
          start: {
            line: 4,
            column: 101
          },
          end: {
            line: 4,
            column: 143
          }
        }],
        line: 4
      },
      "8": {
        loc: {
          start: {
            line: 4,
            column: 101
          },
          end: {
            line: 4,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 4,
            column: 109
          },
          end: {
            line: 4,
            column: 126
          }
        }, {
          start: {
            line: 4,
            column: 129
          },
          end: {
            line: 4,
            column: 143
          }
        }],
        line: 4
      },
      "9": {
        loc: {
          start: {
            line: 5,
            column: 11
          },
          end: {
            line: 5,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 11
          },
          end: {
            line: 5,
            column: 16
          }
        }, {
          start: {
            line: 5,
            column: 20
          },
          end: {
            line: 5,
            column: 21
          }
        }, {
          start: {
            line: 5,
            column: 25
          },
          end: {
            line: 5,
            column: 62
          }
        }],
        line: 5
      },
      "10": {
        loc: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 9,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 7,
            column: 18
          },
          end: {
            line: 7,
            column: 22
          }
        }, {
          start: {
            line: 7,
            column: 26
          },
          end: {
            line: 7,
            column: 41
          }
        }, {
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 9,
            column: 1
          }
        }],
        line: 7
      },
      "11": {
        loc: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 109
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 109
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 8
      },
      "12": {
        loc: {
          start: {
            line: 8,
            column: 8
          },
          end: {
            line: 8,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 8
          },
          end: {
            line: 8,
            column: 35
          }
        }, {
          start: {
            line: 8,
            column: 39
          },
          end: {
            line: 8,
            column: 77
          }
        }],
        line: 8
      },
      "13": {
        loc: {
          start: {
            line: 10,
            column: 14
          },
          end: {
            line: 12,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 10,
            column: 15
          },
          end: {
            line: 10,
            column: 19
          }
        }, {
          start: {
            line: 10,
            column: 23
          },
          end: {
            line: 10,
            column: 35
          }
        }, {
          start: {
            line: 10,
            column: 40
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 10
      },
      "14": {
        loc: {
          start: {
            line: 42,
            column: 26
          },
          end: {
            line: 42,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 26
          },
          end: {
            line: 42,
            column: 44
          }
        }, {
          start: {
            line: 42,
            column: 48
          },
          end: {
            line: 42,
            column: 52
          }
        }],
        line: 42
      },
      "15": {
        loc: {
          start: {
            line: 49,
            column: 35
          },
          end: {
            line: 49,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 49,
            column: 48
          },
          end: {
            line: 49,
            column: 53
          }
        }],
        line: 49
      },
      "16": {
        loc: {
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "17": {
        loc: {
          start: {
            line: 87,
            column: 12
          },
          end: {
            line: 90,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 12
          },
          end: {
            line: 90,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "18": {
        loc: {
          start: {
            line: 87,
            column: 16
          },
          end: {
            line: 87,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 87,
            column: 16
          },
          end: {
            line: 87,
            column: 23
          }
        }, {
          start: {
            line: 87,
            column: 27
          },
          end: {
            line: 87,
            column: 43
          }
        }],
        line: 87
      },
      "19": {
        loc: {
          start: {
            line: 100,
            column: 16
          },
          end: {
            line: 102,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 16
          },
          end: {
            line: 102,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      },
      "20": {
        loc: {
          start: {
            line: 116,
            column: 33
          },
          end: {
            line: 116,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 33
          },
          end: {
            line: 116,
            column: 48
          }
        }, {
          start: {
            line: 116,
            column: 52
          },
          end: {
            line: 116,
            column: 54
          }
        }],
        line: 116
      },
      "21": {
        loc: {
          start: {
            line: 117,
            column: 16
          },
          end: {
            line: 129,
            column: 17
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 118,
            column: 20
          },
          end: {
            line: 120,
            column: 30
          }
        }, {
          start: {
            line: 121,
            column: 20
          },
          end: {
            line: 123,
            column: 30
          }
        }, {
          start: {
            line: 124,
            column: 20
          },
          end: {
            line: 126,
            column: 30
          }
        }, {
          start: {
            line: 127,
            column: 20
          },
          end: {
            line: 128,
            column: 80
          }
        }],
        line: 117
      },
      "22": {
        loc: {
          start: {
            line: 165,
            column: 58
          },
          end: {
            line: 165,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 165,
            column: 58
          },
          end: {
            line: 165,
            column: 79
          }
        }, {
          start: {
            line: 165,
            column: 83
          },
          end: {
            line: 165,
            column: 85
          }
        }],
        line: 165
      },
      "23": {
        loc: {
          start: {
            line: 177,
            column: 24
          },
          end: {
            line: 177,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 177,
            column: 24
          },
          end: {
            line: 177,
            column: 36
          }
        }, {
          start: {
            line: 177,
            column: 40
          },
          end: {
            line: 177,
            column: 44
          }
        }],
        line: 177
      },
      "24": {
        loc: {
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 184
      },
      "25": {
        loc: {
          start: {
            line: 184,
            column: 12
          },
          end: {
            line: 184,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 184,
            column: 12
          },
          end: {
            line: 184,
            column: 23
          }
        }, {
          start: {
            line: 184,
            column: 27
          },
          end: {
            line: 184,
            column: 44
          }
        }],
        line: 184
      },
      "26": {
        loc: {
          start: {
            line: 187,
            column: 23
          },
          end: {
            line: 187,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 187,
            column: 34
          },
          end: {
            line: 187,
            column: 39
          }
        }],
        line: 187
      },
      "27": {
        loc: {
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 214,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 192,
            column: 16
          },
          end: {
            line: 193,
            column: 48
          }
        }, {
          start: {
            line: 194,
            column: 16
          },
          end: {
            line: 195,
            column: 48
          }
        }, {
          start: {
            line: 196,
            column: 16
          },
          end: {
            line: 197,
            column: 62
          }
        }, {
          start: {
            line: 198,
            column: 16
          },
          end: {
            line: 199,
            column: 62
          }
        }, {
          start: {
            line: 200,
            column: 16
          },
          end: {
            line: 201,
            column: 63
          }
        }, {
          start: {
            line: 202,
            column: 16
          },
          end: {
            line: 203,
            column: 63
          }
        }, {
          start: {
            line: 204,
            column: 16
          },
          end: {
            line: 205,
            column: 98
          }
        }, {
          start: {
            line: 206,
            column: 16
          },
          end: {
            line: 207,
            column: 99
          }
        }, {
          start: {
            line: 208,
            column: 16
          },
          end: {
            line: 209,
            column: 75
          }
        }, {
          start: {
            line: 210,
            column: 16
          },
          end: {
            line: 211,
            column: 75
          }
        }, {
          start: {
            line: 212,
            column: 16
          },
          end: {
            line: 213,
            column: 33
          }
        }],
        line: 191
      },
      "28": {
        loc: {
          start: {
            line: 209,
            column: 27
          },
          end: {
            line: 209,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 209,
            column: 27
          },
          end: {
            line: 209,
            column: 51
          }
        }, {
          start: {
            line: 209,
            column: 55
          },
          end: {
            line: 209,
            column: 74
          }
        }],
        line: 209
      },
      "29": {
        loc: {
          start: {
            line: 211,
            column: 27
          },
          end: {
            line: 211,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 211,
            column: 27
          },
          end: {
            line: 211,
            column: 51
          }
        }, {
          start: {
            line: 211,
            column: 55
          },
          end: {
            line: 211,
            column: 74
          }
        }],
        line: 211
      },
      "30": {
        loc: {
          start: {
            line: 216,
            column: 15
          },
          end: {
            line: 216,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 216,
            column: 36
          },
          end: {
            line: 216,
            column: 57
          }
        }, {
          start: {
            line: 216,
            column: 60
          },
          end: {
            line: 216,
            column: 80
          }
        }],
        line: 216
      },
      "31": {
        loc: {
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 224,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 224,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 222
      },
      "32": {
        loc: {
          start: {
            line: 225,
            column: 8
          },
          end: {
            line: 233,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 225,
            column: 8
          },
          end: {
            line: 233,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 225
      },
      "33": {
        loc: {
          start: {
            line: 227,
            column: 12
          },
          end: {
            line: 231,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 227,
            column: 12
          },
          end: {
            line: 231,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 227
      },
      "34": {
        loc: {
          start: {
            line: 227,
            column: 16
          },
          end: {
            line: 227,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 227,
            column: 16
          },
          end: {
            line: 227,
            column: 48
          }
        }, {
          start: {
            line: 227,
            column: 52
          },
          end: {
            line: 227,
            column: 82
          }
        }],
        line: 227
      },
      "35": {
        loc: {
          start: {
            line: 230,
            column: 23
          },
          end: {
            line: 230,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 230,
            column: 46
          },
          end: {
            line: 230,
            column: 51
          }
        }, {
          start: {
            line: 230,
            column: 54
          },
          end: {
            line: 230,
            column: 77
          }
        }],
        line: 230
      },
      "36": {
        loc: {
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 237,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 237,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "37": {
        loc: {
          start: {
            line: 236,
            column: 19
          },
          end: {
            line: 236,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 236,
            column: 42
          },
          end: {
            line: 236,
            column: 47
          }
        }, {
          start: {
            line: 236,
            column: 50
          },
          end: {
            line: 236,
            column: 73
          }
        }],
        line: 236
      },
      "38": {
        loc: {
          start: {
            line: 252,
            column: 12
          },
          end: {
            line: 258,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 252,
            column: 12
          },
          end: {
            line: 258,
            column: 13
          }
        }, {
          start: {
            line: 256,
            column: 17
          },
          end: {
            line: 258,
            column: 13
          }
        }],
        line: 252
      },
      "39": {
        loc: {
          start: {
            line: 252,
            column: 16
          },
          end: {
            line: 252,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 252,
            column: 16
          },
          end: {
            line: 252,
            column: 41
          }
        }, {
          start: {
            line: 252,
            column: 45
          },
          end: {
            line: 252,
            column: 67
          }
        }, {
          start: {
            line: 252,
            column: 71
          },
          end: {
            line: 252,
            column: 91
          }
        }],
        line: 252
      },
      "40": {
        loc: {
          start: {
            line: 267,
            column: 19
          },
          end: {
            line: 267,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 267,
            column: 59
          },
          end: {
            line: 267,
            column: 71
          }
        }, {
          start: {
            line: 267,
            column: 74
          },
          end: {
            line: 267,
            column: 83
          }
        }],
        line: 267
      },
      "41": {
        loc: {
          start: {
            line: 267,
            column: 19
          },
          end: {
            line: 267,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 267,
            column: 19
          },
          end: {
            line: 267,
            column: 26
          }
        }, {
          start: {
            line: 267,
            column: 30
          },
          end: {
            line: 267,
            column: 56
          }
        }],
        line: 267
      },
      "42": {
        loc: {
          start: {
            line: 291,
            column: 20
          },
          end: {
            line: 305,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 291,
            column: 20
          },
          end: {
            line: 305,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 291
      },
      "43": {
        loc: {
          start: {
            line: 456,
            column: 36
          },
          end: {
            line: 456,
            column: 120
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 456,
            column: 109
          },
          end: {
            line: 456,
            column: 111
          }
        }, {
          start: {
            line: 456,
            column: 114
          },
          end: {
            line: 456,
            column: 120
          }
        }],
        line: 456
      },
      "44": {
        loc: {
          start: {
            line: 456,
            column: 49
          },
          end: {
            line: 456,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 456,
            column: 49
          },
          end: {
            line: 456,
            column: 79
          }
        }, {
          start: {
            line: 456,
            column: 83
          },
          end: {
            line: 456,
            column: 90
          }
        }],
        line: 456
      },
      "45": {
        loc: {
          start: {
            line: 461,
            column: 37
          },
          end: {
            line: 461,
            column: 133
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 461,
            column: 122
          },
          end: {
            line: 461,
            column: 124
          }
        }, {
          start: {
            line: 461,
            column: 127
          },
          end: {
            line: 461,
            column: 133
          }
        }],
        line: 461
      },
      "46": {
        loc: {
          start: {
            line: 461,
            column: 50
          },
          end: {
            line: 461,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 461,
            column: 50
          },
          end: {
            line: 461,
            column: 86
          }
        }, {
          start: {
            line: 461,
            column: 90
          },
          end: {
            line: 461,
            column: 103
          }
        }],
        line: 461
      },
      "47": {
        loc: {
          start: {
            line: 461,
            column: 135
          },
          end: {
            line: 461,
            column: 251
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 461,
            column: 240
          },
          end: {
            line: 461,
            column: 242
          }
        }, {
          start: {
            line: 461,
            column: 245
          },
          end: {
            line: 461,
            column: 251
          }
        }],
        line: 461
      },
      "48": {
        loc: {
          start: {
            line: 461,
            column: 148
          },
          end: {
            line: 461,
            column: 221
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 461,
            column: 148
          },
          end: {
            line: 461,
            column: 194
          }
        }, {
          start: {
            line: 461,
            column: 198
          },
          end: {
            line: 461,
            column: 221
          }
        }],
        line: 461
      },
      "49": {
        loc: {
          start: {
            line: 461,
            column: 253
          },
          end: {
            line: 461,
            column: 333
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 461,
            column: 322
          },
          end: {
            line: 461,
            column: 324
          }
        }, {
          start: {
            line: 461,
            column: 327
          },
          end: {
            line: 461,
            column: 333
          }
        }],
        line: 461
      },
      "50": {
        loc: {
          start: {
            line: 461,
            column: 266
          },
          end: {
            line: 461,
            column: 303
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 461,
            column: 266
          },
          end: {
            line: 461,
            column: 294
          }
        }, {
          start: {
            line: 461,
            column: 298
          },
          end: {
            line: 461,
            column: 303
          }
        }],
        line: 461
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0, 0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0],
      "27": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\services\\whatsapp-automation.service.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\services\\whatsapp-automation.service.ts"],
      sourcesContent: ["import { Injectable, Logger } from '@nestjs/common';\nimport { InjectQueue } from '@nestjs/bull';\nimport { Queue } from 'bull';\nimport { Cron, CronExpression } from '@nestjs/schedule';\nimport { PrismaService } from './prisma.service';\nimport { WhatsAppTemplateService } from './whatsapp-template.service';\nimport { WhatsAppAutomation, Prisma } from '@prisma/client';\n\nexport interface AutomationTrigger {\n  type: 'CONVERSION' | 'BUDGET_ALERT' | 'DAILY_REPORT' | 'WELCOME' | 'KEYWORD';\n  data: any;\n}\n\nexport interface CreateAutomationDto {\n  name: string;\n  triggerType: string;\n  conditions: Record<string, any>;\n  actions: Record<string, any>;\n  isActive?: boolean;\n}\n\n@Injectable()\nexport class WhatsAppAutomationService {\n  private readonly logger = new Logger(WhatsAppAutomationService.name);\n\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly templateService: WhatsAppTemplateService,\n    @InjectQueue('whatsapp') private readonly whatsappQueue: Queue,\n  ) {}\n\n  /**\n   * Create new automation\n   */\n  async createAutomation(\n    configId: string,\n    createDto: CreateAutomationDto,\n  ): Promise<WhatsAppAutomation> {\n    return this.prisma.whatsAppAutomation.create({\n      data: {\n        configId,\n        name: createDto.name,\n        triggerType: createDto.triggerType,\n        conditions: createDto.conditions,\n        actions: createDto.actions,\n        isActive: createDto.isActive ?? true,\n      },\n    });\n  }\n\n  /**\n   * Get automations for config\n   */\n  async getAutomations(\n    configId: string,\n    activeOnly: boolean = false,\n  ): Promise<WhatsAppAutomation[]> {\n    const where: Prisma.WhatsAppAutomationWhereInput = {\n      configId,\n    };\n\n    if (activeOnly) {\n      where.isActive = true;\n    }\n\n    return this.prisma.whatsAppAutomation.findMany({\n      where,\n      orderBy: { createdAt: 'desc' },\n    });\n  }\n\n  /**\n   * Update automation\n   */\n  async updateAutomation(\n    automationId: string,\n    updateData: Partial<CreateAutomationDto>,\n  ): Promise<WhatsAppAutomation> {\n    return this.prisma.whatsAppAutomation.update({\n      where: { id: automationId },\n      data: updateData,\n    });\n  }\n\n  /**\n   * Delete automation\n   */\n  async deleteAutomation(automationId: string): Promise<void> {\n    await this.prisma.whatsAppAutomation.delete({\n      where: { id: automationId },\n    });\n  }\n\n  /**\n   * Trigger automation based on event\n   */\n  async triggerAutomation(\n    organizationId: string,\n    trigger: AutomationTrigger,\n  ): Promise<void> {\n    try {\n      // Get WhatsApp config for organization\n      const config = await this.prisma.whatsAppConfig.findUnique({\n        where: { userId: organizationId },\n      });\n\n      if (!config || !config.isActive) {\n        this.logger.warn(`WhatsApp not configured for organization ${organizationId}`);\n        return;\n      }\n\n      // Get matching automations\n      const automations = await this.prisma.whatsAppAutomation.findMany({\n        where: {\n          configId: config.id,\n          triggerType: trigger.type,\n          isActive: true,\n        },\n      });\n\n      for (const automation of automations) {\n        if (this.evaluateConditions(automation.conditions, trigger.data)) {\n          await this.executeAutomation(automation, trigger.data);\n        }\n      }\n    } catch (error) {\n      this.logger.error(`Error triggering automation:`, error);\n    }\n  }\n\n  /**\n   * Execute automation actions\n   */\n  private async executeAutomation(\n    automation: WhatsAppAutomation,\n    triggerData: any,\n  ): Promise<void> {\n    try {\n      this.logger.log(`Executing automation ${automation.name}`);\n\n      const actions = automation.actions as any;\n\n      for (const action of actions.actions || []) {\n        switch (action.type) {\n          case 'send_message':\n            await this.executeSendMessageAction(automation.configId, action, triggerData);\n            break;\n          case 'send_template':\n            await this.executeSendTemplateAction(automation.configId, action, triggerData);\n            break;\n          case 'delay':\n            await this.executeDelayAction(action);\n            break;\n          default:\n            this.logger.warn(`Unknown action type: ${action.type}`);\n        }\n      }\n\n      // Update automation stats\n      await this.prisma.whatsAppAutomation.update({\n        where: { id: automation.id },\n        data: {\n          runCount: { increment: 1 },\n          lastRun: new Date(),\n        },\n      });\n    } catch (error) {\n      this.logger.error(`Error executing automation ${automation.name}:`, error);\n    }\n  }\n\n  /**\n   * Execute send message action\n   */\n  private async executeSendMessageAction(\n    configId: string,\n    action: any,\n    triggerData: any,\n  ): Promise<void> {\n    const recipients = this.resolveRecipients(action.recipients, triggerData);\n    const message = this.processMessageTemplate(action.message, triggerData);\n\n    for (const recipient of recipients) {\n      await this.whatsappQueue.add('send-message', {\n        organizationId: configId,\n        message: {\n          to: recipient,\n          body: message,\n        },\n      });\n    }\n  }\n\n  /**\n   * Execute send template action\n   */\n  private async executeSendTemplateAction(\n    configId: string,\n    action: any,\n    triggerData: any,\n  ): Promise<void> {\n    const recipients = this.resolveRecipients(action.recipients, triggerData);\n    const templateParams = this.processTemplateParams(action.templateParams || {}, triggerData);\n\n    await this.whatsappQueue.add('send-template', {\n      organizationId: configId,\n      recipients,\n      templateName: action.templateName,\n      templateParams,\n    });\n  }\n\n  /**\n   * Execute delay action\n   */\n  private async executeDelayAction(action: any): Promise<void> {\n    const delayMs = action.delay || 1000;\n    await new Promise(resolve => setTimeout(resolve, delayMs));\n  }\n\n  /**\n   * Evaluate automation conditions\n   */\n  private evaluateConditions(conditions: any, triggerData: any): boolean {\n    if (!conditions || !conditions.rules) {\n      return true; // No conditions means always execute\n    }\n\n    const { rules, operator = 'AND' } = conditions;\n\n    const results = rules.map((rule: any) => {\n      const { field, operator: ruleOp, value } = rule;\n      const fieldValue = this.getNestedValue(triggerData, field);\n\n      switch (ruleOp) {\n        case 'equals':\n          return fieldValue === value;\n        case 'not_equals':\n          return fieldValue !== value;\n        case 'greater_than':\n          return Number(fieldValue) > Number(value);\n        case 'less_than':\n          return Number(fieldValue) < Number(value);\n        case 'greater_equal':\n          return Number(fieldValue) >= Number(value);\n        case 'less_equal':\n          return Number(fieldValue) <= Number(value);\n        case 'contains':\n          return String(fieldValue).toLowerCase().includes(String(value).toLowerCase());\n        case 'not_contains':\n          return !String(fieldValue).toLowerCase().includes(String(value).toLowerCase());\n        case 'exists':\n          return fieldValue !== undefined && fieldValue !== null;\n        case 'not_exists':\n          return fieldValue === undefined || fieldValue === null;\n        default:\n          return false;\n      }\n    });\n\n    return operator === 'AND' ? results.every(r => r) : results.some(r => r);\n  }\n\n  /**\n   * Resolve recipients from action configuration\n   */\n  private resolveRecipients(recipientConfig: any, triggerData: any): string[] {\n    if (Array.isArray(recipientConfig)) {\n      return recipientConfig;\n    }\n\n    if (typeof recipientConfig === 'string') {\n      // Check if it's a field reference\n      if (recipientConfig.startsWith('{{') && recipientConfig.endsWith('}}')) {\n        const field = recipientConfig.slice(2, -2);\n        const value = this.getNestedValue(triggerData, field);\n        return Array.isArray(value) ? value : [value].filter(Boolean);\n      }\n      return [recipientConfig];\n    }\n\n    if (recipientConfig.type === 'field') {\n      const value = this.getNestedValue(triggerData, recipientConfig.field);\n      return Array.isArray(value) ? value : [value].filter(Boolean);\n    }\n\n    return [];\n  }\n\n  /**\n   * Process message template with trigger data\n   */\n  private processMessageTemplate(template: string, triggerData: any): string {\n    return this.templateService.processTemplate(template, triggerData);\n  }\n\n  /**\n   * Process template parameters with trigger data\n   */\n  private processTemplateParams(\n    templateParams: Record<string, any>,\n    triggerData: any,\n  ): Record<string, any> {\n    const processed: Record<string, any> = {};\n\n    Object.entries(templateParams).forEach(([key, value]) => {\n      if (typeof value === 'string' && value.startsWith('{{') && value.endsWith('}}')) {\n        const field = value.slice(2, -2);\n        processed[key] = this.getNestedValue(triggerData, field);\n      } else {\n        processed[key] = value;\n      }\n    });\n\n    return processed;\n  }\n\n  /**\n   * Get nested value from object using dot notation\n   */\n  private getNestedValue(obj: any, path: string): any {\n    return path.split('.').reduce((current, key) => {\n      return current && current[key] !== undefined ? current[key] : undefined;\n    }, obj);\n  }\n\n  /**\n   * Daily report automation (runs at 9 AM)\n   */\n  @Cron('0 9 * * *', {\n    name: 'daily-whatsapp-reports',\n    timeZone: 'America/Sao_Paulo',\n  })\n  async handleDailyReports(): Promise<void> {\n    this.logger.log('Starting daily WhatsApp reports');\n\n    try {\n      // Get all active WhatsApp configs\n      const configs = await this.prisma.whatsAppConfig.findMany({\n        where: { isActive: true },\n        include: { user: true },\n      });\n\n      for (const config of configs) {\n        try {\n          // Check if user has daily report automation enabled\n          const automation = await this.prisma.whatsAppAutomation.findFirst({\n            where: {\n              configId: config.id,\n              triggerType: 'DAILY_REPORT',\n              isActive: true,\n            },\n          });\n\n          if (automation) {\n            // Get yesterday's metrics\n            const yesterday = new Date();\n            yesterday.setDate(yesterday.getDate() - 1);\n            yesterday.setHours(0, 0, 0, 0);\n\n            const reportData = await this.generateDailyReportData(config.userId, yesterday);\n\n            await this.whatsappQueue.add('automation-trigger', {\n              organizationId: config.userId,\n              triggerType: 'daily_report',\n              data: {\n                phoneNumbers: [config.phoneNumber].filter(Boolean),\n                reportData,\n              },\n            });\n          }\n        } catch (error) {\n          this.logger.error(`Error processing daily report for config ${config.id}:`, error);\n        }\n      }\n    } catch (error) {\n      this.logger.error('Error in daily reports cron job:', error);\n    }\n  }\n\n  /**\n   * Generate daily report data\n   */\n  private async generateDailyReportData(userId: string, date: Date): Promise<any> {\n    // This would integrate with your existing metrics system\n    // For now, returning mock data structure\n    return {\n      sales: '1,250.00',\n      conversions: 15,\n      spent: '850.00',\n      roi: '147',\n      leads: 42,\n      date: date.toLocaleDateString('pt-BR'),\n    };\n  }\n\n  /**\n   * Create default automations for new config\n   */\n  async createDefaultAutomations(configId: string): Promise<WhatsAppAutomation[]> {\n    const defaultAutomations = [\n      {\n        name: 'Notifica\xE7\xE3o de Convers\xE3o',\n        triggerType: 'CONVERSION',\n        conditions: {\n          rules: [\n            {\n              field: 'value',\n              operator: 'greater_than',\n              value: 0,\n            },\n          ],\n          operator: 'AND',\n        },\n        actions: {\n          actions: [\n            {\n              type: 'send_template',\n              templateName: 'conversion_notification',\n              recipients: '{{phoneNumber}}',\n              templateParams: {\n                value: '{{value}}',\n                campaign_name: '{{campaignName}}',\n                source: '{{source}}',\n                timestamp: '{{timestamp}}',\n              },\n            },\n          ],\n        },\n      },\n      {\n        name: 'Alerta de Or\xE7amento (80%)',\n        triggerType: 'BUDGET_ALERT',\n        conditions: {\n          rules: [\n            {\n              field: 'percentage',\n              operator: 'greater_equal',\n              value: 80,\n            },\n          ],\n          operator: 'AND',\n        },\n        actions: {\n          actions: [\n            {\n              type: 'send_template',\n              templateName: 'budget_alert',\n              recipients: '{{phoneNumber}}',\n              templateParams: {\n                campaign_name: '{{campaignName}}',\n                spent: '{{spent}}',\n                budget: '{{budget}}',\n                percentage: '{{percentage}}',\n                alert_message: '{{alertMessage}}',\n              },\n            },\n          ],\n        },\n      },\n      {\n        name: 'Relat\xF3rio Di\xE1rio',\n        triggerType: 'DAILY_REPORT',\n        conditions: {},\n        actions: {\n          actions: [\n            {\n              type: 'send_template',\n              templateName: 'daily_report',\n              recipients: { type: 'field', field: 'phoneNumbers' },\n              templateParams: {\n                date: '{{date}}',\n                sales: '{{sales}}',\n                conversions: '{{conversions}}',\n                spent: '{{spent}}',\n                roi: '{{roi}}',\n                leads: '{{leads}}',\n              },\n            },\n          ],\n        },\n      },\n      {\n        name: 'Mensagem de Boas-vindas',\n        triggerType: 'WELCOME',\n        conditions: {},\n        actions: {\n          actions: [\n            {\n              type: 'send_template',\n              templateName: 'welcome_message',\n              recipients: '{{phoneNumber}}',\n              templateParams: {\n                name: '{{name}}',\n              },\n            },\n          ],\n        },\n      },\n    ];\n\n    const createdAutomations: WhatsAppAutomation[] = [];\n\n    for (const automation of defaultAutomations) {\n      try {\n        const created = await this.createAutomation(configId, automation);\n        createdAutomations.push(created);\n      } catch (error) {\n        this.logger.error(`Error creating default automation ${automation.name}:`, error);\n      }\n    }\n\n    this.logger.log(`Created ${createdAutomations.length} default automations for config ${configId}`);\n    return createdAutomations;\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5b4f9c93e16b01f47ef1a2b0a509c09fb5e98eac"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_nyukq8s92 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_nyukq8s92();
var __decorate =
/* istanbul ignore next */
(cov_nyukq8s92().s[0]++,
/* istanbul ignore next */
(cov_nyukq8s92().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_nyukq8s92().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_nyukq8s92().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_nyukq8s92().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_nyukq8s92().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_nyukq8s92().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_nyukq8s92().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_nyukq8s92().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_nyukq8s92().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_nyukq8s92().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_nyukq8s92().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_nyukq8s92().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_nyukq8s92().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_nyukq8s92().b[3][0]++;
    cov_nyukq8s92().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_nyukq8s92().b[3][1]++;
    cov_nyukq8s92().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_nyukq8s92().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_nyukq8s92().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_nyukq8s92().b[5][0]++;
        cov_nyukq8s92().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_nyukq8s92().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_nyukq8s92().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_nyukq8s92().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_nyukq8s92().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_nyukq8s92().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_nyukq8s92().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_nyukq8s92().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_nyukq8s92().s[9]++;
  return /* istanbul ignore next */(cov_nyukq8s92().b[9][0]++, c > 3) &&
  /* istanbul ignore next */
  (cov_nyukq8s92().b[9][1]++, r) &&
  /* istanbul ignore next */
  (cov_nyukq8s92().b[9][2]++, Object.defineProperty(target, key, r)), r;
}));
var __metadata =
/* istanbul ignore next */
(cov_nyukq8s92().s[10]++,
/* istanbul ignore next */
(cov_nyukq8s92().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_nyukq8s92().b[10][1]++, this.__metadata) ||
/* istanbul ignore next */
(cov_nyukq8s92().b[10][2]++, function (k, v) {
  /* istanbul ignore next */
  cov_nyukq8s92().f[1]++;
  cov_nyukq8s92().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_nyukq8s92().b[12][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_nyukq8s92().b[12][1]++, typeof Reflect.metadata === "function")) {
    /* istanbul ignore next */
    cov_nyukq8s92().b[11][0]++;
    cov_nyukq8s92().s[12]++;
    return Reflect.metadata(k, v);
  } else
  /* istanbul ignore next */
  {
    cov_nyukq8s92().b[11][1]++;
  }
}));
var __param =
/* istanbul ignore next */
(cov_nyukq8s92().s[13]++,
/* istanbul ignore next */
(cov_nyukq8s92().b[13][0]++, this) &&
/* istanbul ignore next */
(cov_nyukq8s92().b[13][1]++, this.__param) ||
/* istanbul ignore next */
(cov_nyukq8s92().b[13][2]++, function (paramIndex, decorator) {
  /* istanbul ignore next */
  cov_nyukq8s92().f[2]++;
  cov_nyukq8s92().s[14]++;
  return function (target, key) {
    /* istanbul ignore next */
    cov_nyukq8s92().f[3]++;
    cov_nyukq8s92().s[15]++;
    decorator(target, key, paramIndex);
  };
}));
var WhatsAppAutomationService_1;
var _a, _b, _c, _d;
import { Injectable, Logger } from '@nestjs/common';
import { InjectQueue } from '@nestjs/bull';
import { Queue } from 'bull';
import { Cron } from '@nestjs/schedule';
import { PrismaService } from './prisma.service';
import { WhatsAppTemplateService } from './whatsapp-template.service';
let WhatsAppAutomationService =
/* istanbul ignore next */
(cov_nyukq8s92().s[16]++, WhatsAppAutomationService_1 = class WhatsAppAutomationService {
  prisma;
  templateService;
  whatsappQueue;
  logger =
  /* istanbul ignore next */
  (cov_nyukq8s92().s[17]++, new Logger(WhatsAppAutomationService_1.name));
  constructor(prisma, templateService, whatsappQueue) {
    /* istanbul ignore next */
    cov_nyukq8s92().f[4]++;
    cov_nyukq8s92().s[18]++;
    this.prisma = prisma;
    /* istanbul ignore next */
    cov_nyukq8s92().s[19]++;
    this.templateService = templateService;
    /* istanbul ignore next */
    cov_nyukq8s92().s[20]++;
    this.whatsappQueue = whatsappQueue;
  }
  /**
   * Create new automation
   */
  async createAutomation(configId, createDto) {
    /* istanbul ignore next */
    cov_nyukq8s92().f[5]++;
    cov_nyukq8s92().s[21]++;
    return this.prisma.whatsAppAutomation.create({
      data: {
        configId,
        name: createDto.name,
        triggerType: createDto.triggerType,
        conditions: createDto.conditions,
        actions: createDto.actions,
        isActive:
        /* istanbul ignore next */
        (cov_nyukq8s92().b[14][0]++, createDto.isActive) ??
        /* istanbul ignore next */
        (cov_nyukq8s92().b[14][1]++, true)
      }
    });
  }
  /**
   * Get automations for config
   */
  async getAutomations(configId, activeOnly =
  /* istanbul ignore next */
  (cov_nyukq8s92().b[15][0]++, false)) {
    /* istanbul ignore next */
    cov_nyukq8s92().f[6]++;
    const where =
    /* istanbul ignore next */
    (cov_nyukq8s92().s[22]++, {
      configId
    });
    /* istanbul ignore next */
    cov_nyukq8s92().s[23]++;
    if (activeOnly) {
      /* istanbul ignore next */
      cov_nyukq8s92().b[16][0]++;
      cov_nyukq8s92().s[24]++;
      where.isActive = true;
    } else
    /* istanbul ignore next */
    {
      cov_nyukq8s92().b[16][1]++;
    }
    cov_nyukq8s92().s[25]++;
    return this.prisma.whatsAppAutomation.findMany({
      where,
      orderBy: {
        createdAt: 'desc'
      }
    });
  }
  /**
   * Update automation
   */
  async updateAutomation(automationId, updateData) {
    /* istanbul ignore next */
    cov_nyukq8s92().f[7]++;
    cov_nyukq8s92().s[26]++;
    return this.prisma.whatsAppAutomation.update({
      where: {
        id: automationId
      },
      data: updateData
    });
  }
  /**
   * Delete automation
   */
  async deleteAutomation(automationId) {
    /* istanbul ignore next */
    cov_nyukq8s92().f[8]++;
    cov_nyukq8s92().s[27]++;
    await this.prisma.whatsAppAutomation.delete({
      where: {
        id: automationId
      }
    });
  }
  /**
   * Trigger automation based on event
   */
  async triggerAutomation(organizationId, trigger) {
    /* istanbul ignore next */
    cov_nyukq8s92().f[9]++;
    cov_nyukq8s92().s[28]++;
    try {
      // Get WhatsApp config for organization
      const config =
      /* istanbul ignore next */
      (cov_nyukq8s92().s[29]++, await this.prisma.whatsAppConfig.findUnique({
        where: {
          userId: organizationId
        }
      }));
      /* istanbul ignore next */
      cov_nyukq8s92().s[30]++;
      if (
      /* istanbul ignore next */
      (cov_nyukq8s92().b[18][0]++, !config) ||
      /* istanbul ignore next */
      (cov_nyukq8s92().b[18][1]++, !config.isActive)) {
        /* istanbul ignore next */
        cov_nyukq8s92().b[17][0]++;
        cov_nyukq8s92().s[31]++;
        this.logger.warn(`WhatsApp not configured for organization ${organizationId}`);
        /* istanbul ignore next */
        cov_nyukq8s92().s[32]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_nyukq8s92().b[17][1]++;
      }
      // Get matching automations
      const automations =
      /* istanbul ignore next */
      (cov_nyukq8s92().s[33]++, await this.prisma.whatsAppAutomation.findMany({
        where: {
          configId: config.id,
          triggerType: trigger.type,
          isActive: true
        }
      }));
      /* istanbul ignore next */
      cov_nyukq8s92().s[34]++;
      for (const automation of automations) {
        /* istanbul ignore next */
        cov_nyukq8s92().s[35]++;
        if (this.evaluateConditions(automation.conditions, trigger.data)) {
          /* istanbul ignore next */
          cov_nyukq8s92().b[19][0]++;
          cov_nyukq8s92().s[36]++;
          await this.executeAutomation(automation, trigger.data);
        } else
        /* istanbul ignore next */
        {
          cov_nyukq8s92().b[19][1]++;
        }
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_nyukq8s92().s[37]++;
      this.logger.error(`Error triggering automation:`, error);
    }
  }
  /**
   * Execute automation actions
   */
  async executeAutomation(automation, triggerData) {
    /* istanbul ignore next */
    cov_nyukq8s92().f[10]++;
    cov_nyukq8s92().s[38]++;
    try {
      /* istanbul ignore next */
      cov_nyukq8s92().s[39]++;
      this.logger.log(`Executing automation ${automation.name}`);
      const actions =
      /* istanbul ignore next */
      (cov_nyukq8s92().s[40]++, automation.actions);
      /* istanbul ignore next */
      cov_nyukq8s92().s[41]++;
      for (const action of
      /* istanbul ignore next */
      (cov_nyukq8s92().b[20][0]++, actions.actions) ||
      /* istanbul ignore next */
      (cov_nyukq8s92().b[20][1]++, [])) {
        /* istanbul ignore next */
        cov_nyukq8s92().s[42]++;
        switch (action.type) {
          case 'send_message':
            /* istanbul ignore next */
            cov_nyukq8s92().b[21][0]++;
            cov_nyukq8s92().s[43]++;
            await this.executeSendMessageAction(automation.configId, action, triggerData);
            /* istanbul ignore next */
            cov_nyukq8s92().s[44]++;
            break;
          case 'send_template':
            /* istanbul ignore next */
            cov_nyukq8s92().b[21][1]++;
            cov_nyukq8s92().s[45]++;
            await this.executeSendTemplateAction(automation.configId, action, triggerData);
            /* istanbul ignore next */
            cov_nyukq8s92().s[46]++;
            break;
          case 'delay':
            /* istanbul ignore next */
            cov_nyukq8s92().b[21][2]++;
            cov_nyukq8s92().s[47]++;
            await this.executeDelayAction(action);
            /* istanbul ignore next */
            cov_nyukq8s92().s[48]++;
            break;
          default:
            /* istanbul ignore next */
            cov_nyukq8s92().b[21][3]++;
            cov_nyukq8s92().s[49]++;
            this.logger.warn(`Unknown action type: ${action.type}`);
        }
      }
      // Update automation stats
      /* istanbul ignore next */
      cov_nyukq8s92().s[50]++;
      await this.prisma.whatsAppAutomation.update({
        where: {
          id: automation.id
        },
        data: {
          runCount: {
            increment: 1
          },
          lastRun: new Date()
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_nyukq8s92().s[51]++;
      this.logger.error(`Error executing automation ${automation.name}:`, error);
    }
  }
  /**
   * Execute send message action
   */
  async executeSendMessageAction(configId, action, triggerData) {
    /* istanbul ignore next */
    cov_nyukq8s92().f[11]++;
    const recipients =
    /* istanbul ignore next */
    (cov_nyukq8s92().s[52]++, this.resolveRecipients(action.recipients, triggerData));
    const message =
    /* istanbul ignore next */
    (cov_nyukq8s92().s[53]++, this.processMessageTemplate(action.message, triggerData));
    /* istanbul ignore next */
    cov_nyukq8s92().s[54]++;
    for (const recipient of recipients) {
      /* istanbul ignore next */
      cov_nyukq8s92().s[55]++;
      await this.whatsappQueue.add('send-message', {
        organizationId: configId,
        message: {
          to: recipient,
          body: message
        }
      });
    }
  }
  /**
   * Execute send template action
   */
  async executeSendTemplateAction(configId, action, triggerData) {
    /* istanbul ignore next */
    cov_nyukq8s92().f[12]++;
    const recipients =
    /* istanbul ignore next */
    (cov_nyukq8s92().s[56]++, this.resolveRecipients(action.recipients, triggerData));
    const templateParams =
    /* istanbul ignore next */
    (cov_nyukq8s92().s[57]++, this.processTemplateParams(
    /* istanbul ignore next */
    (cov_nyukq8s92().b[22][0]++, action.templateParams) ||
    /* istanbul ignore next */
    (cov_nyukq8s92().b[22][1]++, {}), triggerData));
    /* istanbul ignore next */
    cov_nyukq8s92().s[58]++;
    await this.whatsappQueue.add('send-template', {
      organizationId: configId,
      recipients,
      templateName: action.templateName,
      templateParams
    });
  }
  /**
   * Execute delay action
   */
  async executeDelayAction(action) {
    /* istanbul ignore next */
    cov_nyukq8s92().f[13]++;
    const delayMs =
    /* istanbul ignore next */
    (cov_nyukq8s92().s[59]++,
    /* istanbul ignore next */
    (cov_nyukq8s92().b[23][0]++, action.delay) ||
    /* istanbul ignore next */
    (cov_nyukq8s92().b[23][1]++, 1000));
    /* istanbul ignore next */
    cov_nyukq8s92().s[60]++;
    await new Promise(resolve => {
      /* istanbul ignore next */
      cov_nyukq8s92().f[14]++;
      cov_nyukq8s92().s[61]++;
      return setTimeout(resolve, delayMs);
    });
  }
  /**
   * Evaluate automation conditions
   */
  evaluateConditions(conditions, triggerData) {
    /* istanbul ignore next */
    cov_nyukq8s92().f[15]++;
    cov_nyukq8s92().s[62]++;
    if (
    /* istanbul ignore next */
    (cov_nyukq8s92().b[25][0]++, !conditions) ||
    /* istanbul ignore next */
    (cov_nyukq8s92().b[25][1]++, !conditions.rules)) {
      /* istanbul ignore next */
      cov_nyukq8s92().b[24][0]++;
      cov_nyukq8s92().s[63]++;
      return true; // No conditions means always execute
    } else
    /* istanbul ignore next */
    {
      cov_nyukq8s92().b[24][1]++;
    }
    const {
      rules,
      operator =
      /* istanbul ignore next */
      (cov_nyukq8s92().b[26][0]++, 'AND')
    } =
    /* istanbul ignore next */
    (cov_nyukq8s92().s[64]++, conditions);
    const results =
    /* istanbul ignore next */
    (cov_nyukq8s92().s[65]++, rules.map(rule => {
      /* istanbul ignore next */
      cov_nyukq8s92().f[16]++;
      const {
        field,
        operator: ruleOp,
        value
      } =
      /* istanbul ignore next */
      (cov_nyukq8s92().s[66]++, rule);
      const fieldValue =
      /* istanbul ignore next */
      (cov_nyukq8s92().s[67]++, this.getNestedValue(triggerData, field));
      /* istanbul ignore next */
      cov_nyukq8s92().s[68]++;
      switch (ruleOp) {
        case 'equals':
          /* istanbul ignore next */
          cov_nyukq8s92().b[27][0]++;
          cov_nyukq8s92().s[69]++;
          return fieldValue === value;
        case 'not_equals':
          /* istanbul ignore next */
          cov_nyukq8s92().b[27][1]++;
          cov_nyukq8s92().s[70]++;
          return fieldValue !== value;
        case 'greater_than':
          /* istanbul ignore next */
          cov_nyukq8s92().b[27][2]++;
          cov_nyukq8s92().s[71]++;
          return Number(fieldValue) > Number(value);
        case 'less_than':
          /* istanbul ignore next */
          cov_nyukq8s92().b[27][3]++;
          cov_nyukq8s92().s[72]++;
          return Number(fieldValue) < Number(value);
        case 'greater_equal':
          /* istanbul ignore next */
          cov_nyukq8s92().b[27][4]++;
          cov_nyukq8s92().s[73]++;
          return Number(fieldValue) >= Number(value);
        case 'less_equal':
          /* istanbul ignore next */
          cov_nyukq8s92().b[27][5]++;
          cov_nyukq8s92().s[74]++;
          return Number(fieldValue) <= Number(value);
        case 'contains':
          /* istanbul ignore next */
          cov_nyukq8s92().b[27][6]++;
          cov_nyukq8s92().s[75]++;
          return String(fieldValue).toLowerCase().includes(String(value).toLowerCase());
        case 'not_contains':
          /* istanbul ignore next */
          cov_nyukq8s92().b[27][7]++;
          cov_nyukq8s92().s[76]++;
          return !String(fieldValue).toLowerCase().includes(String(value).toLowerCase());
        case 'exists':
          /* istanbul ignore next */
          cov_nyukq8s92().b[27][8]++;
          cov_nyukq8s92().s[77]++;
          return /* istanbul ignore next */(cov_nyukq8s92().b[28][0]++, fieldValue !== undefined) &&
          /* istanbul ignore next */
          (cov_nyukq8s92().b[28][1]++, fieldValue !== null);
        case 'not_exists':
          /* istanbul ignore next */
          cov_nyukq8s92().b[27][9]++;
          cov_nyukq8s92().s[78]++;
          return /* istanbul ignore next */(cov_nyukq8s92().b[29][0]++, fieldValue === undefined) ||
          /* istanbul ignore next */
          (cov_nyukq8s92().b[29][1]++, fieldValue === null);
        default:
          /* istanbul ignore next */
          cov_nyukq8s92().b[27][10]++;
          cov_nyukq8s92().s[79]++;
          return false;
      }
    }));
    /* istanbul ignore next */
    cov_nyukq8s92().s[80]++;
    return operator === 'AND' ?
    /* istanbul ignore next */
    (cov_nyukq8s92().b[30][0]++, results.every(r => {
      /* istanbul ignore next */
      cov_nyukq8s92().f[17]++;
      cov_nyukq8s92().s[81]++;
      return r;
    })) :
    /* istanbul ignore next */
    (cov_nyukq8s92().b[30][1]++, results.some(r => {
      /* istanbul ignore next */
      cov_nyukq8s92().f[18]++;
      cov_nyukq8s92().s[82]++;
      return r;
    }));
  }
  /**
   * Resolve recipients from action configuration
   */
  resolveRecipients(recipientConfig, triggerData) {
    /* istanbul ignore next */
    cov_nyukq8s92().f[19]++;
    cov_nyukq8s92().s[83]++;
    if (Array.isArray(recipientConfig)) {
      /* istanbul ignore next */
      cov_nyukq8s92().b[31][0]++;
      cov_nyukq8s92().s[84]++;
      return recipientConfig;
    } else
    /* istanbul ignore next */
    {
      cov_nyukq8s92().b[31][1]++;
    }
    cov_nyukq8s92().s[85]++;
    if (typeof recipientConfig === 'string') {
      /* istanbul ignore next */
      cov_nyukq8s92().b[32][0]++;
      cov_nyukq8s92().s[86]++;
      // Check if it's a field reference
      if (
      /* istanbul ignore next */
      (cov_nyukq8s92().b[34][0]++, recipientConfig.startsWith('{{')) &&
      /* istanbul ignore next */
      (cov_nyukq8s92().b[34][1]++, recipientConfig.endsWith('}}'))) {
        /* istanbul ignore next */
        cov_nyukq8s92().b[33][0]++;
        const field =
        /* istanbul ignore next */
        (cov_nyukq8s92().s[87]++, recipientConfig.slice(2, -2));
        const value =
        /* istanbul ignore next */
        (cov_nyukq8s92().s[88]++, this.getNestedValue(triggerData, field));
        /* istanbul ignore next */
        cov_nyukq8s92().s[89]++;
        return Array.isArray(value) ?
        /* istanbul ignore next */
        (cov_nyukq8s92().b[35][0]++, value) :
        /* istanbul ignore next */
        (cov_nyukq8s92().b[35][1]++, [value].filter(Boolean));
      } else
      /* istanbul ignore next */
      {
        cov_nyukq8s92().b[33][1]++;
      }
      cov_nyukq8s92().s[90]++;
      return [recipientConfig];
    } else
    /* istanbul ignore next */
    {
      cov_nyukq8s92().b[32][1]++;
    }
    cov_nyukq8s92().s[91]++;
    if (recipientConfig.type === 'field') {
      /* istanbul ignore next */
      cov_nyukq8s92().b[36][0]++;
      const value =
      /* istanbul ignore next */
      (cov_nyukq8s92().s[92]++, this.getNestedValue(triggerData, recipientConfig.field));
      /* istanbul ignore next */
      cov_nyukq8s92().s[93]++;
      return Array.isArray(value) ?
      /* istanbul ignore next */
      (cov_nyukq8s92().b[37][0]++, value) :
      /* istanbul ignore next */
      (cov_nyukq8s92().b[37][1]++, [value].filter(Boolean));
    } else
    /* istanbul ignore next */
    {
      cov_nyukq8s92().b[36][1]++;
    }
    cov_nyukq8s92().s[94]++;
    return [];
  }
  /**
   * Process message template with trigger data
   */
  processMessageTemplate(template, triggerData) {
    /* istanbul ignore next */
    cov_nyukq8s92().f[20]++;
    cov_nyukq8s92().s[95]++;
    return this.templateService.processTemplate(template, triggerData);
  }
  /**
   * Process template parameters with trigger data
   */
  processTemplateParams(templateParams, triggerData) {
    /* istanbul ignore next */
    cov_nyukq8s92().f[21]++;
    const processed =
    /* istanbul ignore next */
    (cov_nyukq8s92().s[96]++, {});
    /* istanbul ignore next */
    cov_nyukq8s92().s[97]++;
    Object.entries(templateParams).forEach(([key, value]) => {
      /* istanbul ignore next */
      cov_nyukq8s92().f[22]++;
      cov_nyukq8s92().s[98]++;
      if (
      /* istanbul ignore next */
      (cov_nyukq8s92().b[39][0]++, typeof value === 'string') &&
      /* istanbul ignore next */
      (cov_nyukq8s92().b[39][1]++, value.startsWith('{{')) &&
      /* istanbul ignore next */
      (cov_nyukq8s92().b[39][2]++, value.endsWith('}}'))) {
        /* istanbul ignore next */
        cov_nyukq8s92().b[38][0]++;
        const field =
        /* istanbul ignore next */
        (cov_nyukq8s92().s[99]++, value.slice(2, -2));
        /* istanbul ignore next */
        cov_nyukq8s92().s[100]++;
        processed[key] = this.getNestedValue(triggerData, field);
      } else {
        /* istanbul ignore next */
        cov_nyukq8s92().b[38][1]++;
        cov_nyukq8s92().s[101]++;
        processed[key] = value;
      }
    });
    /* istanbul ignore next */
    cov_nyukq8s92().s[102]++;
    return processed;
  }
  /**
   * Get nested value from object using dot notation
   */
  getNestedValue(obj, path) {
    /* istanbul ignore next */
    cov_nyukq8s92().f[23]++;
    cov_nyukq8s92().s[103]++;
    return path.split('.').reduce((current, key) => {
      /* istanbul ignore next */
      cov_nyukq8s92().f[24]++;
      cov_nyukq8s92().s[104]++;
      return /* istanbul ignore next */(cov_nyukq8s92().b[41][0]++, current) &&
      /* istanbul ignore next */
      (cov_nyukq8s92().b[41][1]++, current[key] !== undefined) ?
      /* istanbul ignore next */
      (cov_nyukq8s92().b[40][0]++, current[key]) :
      /* istanbul ignore next */
      (cov_nyukq8s92().b[40][1]++, undefined);
    }, obj);
  }
  /**
   * Daily report automation (runs at 9 AM)
   */
  async handleDailyReports() {
    /* istanbul ignore next */
    cov_nyukq8s92().f[25]++;
    cov_nyukq8s92().s[105]++;
    this.logger.log('Starting daily WhatsApp reports');
    /* istanbul ignore next */
    cov_nyukq8s92().s[106]++;
    try {
      // Get all active WhatsApp configs
      const configs =
      /* istanbul ignore next */
      (cov_nyukq8s92().s[107]++, await this.prisma.whatsAppConfig.findMany({
        where: {
          isActive: true
        },
        include: {
          user: true
        }
      }));
      /* istanbul ignore next */
      cov_nyukq8s92().s[108]++;
      for (const config of configs) {
        /* istanbul ignore next */
        cov_nyukq8s92().s[109]++;
        try {
          // Check if user has daily report automation enabled
          const automation =
          /* istanbul ignore next */
          (cov_nyukq8s92().s[110]++, await this.prisma.whatsAppAutomation.findFirst({
            where: {
              configId: config.id,
              triggerType: 'DAILY_REPORT',
              isActive: true
            }
          }));
          /* istanbul ignore next */
          cov_nyukq8s92().s[111]++;
          if (automation) {
            /* istanbul ignore next */
            cov_nyukq8s92().b[42][0]++;
            // Get yesterday's metrics
            const yesterday =
            /* istanbul ignore next */
            (cov_nyukq8s92().s[112]++, new Date());
            /* istanbul ignore next */
            cov_nyukq8s92().s[113]++;
            yesterday.setDate(yesterday.getDate() - 1);
            /* istanbul ignore next */
            cov_nyukq8s92().s[114]++;
            yesterday.setHours(0, 0, 0, 0);
            const reportData =
            /* istanbul ignore next */
            (cov_nyukq8s92().s[115]++, await this.generateDailyReportData(config.userId, yesterday));
            /* istanbul ignore next */
            cov_nyukq8s92().s[116]++;
            await this.whatsappQueue.add('automation-trigger', {
              organizationId: config.userId,
              triggerType: 'daily_report',
              data: {
                phoneNumbers: [config.phoneNumber].filter(Boolean),
                reportData
              }
            });
          } else
          /* istanbul ignore next */
          {
            cov_nyukq8s92().b[42][1]++;
          }
        } catch (error) {
          /* istanbul ignore next */
          cov_nyukq8s92().s[117]++;
          this.logger.error(`Error processing daily report for config ${config.id}:`, error);
        }
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_nyukq8s92().s[118]++;
      this.logger.error('Error in daily reports cron job:', error);
    }
  }
  /**
   * Generate daily report data
   */
  async generateDailyReportData(userId, date) {
    /* istanbul ignore next */
    cov_nyukq8s92().f[26]++;
    cov_nyukq8s92().s[119]++;
    // This would integrate with your existing metrics system
    // For now, returning mock data structure
    return {
      sales: '1,250.00',
      conversions: 15,
      spent: '850.00',
      roi: '147',
      leads: 42,
      date: date.toLocaleDateString('pt-BR')
    };
  }
  /**
   * Create default automations for new config
   */
  async createDefaultAutomations(configId) {
    /* istanbul ignore next */
    cov_nyukq8s92().f[27]++;
    const defaultAutomations =
    /* istanbul ignore next */
    (cov_nyukq8s92().s[120]++, [{
      name: 'Notificação de Conversão',
      triggerType: 'CONVERSION',
      conditions: {
        rules: [{
          field: 'value',
          operator: 'greater_than',
          value: 0
        }],
        operator: 'AND'
      },
      actions: {
        actions: [{
          type: 'send_template',
          templateName: 'conversion_notification',
          recipients: '{{phoneNumber}}',
          templateParams: {
            value: '{{value}}',
            campaign_name: '{{campaignName}}',
            source: '{{source}}',
            timestamp: '{{timestamp}}'
          }
        }]
      }
    }, {
      name: 'Alerta de Orçamento (80%)',
      triggerType: 'BUDGET_ALERT',
      conditions: {
        rules: [{
          field: 'percentage',
          operator: 'greater_equal',
          value: 80
        }],
        operator: 'AND'
      },
      actions: {
        actions: [{
          type: 'send_template',
          templateName: 'budget_alert',
          recipients: '{{phoneNumber}}',
          templateParams: {
            campaign_name: '{{campaignName}}',
            spent: '{{spent}}',
            budget: '{{budget}}',
            percentage: '{{percentage}}',
            alert_message: '{{alertMessage}}'
          }
        }]
      }
    }, {
      name: 'Relatório Diário',
      triggerType: 'DAILY_REPORT',
      conditions: {},
      actions: {
        actions: [{
          type: 'send_template',
          templateName: 'daily_report',
          recipients: {
            type: 'field',
            field: 'phoneNumbers'
          },
          templateParams: {
            date: '{{date}}',
            sales: '{{sales}}',
            conversions: '{{conversions}}',
            spent: '{{spent}}',
            roi: '{{roi}}',
            leads: '{{leads}}'
          }
        }]
      }
    }, {
      name: 'Mensagem de Boas-vindas',
      triggerType: 'WELCOME',
      conditions: {},
      actions: {
        actions: [{
          type: 'send_template',
          templateName: 'welcome_message',
          recipients: '{{phoneNumber}}',
          templateParams: {
            name: '{{name}}'
          }
        }]
      }
    }]);
    const createdAutomations =
    /* istanbul ignore next */
    (cov_nyukq8s92().s[121]++, []);
    /* istanbul ignore next */
    cov_nyukq8s92().s[122]++;
    for (const automation of defaultAutomations) {
      /* istanbul ignore next */
      cov_nyukq8s92().s[123]++;
      try {
        const created =
        /* istanbul ignore next */
        (cov_nyukq8s92().s[124]++, await this.createAutomation(configId, automation));
        /* istanbul ignore next */
        cov_nyukq8s92().s[125]++;
        createdAutomations.push(created);
      } catch (error) {
        /* istanbul ignore next */
        cov_nyukq8s92().s[126]++;
        this.logger.error(`Error creating default automation ${automation.name}:`, error);
      }
    }
    /* istanbul ignore next */
    cov_nyukq8s92().s[127]++;
    this.logger.log(`Created ${createdAutomations.length} default automations for config ${configId}`);
    /* istanbul ignore next */
    cov_nyukq8s92().s[128]++;
    return createdAutomations;
  }
});
/* istanbul ignore next */
cov_nyukq8s92().s[129]++;
__decorate([Cron('0 9 * * *', {
  name: 'daily-whatsapp-reports',
  timeZone: 'America/Sao_Paulo'
}), __metadata("design:type", Function), __metadata("design:paramtypes", []), __metadata("design:returntype", typeof (_d =
/* istanbul ignore next */
(cov_nyukq8s92().b[44][0]++, typeof Promise !== "undefined") &&
/* istanbul ignore next */
(cov_nyukq8s92().b[44][1]++, Promise)) === "function" ?
/* istanbul ignore next */
(cov_nyukq8s92().b[43][0]++, _d) :
/* istanbul ignore next */
(cov_nyukq8s92().b[43][1]++, Object))], WhatsAppAutomationService.prototype, "handleDailyReports", null);
/* istanbul ignore next */
cov_nyukq8s92().s[130]++;
WhatsAppAutomationService = WhatsAppAutomationService_1 = __decorate([Injectable(), __param(2, InjectQueue('whatsapp')), __metadata("design:paramtypes", [typeof (_a =
/* istanbul ignore next */
(cov_nyukq8s92().b[46][0]++, typeof PrismaService !== "undefined") &&
/* istanbul ignore next */
(cov_nyukq8s92().b[46][1]++, PrismaService)) === "function" ?
/* istanbul ignore next */
(cov_nyukq8s92().b[45][0]++, _a) :
/* istanbul ignore next */
(cov_nyukq8s92().b[45][1]++, Object), typeof (_b =
/* istanbul ignore next */
(cov_nyukq8s92().b[48][0]++, typeof WhatsAppTemplateService !== "undefined") &&
/* istanbul ignore next */
(cov_nyukq8s92().b[48][1]++, WhatsAppTemplateService)) === "function" ?
/* istanbul ignore next */
(cov_nyukq8s92().b[47][0]++, _b) :
/* istanbul ignore next */
(cov_nyukq8s92().b[47][1]++, Object), typeof (_c =
/* istanbul ignore next */
(cov_nyukq8s92().b[50][0]++, typeof Queue !== "undefined") &&
/* istanbul ignore next */
(cov_nyukq8s92().b[50][1]++, Queue)) === "function" ?
/* istanbul ignore next */
(cov_nyukq8s92().b[49][0]++, _c) :
/* istanbul ignore next */
(cov_nyukq8s92().b[49][1]++, Object)])], WhatsAppAutomationService);
export { WhatsAppAutomationService };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,