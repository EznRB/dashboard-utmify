1a50d2f8a79c0cf96eaae3a06d38a288
/* istanbul ignore next */
function cov_18x62qe1ta() {
  var path = "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\services\\whatsapp-template.service.ts";
  var hash = "a4e591f21883af0d91e7c1b586f67c337fadc83e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\services\\whatsapp-template.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 8
        },
        end: {
          line: 4,
          column: 29
        }
      },
      "1": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 28,
          column: 9
        }
      },
      "2": {
        start: {
          line: 11,
          column: 29
        },
        end: {
          line: 21,
          column: 14
        }
      },
      "3": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 88
        }
      },
      "4": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 28
        }
      },
      "5": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 75
        }
      },
      "6": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 24
        }
      },
      "7": {
        start: {
          line: 34,
          column: 22
        },
        end: {
          line: 36,
          column: 9
        }
      },
      "8": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 39,
          column: 9
        }
      },
      "9": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 34
        }
      },
      "10": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 43,
          column: 11
        }
      },
      "11": {
        start: {
          line: 49,
          column: 25
        },
        end: {
          line: 54,
          column: 10
        }
      },
      "12": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "13": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 62
        }
      },
      "14": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 24
        }
      },
      "15": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 70,
          column: 11
        }
      },
      "16": {
        start: {
          line: 76,
          column: 25
        },
        end: {
          line: 76,
          column: 73
        }
      },
      "17": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 80,
          column: 11
        }
      },
      "18": {
        start: {
          line: 86,
          column: 25
        },
        end: {
          line: 86,
          column: 73
        }
      },
      "19": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 89,
          column: 11
        }
      },
      "20": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 90,
          column: 61
        }
      },
      "21": {
        start: {
          line: 96,
          column: 31
        },
        end: {
          line: 96,
          column: 38
        }
      },
      "22": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 101,
          column: 11
        }
      },
      "23": {
        start: {
          line: 99,
          column: 26
        },
        end: {
          line: 99,
          column: 63
        }
      },
      "24": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 78
        }
      },
      "25": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 32
        }
      },
      "26": {
        start: {
          line: 108,
          column: 22
        },
        end: {
          line: 108,
          column: 40
        }
      },
      "27": {
        start: {
          line: 109,
          column: 26
        },
        end: {
          line: 109,
          column: 28
        }
      },
      "28": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 115,
          column: 9
        }
      },
      "29": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 114,
          column: 13
        }
      },
      "30": {
        start: {
          line: 113,
          column: 16
        },
        end: {
          line: 113,
          column: 41
        }
      },
      "31": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 25
        }
      },
      "32": {
        start: {
          line: 122,
          column: 34
        },
        end: {
          line: 122,
          column: 64
        }
      },
      "33": {
        start: {
          line: 123,
          column: 33
        },
        end: {
          line: 123,
          column: 105
        }
      },
      "34": {
        start: {
          line: 123,
          column: 72
        },
        end: {
          line: 123,
          column: 104
        }
      },
      "35": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 127,
          column: 10
        }
      },
      "36": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 140,
          column: 11
        }
      },
      "37": {
        start: {
          line: 146,
          column: 33
        },
        end: {
          line: 247,
          column: 9
        }
      },
      "38": {
        start: {
          line: 248,
          column: 33
        },
        end: {
          line: 248,
          column: 35
        }
      },
      "39": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 262,
          column: 9
        }
      },
      "40": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 261,
          column: 13
        }
      },
      "41": {
        start: {
          line: 251,
          column: 32
        },
        end: {
          line: 251,
          column: 77
        }
      },
      "42": {
        start: {
          line: 253,
          column: 33
        },
        end: {
          line: 256,
          column: 18
        }
      },
      "43": {
        start: {
          line: 257,
          column: 16
        },
        end: {
          line: 257,
          column: 48
        }
      },
      "44": {
        start: {
          line: 260,
          column: 16
        },
        end: {
          line: 260,
          column: 94
        }
      },
      "45": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 263,
          column: 103
        }
      },
      "46": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 264,
          column: 32
        }
      },
      "47": {
        start: {
          line: 270,
          column: 26
        },
        end: {
          line: 270,
          column: 59
        }
      },
      "48": {
        start: {
          line: 271,
          column: 22
        },
        end: {
          line: 277,
          column: 9
        }
      },
      "49": {
        start: {
          line: 273,
          column: 42
        },
        end: {
          line: 273,
          column: 52
        }
      },
      "50": {
        start: {
          line: 274,
          column: 44
        },
        end: {
          line: 274,
          column: 67
        }
      },
      "51": {
        start: {
          line: 275,
          column: 43
        },
        end: {
          line: 275,
          column: 65
        }
      },
      "52": {
        start: {
          line: 276,
          column: 47
        },
        end: {
          line: 276,
          column: 74
        }
      },
      "53": {
        start: {
          line: 278,
          column: 8
        },
        end: {
          line: 278,
          column: 21
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 5
          }
        },
        loc: {
          start: {
            line: 3,
            column: 24
          },
          end: {
            line: 5,
            column: 5
          }
        },
        line: 3
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 46
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 9
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 53
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 33
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        loc: {
          start: {
            line: 48,
            column: 48
          },
          end: {
            line: 59,
            column: 5
          }
        },
        line: 48
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        },
        loc: {
          start: {
            line: 63,
            column: 44
          },
          end: {
            line: 71,
            column: 5
          }
        },
        line: 63
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        },
        loc: {
          start: {
            line: 75,
            column: 58
          },
          end: {
            line: 81,
            column: 5
          }
        },
        line: 75
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        },
        loc: {
          start: {
            line: 85,
            column: 47
          },
          end: {
            line: 91,
            column: 5
          }
        },
        line: 85
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        },
        loc: {
          start: {
            line: 95,
            column: 45
          },
          end: {
            line: 103,
            column: 5
          }
        },
        line: 95
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 98,
            column: 42
          },
          end: {
            line: 98,
            column: 43
          }
        },
        loc: {
          start: {
            line: 98,
            column: 60
          },
          end: {
            line: 101,
            column: 9
          }
        },
        line: 98
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 107,
            column: 4
          },
          end: {
            line: 107,
            column: 5
          }
        },
        loc: {
          start: {
            line: 107,
            column: 30
          },
          end: {
            line: 117,
            column: 5
          }
        },
        line: 107
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 121,
            column: 5
          }
        },
        loc: {
          start: {
            line: 121,
            column: 58
          },
          end: {
            line: 128,
            column: 5
          }
        },
        line: 121
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 123,
            column: 58
          },
          end: {
            line: 123,
            column: 59
          }
        },
        loc: {
          start: {
            line: 123,
            column: 72
          },
          end: {
            line: 123,
            column: 104
          }
        },
        line: 123
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 132,
            column: 4
          },
          end: {
            line: 132,
            column: 5
          }
        },
        loc: {
          start: {
            line: 132,
            column: 42
          },
          end: {
            line: 141,
            column: 5
          }
        },
        line: 132
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 145,
            column: 4
          },
          end: {
            line: 145,
            column: 5
          }
        },
        loc: {
          start: {
            line: 145,
            column: 43
          },
          end: {
            line: 265,
            column: 5
          }
        },
        line: 145
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 269,
            column: 4
          },
          end: {
            line: 269,
            column: 5
          }
        },
        loc: {
          start: {
            line: 269,
            column: 37
          },
          end: {
            line: 279,
            column: 5
          }
        },
        line: 269
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 273,
            column: 37
          },
          end: {
            line: 273,
            column: 38
          }
        },
        loc: {
          start: {
            line: 273,
            column: 42
          },
          end: {
            line: 273,
            column: 52
          }
        },
        line: 273
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 274,
            column: 39
          },
          end: {
            line: 274,
            column: 40
          }
        },
        loc: {
          start: {
            line: 274,
            column: 44
          },
          end: {
            line: 274,
            column: 67
          }
        },
        line: 274
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 275,
            column: 38
          },
          end: {
            line: 275,
            column: 39
          }
        },
        loc: {
          start: {
            line: 275,
            column: 43
          },
          end: {
            line: 275,
            column: 65
          }
        },
        line: 275
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 276,
            column: 37
          },
          end: {
            line: 276,
            column: 38
          }
        },
        loc: {
          start: {
            line: 276,
            column: 47
          },
          end: {
            line: 276,
            column: 74
          }
        },
        line: 276
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 31
          },
          end: {
            line: 17,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 31
          },
          end: {
            line: 17,
            column: 50
          }
        }, {
          start: {
            line: 17,
            column: 54
          },
          end: {
            line: 17,
            column: 56
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 30
          },
          end: {
            line: 18,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 30
          },
          end: {
            line: 18,
            column: 48
          }
        }, {
          start: {
            line: 18,
            column: 52
          },
          end: {
            line: 18,
            column: 59
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 33,
            column: 33
          },
          end: {
            line: 33,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 33,
            column: 46
          },
          end: {
            line: 33,
            column: 51
          }
        }],
        line: 33
      },
      "3": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 39,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 39,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "4": {
        loc: {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "5": {
        loc: {
          start: {
            line: 95,
            column: 29
          },
          end: {
            line: 95,
            column: 43
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 95,
            column: 41
          },
          end: {
            line: 95,
            column: 43
          }
        }],
        line: 95
      },
      "6": {
        loc: {
          start: {
            line: 112,
            column: 12
          },
          end: {
            line: 114,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 12
          },
          end: {
            line: 114,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 112
      },
      "7": {
        loc: {
          start: {
            line: 276,
            column: 22
          },
          end: {
            line: 276,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 276,
            column: 22
          },
          end: {
            line: 276,
            column: 78
          }
        }, {
          start: {
            line: 276,
            column: 82
          },
          end: {
            line: 276,
            column: 86
          }
        }],
        line: 276
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\services\\whatsapp-template.service.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\services\\whatsapp-template.service.ts"],
      sourcesContent: ["import { PrismaService } from './prisma.service';\nimport { WhatsAppTemplate, Prisma } from '@prisma/client';\nimport { logger } from '../utils/logger';\n\nexport interface CreateTemplateDto {\n  name: string;\n  category: 'MARKETING' | 'UTILITY' | 'AUTHENTICATION';\n  content: string;\n  variables?: Record<string, any>;\n  language?: string;\n}\n\nexport interface UpdateTemplateDto {\n  name?: string;\n  content?: string;\n  variables?: Record<string, any>;\n  isActive?: boolean;\n}\n\nexport interface TemplateVariable {\n  name: string;\n  type: 'text' | 'number' | 'date' | 'currency';\n  required: boolean;\n  defaultValue?: string;\n}\n\nexport class WhatsAppTemplateService {\n\n  constructor(private readonly prisma: PrismaService) {}\n\n  /**\n   * Create a new template\n   */\n  async createTemplate(\n    configId: string,\n    createDto: CreateTemplateDto,\n  ): Promise<WhatsAppTemplate> {\n    try {\n      const template = await this.prisma.whatsAppTemplate.create({\n        data: {\n          configId,\n          name: createDto.name,\n          category: createDto.category,\n          content: createDto.content,\n          variables: createDto.variables || {},\n          language: createDto.language || 'pt_BR',\n          status: 'PENDING',\n        },\n      });\n\n      this.logger.log(`Template ${template.name} created for config ${configId}`);\n      return template;\n    } catch (error) {\n      this.logger.error(`Error creating template: ${error.message}`);\n      throw error;\n    }\n  }\n\n  /**\n   * Get all templates for a config\n   */\n  async getTemplates(\n    configId: string,\n    activeOnly: boolean = false,\n  ): Promise<WhatsAppTemplate[]> {\n    const where: Prisma.WhatsAppTemplateWhereInput = {\n      configId,\n    };\n\n    if (activeOnly) {\n      where.isActive = true;\n    }\n\n    return this.prisma.whatsAppTemplate.findMany({\n      where,\n      orderBy: { createdAt: 'desc' },\n    });\n  }\n\n  /**\n   * Get template by ID\n   */\n  async getTemplateById(\n    configId: string,\n    templateId: string,\n  ): Promise<WhatsAppTemplate> {\n    const template = await this.prisma.whatsAppTemplate.findFirst({\n      where: {\n        id: templateId,\n        configId,\n      },\n    });\n\n    if (!template) {\n      throw new NotFoundException('Template not found');\n    }\n\n    return template;\n  }\n\n  /**\n   * Get template by name\n   */\n  async getTemplateByName(\n    configId: string,\n    name: string,\n  ): Promise<WhatsAppTemplate | null> {\n    return this.prisma.whatsAppTemplate.findFirst({\n      where: {\n        configId,\n        name,\n        isActive: true,\n      },\n    });\n  }\n\n  /**\n   * Update template\n   */\n  async updateTemplate(\n    configId: string,\n    templateId: string,\n    updateDto: UpdateTemplateDto,\n  ): Promise<WhatsAppTemplate> {\n    const template = await this.getTemplateById(configId, templateId);\n\n    return this.prisma.whatsAppTemplate.update({\n      where: { id: template.id },\n      data: updateDto,\n    });\n  }\n\n  /**\n   * Delete template\n   */\n  async deleteTemplate(configId: string, templateId: string): Promise<void> {\n    const template = await this.getTemplateById(configId, templateId);\n\n    await this.prisma.whatsAppTemplate.delete({\n      where: { id: template.id },\n    });\n\n    this.logger.log(`Template ${template.name} deleted`);\n  }\n\n  /**\n   * Process template with variables\n   */\n  processTemplate(\n    content: string,\n    variables: Record<string, any> = {},\n  ): string {\n    let processedContent = content;\n\n    // Replace variables in format {{variable_name}}\n    Object.entries(variables).forEach(([key, value]) => {\n      const regex = new RegExp(`{{\\\\s*${key}\\\\s*}}`, 'g');\n      processedContent = processedContent.replace(regex, String(value));\n    });\n\n    return processedContent;\n  }\n\n  /**\n   * Extract variables from template content\n   */\n  extractVariables(content: string): string[] {\n    const regex = /{{\\s*(\\w+)\\s*}}/g;\n    const variables: string[] = [];\n    let match;\n\n    while ((match = regex.exec(content)) !== null) {\n      if (!variables.includes(match[1])) {\n        variables.push(match[1]);\n      }\n    }\n\n    return variables;\n  }\n\n  /**\n   * Validate template variables\n   */\n  validateTemplateVariables(\n    content: string,\n    providedVariables: Record<string, any>,\n  ): { isValid: boolean; missingVariables: string[] } {\n    const requiredVariables = this.extractVariables(content);\n    const missingVariables = requiredVariables.filter(\n      (variable) => !(variable in providedVariables),\n    );\n\n    return {\n      isValid: missingVariables.length === 0,\n      missingVariables,\n    };\n  }\n\n  /**\n   * Increment template usage count\n   */\n  async incrementUsageCount(templateId: string): Promise<void> {\n    await this.prisma.whatsAppTemplate.update({\n      where: { id: templateId },\n      data: {\n        usageCount: {\n          increment: 1,\n        },\n      },\n    });\n  }\n\n  /**\n   * Create default templates for a new config\n   */\n  async createDefaultTemplates(configId: string): Promise<WhatsAppTemplate[]> {\n    const defaultTemplates = [\n      {\n        name: 'conversion_notification',\n        category: 'UTILITY' as const,\n        content: `\uD83C\uDF89 *Nova Convers\xE3o!*\n\n\uD83D\uDCB0 Valor: R$ {{value}}\n\uD83D\uDCCA Campanha: {{campaign_name}}\n\uD83C\uDFAF Fonte: {{source}}\n\u23F0 {{timestamp}}\n\n\uD83D\uDE80 Parab\xE9ns pela venda!`,\n        variables: {\n          value: { type: 'currency', required: true },\n          campaign_name: { type: 'text', required: true },\n          source: { type: 'text', required: true },\n          timestamp: { type: 'date', required: true },\n        },\n      },\n      {\n        name: 'budget_alert',\n        category: 'UTILITY' as const,\n        content: `\u26A0\uFE0F *Alerta de Or\xE7amento*\n\n\uD83D\uDCCA Campanha: {{campaign_name}}\n\uD83D\uDCB8 Gasto: R$ {{spent}}\n\uD83D\uDCB0 Or\xE7amento: R$ {{budget}}\n\uD83D\uDCC8 Utilizado: {{percentage}}%\n\n{{alert_message}}`,\n        variables: {\n          campaign_name: { type: 'text', required: true },\n          spent: { type: 'currency', required: true },\n          budget: { type: 'currency', required: true },\n          percentage: { type: 'number', required: true },\n          alert_message: { type: 'text', required: true },\n        },\n      },\n      {\n        name: 'daily_report',\n        category: 'UTILITY' as const,\n        content: `\uD83D\uDCCA *Relat\xF3rio Di\xE1rio*\n\n\uD83D\uDCC5 {{date}}\n\n\uD83D\uDCB0 Vendas: R$ {{sales}}\n\uD83D\uDCC8 Convers\xF5es: {{conversions}}\n\uD83D\uDCB8 Gastos: R$ {{spent}}\n\uD83C\uDFAF ROI: {{roi}}%\n\uD83D\uDC65 Leads: {{leads}}\n\n\uD83D\uDCF1 Digite /relatorio para mais detalhes`,\n        variables: {\n          date: { type: 'date', required: true },\n          sales: { type: 'currency', required: true },\n          conversions: { type: 'number', required: true },\n          spent: { type: 'currency', required: true },\n          roi: { type: 'number', required: true },\n          leads: { type: 'number', required: true },\n        },\n      },\n      {\n        name: 'welcome_message',\n        category: 'UTILITY' as const,\n        content: `\uD83D\uDC4B *Bem-vindo ao Utmify!*\n\nOl\xE1 {{name}}!\n\n\uD83D\uDE80 Sua conta foi criada com sucesso!\n\uD83D\uDCCA Agora voc\xEA pode acompanhar suas campanhas em tempo real.\n\n\uD83D\uDCA1 *Comandos \xFAteis:*\n\uD83D\uDCCA /relatorio - Relat\xF3rio di\xE1rio\n\uD83D\uDCA1 /ajuda - Lista de comandos\n\n\uD83C\uDFAF Vamos come\xE7ar a otimizar suas campanhas!`,\n        variables: {\n          name: { type: 'text', required: true, defaultValue: 'usu\xE1rio' },\n        },\n      },\n      {\n        name: 'help_message',\n        category: 'UTILITY' as const,\n        content: `\uD83D\uDCA1 *Comandos Dispon\xEDveis*\n\n\uD83D\uDCCA */relatorio* - Relat\xF3rio do dia anterior\n\uD83D\uDCC8 */metricas* - M\xE9tricas das campanhas\n\uD83D\uDCB0 */vendas* - Resumo de vendas\n\uD83D\uDCB8 */gastos* - Resumo de gastos\n\uD83C\uDFAF */campanhas* - Status das campanhas\n\u2699\uFE0F */config* - Configura\xE7\xF5es\n\u2753 */ajuda* - Esta mensagem\n\n\uD83E\uDD16 *Automa\xE7\xF5es Ativas:*\n\u2022 Notifica\xE7\xF5es de convers\xE3o\n\u2022 Alertas de or\xE7amento\n\u2022 Relat\xF3rios di\xE1rios (9h)\n\n\uD83D\uDCDE Precisa de ajuda? Entre em contato conosco!`,\n        variables: {},\n      },\n    ];\n\n    const createdTemplates: WhatsAppTemplate[] = [];\n\n    for (const template of defaultTemplates) {\n      try {\n        const created = await this.createTemplate(configId, template);\n        // Auto-approve default templates\n        const approved = await this.prisma.whatsAppTemplate.update({\n          where: { id: created.id },\n          data: { status: 'APPROVED' },\n        });\n        createdTemplates.push(approved);\n      } catch (error) {\n        this.logger.error(`Error creating default template ${template.name}:`, error);\n      }\n    }\n\n    this.logger.log(`Created ${createdTemplates.length} default templates for config ${configId}`);\n    return createdTemplates;\n  }\n\n  /**\n   * Get template statistics\n   */\n  async getTemplateStats(configId: string): Promise<{\n    total: number;\n    active: number;\n    approved: number;\n    pending: number;\n    mostUsed: WhatsAppTemplate | null;\n  }> {\n    const templates = await this.getTemplates(configId);\n    \n    const stats = {\n      total: templates.length,\n      active: templates.filter(t => t.isActive).length,\n      approved: templates.filter(t => t.status === 'APPROVED').length,\n      pending: templates.filter(t => t.status === 'PENDING').length,\n      mostUsed: templates.sort((a, b) => b.usageCount - a.usageCount)[0] || null,\n    };\n\n    return stats;\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a4e591f21883af0d91e7c1b586f67c337fadc83e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_18x62qe1ta = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_18x62qe1ta();
export class WhatsAppTemplateService {
  prisma;
  constructor(prisma) {
    /* istanbul ignore next */
    cov_18x62qe1ta().f[0]++;
    cov_18x62qe1ta().s[0]++;
    this.prisma = prisma;
  }
  /**
   * Create a new template
   */
  async createTemplate(configId, createDto) {
    /* istanbul ignore next */
    cov_18x62qe1ta().f[1]++;
    cov_18x62qe1ta().s[1]++;
    try {
      const template =
      /* istanbul ignore next */
      (cov_18x62qe1ta().s[2]++, await this.prisma.whatsAppTemplate.create({
        data: {
          configId,
          name: createDto.name,
          category: createDto.category,
          content: createDto.content,
          variables:
          /* istanbul ignore next */
          (cov_18x62qe1ta().b[0][0]++, createDto.variables) ||
          /* istanbul ignore next */
          (cov_18x62qe1ta().b[0][1]++, {}),
          language:
          /* istanbul ignore next */
          (cov_18x62qe1ta().b[1][0]++, createDto.language) ||
          /* istanbul ignore next */
          (cov_18x62qe1ta().b[1][1]++, 'pt_BR'),
          status: 'PENDING'
        }
      }));
      /* istanbul ignore next */
      cov_18x62qe1ta().s[3]++;
      this.logger.log(`Template ${template.name} created for config ${configId}`);
      /* istanbul ignore next */
      cov_18x62qe1ta().s[4]++;
      return template;
    } catch (error) {
      /* istanbul ignore next */
      cov_18x62qe1ta().s[5]++;
      this.logger.error(`Error creating template: ${error.message}`);
      /* istanbul ignore next */
      cov_18x62qe1ta().s[6]++;
      throw error;
    }
  }
  /**
   * Get all templates for a config
   */
  async getTemplates(configId, activeOnly =
  /* istanbul ignore next */
  (cov_18x62qe1ta().b[2][0]++, false)) {
    /* istanbul ignore next */
    cov_18x62qe1ta().f[2]++;
    const where =
    /* istanbul ignore next */
    (cov_18x62qe1ta().s[7]++, {
      configId
    });
    /* istanbul ignore next */
    cov_18x62qe1ta().s[8]++;
    if (activeOnly) {
      /* istanbul ignore next */
      cov_18x62qe1ta().b[3][0]++;
      cov_18x62qe1ta().s[9]++;
      where.isActive = true;
    } else
    /* istanbul ignore next */
    {
      cov_18x62qe1ta().b[3][1]++;
    }
    cov_18x62qe1ta().s[10]++;
    return this.prisma.whatsAppTemplate.findMany({
      where,
      orderBy: {
        createdAt: 'desc'
      }
    });
  }
  /**
   * Get template by ID
   */
  async getTemplateById(configId, templateId) {
    /* istanbul ignore next */
    cov_18x62qe1ta().f[3]++;
    const template =
    /* istanbul ignore next */
    (cov_18x62qe1ta().s[11]++, await this.prisma.whatsAppTemplate.findFirst({
      where: {
        id: templateId,
        configId
      }
    }));
    /* istanbul ignore next */
    cov_18x62qe1ta().s[12]++;
    if (!template) {
      /* istanbul ignore next */
      cov_18x62qe1ta().b[4][0]++;
      cov_18x62qe1ta().s[13]++;
      throw new NotFoundException('Template not found');
    } else
    /* istanbul ignore next */
    {
      cov_18x62qe1ta().b[4][1]++;
    }
    cov_18x62qe1ta().s[14]++;
    return template;
  }
  /**
   * Get template by name
   */
  async getTemplateByName(configId, name) {
    /* istanbul ignore next */
    cov_18x62qe1ta().f[4]++;
    cov_18x62qe1ta().s[15]++;
    return this.prisma.whatsAppTemplate.findFirst({
      where: {
        configId,
        name,
        isActive: true
      }
    });
  }
  /**
   * Update template
   */
  async updateTemplate(configId, templateId, updateDto) {
    /* istanbul ignore next */
    cov_18x62qe1ta().f[5]++;
    const template =
    /* istanbul ignore next */
    (cov_18x62qe1ta().s[16]++, await this.getTemplateById(configId, templateId));
    /* istanbul ignore next */
    cov_18x62qe1ta().s[17]++;
    return this.prisma.whatsAppTemplate.update({
      where: {
        id: template.id
      },
      data: updateDto
    });
  }
  /**
   * Delete template
   */
  async deleteTemplate(configId, templateId) {
    /* istanbul ignore next */
    cov_18x62qe1ta().f[6]++;
    const template =
    /* istanbul ignore next */
    (cov_18x62qe1ta().s[18]++, await this.getTemplateById(configId, templateId));
    /* istanbul ignore next */
    cov_18x62qe1ta().s[19]++;
    await this.prisma.whatsAppTemplate.delete({
      where: {
        id: template.id
      }
    });
    /* istanbul ignore next */
    cov_18x62qe1ta().s[20]++;
    this.logger.log(`Template ${template.name} deleted`);
  }
  /**
   * Process template with variables
   */
  processTemplate(content, variables =
  /* istanbul ignore next */
  (cov_18x62qe1ta().b[5][0]++, {})) {
    /* istanbul ignore next */
    cov_18x62qe1ta().f[7]++;
    let processedContent =
    /* istanbul ignore next */
    (cov_18x62qe1ta().s[21]++, content);
    // Replace variables in format {{variable_name}}
    /* istanbul ignore next */
    cov_18x62qe1ta().s[22]++;
    Object.entries(variables).forEach(([key, value]) => {
      /* istanbul ignore next */
      cov_18x62qe1ta().f[8]++;
      const regex =
      /* istanbul ignore next */
      (cov_18x62qe1ta().s[23]++, new RegExp(`{{\\s*${key}\\s*}}`, 'g'));
      /* istanbul ignore next */
      cov_18x62qe1ta().s[24]++;
      processedContent = processedContent.replace(regex, String(value));
    });
    /* istanbul ignore next */
    cov_18x62qe1ta().s[25]++;
    return processedContent;
  }
  /**
   * Extract variables from template content
   */
  extractVariables(content) {
    /* istanbul ignore next */
    cov_18x62qe1ta().f[9]++;
    const regex =
    /* istanbul ignore next */
    (cov_18x62qe1ta().s[26]++, /{{\s*(\w+)\s*}}/g);
    const variables =
    /* istanbul ignore next */
    (cov_18x62qe1ta().s[27]++, []);
    let match;
    /* istanbul ignore next */
    cov_18x62qe1ta().s[28]++;
    while ((match = regex.exec(content)) !== null) {
      /* istanbul ignore next */
      cov_18x62qe1ta().s[29]++;
      if (!variables.includes(match[1])) {
        /* istanbul ignore next */
        cov_18x62qe1ta().b[6][0]++;
        cov_18x62qe1ta().s[30]++;
        variables.push(match[1]);
      } else
      /* istanbul ignore next */
      {
        cov_18x62qe1ta().b[6][1]++;
      }
    }
    /* istanbul ignore next */
    cov_18x62qe1ta().s[31]++;
    return variables;
  }
  /**
   * Validate template variables
   */
  validateTemplateVariables(content, providedVariables) {
    /* istanbul ignore next */
    cov_18x62qe1ta().f[10]++;
    const requiredVariables =
    /* istanbul ignore next */
    (cov_18x62qe1ta().s[32]++, this.extractVariables(content));
    const missingVariables =
    /* istanbul ignore next */
    (cov_18x62qe1ta().s[33]++, requiredVariables.filter(variable => {
      /* istanbul ignore next */
      cov_18x62qe1ta().f[11]++;
      cov_18x62qe1ta().s[34]++;
      return !(variable in providedVariables);
    }));
    /* istanbul ignore next */
    cov_18x62qe1ta().s[35]++;
    return {
      isValid: missingVariables.length === 0,
      missingVariables
    };
  }
  /**
   * Increment template usage count
   */
  async incrementUsageCount(templateId) {
    /* istanbul ignore next */
    cov_18x62qe1ta().f[12]++;
    cov_18x62qe1ta().s[36]++;
    await this.prisma.whatsAppTemplate.update({
      where: {
        id: templateId
      },
      data: {
        usageCount: {
          increment: 1
        }
      }
    });
  }
  /**
   * Create default templates for a new config
   */
  async createDefaultTemplates(configId) {
    /* istanbul ignore next */
    cov_18x62qe1ta().f[13]++;
    const defaultTemplates =
    /* istanbul ignore next */
    (cov_18x62qe1ta().s[37]++, [{
      name: 'conversion_notification',
      category: 'UTILITY',
      content: `🎉 *Nova Conversão!*

💰 Valor: R$ {{value}}
📊 Campanha: {{campaign_name}}
🎯 Fonte: {{source}}
⏰ {{timestamp}}

🚀 Parabéns pela venda!`,
      variables: {
        value: {
          type: 'currency',
          required: true
        },
        campaign_name: {
          type: 'text',
          required: true
        },
        source: {
          type: 'text',
          required: true
        },
        timestamp: {
          type: 'date',
          required: true
        }
      }
    }, {
      name: 'budget_alert',
      category: 'UTILITY',
      content: `⚠️ *Alerta de Orçamento*

📊 Campanha: {{campaign_name}}
💸 Gasto: R$ {{spent}}
💰 Orçamento: R$ {{budget}}
📈 Utilizado: {{percentage}}%

{{alert_message}}`,
      variables: {
        campaign_name: {
          type: 'text',
          required: true
        },
        spent: {
          type: 'currency',
          required: true
        },
        budget: {
          type: 'currency',
          required: true
        },
        percentage: {
          type: 'number',
          required: true
        },
        alert_message: {
          type: 'text',
          required: true
        }
      }
    }, {
      name: 'daily_report',
      category: 'UTILITY',
      content: `📊 *Relatório Diário*

📅 {{date}}

💰 Vendas: R$ {{sales}}
📈 Conversões: {{conversions}}
💸 Gastos: R$ {{spent}}
🎯 ROI: {{roi}}%
👥 Leads: {{leads}}

📱 Digite /relatorio para mais detalhes`,
      variables: {
        date: {
          type: 'date',
          required: true
        },
        sales: {
          type: 'currency',
          required: true
        },
        conversions: {
          type: 'number',
          required: true
        },
        spent: {
          type: 'currency',
          required: true
        },
        roi: {
          type: 'number',
          required: true
        },
        leads: {
          type: 'number',
          required: true
        }
      }
    }, {
      name: 'welcome_message',
      category: 'UTILITY',
      content: `👋 *Bem-vindo ao Utmify!*

Olá {{name}}!

🚀 Sua conta foi criada com sucesso!
📊 Agora você pode acompanhar suas campanhas em tempo real.

💡 *Comandos úteis:*
📊 /relatorio - Relatório diário
💡 /ajuda - Lista de comandos

🎯 Vamos começar a otimizar suas campanhas!`,
      variables: {
        name: {
          type: 'text',
          required: true,
          defaultValue: 'usuário'
        }
      }
    }, {
      name: 'help_message',
      category: 'UTILITY',
      content: `💡 *Comandos Disponíveis*

📊 */relatorio* - Relatório do dia anterior
📈 */metricas* - Métricas das campanhas
💰 */vendas* - Resumo de vendas
💸 */gastos* - Resumo de gastos
🎯 */campanhas* - Status das campanhas
⚙️ */config* - Configurações
❓ */ajuda* - Esta mensagem

🤖 *Automações Ativas:*
• Notificações de conversão
• Alertas de orçamento
• Relatórios diários (9h)

📞 Precisa de ajuda? Entre em contato conosco!`,
      variables: {}
    }]);
    const createdTemplates =
    /* istanbul ignore next */
    (cov_18x62qe1ta().s[38]++, []);
    /* istanbul ignore next */
    cov_18x62qe1ta().s[39]++;
    for (const template of defaultTemplates) {
      /* istanbul ignore next */
      cov_18x62qe1ta().s[40]++;
      try {
        const created =
        /* istanbul ignore next */
        (cov_18x62qe1ta().s[41]++, await this.createTemplate(configId, template));
        // Auto-approve default templates
        const approved =
        /* istanbul ignore next */
        (cov_18x62qe1ta().s[42]++, await this.prisma.whatsAppTemplate.update({
          where: {
            id: created.id
          },
          data: {
            status: 'APPROVED'
          }
        }));
        /* istanbul ignore next */
        cov_18x62qe1ta().s[43]++;
        createdTemplates.push(approved);
      } catch (error) {
        /* istanbul ignore next */
        cov_18x62qe1ta().s[44]++;
        this.logger.error(`Error creating default template ${template.name}:`, error);
      }
    }
    /* istanbul ignore next */
    cov_18x62qe1ta().s[45]++;
    this.logger.log(`Created ${createdTemplates.length} default templates for config ${configId}`);
    /* istanbul ignore next */
    cov_18x62qe1ta().s[46]++;
    return createdTemplates;
  }
  /**
   * Get template statistics
   */
  async getTemplateStats(configId) {
    /* istanbul ignore next */
    cov_18x62qe1ta().f[14]++;
    const templates =
    /* istanbul ignore next */
    (cov_18x62qe1ta().s[47]++, await this.getTemplates(configId));
    const stats =
    /* istanbul ignore next */
    (cov_18x62qe1ta().s[48]++, {
      total: templates.length,
      active: templates.filter(t => {
        /* istanbul ignore next */
        cov_18x62qe1ta().f[15]++;
        cov_18x62qe1ta().s[49]++;
        return t.isActive;
      }).length,
      approved: templates.filter(t => {
        /* istanbul ignore next */
        cov_18x62qe1ta().f[16]++;
        cov_18x62qe1ta().s[50]++;
        return t.status === 'APPROVED';
      }).length,
      pending: templates.filter(t => {
        /* istanbul ignore next */
        cov_18x62qe1ta().f[17]++;
        cov_18x62qe1ta().s[51]++;
        return t.status === 'PENDING';
      }).length,
      mostUsed:
      /* istanbul ignore next */
      (cov_18x62qe1ta().b[7][0]++, templates.sort((a, b) => {
        /* istanbul ignore next */
        cov_18x62qe1ta().f[18]++;
        cov_18x62qe1ta().s[52]++;
        return b.usageCount - a.usageCount;
      })[0]) ||
      /* istanbul ignore next */
      (cov_18x62qe1ta().b[7][1]++, null)
    });
    /* istanbul ignore next */
    cov_18x62qe1ta().s[53]++;
    return stats;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,