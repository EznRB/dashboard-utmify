{"version":3,"names":["WhatsAppTemplateService","prisma","constructor","cov_18x62qe1ta","f","s","createTemplate","configId","createDto","template","whatsAppTemplate","create","data","name","category","content","variables","b","language","status","logger","log","error","message","getTemplates","activeOnly","where","isActive","findMany","orderBy","createdAt","getTemplateById","templateId","findFirst","id","NotFoundException","getTemplateByName","updateTemplate","updateDto","update","deleteTemplate","delete","processTemplate","processedContent","Object","entries","forEach","key","value","regex","RegExp","replace","String","extractVariables","match","exec","includes","push","validateTemplateVariables","providedVariables","requiredVariables","missingVariables","filter","variable","isValid","length","incrementUsageCount","usageCount","increment","createDefaultTemplates","defaultTemplates","type","required","campaign_name","source","timestamp","spent","budget","percentage","alert_message","date","sales","conversions","roi","leads","defaultValue","createdTemplates","created","approved","getTemplateStats","templates","stats","total","active","t","pending","mostUsed","sort","a"],"sources":["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\services\\whatsapp-template.service.ts"],"sourcesContent":["import { PrismaService } from './prisma.service';\nimport { WhatsAppTemplate, Prisma } from '@prisma/client';\nimport { logger } from '../utils/logger';\n\nexport interface CreateTemplateDto {\n  name: string;\n  category: 'MARKETING' | 'UTILITY' | 'AUTHENTICATION';\n  content: string;\n  variables?: Record<string, any>;\n  language?: string;\n}\n\nexport interface UpdateTemplateDto {\n  name?: string;\n  content?: string;\n  variables?: Record<string, any>;\n  isActive?: boolean;\n}\n\nexport interface TemplateVariable {\n  name: string;\n  type: 'text' | 'number' | 'date' | 'currency';\n  required: boolean;\n  defaultValue?: string;\n}\n\nexport class WhatsAppTemplateService {\n\n  constructor(private readonly prisma: PrismaService) {}\n\n  /**\n   * Create a new template\n   */\n  async createTemplate(\n    configId: string,\n    createDto: CreateTemplateDto,\n  ): Promise<WhatsAppTemplate> {\n    try {\n      const template = await this.prisma.whatsAppTemplate.create({\n        data: {\n          configId,\n          name: createDto.name,\n          category: createDto.category,\n          content: createDto.content,\n          variables: createDto.variables || {},\n          language: createDto.language || 'pt_BR',\n          status: 'PENDING',\n        },\n      });\n\n      this.logger.log(`Template ${template.name} created for config ${configId}`);\n      return template;\n    } catch (error) {\n      this.logger.error(`Error creating template: ${error.message}`);\n      throw error;\n    }\n  }\n\n  /**\n   * Get all templates for a config\n   */\n  async getTemplates(\n    configId: string,\n    activeOnly: boolean = false,\n  ): Promise<WhatsAppTemplate[]> {\n    const where: Prisma.WhatsAppTemplateWhereInput = {\n      configId,\n    };\n\n    if (activeOnly) {\n      where.isActive = true;\n    }\n\n    return this.prisma.whatsAppTemplate.findMany({\n      where,\n      orderBy: { createdAt: 'desc' },\n    });\n  }\n\n  /**\n   * Get template by ID\n   */\n  async getTemplateById(\n    configId: string,\n    templateId: string,\n  ): Promise<WhatsAppTemplate> {\n    const template = await this.prisma.whatsAppTemplate.findFirst({\n      where: {\n        id: templateId,\n        configId,\n      },\n    });\n\n    if (!template) {\n      throw new NotFoundException('Template not found');\n    }\n\n    return template;\n  }\n\n  /**\n   * Get template by name\n   */\n  async getTemplateByName(\n    configId: string,\n    name: string,\n  ): Promise<WhatsAppTemplate | null> {\n    return this.prisma.whatsAppTemplate.findFirst({\n      where: {\n        configId,\n        name,\n        isActive: true,\n      },\n    });\n  }\n\n  /**\n   * Update template\n   */\n  async updateTemplate(\n    configId: string,\n    templateId: string,\n    updateDto: UpdateTemplateDto,\n  ): Promise<WhatsAppTemplate> {\n    const template = await this.getTemplateById(configId, templateId);\n\n    return this.prisma.whatsAppTemplate.update({\n      where: { id: template.id },\n      data: updateDto,\n    });\n  }\n\n  /**\n   * Delete template\n   */\n  async deleteTemplate(configId: string, templateId: string): Promise<void> {\n    const template = await this.getTemplateById(configId, templateId);\n\n    await this.prisma.whatsAppTemplate.delete({\n      where: { id: template.id },\n    });\n\n    this.logger.log(`Template ${template.name} deleted`);\n  }\n\n  /**\n   * Process template with variables\n   */\n  processTemplate(\n    content: string,\n    variables: Record<string, any> = {},\n  ): string {\n    let processedContent = content;\n\n    // Replace variables in format {{variable_name}}\n    Object.entries(variables).forEach(([key, value]) => {\n      const regex = new RegExp(`{{\\\\s*${key}\\\\s*}}`, 'g');\n      processedContent = processedContent.replace(regex, String(value));\n    });\n\n    return processedContent;\n  }\n\n  /**\n   * Extract variables from template content\n   */\n  extractVariables(content: string): string[] {\n    const regex = /{{\\s*(\\w+)\\s*}}/g;\n    const variables: string[] = [];\n    let match;\n\n    while ((match = regex.exec(content)) !== null) {\n      if (!variables.includes(match[1])) {\n        variables.push(match[1]);\n      }\n    }\n\n    return variables;\n  }\n\n  /**\n   * Validate template variables\n   */\n  validateTemplateVariables(\n    content: string,\n    providedVariables: Record<string, any>,\n  ): { isValid: boolean; missingVariables: string[] } {\n    const requiredVariables = this.extractVariables(content);\n    const missingVariables = requiredVariables.filter(\n      (variable) => !(variable in providedVariables),\n    );\n\n    return {\n      isValid: missingVariables.length === 0,\n      missingVariables,\n    };\n  }\n\n  /**\n   * Increment template usage count\n   */\n  async incrementUsageCount(templateId: string): Promise<void> {\n    await this.prisma.whatsAppTemplate.update({\n      where: { id: templateId },\n      data: {\n        usageCount: {\n          increment: 1,\n        },\n      },\n    });\n  }\n\n  /**\n   * Create default templates for a new config\n   */\n  async createDefaultTemplates(configId: string): Promise<WhatsAppTemplate[]> {\n    const defaultTemplates = [\n      {\n        name: 'conversion_notification',\n        category: 'UTILITY' as const,\n        content: `🎉 *Nova Conversão!*\n\n💰 Valor: R$ {{value}}\n📊 Campanha: {{campaign_name}}\n🎯 Fonte: {{source}}\n⏰ {{timestamp}}\n\n🚀 Parabéns pela venda!`,\n        variables: {\n          value: { type: 'currency', required: true },\n          campaign_name: { type: 'text', required: true },\n          source: { type: 'text', required: true },\n          timestamp: { type: 'date', required: true },\n        },\n      },\n      {\n        name: 'budget_alert',\n        category: 'UTILITY' as const,\n        content: `⚠️ *Alerta de Orçamento*\n\n📊 Campanha: {{campaign_name}}\n💸 Gasto: R$ {{spent}}\n💰 Orçamento: R$ {{budget}}\n📈 Utilizado: {{percentage}}%\n\n{{alert_message}}`,\n        variables: {\n          campaign_name: { type: 'text', required: true },\n          spent: { type: 'currency', required: true },\n          budget: { type: 'currency', required: true },\n          percentage: { type: 'number', required: true },\n          alert_message: { type: 'text', required: true },\n        },\n      },\n      {\n        name: 'daily_report',\n        category: 'UTILITY' as const,\n        content: `📊 *Relatório Diário*\n\n📅 {{date}}\n\n💰 Vendas: R$ {{sales}}\n📈 Conversões: {{conversions}}\n💸 Gastos: R$ {{spent}}\n🎯 ROI: {{roi}}%\n👥 Leads: {{leads}}\n\n📱 Digite /relatorio para mais detalhes`,\n        variables: {\n          date: { type: 'date', required: true },\n          sales: { type: 'currency', required: true },\n          conversions: { type: 'number', required: true },\n          spent: { type: 'currency', required: true },\n          roi: { type: 'number', required: true },\n          leads: { type: 'number', required: true },\n        },\n      },\n      {\n        name: 'welcome_message',\n        category: 'UTILITY' as const,\n        content: `👋 *Bem-vindo ao Utmify!*\n\nOlá {{name}}!\n\n🚀 Sua conta foi criada com sucesso!\n📊 Agora você pode acompanhar suas campanhas em tempo real.\n\n💡 *Comandos úteis:*\n📊 /relatorio - Relatório diário\n💡 /ajuda - Lista de comandos\n\n🎯 Vamos começar a otimizar suas campanhas!`,\n        variables: {\n          name: { type: 'text', required: true, defaultValue: 'usuário' },\n        },\n      },\n      {\n        name: 'help_message',\n        category: 'UTILITY' as const,\n        content: `💡 *Comandos Disponíveis*\n\n📊 */relatorio* - Relatório do dia anterior\n📈 */metricas* - Métricas das campanhas\n💰 */vendas* - Resumo de vendas\n💸 */gastos* - Resumo de gastos\n🎯 */campanhas* - Status das campanhas\n⚙️ */config* - Configurações\n❓ */ajuda* - Esta mensagem\n\n🤖 *Automações Ativas:*\n• Notificações de conversão\n• Alertas de orçamento\n• Relatórios diários (9h)\n\n📞 Precisa de ajuda? Entre em contato conosco!`,\n        variables: {},\n      },\n    ];\n\n    const createdTemplates: WhatsAppTemplate[] = [];\n\n    for (const template of defaultTemplates) {\n      try {\n        const created = await this.createTemplate(configId, template);\n        // Auto-approve default templates\n        const approved = await this.prisma.whatsAppTemplate.update({\n          where: { id: created.id },\n          data: { status: 'APPROVED' },\n        });\n        createdTemplates.push(approved);\n      } catch (error) {\n        this.logger.error(`Error creating default template ${template.name}:`, error);\n      }\n    }\n\n    this.logger.log(`Created ${createdTemplates.length} default templates for config ${configId}`);\n    return createdTemplates;\n  }\n\n  /**\n   * Get template statistics\n   */\n  async getTemplateStats(configId: string): Promise<{\n    total: number;\n    active: number;\n    approved: number;\n    pending: number;\n    mostUsed: WhatsAppTemplate | null;\n  }> {\n    const templates = await this.getTemplates(configId);\n    \n    const stats = {\n      total: templates.length,\n      active: templates.filter(t => t.isActive).length,\n      approved: templates.filter(t => t.status === 'APPROVED').length,\n      pending: templates.filter(t => t.status === 'PENDING').length,\n      mostUsed: templates.sort((a, b) => b.usageCount - a.usageCount)[0] || null,\n    };\n\n    return stats;\n  }\n}"],"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","ignoreList":[]}