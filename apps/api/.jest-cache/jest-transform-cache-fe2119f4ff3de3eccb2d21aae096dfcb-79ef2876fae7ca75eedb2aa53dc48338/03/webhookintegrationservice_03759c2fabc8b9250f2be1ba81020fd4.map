{"version":3,"names":["webhookDispatcher","Logger","logger","cov_1s3898gacn","s","WebhookIntegrationService","handleCampaignEvent","action","campaignData","userId","req","f","eventType","dispatchCampaignEvent","info","campaignId","id","error","handleAdEvent","adData","dispatchAdEvent","adId","handleBudgetEvent","budgetData","dispatchBudgetEvent","budgetId","handleConversionEvent","conversionData","dispatchConversionEvent","conversionId","value","handleIntegrationEvent","integrationData","dispatchIntegrationEvent","integrationId","provider","handleAnalyticsEvent","analyticsData","dispatchAnalyticsEvent","reportId","autoDispatchEvent","responseData","method","toLowerCase","path","includes","b","campaign","success","params","ad","budget","spentPercentage","spent","amount","conversion","integration","report","dispatchCustomEvent","data","metadata","dispatchEvent","dataKeys","Object","keys","batchDispatchEvents","events","promises","map","event","Promise","allSettled","eventCount","length","eventTypes","e","areWebhooksEnabled","stats","getWebhookStats","activeEndpoints","getWebhookConfig","dispatchWebhookEvent","autoDispatchWebhookEvent"],"sources":["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\services\\webhook-integration.service.ts"],"sourcesContent":["import { Request } from 'express'\nimport { webhookDispatcher } from './webhook-dispatcher.service'\nimport { Logger } from '../utils/logger'\nimport { WEBHOOK_EVENT_TYPES } from '../middleware/webhook-events.middleware'\n\nconst logger = new Logger('WebhookIntegrationService')\n\n/**\n * Service to integrate webhook dispatching with existing application endpoints\n */\nexport class WebhookIntegrationService {\n  /**\n   * Handle campaign lifecycle events\n   */\n  static async handleCampaignEvent(\n    action: 'created' | 'updated' | 'deleted',\n    campaignData: any,\n    userId: string,\n    req?: Request\n  ) {\n    try {\n      const eventType = `campaign.${action}`\n      \n      await webhookDispatcher.dispatchCampaignEvent(\n        action,\n        campaignData,\n        userId\n      )\n      \n      logger.info(`Campaign ${action} webhook dispatched`, {\n        campaignId: campaignData.id,\n        userId,\n        eventType\n      })\n    } catch (error) {\n      logger.error(`Error dispatching campaign ${action} webhook:`, error)\n    }\n  }\n\n  /**\n   * Handle ad lifecycle events\n   */\n  static async handleAdEvent(\n    action: 'created' | 'updated' | 'deleted',\n    adData: any,\n    userId: string,\n    req?: Request\n  ) {\n    try {\n      const eventType = `ad.${action}`\n      \n      await webhookDispatcher.dispatchAdEvent(\n        action,\n        adData,\n        userId\n      )\n      \n      logger.info(`Ad ${action} webhook dispatched`, {\n        adId: adData.id,\n        userId,\n        eventType\n      })\n    } catch (error) {\n      logger.error(`Error dispatching ad ${action} webhook:`, error)\n    }\n  }\n\n  /**\n   * Handle budget events\n   */\n  static async handleBudgetEvent(\n    action: 'updated' | 'exceeded' | 'depleted',\n    budgetData: any,\n    userId: string,\n    req?: Request\n  ) {\n    try {\n      await webhookDispatcher.dispatchBudgetEvent(\n        action,\n        budgetData,\n        userId\n      )\n      \n      logger.info(`Budget ${action} webhook dispatched`, {\n        budgetId: budgetData.id,\n        userId,\n        action\n      })\n    } catch (error) {\n      logger.error(`Error dispatching budget ${action} webhook:`, error)\n    }\n  }\n\n  /**\n   * Handle conversion tracking events\n   */\n  static async handleConversionEvent(\n    conversionData: any,\n    userId: string,\n    req?: Request\n  ) {\n    try {\n      await webhookDispatcher.dispatchConversionEvent(\n        conversionData,\n        userId\n      )\n      \n      logger.info('Conversion webhook dispatched', {\n        conversionId: conversionData.id,\n        userId,\n        value: conversionData.value\n      })\n    } catch (error) {\n      logger.error('Error dispatching conversion webhook:', error)\n    }\n  }\n\n  /**\n   * Handle integration events\n   */\n  static async handleIntegrationEvent(\n    action: 'connected' | 'disconnected' | 'error',\n    integrationData: any,\n    userId: string,\n    req?: Request\n  ) {\n    try {\n      await webhookDispatcher.dispatchIntegrationEvent(\n        action,\n        integrationData,\n        userId\n      )\n      \n      logger.info(`Integration ${action} webhook dispatched`, {\n        integrationId: integrationData.id,\n        provider: integrationData.provider,\n        userId,\n        action\n      })\n    } catch (error) {\n      logger.error(`Error dispatching integration ${action} webhook:`, error)\n    }\n  }\n\n  /**\n   * Handle analytics events\n   */\n  static async handleAnalyticsEvent(\n    action: 'report_generated' | 'threshold_reached',\n    analyticsData: any,\n    userId: string,\n    req?: Request\n  ) {\n    try {\n      await webhookDispatcher.dispatchAnalyticsEvent(\n        action,\n        analyticsData,\n        userId\n      )\n      \n      logger.info(`Analytics ${action} webhook dispatched`, {\n        reportId: analyticsData.id,\n        userId,\n        action\n      })\n    } catch (error) {\n      logger.error(`Error dispatching analytics ${action} webhook:`, error)\n    }\n  }\n\n  /**\n   * Auto-detect and dispatch events based on request context\n   */\n  static async autoDispatchEvent(\n    req: Request,\n    responseData: any,\n    userId: string\n  ) {\n    try {\n      const method = req.method.toLowerCase()\n      const path = req.path.toLowerCase()\n      \n      // Campaign events\n      if (path.includes('/campaigns')) {\n        if (method === 'post' && responseData.campaign) {\n          await this.handleCampaignEvent('created', responseData.campaign, userId, req)\n        } else if ((method === 'put' || method === 'patch') && responseData.campaign) {\n          await this.handleCampaignEvent('updated', responseData.campaign, userId, req)\n        } else if (method === 'delete' && responseData.success) {\n          await this.handleCampaignEvent('deleted', { id: req.params.id }, userId, req)\n        }\n      }\n      \n      // Ad events\n      else if (path.includes('/ads')) {\n        if (method === 'post' && responseData.ad) {\n          await this.handleAdEvent('created', responseData.ad, userId, req)\n        } else if ((method === 'put' || method === 'patch') && responseData.ad) {\n          await this.handleAdEvent('updated', responseData.ad, userId, req)\n        } else if (method === 'delete' && responseData.success) {\n          await this.handleAdEvent('deleted', { id: req.params.id }, userId, req)\n        }\n      }\n      \n      // Budget events\n      else if (path.includes('/budget')) {\n        if ((method === 'put' || method === 'patch') && responseData.budget) {\n          // Check for budget thresholds\n          const budget = responseData.budget\n          const spentPercentage = (budget.spent / budget.amount) * 100\n          \n          if (spentPercentage >= 100) {\n            await this.handleBudgetEvent('depleted', budget, userId, req)\n          } else if (spentPercentage >= 80) {\n            await this.handleBudgetEvent('exceeded', budget, userId, req)\n          } else {\n            await this.handleBudgetEvent('updated', budget, userId, req)\n          }\n        }\n      }\n      \n      // Conversion events\n      else if (path.includes('/conversions') || path.includes('/track')) {\n        if (method === 'post' && responseData.conversion) {\n          await this.handleConversionEvent(responseData.conversion, userId, req)\n        }\n      }\n      \n      // Integration events\n      else if (path.includes('/integrations')) {\n        if (method === 'post' && responseData.integration) {\n          await this.handleIntegrationEvent('connected', responseData.integration, userId, req)\n        } else if (method === 'delete' && responseData.success) {\n          await this.handleIntegrationEvent('disconnected', { id: req.params.id }, userId, req)\n        }\n      }\n      \n      // Analytics events\n      else if (path.includes('/analytics') || path.includes('/reports')) {\n        if (method === 'post' && responseData.report) {\n          await this.handleAnalyticsEvent('report_generated', responseData.report, userId, req)\n        }\n      }\n      \n    } catch (error) {\n      logger.error('Error in auto-dispatch webhook event:', error)\n    }\n  }\n\n  /**\n   * Dispatch custom event\n   */\n  static async dispatchCustomEvent(\n    eventType: string,\n    data: any,\n    userId: string,\n    metadata?: Record<string, any>\n  ) {\n    try {\n      await webhookDispatcher.dispatchEvent(eventType, data, userId, metadata)\n      \n      logger.info('Custom webhook event dispatched', {\n        eventType,\n        userId,\n        dataKeys: Object.keys(data)\n      })\n    } catch (error) {\n      logger.error('Error dispatching custom webhook event:', error)\n      throw error\n    }\n  }\n\n  /**\n   * Batch dispatch multiple events\n   */\n  static async batchDispatchEvents(\n    events: Array<{\n      eventType: string\n      data: any\n      userId: string\n      metadata?: Record<string, any>\n    }>\n  ) {\n    try {\n      const promises = events.map(event => \n        webhookDispatcher.dispatchEvent(\n          event.eventType,\n          event.data,\n          event.userId,\n          event.metadata\n        )\n      )\n      \n      await Promise.allSettled(promises)\n      \n      logger.info('Batch webhook events dispatched', {\n        eventCount: events.length,\n        eventTypes: events.map(e => e.eventType)\n      })\n    } catch (error) {\n      logger.error('Error in batch dispatch webhook events:', error)\n      throw error\n    }\n  }\n\n  /**\n   * Check if webhooks are enabled for user\n   */\n  static async areWebhooksEnabled(userId: string): Promise<boolean> {\n    try {\n      const stats = await webhookDispatcher.getWebhookStats(userId)\n      return stats.activeEndpoints > 0\n    } catch (error) {\n      logger.error('Error checking webhook status:', error)\n      return false\n    }\n  }\n\n  /**\n   * Get webhook configuration for user\n   */\n  static async getWebhookConfig(userId: string) {\n    try {\n      return await webhookDispatcher.getWebhookStats(userId)\n    } catch (error) {\n      logger.error('Error getting webhook config:', error)\n      return null\n    }\n  }\n}\n\n/**\n * Helper function for manual event dispatching in controllers\n */\nexport async function dispatchWebhookEvent(\n  eventType: string,\n  data: any,\n  userId: string,\n  metadata?: Record<string, any>\n) {\n  return WebhookIntegrationService.dispatchCustomEvent(eventType, data, userId, metadata)\n}\n\n/**\n * Helper function for auto-dispatching based on request context\n */\nexport async function autoDispatchWebhookEvent(\n  req: Request,\n  responseData: any,\n  userId: string\n) {\n  return WebhookIntegrationService.autoDispatchEvent(req, responseData, userId)\n}"],"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","ignoreList":[]}