9e9997b42dd89ca5d5faf7a80a087f53
/* istanbul ignore next */
function cov_1s3898gacn() {
  var path = "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\services\\webhook-integration.service.ts";
  var hash = "ecd3b1ab3b4d6b2a3d39a86ed9b2a3f319bae257";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\services\\webhook-integration.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 15
        },
        end: {
          line: 3,
          column: 54
        }
      },
      "1": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 23,
          column: 9
        }
      },
      "2": {
        start: {
          line: 13,
          column: 30
        },
        end: {
          line: 13,
          column: 50
        }
      },
      "3": {
        start: {
          line: 14,
          column: 12
        },
        end: {
          line: 14,
          column: 88
        }
      },
      "4": {
        start: {
          line: 15,
          column: 12
        },
        end: {
          line: 19,
          column: 15
        }
      },
      "5": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 81
        }
      },
      "6": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 40,
          column: 9
        }
      },
      "7": {
        start: {
          line: 30,
          column: 30
        },
        end: {
          line: 30,
          column: 44
        }
      },
      "8": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 76
        }
      },
      "9": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 36,
          column: 15
        }
      },
      "10": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 75
        }
      },
      "11": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "12": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 84
        }
      },
      "13": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 52,
          column: 15
        }
      },
      "14": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 79
        }
      },
      "15": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 72,
          column: 9
        }
      },
      "16": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 84
        }
      },
      "17": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 68,
          column: 15
        }
      },
      "18": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 73
        }
      },
      "19": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 89,
          column: 9
        }
      },
      "20": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 94
        }
      },
      "21": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 85,
          column: 15
        }
      },
      "22": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 84
        }
      },
      "23": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "24": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 90
        }
      },
      "25": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 101,
          column: 15
        }
      },
      "26": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 82
        }
      },
      "27": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 179,
          column: 9
        }
      },
      "28": {
        start: {
          line: 112,
          column: 27
        },
        end: {
          line: 112,
          column: 51
        }
      },
      "29": {
        start: {
          line: 113,
          column: 25
        },
        end: {
          line: 113,
          column: 47
        }
      },
      "30": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 175,
          column: 13
        }
      },
      "31": {
        start: {
          line: 116,
          column: 16
        },
        end: {
          line: 124,
          column: 17
        }
      },
      "32": {
        start: {
          line: 117,
          column: 20
        },
        end: {
          line: 117,
          column: 98
        }
      },
      "33": {
        start: {
          line: 119,
          column: 21
        },
        end: {
          line: 124,
          column: 17
        }
      },
      "34": {
        start: {
          line: 120,
          column: 20
        },
        end: {
          line: 120,
          column: 98
        }
      },
      "35": {
        start: {
          line: 122,
          column: 21
        },
        end: {
          line: 124,
          column: 17
        }
      },
      "36": {
        start: {
          line: 123,
          column: 20
        },
        end: {
          line: 123,
          column: 98
        }
      },
      "37": {
        start: {
          line: 127,
          column: 17
        },
        end: {
          line: 175,
          column: 13
        }
      },
      "38": {
        start: {
          line: 128,
          column: 16
        },
        end: {
          line: 136,
          column: 17
        }
      },
      "39": {
        start: {
          line: 129,
          column: 20
        },
        end: {
          line: 129,
          column: 86
        }
      },
      "40": {
        start: {
          line: 131,
          column: 21
        },
        end: {
          line: 136,
          column: 17
        }
      },
      "41": {
        start: {
          line: 132,
          column: 20
        },
        end: {
          line: 132,
          column: 86
        }
      },
      "42": {
        start: {
          line: 134,
          column: 21
        },
        end: {
          line: 136,
          column: 17
        }
      },
      "43": {
        start: {
          line: 135,
          column: 20
        },
        end: {
          line: 135,
          column: 92
        }
      },
      "44": {
        start: {
          line: 139,
          column: 17
        },
        end: {
          line: 175,
          column: 13
        }
      },
      "45": {
        start: {
          line: 140,
          column: 16
        },
        end: {
          line: 153,
          column: 17
        }
      },
      "46": {
        start: {
          line: 142,
          column: 35
        },
        end: {
          line: 142,
          column: 54
        }
      },
      "47": {
        start: {
          line: 143,
          column: 44
        },
        end: {
          line: 143,
          column: 80
        }
      },
      "48": {
        start: {
          line: 144,
          column: 20
        },
        end: {
          line: 152,
          column: 21
        }
      },
      "49": {
        start: {
          line: 145,
          column: 24
        },
        end: {
          line: 145,
          column: 86
        }
      },
      "50": {
        start: {
          line: 147,
          column: 25
        },
        end: {
          line: 152,
          column: 21
        }
      },
      "51": {
        start: {
          line: 148,
          column: 24
        },
        end: {
          line: 148,
          column: 86
        }
      },
      "52": {
        start: {
          line: 151,
          column: 24
        },
        end: {
          line: 151,
          column: 85
        }
      },
      "53": {
        start: {
          line: 156,
          column: 17
        },
        end: {
          line: 175,
          column: 13
        }
      },
      "54": {
        start: {
          line: 157,
          column: 16
        },
        end: {
          line: 159,
          column: 17
        }
      },
      "55": {
        start: {
          line: 158,
          column: 20
        },
        end: {
          line: 158,
          column: 91
        }
      },
      "56": {
        start: {
          line: 162,
          column: 17
        },
        end: {
          line: 175,
          column: 13
        }
      },
      "57": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 168,
          column: 17
        }
      },
      "58": {
        start: {
          line: 164,
          column: 20
        },
        end: {
          line: 164,
          column: 106
        }
      },
      "59": {
        start: {
          line: 166,
          column: 21
        },
        end: {
          line: 168,
          column: 17
        }
      },
      "60": {
        start: {
          line: 167,
          column: 20
        },
        end: {
          line: 167,
          column: 106
        }
      },
      "61": {
        start: {
          line: 171,
          column: 17
        },
        end: {
          line: 175,
          column: 13
        }
      },
      "62": {
        start: {
          line: 172,
          column: 16
        },
        end: {
          line: 174,
          column: 17
        }
      },
      "63": {
        start: {
          line: 173,
          column: 20
        },
        end: {
          line: 173,
          column: 106
        }
      },
      "64": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 178,
          column: 73
        }
      },
      "65": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 196,
          column: 9
        }
      },
      "66": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 186,
          column: 85
        }
      },
      "67": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 191,
          column: 15
        }
      },
      "68": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 75
        }
      },
      "69": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 24
        }
      },
      "70": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 213,
          column: 9
        }
      },
      "71": {
        start: {
          line: 203,
          column: 29
        },
        end: {
          line: 203,
          column: 140
        }
      },
      "72": {
        start: {
          line: 203,
          column: 49
        },
        end: {
          line: 203,
          column: 139
        }
      },
      "73": {
        start: {
          line: 204,
          column: 12
        },
        end: {
          line: 204,
          column: 47
        }
      },
      "74": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 208,
          column: 15
        }
      },
      "75": {
        start: {
          line: 207,
          column: 44
        },
        end: {
          line: 207,
          column: 55
        }
      },
      "76": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 211,
          column: 75
        }
      },
      "77": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 212,
          column: 24
        }
      },
      "78": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 226,
          column: 9
        }
      },
      "79": {
        start: {
          line: 220,
          column: 26
        },
        end: {
          line: 220,
          column: 73
        }
      },
      "80": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 221,
          column: 45
        }
      },
      "81": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 224,
          column: 66
        }
      },
      "82": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 225,
          column: 25
        }
      },
      "83": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 238,
          column: 9
        }
      },
      "84": {
        start: {
          line: 233,
          column: 12
        },
        end: {
          line: 233,
          column: 67
        }
      },
      "85": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 236,
          column: 65
        }
      },
      "86": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 237,
          column: 24
        }
      },
      "87": {
        start: {
          line: 245,
          column: 4
        },
        end: {
          line: 245,
          column: 92
        }
      },
      "88": {
        start: {
          line: 251,
          column: 4
        },
        end: {
          line: 251,
          column: 82
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        loc: {
          start: {
            line: 11,
            column: 72
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 60
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 28
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        loc: {
          start: {
            line: 45,
            column: 68
          },
          end: {
            line: 57,
            column: 5
          }
        },
        line: 45
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        loc: {
          start: {
            line: 61,
            column: 68
          },
          end: {
            line: 73,
            column: 5
          }
        },
        line: 61
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 77,
            column: 5
          }
        },
        loc: {
          start: {
            line: 77,
            column: 78
          },
          end: {
            line: 90,
            column: 5
          }
        },
        line: 77
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 94,
            column: 4
          },
          end: {
            line: 94,
            column: 5
          }
        },
        loc: {
          start: {
            line: 94,
            column: 74
          },
          end: {
            line: 106,
            column: 5
          }
        },
        line: 94
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 110,
            column: 5
          }
        },
        loc: {
          start: {
            line: 110,
            column: 62
          },
          end: {
            line: 180,
            column: 5
          }
        },
        line: 110
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 184,
            column: 4
          },
          end: {
            line: 184,
            column: 5
          }
        },
        loc: {
          start: {
            line: 184,
            column: 72
          },
          end: {
            line: 197,
            column: 5
          }
        },
        line: 184
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 201,
            column: 4
          },
          end: {
            line: 201,
            column: 5
          }
        },
        loc: {
          start: {
            line: 201,
            column: 45
          },
          end: {
            line: 214,
            column: 5
          }
        },
        line: 201
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 203,
            column: 40
          },
          end: {
            line: 203,
            column: 41
          }
        },
        loc: {
          start: {
            line: 203,
            column: 49
          },
          end: {
            line: 203,
            column: 139
          }
        },
        line: 203
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 207,
            column: 39
          },
          end: {
            line: 207,
            column: 40
          }
        },
        loc: {
          start: {
            line: 207,
            column: 44
          },
          end: {
            line: 207,
            column: 55
          }
        },
        line: 207
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 218,
            column: 4
          },
          end: {
            line: 218,
            column: 5
          }
        },
        loc: {
          start: {
            line: 218,
            column: 44
          },
          end: {
            line: 227,
            column: 5
          }
        },
        line: 218
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 231,
            column: 4
          },
          end: {
            line: 231,
            column: 5
          }
        },
        loc: {
          start: {
            line: 231,
            column: 42
          },
          end: {
            line: 239,
            column: 5
          }
        },
        line: 231
      },
      "13": {
        name: "dispatchWebhookEvent",
        decl: {
          start: {
            line: 244,
            column: 22
          },
          end: {
            line: 244,
            column: 42
          }
        },
        loc: {
          start: {
            line: 244,
            column: 78
          },
          end: {
            line: 246,
            column: 1
          }
        },
        line: 244
      },
      "14": {
        name: "autoDispatchWebhookEvent",
        decl: {
          start: {
            line: 250,
            column: 22
          },
          end: {
            line: 250,
            column: 46
          }
        },
        loc: {
          start: {
            line: 250,
            column: 74
          },
          end: {
            line: 252,
            column: 1
          }
        },
        line: 250
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 115,
            column: 12
          },
          end: {
            line: 175,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 12
          },
          end: {
            line: 175,
            column: 13
          }
        }, {
          start: {
            line: 127,
            column: 17
          },
          end: {
            line: 175,
            column: 13
          }
        }],
        line: 115
      },
      "1": {
        loc: {
          start: {
            line: 116,
            column: 16
          },
          end: {
            line: 124,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 16
          },
          end: {
            line: 124,
            column: 17
          }
        }, {
          start: {
            line: 119,
            column: 21
          },
          end: {
            line: 124,
            column: 17
          }
        }],
        line: 116
      },
      "2": {
        loc: {
          start: {
            line: 116,
            column: 20
          },
          end: {
            line: 116,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 20
          },
          end: {
            line: 116,
            column: 37
          }
        }, {
          start: {
            line: 116,
            column: 41
          },
          end: {
            line: 116,
            column: 62
          }
        }],
        line: 116
      },
      "3": {
        loc: {
          start: {
            line: 119,
            column: 21
          },
          end: {
            line: 124,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 21
          },
          end: {
            line: 124,
            column: 17
          }
        }, {
          start: {
            line: 122,
            column: 21
          },
          end: {
            line: 124,
            column: 17
          }
        }],
        line: 119
      },
      "4": {
        loc: {
          start: {
            line: 119,
            column: 25
          },
          end: {
            line: 119,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 119,
            column: 26
          },
          end: {
            line: 119,
            column: 42
          }
        }, {
          start: {
            line: 119,
            column: 46
          },
          end: {
            line: 119,
            column: 64
          }
        }, {
          start: {
            line: 119,
            column: 69
          },
          end: {
            line: 119,
            column: 90
          }
        }],
        line: 119
      },
      "5": {
        loc: {
          start: {
            line: 122,
            column: 21
          },
          end: {
            line: 124,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 21
          },
          end: {
            line: 124,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "6": {
        loc: {
          start: {
            line: 122,
            column: 25
          },
          end: {
            line: 122,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 122,
            column: 25
          },
          end: {
            line: 122,
            column: 44
          }
        }, {
          start: {
            line: 122,
            column: 48
          },
          end: {
            line: 122,
            column: 68
          }
        }],
        line: 122
      },
      "7": {
        loc: {
          start: {
            line: 127,
            column: 17
          },
          end: {
            line: 175,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 17
          },
          end: {
            line: 175,
            column: 13
          }
        }, {
          start: {
            line: 139,
            column: 17
          },
          end: {
            line: 175,
            column: 13
          }
        }],
        line: 127
      },
      "8": {
        loc: {
          start: {
            line: 128,
            column: 16
          },
          end: {
            line: 136,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 16
          },
          end: {
            line: 136,
            column: 17
          }
        }, {
          start: {
            line: 131,
            column: 21
          },
          end: {
            line: 136,
            column: 17
          }
        }],
        line: 128
      },
      "9": {
        loc: {
          start: {
            line: 128,
            column: 20
          },
          end: {
            line: 128,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 128,
            column: 20
          },
          end: {
            line: 128,
            column: 37
          }
        }, {
          start: {
            line: 128,
            column: 41
          },
          end: {
            line: 128,
            column: 56
          }
        }],
        line: 128
      },
      "10": {
        loc: {
          start: {
            line: 131,
            column: 21
          },
          end: {
            line: 136,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 21
          },
          end: {
            line: 136,
            column: 17
          }
        }, {
          start: {
            line: 134,
            column: 21
          },
          end: {
            line: 136,
            column: 17
          }
        }],
        line: 131
      },
      "11": {
        loc: {
          start: {
            line: 131,
            column: 25
          },
          end: {
            line: 131,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 131,
            column: 26
          },
          end: {
            line: 131,
            column: 42
          }
        }, {
          start: {
            line: 131,
            column: 46
          },
          end: {
            line: 131,
            column: 64
          }
        }, {
          start: {
            line: 131,
            column: 69
          },
          end: {
            line: 131,
            column: 84
          }
        }],
        line: 131
      },
      "12": {
        loc: {
          start: {
            line: 134,
            column: 21
          },
          end: {
            line: 136,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 21
          },
          end: {
            line: 136,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "13": {
        loc: {
          start: {
            line: 134,
            column: 25
          },
          end: {
            line: 134,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 134,
            column: 25
          },
          end: {
            line: 134,
            column: 44
          }
        }, {
          start: {
            line: 134,
            column: 48
          },
          end: {
            line: 134,
            column: 68
          }
        }],
        line: 134
      },
      "14": {
        loc: {
          start: {
            line: 139,
            column: 17
          },
          end: {
            line: 175,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 17
          },
          end: {
            line: 175,
            column: 13
          }
        }, {
          start: {
            line: 156,
            column: 17
          },
          end: {
            line: 175,
            column: 13
          }
        }],
        line: 139
      },
      "15": {
        loc: {
          start: {
            line: 140,
            column: 16
          },
          end: {
            line: 153,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 16
          },
          end: {
            line: 153,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "16": {
        loc: {
          start: {
            line: 140,
            column: 20
          },
          end: {
            line: 140,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 140,
            column: 21
          },
          end: {
            line: 140,
            column: 37
          }
        }, {
          start: {
            line: 140,
            column: 41
          },
          end: {
            line: 140,
            column: 59
          }
        }, {
          start: {
            line: 140,
            column: 64
          },
          end: {
            line: 140,
            column: 83
          }
        }],
        line: 140
      },
      "17": {
        loc: {
          start: {
            line: 144,
            column: 20
          },
          end: {
            line: 152,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 20
          },
          end: {
            line: 152,
            column: 21
          }
        }, {
          start: {
            line: 147,
            column: 25
          },
          end: {
            line: 152,
            column: 21
          }
        }],
        line: 144
      },
      "18": {
        loc: {
          start: {
            line: 147,
            column: 25
          },
          end: {
            line: 152,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 25
          },
          end: {
            line: 152,
            column: 21
          }
        }, {
          start: {
            line: 150,
            column: 25
          },
          end: {
            line: 152,
            column: 21
          }
        }],
        line: 147
      },
      "19": {
        loc: {
          start: {
            line: 156,
            column: 17
          },
          end: {
            line: 175,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 17
          },
          end: {
            line: 175,
            column: 13
          }
        }, {
          start: {
            line: 162,
            column: 17
          },
          end: {
            line: 175,
            column: 13
          }
        }],
        line: 156
      },
      "20": {
        loc: {
          start: {
            line: 156,
            column: 21
          },
          end: {
            line: 156,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 156,
            column: 21
          },
          end: {
            line: 156,
            column: 50
          }
        }, {
          start: {
            line: 156,
            column: 54
          },
          end: {
            line: 156,
            column: 77
          }
        }],
        line: 156
      },
      "21": {
        loc: {
          start: {
            line: 157,
            column: 16
          },
          end: {
            line: 159,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 16
          },
          end: {
            line: 159,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 157
      },
      "22": {
        loc: {
          start: {
            line: 157,
            column: 20
          },
          end: {
            line: 157,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 157,
            column: 20
          },
          end: {
            line: 157,
            column: 37
          }
        }, {
          start: {
            line: 157,
            column: 41
          },
          end: {
            line: 157,
            column: 64
          }
        }],
        line: 157
      },
      "23": {
        loc: {
          start: {
            line: 162,
            column: 17
          },
          end: {
            line: 175,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 17
          },
          end: {
            line: 175,
            column: 13
          }
        }, {
          start: {
            line: 171,
            column: 17
          },
          end: {
            line: 175,
            column: 13
          }
        }],
        line: 162
      },
      "24": {
        loc: {
          start: {
            line: 163,
            column: 16
          },
          end: {
            line: 168,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 16
          },
          end: {
            line: 168,
            column: 17
          }
        }, {
          start: {
            line: 166,
            column: 21
          },
          end: {
            line: 168,
            column: 17
          }
        }],
        line: 163
      },
      "25": {
        loc: {
          start: {
            line: 163,
            column: 20
          },
          end: {
            line: 163,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 163,
            column: 20
          },
          end: {
            line: 163,
            column: 37
          }
        }, {
          start: {
            line: 163,
            column: 41
          },
          end: {
            line: 163,
            column: 65
          }
        }],
        line: 163
      },
      "26": {
        loc: {
          start: {
            line: 166,
            column: 21
          },
          end: {
            line: 168,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 21
          },
          end: {
            line: 168,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 166
      },
      "27": {
        loc: {
          start: {
            line: 166,
            column: 25
          },
          end: {
            line: 166,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 166,
            column: 25
          },
          end: {
            line: 166,
            column: 44
          }
        }, {
          start: {
            line: 166,
            column: 48
          },
          end: {
            line: 166,
            column: 68
          }
        }],
        line: 166
      },
      "28": {
        loc: {
          start: {
            line: 171,
            column: 17
          },
          end: {
            line: 175,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 17
          },
          end: {
            line: 175,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 171
      },
      "29": {
        loc: {
          start: {
            line: 171,
            column: 21
          },
          end: {
            line: 171,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 171,
            column: 21
          },
          end: {
            line: 171,
            column: 48
          }
        }, {
          start: {
            line: 171,
            column: 52
          },
          end: {
            line: 171,
            column: 77
          }
        }],
        line: 171
      },
      "30": {
        loc: {
          start: {
            line: 172,
            column: 16
          },
          end: {
            line: 174,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 16
          },
          end: {
            line: 174,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "31": {
        loc: {
          start: {
            line: 172,
            column: 20
          },
          end: {
            line: 172,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 172,
            column: 20
          },
          end: {
            line: 172,
            column: 37
          }
        }, {
          start: {
            line: 172,
            column: 41
          },
          end: {
            line: 172,
            column: 60
          }
        }],
        line: 172
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\services\\webhook-integration.service.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\services\\webhook-integration.service.ts"],
      sourcesContent: ["import { Request } from 'express'\nimport { webhookDispatcher } from './webhook-dispatcher.service'\nimport { Logger } from '../utils/logger'\nimport { WEBHOOK_EVENT_TYPES } from '../middleware/webhook-events.middleware'\n\nconst logger = new Logger('WebhookIntegrationService')\n\n/**\n * Service to integrate webhook dispatching with existing application endpoints\n */\nexport class WebhookIntegrationService {\n  /**\n   * Handle campaign lifecycle events\n   */\n  static async handleCampaignEvent(\n    action: 'created' | 'updated' | 'deleted',\n    campaignData: any,\n    userId: string,\n    req?: Request\n  ) {\n    try {\n      const eventType = `campaign.${action}`\n      \n      await webhookDispatcher.dispatchCampaignEvent(\n        action,\n        campaignData,\n        userId\n      )\n      \n      logger.info(`Campaign ${action} webhook dispatched`, {\n        campaignId: campaignData.id,\n        userId,\n        eventType\n      })\n    } catch (error) {\n      logger.error(`Error dispatching campaign ${action} webhook:`, error)\n    }\n  }\n\n  /**\n   * Handle ad lifecycle events\n   */\n  static async handleAdEvent(\n    action: 'created' | 'updated' | 'deleted',\n    adData: any,\n    userId: string,\n    req?: Request\n  ) {\n    try {\n      const eventType = `ad.${action}`\n      \n      await webhookDispatcher.dispatchAdEvent(\n        action,\n        adData,\n        userId\n      )\n      \n      logger.info(`Ad ${action} webhook dispatched`, {\n        adId: adData.id,\n        userId,\n        eventType\n      })\n    } catch (error) {\n      logger.error(`Error dispatching ad ${action} webhook:`, error)\n    }\n  }\n\n  /**\n   * Handle budget events\n   */\n  static async handleBudgetEvent(\n    action: 'updated' | 'exceeded' | 'depleted',\n    budgetData: any,\n    userId: string,\n    req?: Request\n  ) {\n    try {\n      await webhookDispatcher.dispatchBudgetEvent(\n        action,\n        budgetData,\n        userId\n      )\n      \n      logger.info(`Budget ${action} webhook dispatched`, {\n        budgetId: budgetData.id,\n        userId,\n        action\n      })\n    } catch (error) {\n      logger.error(`Error dispatching budget ${action} webhook:`, error)\n    }\n  }\n\n  /**\n   * Handle conversion tracking events\n   */\n  static async handleConversionEvent(\n    conversionData: any,\n    userId: string,\n    req?: Request\n  ) {\n    try {\n      await webhookDispatcher.dispatchConversionEvent(\n        conversionData,\n        userId\n      )\n      \n      logger.info('Conversion webhook dispatched', {\n        conversionId: conversionData.id,\n        userId,\n        value: conversionData.value\n      })\n    } catch (error) {\n      logger.error('Error dispatching conversion webhook:', error)\n    }\n  }\n\n  /**\n   * Handle integration events\n   */\n  static async handleIntegrationEvent(\n    action: 'connected' | 'disconnected' | 'error',\n    integrationData: any,\n    userId: string,\n    req?: Request\n  ) {\n    try {\n      await webhookDispatcher.dispatchIntegrationEvent(\n        action,\n        integrationData,\n        userId\n      )\n      \n      logger.info(`Integration ${action} webhook dispatched`, {\n        integrationId: integrationData.id,\n        provider: integrationData.provider,\n        userId,\n        action\n      })\n    } catch (error) {\n      logger.error(`Error dispatching integration ${action} webhook:`, error)\n    }\n  }\n\n  /**\n   * Handle analytics events\n   */\n  static async handleAnalyticsEvent(\n    action: 'report_generated' | 'threshold_reached',\n    analyticsData: any,\n    userId: string,\n    req?: Request\n  ) {\n    try {\n      await webhookDispatcher.dispatchAnalyticsEvent(\n        action,\n        analyticsData,\n        userId\n      )\n      \n      logger.info(`Analytics ${action} webhook dispatched`, {\n        reportId: analyticsData.id,\n        userId,\n        action\n      })\n    } catch (error) {\n      logger.error(`Error dispatching analytics ${action} webhook:`, error)\n    }\n  }\n\n  /**\n   * Auto-detect and dispatch events based on request context\n   */\n  static async autoDispatchEvent(\n    req: Request,\n    responseData: any,\n    userId: string\n  ) {\n    try {\n      const method = req.method.toLowerCase()\n      const path = req.path.toLowerCase()\n      \n      // Campaign events\n      if (path.includes('/campaigns')) {\n        if (method === 'post' && responseData.campaign) {\n          await this.handleCampaignEvent('created', responseData.campaign, userId, req)\n        } else if ((method === 'put' || method === 'patch') && responseData.campaign) {\n          await this.handleCampaignEvent('updated', responseData.campaign, userId, req)\n        } else if (method === 'delete' && responseData.success) {\n          await this.handleCampaignEvent('deleted', { id: req.params.id }, userId, req)\n        }\n      }\n      \n      // Ad events\n      else if (path.includes('/ads')) {\n        if (method === 'post' && responseData.ad) {\n          await this.handleAdEvent('created', responseData.ad, userId, req)\n        } else if ((method === 'put' || method === 'patch') && responseData.ad) {\n          await this.handleAdEvent('updated', responseData.ad, userId, req)\n        } else if (method === 'delete' && responseData.success) {\n          await this.handleAdEvent('deleted', { id: req.params.id }, userId, req)\n        }\n      }\n      \n      // Budget events\n      else if (path.includes('/budget')) {\n        if ((method === 'put' || method === 'patch') && responseData.budget) {\n          // Check for budget thresholds\n          const budget = responseData.budget\n          const spentPercentage = (budget.spent / budget.amount) * 100\n          \n          if (spentPercentage >= 100) {\n            await this.handleBudgetEvent('depleted', budget, userId, req)\n          } else if (spentPercentage >= 80) {\n            await this.handleBudgetEvent('exceeded', budget, userId, req)\n          } else {\n            await this.handleBudgetEvent('updated', budget, userId, req)\n          }\n        }\n      }\n      \n      // Conversion events\n      else if (path.includes('/conversions') || path.includes('/track')) {\n        if (method === 'post' && responseData.conversion) {\n          await this.handleConversionEvent(responseData.conversion, userId, req)\n        }\n      }\n      \n      // Integration events\n      else if (path.includes('/integrations')) {\n        if (method === 'post' && responseData.integration) {\n          await this.handleIntegrationEvent('connected', responseData.integration, userId, req)\n        } else if (method === 'delete' && responseData.success) {\n          await this.handleIntegrationEvent('disconnected', { id: req.params.id }, userId, req)\n        }\n      }\n      \n      // Analytics events\n      else if (path.includes('/analytics') || path.includes('/reports')) {\n        if (method === 'post' && responseData.report) {\n          await this.handleAnalyticsEvent('report_generated', responseData.report, userId, req)\n        }\n      }\n      \n    } catch (error) {\n      logger.error('Error in auto-dispatch webhook event:', error)\n    }\n  }\n\n  /**\n   * Dispatch custom event\n   */\n  static async dispatchCustomEvent(\n    eventType: string,\n    data: any,\n    userId: string,\n    metadata?: Record<string, any>\n  ) {\n    try {\n      await webhookDispatcher.dispatchEvent(eventType, data, userId, metadata)\n      \n      logger.info('Custom webhook event dispatched', {\n        eventType,\n        userId,\n        dataKeys: Object.keys(data)\n      })\n    } catch (error) {\n      logger.error('Error dispatching custom webhook event:', error)\n      throw error\n    }\n  }\n\n  /**\n   * Batch dispatch multiple events\n   */\n  static async batchDispatchEvents(\n    events: Array<{\n      eventType: string\n      data: any\n      userId: string\n      metadata?: Record<string, any>\n    }>\n  ) {\n    try {\n      const promises = events.map(event => \n        webhookDispatcher.dispatchEvent(\n          event.eventType,\n          event.data,\n          event.userId,\n          event.metadata\n        )\n      )\n      \n      await Promise.allSettled(promises)\n      \n      logger.info('Batch webhook events dispatched', {\n        eventCount: events.length,\n        eventTypes: events.map(e => e.eventType)\n      })\n    } catch (error) {\n      logger.error('Error in batch dispatch webhook events:', error)\n      throw error\n    }\n  }\n\n  /**\n   * Check if webhooks are enabled for user\n   */\n  static async areWebhooksEnabled(userId: string): Promise<boolean> {\n    try {\n      const stats = await webhookDispatcher.getWebhookStats(userId)\n      return stats.activeEndpoints > 0\n    } catch (error) {\n      logger.error('Error checking webhook status:', error)\n      return false\n    }\n  }\n\n  /**\n   * Get webhook configuration for user\n   */\n  static async getWebhookConfig(userId: string) {\n    try {\n      return await webhookDispatcher.getWebhookStats(userId)\n    } catch (error) {\n      logger.error('Error getting webhook config:', error)\n      return null\n    }\n  }\n}\n\n/**\n * Helper function for manual event dispatching in controllers\n */\nexport async function dispatchWebhookEvent(\n  eventType: string,\n  data: any,\n  userId: string,\n  metadata?: Record<string, any>\n) {\n  return WebhookIntegrationService.dispatchCustomEvent(eventType, data, userId, metadata)\n}\n\n/**\n * Helper function for auto-dispatching based on request context\n */\nexport async function autoDispatchWebhookEvent(\n  req: Request,\n  responseData: any,\n  userId: string\n) {\n  return WebhookIntegrationService.autoDispatchEvent(req, responseData, userId)\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ecd3b1ab3b4d6b2a3d39a86ed9b2a3f319bae257"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1s3898gacn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1s3898gacn();
import { webhookDispatcher } from './webhook-dispatcher.service';
import { Logger } from '../utils/logger';
const logger =
/* istanbul ignore next */
(cov_1s3898gacn().s[0]++, new Logger('WebhookIntegrationService'));
/**
 * Service to integrate webhook dispatching with existing application endpoints
 */
export class WebhookIntegrationService {
  /**
   * Handle campaign lifecycle events
   */
  static async handleCampaignEvent(action, campaignData, userId, req) {
    /* istanbul ignore next */
    cov_1s3898gacn().f[0]++;
    cov_1s3898gacn().s[1]++;
    try {
      const eventType =
      /* istanbul ignore next */
      (cov_1s3898gacn().s[2]++, `campaign.${action}`);
      /* istanbul ignore next */
      cov_1s3898gacn().s[3]++;
      await webhookDispatcher.dispatchCampaignEvent(action, campaignData, userId);
      /* istanbul ignore next */
      cov_1s3898gacn().s[4]++;
      logger.info(`Campaign ${action} webhook dispatched`, {
        campaignId: campaignData.id,
        userId,
        eventType
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1s3898gacn().s[5]++;
      logger.error(`Error dispatching campaign ${action} webhook:`, error);
    }
  }
  /**
   * Handle ad lifecycle events
   */
  static async handleAdEvent(action, adData, userId, req) {
    /* istanbul ignore next */
    cov_1s3898gacn().f[1]++;
    cov_1s3898gacn().s[6]++;
    try {
      const eventType =
      /* istanbul ignore next */
      (cov_1s3898gacn().s[7]++, `ad.${action}`);
      /* istanbul ignore next */
      cov_1s3898gacn().s[8]++;
      await webhookDispatcher.dispatchAdEvent(action, adData, userId);
      /* istanbul ignore next */
      cov_1s3898gacn().s[9]++;
      logger.info(`Ad ${action} webhook dispatched`, {
        adId: adData.id,
        userId,
        eventType
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1s3898gacn().s[10]++;
      logger.error(`Error dispatching ad ${action} webhook:`, error);
    }
  }
  /**
   * Handle budget events
   */
  static async handleBudgetEvent(action, budgetData, userId, req) {
    /* istanbul ignore next */
    cov_1s3898gacn().f[2]++;
    cov_1s3898gacn().s[11]++;
    try {
      /* istanbul ignore next */
      cov_1s3898gacn().s[12]++;
      await webhookDispatcher.dispatchBudgetEvent(action, budgetData, userId);
      /* istanbul ignore next */
      cov_1s3898gacn().s[13]++;
      logger.info(`Budget ${action} webhook dispatched`, {
        budgetId: budgetData.id,
        userId,
        action
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1s3898gacn().s[14]++;
      logger.error(`Error dispatching budget ${action} webhook:`, error);
    }
  }
  /**
   * Handle conversion tracking events
   */
  static async handleConversionEvent(conversionData, userId, req) {
    /* istanbul ignore next */
    cov_1s3898gacn().f[3]++;
    cov_1s3898gacn().s[15]++;
    try {
      /* istanbul ignore next */
      cov_1s3898gacn().s[16]++;
      await webhookDispatcher.dispatchConversionEvent(conversionData, userId);
      /* istanbul ignore next */
      cov_1s3898gacn().s[17]++;
      logger.info('Conversion webhook dispatched', {
        conversionId: conversionData.id,
        userId,
        value: conversionData.value
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1s3898gacn().s[18]++;
      logger.error('Error dispatching conversion webhook:', error);
    }
  }
  /**
   * Handle integration events
   */
  static async handleIntegrationEvent(action, integrationData, userId, req) {
    /* istanbul ignore next */
    cov_1s3898gacn().f[4]++;
    cov_1s3898gacn().s[19]++;
    try {
      /* istanbul ignore next */
      cov_1s3898gacn().s[20]++;
      await webhookDispatcher.dispatchIntegrationEvent(action, integrationData, userId);
      /* istanbul ignore next */
      cov_1s3898gacn().s[21]++;
      logger.info(`Integration ${action} webhook dispatched`, {
        integrationId: integrationData.id,
        provider: integrationData.provider,
        userId,
        action
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1s3898gacn().s[22]++;
      logger.error(`Error dispatching integration ${action} webhook:`, error);
    }
  }
  /**
   * Handle analytics events
   */
  static async handleAnalyticsEvent(action, analyticsData, userId, req) {
    /* istanbul ignore next */
    cov_1s3898gacn().f[5]++;
    cov_1s3898gacn().s[23]++;
    try {
      /* istanbul ignore next */
      cov_1s3898gacn().s[24]++;
      await webhookDispatcher.dispatchAnalyticsEvent(action, analyticsData, userId);
      /* istanbul ignore next */
      cov_1s3898gacn().s[25]++;
      logger.info(`Analytics ${action} webhook dispatched`, {
        reportId: analyticsData.id,
        userId,
        action
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1s3898gacn().s[26]++;
      logger.error(`Error dispatching analytics ${action} webhook:`, error);
    }
  }
  /**
   * Auto-detect and dispatch events based on request context
   */
  static async autoDispatchEvent(req, responseData, userId) {
    /* istanbul ignore next */
    cov_1s3898gacn().f[6]++;
    cov_1s3898gacn().s[27]++;
    try {
      const method =
      /* istanbul ignore next */
      (cov_1s3898gacn().s[28]++, req.method.toLowerCase());
      const path =
      /* istanbul ignore next */
      (cov_1s3898gacn().s[29]++, req.path.toLowerCase());
      // Campaign events
      /* istanbul ignore next */
      cov_1s3898gacn().s[30]++;
      if (path.includes('/campaigns')) {
        /* istanbul ignore next */
        cov_1s3898gacn().b[0][0]++;
        cov_1s3898gacn().s[31]++;
        if (
        /* istanbul ignore next */
        (cov_1s3898gacn().b[2][0]++, method === 'post') &&
        /* istanbul ignore next */
        (cov_1s3898gacn().b[2][1]++, responseData.campaign)) {
          /* istanbul ignore next */
          cov_1s3898gacn().b[1][0]++;
          cov_1s3898gacn().s[32]++;
          await this.handleCampaignEvent('created', responseData.campaign, userId, req);
        } else {
          /* istanbul ignore next */
          cov_1s3898gacn().b[1][1]++;
          cov_1s3898gacn().s[33]++;
          if ((
          /* istanbul ignore next */
          (cov_1s3898gacn().b[4][0]++, method === 'put') ||
          /* istanbul ignore next */
          (cov_1s3898gacn().b[4][1]++, method === 'patch')) &&
          /* istanbul ignore next */
          (cov_1s3898gacn().b[4][2]++, responseData.campaign)) {
            /* istanbul ignore next */
            cov_1s3898gacn().b[3][0]++;
            cov_1s3898gacn().s[34]++;
            await this.handleCampaignEvent('updated', responseData.campaign, userId, req);
          } else {
            /* istanbul ignore next */
            cov_1s3898gacn().b[3][1]++;
            cov_1s3898gacn().s[35]++;
            if (
            /* istanbul ignore next */
            (cov_1s3898gacn().b[6][0]++, method === 'delete') &&
            /* istanbul ignore next */
            (cov_1s3898gacn().b[6][1]++, responseData.success)) {
              /* istanbul ignore next */
              cov_1s3898gacn().b[5][0]++;
              cov_1s3898gacn().s[36]++;
              await this.handleCampaignEvent('deleted', {
                id: req.params.id
              }, userId, req);
            } else
            /* istanbul ignore next */
            {
              cov_1s3898gacn().b[5][1]++;
            }
          }
        }
      }
      // Ad events
      else {
        /* istanbul ignore next */
        cov_1s3898gacn().b[0][1]++;
        cov_1s3898gacn().s[37]++;
        if (path.includes('/ads')) {
          /* istanbul ignore next */
          cov_1s3898gacn().b[7][0]++;
          cov_1s3898gacn().s[38]++;
          if (
          /* istanbul ignore next */
          (cov_1s3898gacn().b[9][0]++, method === 'post') &&
          /* istanbul ignore next */
          (cov_1s3898gacn().b[9][1]++, responseData.ad)) {
            /* istanbul ignore next */
            cov_1s3898gacn().b[8][0]++;
            cov_1s3898gacn().s[39]++;
            await this.handleAdEvent('created', responseData.ad, userId, req);
          } else {
            /* istanbul ignore next */
            cov_1s3898gacn().b[8][1]++;
            cov_1s3898gacn().s[40]++;
            if ((
            /* istanbul ignore next */
            (cov_1s3898gacn().b[11][0]++, method === 'put') ||
            /* istanbul ignore next */
            (cov_1s3898gacn().b[11][1]++, method === 'patch')) &&
            /* istanbul ignore next */
            (cov_1s3898gacn().b[11][2]++, responseData.ad)) {
              /* istanbul ignore next */
              cov_1s3898gacn().b[10][0]++;
              cov_1s3898gacn().s[41]++;
              await this.handleAdEvent('updated', responseData.ad, userId, req);
            } else {
              /* istanbul ignore next */
              cov_1s3898gacn().b[10][1]++;
              cov_1s3898gacn().s[42]++;
              if (
              /* istanbul ignore next */
              (cov_1s3898gacn().b[13][0]++, method === 'delete') &&
              /* istanbul ignore next */
              (cov_1s3898gacn().b[13][1]++, responseData.success)) {
                /* istanbul ignore next */
                cov_1s3898gacn().b[12][0]++;
                cov_1s3898gacn().s[43]++;
                await this.handleAdEvent('deleted', {
                  id: req.params.id
                }, userId, req);
              } else
              /* istanbul ignore next */
              {
                cov_1s3898gacn().b[12][1]++;
              }
            }
          }
        }
        // Budget events
        else {
          /* istanbul ignore next */
          cov_1s3898gacn().b[7][1]++;
          cov_1s3898gacn().s[44]++;
          if (path.includes('/budget')) {
            /* istanbul ignore next */
            cov_1s3898gacn().b[14][0]++;
            cov_1s3898gacn().s[45]++;
            if ((
            /* istanbul ignore next */
            (cov_1s3898gacn().b[16][0]++, method === 'put') ||
            /* istanbul ignore next */
            (cov_1s3898gacn().b[16][1]++, method === 'patch')) &&
            /* istanbul ignore next */
            (cov_1s3898gacn().b[16][2]++, responseData.budget)) {
              /* istanbul ignore next */
              cov_1s3898gacn().b[15][0]++;
              // Check for budget thresholds
              const budget =
              /* istanbul ignore next */
              (cov_1s3898gacn().s[46]++, responseData.budget);
              const spentPercentage =
              /* istanbul ignore next */
              (cov_1s3898gacn().s[47]++, budget.spent / budget.amount * 100);
              /* istanbul ignore next */
              cov_1s3898gacn().s[48]++;
              if (spentPercentage >= 100) {
                /* istanbul ignore next */
                cov_1s3898gacn().b[17][0]++;
                cov_1s3898gacn().s[49]++;
                await this.handleBudgetEvent('depleted', budget, userId, req);
              } else {
                /* istanbul ignore next */
                cov_1s3898gacn().b[17][1]++;
                cov_1s3898gacn().s[50]++;
                if (spentPercentage >= 80) {
                  /* istanbul ignore next */
                  cov_1s3898gacn().b[18][0]++;
                  cov_1s3898gacn().s[51]++;
                  await this.handleBudgetEvent('exceeded', budget, userId, req);
                } else {
                  /* istanbul ignore next */
                  cov_1s3898gacn().b[18][1]++;
                  cov_1s3898gacn().s[52]++;
                  await this.handleBudgetEvent('updated', budget, userId, req);
                }
              }
            } else
            /* istanbul ignore next */
            {
              cov_1s3898gacn().b[15][1]++;
            }
          }
          // Conversion events
          else {
            /* istanbul ignore next */
            cov_1s3898gacn().b[14][1]++;
            cov_1s3898gacn().s[53]++;
            if (
            /* istanbul ignore next */
            (cov_1s3898gacn().b[20][0]++, path.includes('/conversions')) ||
            /* istanbul ignore next */
            (cov_1s3898gacn().b[20][1]++, path.includes('/track'))) {
              /* istanbul ignore next */
              cov_1s3898gacn().b[19][0]++;
              cov_1s3898gacn().s[54]++;
              if (
              /* istanbul ignore next */
              (cov_1s3898gacn().b[22][0]++, method === 'post') &&
              /* istanbul ignore next */
              (cov_1s3898gacn().b[22][1]++, responseData.conversion)) {
                /* istanbul ignore next */
                cov_1s3898gacn().b[21][0]++;
                cov_1s3898gacn().s[55]++;
                await this.handleConversionEvent(responseData.conversion, userId, req);
              } else
              /* istanbul ignore next */
              {
                cov_1s3898gacn().b[21][1]++;
              }
            }
            // Integration events
            else {
              /* istanbul ignore next */
              cov_1s3898gacn().b[19][1]++;
              cov_1s3898gacn().s[56]++;
              if (path.includes('/integrations')) {
                /* istanbul ignore next */
                cov_1s3898gacn().b[23][0]++;
                cov_1s3898gacn().s[57]++;
                if (
                /* istanbul ignore next */
                (cov_1s3898gacn().b[25][0]++, method === 'post') &&
                /* istanbul ignore next */
                (cov_1s3898gacn().b[25][1]++, responseData.integration)) {
                  /* istanbul ignore next */
                  cov_1s3898gacn().b[24][0]++;
                  cov_1s3898gacn().s[58]++;
                  await this.handleIntegrationEvent('connected', responseData.integration, userId, req);
                } else {
                  /* istanbul ignore next */
                  cov_1s3898gacn().b[24][1]++;
                  cov_1s3898gacn().s[59]++;
                  if (
                  /* istanbul ignore next */
                  (cov_1s3898gacn().b[27][0]++, method === 'delete') &&
                  /* istanbul ignore next */
                  (cov_1s3898gacn().b[27][1]++, responseData.success)) {
                    /* istanbul ignore next */
                    cov_1s3898gacn().b[26][0]++;
                    cov_1s3898gacn().s[60]++;
                    await this.handleIntegrationEvent('disconnected', {
                      id: req.params.id
                    }, userId, req);
                  } else
                  /* istanbul ignore next */
                  {
                    cov_1s3898gacn().b[26][1]++;
                  }
                }
              }
              // Analytics events
              else {
                /* istanbul ignore next */
                cov_1s3898gacn().b[23][1]++;
                cov_1s3898gacn().s[61]++;
                if (
                /* istanbul ignore next */
                (cov_1s3898gacn().b[29][0]++, path.includes('/analytics')) ||
                /* istanbul ignore next */
                (cov_1s3898gacn().b[29][1]++, path.includes('/reports'))) {
                  /* istanbul ignore next */
                  cov_1s3898gacn().b[28][0]++;
                  cov_1s3898gacn().s[62]++;
                  if (
                  /* istanbul ignore next */
                  (cov_1s3898gacn().b[31][0]++, method === 'post') &&
                  /* istanbul ignore next */
                  (cov_1s3898gacn().b[31][1]++, responseData.report)) {
                    /* istanbul ignore next */
                    cov_1s3898gacn().b[30][0]++;
                    cov_1s3898gacn().s[63]++;
                    await this.handleAnalyticsEvent('report_generated', responseData.report, userId, req);
                  } else
                  /* istanbul ignore next */
                  {
                    cov_1s3898gacn().b[30][1]++;
                  }
                } else
                /* istanbul ignore next */
                {
                  cov_1s3898gacn().b[28][1]++;
                }
              }
            }
          }
        }
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1s3898gacn().s[64]++;
      logger.error('Error in auto-dispatch webhook event:', error);
    }
  }
  /**
   * Dispatch custom event
   */
  static async dispatchCustomEvent(eventType, data, userId, metadata) {
    /* istanbul ignore next */
    cov_1s3898gacn().f[7]++;
    cov_1s3898gacn().s[65]++;
    try {
      /* istanbul ignore next */
      cov_1s3898gacn().s[66]++;
      await webhookDispatcher.dispatchEvent(eventType, data, userId, metadata);
      /* istanbul ignore next */
      cov_1s3898gacn().s[67]++;
      logger.info('Custom webhook event dispatched', {
        eventType,
        userId,
        dataKeys: Object.keys(data)
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1s3898gacn().s[68]++;
      logger.error('Error dispatching custom webhook event:', error);
      /* istanbul ignore next */
      cov_1s3898gacn().s[69]++;
      throw error;
    }
  }
  /**
   * Batch dispatch multiple events
   */
  static async batchDispatchEvents(events) {
    /* istanbul ignore next */
    cov_1s3898gacn().f[8]++;
    cov_1s3898gacn().s[70]++;
    try {
      const promises =
      /* istanbul ignore next */
      (cov_1s3898gacn().s[71]++, events.map(event => {
        /* istanbul ignore next */
        cov_1s3898gacn().f[9]++;
        cov_1s3898gacn().s[72]++;
        return webhookDispatcher.dispatchEvent(event.eventType, event.data, event.userId, event.metadata);
      }));
      /* istanbul ignore next */
      cov_1s3898gacn().s[73]++;
      await Promise.allSettled(promises);
      /* istanbul ignore next */
      cov_1s3898gacn().s[74]++;
      logger.info('Batch webhook events dispatched', {
        eventCount: events.length,
        eventTypes: events.map(e => {
          /* istanbul ignore next */
          cov_1s3898gacn().f[10]++;
          cov_1s3898gacn().s[75]++;
          return e.eventType;
        })
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1s3898gacn().s[76]++;
      logger.error('Error in batch dispatch webhook events:', error);
      /* istanbul ignore next */
      cov_1s3898gacn().s[77]++;
      throw error;
    }
  }
  /**
   * Check if webhooks are enabled for user
   */
  static async areWebhooksEnabled(userId) {
    /* istanbul ignore next */
    cov_1s3898gacn().f[11]++;
    cov_1s3898gacn().s[78]++;
    try {
      const stats =
      /* istanbul ignore next */
      (cov_1s3898gacn().s[79]++, await webhookDispatcher.getWebhookStats(userId));
      /* istanbul ignore next */
      cov_1s3898gacn().s[80]++;
      return stats.activeEndpoints > 0;
    } catch (error) {
      /* istanbul ignore next */
      cov_1s3898gacn().s[81]++;
      logger.error('Error checking webhook status:', error);
      /* istanbul ignore next */
      cov_1s3898gacn().s[82]++;
      return false;
    }
  }
  /**
   * Get webhook configuration for user
   */
  static async getWebhookConfig(userId) {
    /* istanbul ignore next */
    cov_1s3898gacn().f[12]++;
    cov_1s3898gacn().s[83]++;
    try {
      /* istanbul ignore next */
      cov_1s3898gacn().s[84]++;
      return await webhookDispatcher.getWebhookStats(userId);
    } catch (error) {
      /* istanbul ignore next */
      cov_1s3898gacn().s[85]++;
      logger.error('Error getting webhook config:', error);
      /* istanbul ignore next */
      cov_1s3898gacn().s[86]++;
      return null;
    }
  }
}
/**
 * Helper function for manual event dispatching in controllers
 */
export async function dispatchWebhookEvent(eventType, data, userId, metadata) {
  /* istanbul ignore next */
  cov_1s3898gacn().f[13]++;
  cov_1s3898gacn().s[87]++;
  return WebhookIntegrationService.dispatchCustomEvent(eventType, data, userId, metadata);
}
/**
 * Helper function for auto-dispatching based on request context
 */
export async function autoDispatchWebhookEvent(req, responseData, userId) {
  /* istanbul ignore next */
  cov_1s3898gacn().f[14]++;
  cov_1s3898gacn().s[88]++;
  return WebhookIntegrationService.autoDispatchEvent(req, responseData, userId);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,