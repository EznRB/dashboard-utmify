e5f3d9b82acb6afacd6ccda997b6341f
/* istanbul ignore next */
function cov_2neyvqopj6() {
  var path = "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\routes\\index.ts";
  var hash = "7b6a2a12085ff6a4a9821bc4c4d98e78859352dd";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\routes\\index.ts",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 20,
          column: 7
        }
      },
      "1": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 19,
          column: 10
        }
      },
      "2": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 41,
          column: 30
        }
      },
      "3": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 60
        }
      },
      "4": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 66
        }
      },
      "5": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 66
        }
      },
      "6": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 60
        }
      },
      "7": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 62
        }
      },
      "8": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 68
        }
      },
      "9": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 68
        }
      },
      "10": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "11": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 46,
          column: 11
        }
      },
      "12": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 52
        }
      }
    },
    fnMap: {
      "0": {
        name: "registerRoutes",
        decl: {
          start: {
            line: 9,
            column: 22
          },
          end: {
            line: 9,
            column: 36
          }
        },
        loc: {
          start: {
            line: 9,
            column: 42
          },
          end: {
            line: 48,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 23
          },
          end: {
            line: 12,
            column: 24
          }
        },
        loc: {
          start: {
            line: 12,
            column: 49
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 22,
            column: 23
          },
          end: {
            line: 22,
            column: 24
          }
        },
        loc: {
          start: {
            line: 22,
            column: 44
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 22
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 44,
            column: 25
          },
          end: {
            line: 44,
            column: 26
          }
        },
        loc: {
          start: {
            line: 44,
            column: 51
          },
          end: {
            line: 46,
            column: 9
          }
        },
        line: 44
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 21
          },
          end: {
            line: 18,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 21
          },
          end: {
            line: 18,
            column: 52
          }
        }, {
          start: {
            line: 18,
            column: 56
          },
          end: {
            line: 18,
            column: 63
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\routes\\index.ts",
      mappings: "AACA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAA;AAC1C,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAA;AAChD,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAA;AAChD,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAA;AAC1C,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAA;AAC5C,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAA;AAClD,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAA;AAElD,sBAAsB;AACtB,MAAM,CAAC,KAAK,UAAU,cAAc,CAAC,GAAoB;IACvD,wDAAwD;IACxD,qCAAqC;IACrC,GAAG,CAAC,GAAG,CAAC,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE;QAC1C,OAAO;YACL,MAAM,EAAE,IAAI;YACZ,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;YACnC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE;YACxB,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ;YACjC,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,mBAAmB,IAAI,OAAO;SACpD,CAAA;IACH,CAAC,CAAC,CAAA;IAEF,qBAAqB;IACrB,MAAM,GAAG,CAAC,QAAQ,CAAC,KAAK,WAAW,GAAG;QACpC,cAAc;QACd,MAAM,GAAG,CAAC,QAAQ,CAAC,UAAU,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAA;QAEnD,iBAAiB;QACjB,MAAM,GAAG,CAAC,QAAQ,CAAC,aAAa,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,CAAA;QAEzD,iBAAiB;QACjB,MAAM,GAAG,CAAC,QAAQ,CAAC,aAAa,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,CAAA;QAEzD,cAAc;QACd,MAAM,GAAG,CAAC,QAAQ,CAAC,UAAU,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAA;QAEnD,eAAe;QACf,MAAM,GAAG,CAAC,QAAQ,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,CAAA;QAErD,iBAAiB;QACjB,MAAM,GAAG,CAAC,QAAQ,CAAC,cAAc,EAAE,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,CAAA;QAE3D,kBAAkB;QAClB,MAAM,GAAG,CAAC,QAAQ,CAAC,cAAc,EAAE,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,CAAA;QAE3D,oCAAoC;QACpC,uDAAuD;QACvD,uEAAuE;QACvE,+DAA+D;IACjE,CAAC,EAAE,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,CAAA;IAEzB,0BAA0B;IAC1B,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,aAAa,EAAE,CAAC;QAC3C,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE;YACxC,OAAO,KAAK,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAA;QACzC,CAAC,CAAC,CAAA;IACJ,CAAC;AACH,CAAC",
      names: [],
      sources: ["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\routes\\index.ts"],
      sourcesContent: ["import type { FastifyInstance } from 'fastify'\nimport { authRoutes } from './auth.routes'\nimport { metricsRoutes } from './metrics.routes'\nimport { workersRoutes } from './workers.routes'\nimport { jobsRoutes } from './jobs.routes'\nimport { queueRoutes } from './queue.routes'\nimport { webhooksRoutes } from './webhooks.routes'\nimport { whatsappRoutes } from './whatsapp.routes'\n\n// Register all routes\nexport async function registerRoutes(app: FastifyInstance) {\n  // Health check route (already defined in main index.ts)\n  // We'll add it here for completeness\n  app.get('/health', async (request, reply) => {\n    return {\n      status: 'ok',\n      timestamp: new Date().toISOString(),\n      uptime: process.uptime(),\n      environment: process.env.NODE_ENV,\n      version: process.env.npm_package_version || '1.0.0',\n    }\n  })\n\n  // API version prefix\n  await app.register(async function (app) {\n    // Auth routes\n    await app.register(authRoutes, { prefix: '/auth' })\n\n    // Metrics routes\n    await app.register(metricsRoutes, { prefix: '/metrics' })\n\n    // Workers routes\n    await app.register(workersRoutes, { prefix: '/workers' })\n\n    // Jobs routes\n    await app.register(jobsRoutes, { prefix: '/jobs' })\n\n    // Queue routes\n    await app.register(queueRoutes, { prefix: '/queue' })\n    \n    // Webhook routes\n    await app.register(webhooksRoutes, { prefix: '/webhooks' })\n    \n    // WhatsApp routes\n    await app.register(whatsappRoutes, { prefix: '/whatsapp' })\n    \n    // TODO: Add other route groups here\n    // await app.register(userRoutes, { prefix: '/users' })\n    // await app.register(organizationRoutes, { prefix: '/organizations' })\n    // await app.register(campaignRoutes, { prefix: '/campaigns' })\n  }, { prefix: '/api/v1' })\n\n  // API documentation route\n  if (process.env.NODE_ENV === 'development') {\n    app.get('/docs', async (request, reply) => {\n      return reply.redirect('/documentation')\n    })\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7b6a2a12085ff6a4a9821bc4c4d98e78859352dd"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2neyvqopj6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2neyvqopj6();
import { authRoutes } from './auth.routes';
import { metricsRoutes } from './metrics.routes';
import { workersRoutes } from './workers.routes';
import { jobsRoutes } from './jobs.routes';
import { queueRoutes } from './queue.routes';
import { webhooksRoutes } from './webhooks.routes';
import { whatsappRoutes } from './whatsapp.routes';
// Register all routes
export async function registerRoutes(app) {
  /* istanbul ignore next */
  cov_2neyvqopj6().f[0]++;
  cov_2neyvqopj6().s[0]++;
  // Health check route (already defined in main index.ts)
  // We'll add it here for completeness
  app.get('/health', async (request, reply) => {
    /* istanbul ignore next */
    cov_2neyvqopj6().f[1]++;
    cov_2neyvqopj6().s[1]++;
    return {
      status: 'ok',
      timestamp: new Date().toISOString(),
      uptime: process.uptime(),
      environment: process.env.NODE_ENV,
      version:
      /* istanbul ignore next */
      (cov_2neyvqopj6().b[0][0]++, process.env.npm_package_version) ||
      /* istanbul ignore next */
      (cov_2neyvqopj6().b[0][1]++, '1.0.0')
    };
  });
  // API version prefix
  /* istanbul ignore next */
  cov_2neyvqopj6().s[2]++;
  await app.register(async function (app) {
    /* istanbul ignore next */
    cov_2neyvqopj6().f[2]++;
    cov_2neyvqopj6().s[3]++;
    // Auth routes
    await app.register(authRoutes, {
      prefix: '/auth'
    });
    // Metrics routes
    /* istanbul ignore next */
    cov_2neyvqopj6().s[4]++;
    await app.register(metricsRoutes, {
      prefix: '/metrics'
    });
    // Workers routes
    /* istanbul ignore next */
    cov_2neyvqopj6().s[5]++;
    await app.register(workersRoutes, {
      prefix: '/workers'
    });
    // Jobs routes
    /* istanbul ignore next */
    cov_2neyvqopj6().s[6]++;
    await app.register(jobsRoutes, {
      prefix: '/jobs'
    });
    // Queue routes
    /* istanbul ignore next */
    cov_2neyvqopj6().s[7]++;
    await app.register(queueRoutes, {
      prefix: '/queue'
    });
    // Webhook routes
    /* istanbul ignore next */
    cov_2neyvqopj6().s[8]++;
    await app.register(webhooksRoutes, {
      prefix: '/webhooks'
    });
    // WhatsApp routes
    /* istanbul ignore next */
    cov_2neyvqopj6().s[9]++;
    await app.register(whatsappRoutes, {
      prefix: '/whatsapp'
    });
    // TODO: Add other route groups here
    // await app.register(userRoutes, { prefix: '/users' })
    // await app.register(organizationRoutes, { prefix: '/organizations' })
    // await app.register(campaignRoutes, { prefix: '/campaigns' })
  }, {
    prefix: '/api/v1'
  });
  // API documentation route
  /* istanbul ignore next */
  cov_2neyvqopj6().s[10]++;
  if (process.env.NODE_ENV === 'development') {
    /* istanbul ignore next */
    cov_2neyvqopj6().b[1][0]++;
    cov_2neyvqopj6().s[11]++;
    app.get('/docs', async (request, reply) => {
      /* istanbul ignore next */
      cov_2neyvqopj6().f[3]++;
      cov_2neyvqopj6().s[12]++;
      return reply.redirect('/documentation');
    });
  } else
  /* istanbul ignore next */
  {
    cov_2neyvqopj6().b[1][1]++;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMm5leXZxb3BqNiIsImFjdHVhbENvdmVyYWdlIiwiYXV0aFJvdXRlcyIsIm1ldHJpY3NSb3V0ZXMiLCJ3b3JrZXJzUm91dGVzIiwiam9ic1JvdXRlcyIsInF1ZXVlUm91dGVzIiwid2ViaG9va3NSb3V0ZXMiLCJ3aGF0c2FwcFJvdXRlcyIsInJlZ2lzdGVyUm91dGVzIiwiYXBwIiwiZiIsInMiLCJnZXQiLCJyZXF1ZXN0IiwicmVwbHkiLCJzdGF0dXMiLCJ0aW1lc3RhbXAiLCJEYXRlIiwidG9JU09TdHJpbmciLCJ1cHRpbWUiLCJwcm9jZXNzIiwiZW52aXJvbm1lbnQiLCJlbnYiLCJOT0RFX0VOViIsInZlcnNpb24iLCJiIiwibnBtX3BhY2thZ2VfdmVyc2lvbiIsInJlZ2lzdGVyIiwicHJlZml4IiwicmVkaXJlY3QiXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXEVuem8gTWFyY2Vsb1xcRGVza3RvcFxcUHJvamV0b3MgRW1wcmVzYVxcU2FhcyBVdG1pZnlcXHV0bWlmeS1jbG9uZVxcYXBwc1xcYXBpXFxzcmNcXHJvdXRlc1xcaW5kZXgudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBGYXN0aWZ5SW5zdGFuY2UgfSBmcm9tICdmYXN0aWZ5J1xuaW1wb3J0IHsgYXV0aFJvdXRlcyB9IGZyb20gJy4vYXV0aC5yb3V0ZXMnXG5pbXBvcnQgeyBtZXRyaWNzUm91dGVzIH0gZnJvbSAnLi9tZXRyaWNzLnJvdXRlcydcbmltcG9ydCB7IHdvcmtlcnNSb3V0ZXMgfSBmcm9tICcuL3dvcmtlcnMucm91dGVzJ1xuaW1wb3J0IHsgam9ic1JvdXRlcyB9IGZyb20gJy4vam9icy5yb3V0ZXMnXG5pbXBvcnQgeyBxdWV1ZVJvdXRlcyB9IGZyb20gJy4vcXVldWUucm91dGVzJ1xuaW1wb3J0IHsgd2ViaG9va3NSb3V0ZXMgfSBmcm9tICcuL3dlYmhvb2tzLnJvdXRlcydcbmltcG9ydCB7IHdoYXRzYXBwUm91dGVzIH0gZnJvbSAnLi93aGF0c2FwcC5yb3V0ZXMnXG5cbi8vIFJlZ2lzdGVyIGFsbCByb3V0ZXNcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiByZWdpc3RlclJvdXRlcyhhcHA6IEZhc3RpZnlJbnN0YW5jZSkge1xuICAvLyBIZWFsdGggY2hlY2sgcm91dGUgKGFscmVhZHkgZGVmaW5lZCBpbiBtYWluIGluZGV4LnRzKVxuICAvLyBXZSdsbCBhZGQgaXQgaGVyZSBmb3IgY29tcGxldGVuZXNzXG4gIGFwcC5nZXQoJy9oZWFsdGgnLCBhc3luYyAocmVxdWVzdCwgcmVwbHkpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgc3RhdHVzOiAnb2snLFxuICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gICAgICB1cHRpbWU6IHByb2Nlc3MudXB0aW1lKCksXG4gICAgICBlbnZpcm9ubWVudDogcHJvY2Vzcy5lbnYuTk9ERV9FTlYsXG4gICAgICB2ZXJzaW9uOiBwcm9jZXNzLmVudi5ucG1fcGFja2FnZV92ZXJzaW9uIHx8ICcxLjAuMCcsXG4gICAgfVxuICB9KVxuXG4gIC8vIEFQSSB2ZXJzaW9uIHByZWZpeFxuICBhd2FpdCBhcHAucmVnaXN0ZXIoYXN5bmMgZnVuY3Rpb24gKGFwcCkge1xuICAgIC8vIEF1dGggcm91dGVzXG4gICAgYXdhaXQgYXBwLnJlZ2lzdGVyKGF1dGhSb3V0ZXMsIHsgcHJlZml4OiAnL2F1dGgnIH0pXG5cbiAgICAvLyBNZXRyaWNzIHJvdXRlc1xuICAgIGF3YWl0IGFwcC5yZWdpc3RlcihtZXRyaWNzUm91dGVzLCB7IHByZWZpeDogJy9tZXRyaWNzJyB9KVxuXG4gICAgLy8gV29ya2VycyByb3V0ZXNcbiAgICBhd2FpdCBhcHAucmVnaXN0ZXIod29ya2Vyc1JvdXRlcywgeyBwcmVmaXg6ICcvd29ya2VycycgfSlcblxuICAgIC8vIEpvYnMgcm91dGVzXG4gICAgYXdhaXQgYXBwLnJlZ2lzdGVyKGpvYnNSb3V0ZXMsIHsgcHJlZml4OiAnL2pvYnMnIH0pXG5cbiAgICAvLyBRdWV1ZSByb3V0ZXNcbiAgICBhd2FpdCBhcHAucmVnaXN0ZXIocXVldWVSb3V0ZXMsIHsgcHJlZml4OiAnL3F1ZXVlJyB9KVxuICAgIFxuICAgIC8vIFdlYmhvb2sgcm91dGVzXG4gICAgYXdhaXQgYXBwLnJlZ2lzdGVyKHdlYmhvb2tzUm91dGVzLCB7IHByZWZpeDogJy93ZWJob29rcycgfSlcbiAgICBcbiAgICAvLyBXaGF0c0FwcCByb3V0ZXNcbiAgICBhd2FpdCBhcHAucmVnaXN0ZXIod2hhdHNhcHBSb3V0ZXMsIHsgcHJlZml4OiAnL3doYXRzYXBwJyB9KVxuICAgIFxuICAgIC8vIFRPRE86IEFkZCBvdGhlciByb3V0ZSBncm91cHMgaGVyZVxuICAgIC8vIGF3YWl0IGFwcC5yZWdpc3Rlcih1c2VyUm91dGVzLCB7IHByZWZpeDogJy91c2VycycgfSlcbiAgICAvLyBhd2FpdCBhcHAucmVnaXN0ZXIob3JnYW5pemF0aW9uUm91dGVzLCB7IHByZWZpeDogJy9vcmdhbml6YXRpb25zJyB9KVxuICAgIC8vIGF3YWl0IGFwcC5yZWdpc3RlcihjYW1wYWlnblJvdXRlcywgeyBwcmVmaXg6ICcvY2FtcGFpZ25zJyB9KVxuICB9LCB7IHByZWZpeDogJy9hcGkvdjEnIH0pXG5cbiAgLy8gQVBJIGRvY3VtZW50YXRpb24gcm91dGVcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnKSB7XG4gICAgYXBwLmdldCgnL2RvY3MnLCBhc3luYyAocmVxdWVzdCwgcmVwbHkpID0+IHtcbiAgICAgIHJldHVybiByZXBseS5yZWRpcmVjdCgnL2RvY3VtZW50YXRpb24nKVxuICAgIH0pXG4gIH1cbn0iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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