{"version":3,"names":["cov_2neyvqopj6","actualCoverage","authRoutes","metricsRoutes","workersRoutes","jobsRoutes","queueRoutes","webhooksRoutes","whatsappRoutes","registerRoutes","app","f","s","get","request","reply","status","timestamp","Date","toISOString","uptime","process","environment","env","NODE_ENV","version","b","npm_package_version","register","prefix","redirect"],"sources":["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\routes\\index.ts"],"sourcesContent":["import type { FastifyInstance } from 'fastify'\nimport { authRoutes } from './auth.routes'\nimport { metricsRoutes } from './metrics.routes'\nimport { workersRoutes } from './workers.routes'\nimport { jobsRoutes } from './jobs.routes'\nimport { queueRoutes } from './queue.routes'\nimport { webhooksRoutes } from './webhooks.routes'\nimport { whatsappRoutes } from './whatsapp.routes'\n\n// Register all routes\nexport async function registerRoutes(app: FastifyInstance) {\n  // Health check route (already defined in main index.ts)\n  // We'll add it here for completeness\n  app.get('/health', async (request, reply) => {\n    return {\n      status: 'ok',\n      timestamp: new Date().toISOString(),\n      uptime: process.uptime(),\n      environment: process.env.NODE_ENV,\n      version: process.env.npm_package_version || '1.0.0',\n    }\n  })\n\n  // API version prefix\n  await app.register(async function (app) {\n    // Auth routes\n    await app.register(authRoutes, { prefix: '/auth' })\n\n    // Metrics routes\n    await app.register(metricsRoutes, { prefix: '/metrics' })\n\n    // Workers routes\n    await app.register(workersRoutes, { prefix: '/workers' })\n\n    // Jobs routes\n    await app.register(jobsRoutes, { prefix: '/jobs' })\n\n    // Queue routes\n    await app.register(queueRoutes, { prefix: '/queue' })\n    \n    // Webhook routes\n    await app.register(webhooksRoutes, { prefix: '/webhooks' })\n    \n    // WhatsApp routes\n    await app.register(whatsappRoutes, { prefix: '/whatsapp' })\n    \n    // TODO: Add other route groups here\n    // await app.register(userRoutes, { prefix: '/users' })\n    // await app.register(organizationRoutes, { prefix: '/organizations' })\n    // await app.register(campaignRoutes, { prefix: '/campaigns' })\n  }, { prefix: '/api/v1' })\n\n  // API documentation route\n  if (process.env.NODE_ENV === 'development') {\n    app.get('/docs', async (request, reply) => {\n      return reply.redirect('/documentation')\n    })\n  }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAiBM;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAhBN,SAASE,UAAU,QAAQ,eAAe;AAC1C,SAASC,aAAa,QAAQ,kBAAkB;AAChD,SAASC,aAAa,QAAQ,kBAAkB;AAChD,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,cAAc,QAAQ,mBAAmB;AAClD,SAASC,cAAc,QAAQ,mBAAmB;AAElD;AACA,OAAO,eAAeC,cAAcA,CAACC,GAAoB;EAAA;EAAAV,cAAA,GAAAW,CAAA;EAAAX,cAAA,GAAAY,CAAA;EACvD;EACA;EACAF,GAAG,CAACG,GAAG,CAAC,SAAS,EAAE,OAAOC,OAAO,EAAEC,KAAK,KAAI;IAAA;IAAAf,cAAA,GAAAW,CAAA;IAAAX,cAAA,GAAAY,CAAA;IAC1C,OAAO;MACLI,MAAM,EAAE,IAAI;MACZC,SAAS,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE;MACnCC,MAAM,EAAEC,OAAO,CAACD,MAAM,EAAE;MACxBE,WAAW,EAAED,OAAO,CAACE,GAAG,CAACC,QAAQ;MACjCC,OAAO;MAAE;MAAA,CAAAzB,cAAA,GAAA0B,CAAA,UAAAL,OAAO,CAACE,GAAG,CAACI,mBAAmB;MAAA;MAAA,CAAA3B,cAAA,GAAA0B,CAAA,UAAI,OAAO;KACpD;EACH,CAAC,CAAC;EAEF;EAAA;EAAA1B,cAAA,GAAAY,CAAA;EACA,MAAMF,GAAG,CAACkB,QAAQ,CAAC,gBAAgBlB,GAAG;IAAA;IAAAV,cAAA,GAAAW,CAAA;IAAAX,cAAA,GAAAY,CAAA;IACpC;IACA,MAAMF,GAAG,CAACkB,QAAQ,CAAC1B,UAAU,EAAE;MAAE2B,MAAM,EAAE;IAAO,CAAE,CAAC;IAEnD;IAAA;IAAA7B,cAAA,GAAAY,CAAA;IACA,MAAMF,GAAG,CAACkB,QAAQ,CAACzB,aAAa,EAAE;MAAE0B,MAAM,EAAE;IAAU,CAAE,CAAC;IAEzD;IAAA;IAAA7B,cAAA,GAAAY,CAAA;IACA,MAAMF,GAAG,CAACkB,QAAQ,CAACxB,aAAa,EAAE;MAAEyB,MAAM,EAAE;IAAU,CAAE,CAAC;IAEzD;IAAA;IAAA7B,cAAA,GAAAY,CAAA;IACA,MAAMF,GAAG,CAACkB,QAAQ,CAACvB,UAAU,EAAE;MAAEwB,MAAM,EAAE;IAAO,CAAE,CAAC;IAEnD;IAAA;IAAA7B,cAAA,GAAAY,CAAA;IACA,MAAMF,GAAG,CAACkB,QAAQ,CAACtB,WAAW,EAAE;MAAEuB,MAAM,EAAE;IAAQ,CAAE,CAAC;IAErD;IAAA;IAAA7B,cAAA,GAAAY,CAAA;IACA,MAAMF,GAAG,CAACkB,QAAQ,CAACrB,cAAc,EAAE;MAAEsB,MAAM,EAAE;IAAW,CAAE,CAAC;IAE3D;IAAA;IAAA7B,cAAA,GAAAY,CAAA;IACA,MAAMF,GAAG,CAACkB,QAAQ,CAACpB,cAAc,EAAE;MAAEqB,MAAM,EAAE;IAAW,CAAE,CAAC;IAE3D;IACA;IACA;IACA;EACF,CAAC,EAAE;IAAEA,MAAM,EAAE;EAAS,CAAE,CAAC;EAEzB;EAAA;EAAA7B,cAAA,GAAAY,CAAA;EACA,IAAIS,OAAO,CAACE,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;IAAA;IAAAxB,cAAA,GAAA0B,CAAA;IAAA1B,cAAA,GAAAY,CAAA;IAC1CF,GAAG,CAACG,GAAG,CAAC,OAAO,EAAE,OAAOC,OAAO,EAAEC,KAAK,KAAI;MAAA;MAAAf,cAAA,GAAAW,CAAA;MAAAX,cAAA,GAAAY,CAAA;MACxC,OAAOG,KAAK,CAACe,QAAQ,CAAC,gBAAgB,CAAC;IACzC,CAAC,CAAC;EACJ,CAAC;EAAA;EAAA;IAAA9B,cAAA,GAAA0B,CAAA;EAAA;AACH","ignoreList":[]}