719bd416cf4c46f3812c8511c88feab0
/* istanbul ignore next */
function cov_2h48fpenaj() {
  var path = "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\services\\whatsapp.service.ts";
  var hash = "7e1d61f9b51b27df2ebb36ea6e033c9a10174cc7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\services\\whatsapp.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 17
        },
        end: {
          line: 6,
          column: 1
        }
      },
      "1": {
        start: {
          line: 2,
          column: 12
        },
        end: {
          line: 2,
          column: 28
        }
      },
      "2": {
        start: {
          line: 2,
          column: 34
        },
        end: {
          line: 2,
          column: 125
        }
      },
      "3": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 4,
          column: 150
        }
      },
      "4": {
        start: {
          line: 3,
          column: 79
        },
        end: {
          line: 3,
          column: 131
        }
      },
      "5": {
        start: {
          line: 4,
          column: 9
        },
        end: {
          line: 4,
          column: 150
        }
      },
      "6": {
        start: {
          line: 4,
          column: 22
        },
        end: {
          line: 4,
          column: 43
        }
      },
      "7": {
        start: {
          line: 4,
          column: 58
        },
        end: {
          line: 4,
          column: 150
        }
      },
      "8": {
        start: {
          line: 4,
          column: 81
        },
        end: {
          line: 4,
          column: 150
        }
      },
      "9": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 5,
          column: 66
        }
      },
      "10": {
        start: {
          line: 7,
          column: 17
        },
        end: {
          line: 9,
          column: 1
        }
      },
      "11": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 109
        }
      },
      "12": {
        start: {
          line: 8,
          column: 79
        },
        end: {
          line: 8,
          column: 109
        }
      },
      "13": {
        start: {
          line: 10,
          column: 14
        },
        end: {
          line: 12,
          column: 1
        }
      },
      "14": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 73
        }
      },
      "15": {
        start: {
          line: 11,
          column: 36
        },
        end: {
          line: 11,
          column: 71
        }
      },
      "16": {
        start: {
          line: 22,
          column: 22
        },
        end: {
          line: 506,
          column: 1
        }
      },
      "17": {
        start: {
          line: 27,
          column: 13
        },
        end: {
          line: 27,
          column: 47
        }
      },
      "18": {
        start: {
          line: 29,
          column: 17
        },
        end: {
          line: 29,
          column: 21
        }
      },
      "19": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 43
        }
      },
      "20": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 29
        }
      },
      "21": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 43
        }
      },
      "22": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 43
        }
      },
      "23": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 32
        }
      },
      "24": {
        start: {
          line: 38,
          column: 27
        },
        end: {
          line: 38,
          column: 71
        }
      },
      "25": {
        start: {
          line: 39,
          column: 26
        },
        end: {
          line: 39,
          column: 69
        }
      },
      "26": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "27": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 66
        }
      },
      "28": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 19
        }
      },
      "29": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 62
        }
      },
      "30": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 62
        }
      },
      "31": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "32": {
        start: {
          line: 53,
          column: 28
        },
        end: {
          line: 53,
          column: 70
        }
      },
      "33": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 56,
          column: 13
        }
      },
      "34": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 94
        }
      },
      "35": {
        start: {
          line: 58,
          column: 24
        },
        end: {
          line: 67,
          column: 14
        }
      },
      "36": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 69
        }
      },
      "37": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 67
        }
      },
      "38": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 72
        }
      },
      "39": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 60
        }
      },
      "40": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 135,
          column: 9
        }
      },
      "41": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 83,
          column: 13
        }
      },
      "42": {
        start: {
          line: 82,
          column: 16
        },
        end: {
          line: 82,
          column: 65
        }
      },
      "43": {
        start: {
          line: 84,
          column: 31
        },
        end: {
          line: 84,
          column: 79
        }
      },
      "44": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 87,
          column: 13
        }
      },
      "45": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 86,
          column: 73
        }
      },
      "46": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 111,
          column: 13
        }
      },
      "47": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 96,
          column: 19
        }
      },
      "48": {
        start: {
          line: 100,
          column: 36
        },
        end: {
          line: 103,
          column: 17
        }
      },
      "49": {
        start: {
          line: 104,
          column: 16
        },
        end: {
          line: 106,
          column: 17
        }
      },
      "50": {
        start: {
          line: 105,
          column: 20
        },
        end: {
          line: 105,
          column: 52
        }
      },
      "51": {
        start: {
          line: 107,
          column: 16
        },
        end: {
          line: 109,
          column: 17
        }
      },
      "52": {
        start: {
          line: 108,
          column: 20
        },
        end: {
          line: 108,
          column: 62
        }
      },
      "53": {
        start: {
          line: 110,
          column: 16
        },
        end: {
          line: 110,
          column: 85
        }
      },
      "54": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 120,
          column: 15
        }
      },
      "55": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 88
        }
      },
      "56": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 75
        }
      },
      "57": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 133,
          column: 15
        }
      },
      "58": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 134,
          column: 24
        }
      },
      "59": {
        start: {
          line: 141,
          column: 23
        },
        end: {
          line: 141,
          column: 25
        }
      },
      "60": {
        start: {
          line: 142,
          column: 21
        },
        end: {
          line: 142,
          column: 22
        }
      },
      "61": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 159,
          column: 9
        }
      },
      "62": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 158,
          column: 13
        }
      },
      "63": {
        start: {
          line: 145,
          column: 31
        },
        end: {
          line: 148,
          column: 18
        }
      },
      "64": {
        start: {
          line: 149,
          column: 16
        },
        end: {
          line: 154,
          column: 17
        }
      },
      "65": {
        start: {
          line: 150,
          column: 20
        },
        end: {
          line: 150,
          column: 29
        }
      },
      "66": {
        start: {
          line: 153,
          column: 20
        },
        end: {
          line: 153,
          column: 65
        }
      },
      "67": {
        start: {
          line: 157,
          column: 16
        },
        end: {
          line: 157,
          column: 62
        }
      },
      "68": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 164,
          column: 10
        }
      },
      "69": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 186,
          column: 9
        }
      },
      "70": {
        start: {
          line: 172,
          column: 30
        },
        end: {
          line: 175,
          column: 14
        }
      },
      "71": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 181,
          column: 16
        }
      },
      "72": {
        start: {
          line: 176,
          column: 46
        },
        end: {
          line: 181,
          column: 13
        }
      },
      "73": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 75
        }
      },
      "74": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 185,
          column: 22
        }
      },
      "75": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 208,
          column: 9
        }
      },
      "76": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 201,
          column: 15
        }
      },
      "77": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 202,
          column: 75
        }
      },
      "78": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 203,
          column: 37
        }
      },
      "79": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 206,
          column: 74
        }
      },
      "80": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 207,
          column: 60
        }
      },
      "81": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 246,
          column: 9
        }
      },
      "82": {
        start: {
          line: 215,
          column: 34
        },
        end: {
          line: 223,
          column: 14
        }
      },
      "83": {
        start: {
          line: 225,
          column: 46
        },
        end: {
          line: 240,
          column: 15
        }
      },
      "84": {
        start: {
          line: 226,
          column: 38
        },
        end: {
          line: 232,
          column: 18
        }
      },
      "85": {
        start: {
          line: 233,
          column: 16
        },
        end: {
          line: 239,
          column: 18
        }
      },
      "86": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 241,
          column: 45
        }
      },
      "87": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 244,
          column: 70
        }
      },
      "88": {
        start: {
          line: 245,
          column: 12
        },
        end: {
          line: 245,
          column: 22
        }
      },
      "89": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 267,
          column: 9
        }
      },
      "90": {
        start: {
          line: 253,
          column: 29
        },
        end: {
          line: 261,
          column: 14
        }
      },
      "91": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 262,
          column: 28
        }
      },
      "92": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 265,
          column: 78
        }
      },
      "93": {
        start: {
          line: 266,
          column: 12
        },
        end: {
          line: 266,
          column: 22
        }
      },
      "94": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 302,
          column: 9
        }
      },
      "95": {
        start: {
          line: 274,
          column: 62
        },
        end: {
          line: 274,
          column: 73
        }
      },
      "96": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 278,
          column: 13
        }
      },
      "97": {
        start: {
          line: 276,
          column: 16
        },
        end: {
          line: 276,
          column: 66
        }
      },
      "98": {
        start: {
          line: 277,
          column: 16
        },
        end: {
          line: 277,
          column: 23
        }
      },
      "99": {
        start: {
          line: 280,
          column: 32
        },
        end: {
          line: 280,
          column: 61
        }
      },
      "100": {
        start: {
          line: 281,
          column: 29
        },
        end: {
          line: 281,
          column: 57
        }
      },
      "101": {
        start: {
          line: 283,
          column: 33
        },
        end: {
          line: 283,
          column: 86
        }
      },
      "102": {
        start: {
          line: 284,
          column: 12
        },
        end: {
          line: 287,
          column: 13
        }
      },
      "103": {
        start: {
          line: 285,
          column: 16
        },
        end: {
          line: 285,
          column: 91
        }
      },
      "104": {
        start: {
          line: 286,
          column: 16
        },
        end: {
          line: 286,
          column: 23
        }
      },
      "105": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 295,
          column: 15
        }
      },
      "106": {
        start: {
          line: 297,
          column: 12
        },
        end: {
          line: 297,
          column: 84
        }
      },
      "107": {
        start: {
          line: 298,
          column: 12
        },
        end: {
          line: 298,
          column: 76
        }
      },
      "108": {
        start: {
          line: 301,
          column: 12
        },
        end: {
          line: 301,
          column: 75
        }
      },
      "109": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 369,
          column: 9
        }
      },
      "110": {
        start: {
          line: 309,
          column: 26
        },
        end: {
          line: 309,
          column: 36
        }
      },
      "111": {
        start: {
          line: 310,
          column: 12
        },
        end: {
          line: 310,
          column: 39
        }
      },
      "112": {
        start: {
          line: 311,
          column: 29
        },
        end: {
          line: 311,
          column: 44
        }
      },
      "113": {
        start: {
          line: 312,
          column: 12
        },
        end: {
          line: 312,
          column: 53
        }
      },
      "114": {
        start: {
          line: 313,
          column: 75
        },
        end: {
          line: 349,
          column: 14
        }
      },
      "115": {
        start: {
          line: 350,
          column: 12
        },
        end: {
          line: 357,
          column: 14
        }
      },
      "116": {
        start: {
          line: 360,
          column: 12
        },
        end: {
          line: 360,
          column: 73
        }
      },
      "117": {
        start: {
          line: 361,
          column: 12
        },
        end: {
          line: 368,
          column: 14
        }
      },
      "118": {
        start: {
          line: 375,
          column: 22
        },
        end: {
          line: 375,
          column: 32
        }
      },
      "119": {
        start: {
          line: 376,
          column: 8
        },
        end: {
          line: 376,
          column: 35
        }
      },
      "120": {
        start: {
          line: 377,
          column: 25
        },
        end: {
          line: 377,
          column: 40
        }
      },
      "121": {
        start: {
          line: 378,
          column: 8
        },
        end: {
          line: 378,
          column: 49
        }
      },
      "122": {
        start: {
          line: 379,
          column: 26
        },
        end: {
          line: 389,
          column: 10
        }
      },
      "123": {
        start: {
          line: 390,
          column: 8
        },
        end: {
          line: 390,
          column: 43
        }
      },
      "124": {
        start: {
          line: 396,
          column: 8
        },
        end: {
          line: 412,
          column: 9
        }
      },
      "125": {
        start: {
          line: 397,
          column: 12
        },
        end: {
          line: 408,
          column: 15
        }
      },
      "126": {
        start: {
          line: 411,
          column: 12
        },
        end: {
          line: 411,
          column: 72
        }
      },
      "127": {
        start: {
          line: 418,
          column: 8
        },
        end: {
          line: 438,
          column: 9
        }
      },
      "128": {
        start: {
          line: 419,
          column: 32
        },
        end: {
          line: 432,
          column: 14
        }
      },
      "129": {
        start: {
          line: 433,
          column: 12
        },
        end: {
          line: 433,
          column: 53
        }
      },
      "130": {
        start: {
          line: 436,
          column: 12
        },
        end: {
          line: 436,
          column: 87
        }
      },
      "131": {
        start: {
          line: 437,
          column: 12
        },
        end: {
          line: 437,
          column: 24
        }
      },
      "132": {
        start: {
          line: 444,
          column: 8
        },
        end: {
          line: 455,
          column: 9
        }
      },
      "133": {
        start: {
          line: 445,
          column: 25
        },
        end: {
          line: 445,
          column: 58
        }
      },
      "134": {
        start: {
          line: 446,
          column: 12
        },
        end: {
          line: 451,
          column: 13
        }
      },
      "135": {
        start: {
          line: 447,
          column: 16
        },
        end: {
          line: 447,
          column: 72
        }
      },
      "136": {
        start: {
          line: 449,
          column: 17
        },
        end: {
          line: 451,
          column: 13
        }
      },
      "137": {
        start: {
          line: 450,
          column: 16
        },
        end: {
          line: 450,
          column: 72
        }
      },
      "138": {
        start: {
          line: 454,
          column: 12
        },
        end: {
          line: 454,
          column: 77
        }
      },
      "139": {
        start: {
          line: 461,
          column: 8
        },
        end: {
          line: 483,
          column: 9
        }
      },
      "140": {
        start: {
          line: 463,
          column: 30
        },
        end: {
          line: 463,
          column: 40
        }
      },
      "141": {
        start: {
          line: 464,
          column: 12
        },
        end: {
          line: 464,
          column: 55
        }
      },
      "142": {
        start: {
          line: 465,
          column: 12
        },
        end: {
          line: 465,
          column: 43
        }
      },
      "143": {
        start: {
          line: 466,
          column: 26
        },
        end: {
          line: 466,
          column: 45
        }
      },
      "144": {
        start: {
          line: 467,
          column: 12
        },
        end: {
          line: 467,
          column: 47
        }
      },
      "145": {
        start: {
          line: 469,
          column: 34
        },
        end: {
          line: 475,
          column: 49
        }
      },
      "146": {
        start: {
          line: 476,
          column: 12
        },
        end: {
          line: 479,
          column: 15
        }
      },
      "147": {
        start: {
          line: 482,
          column: 12
        },
        end: {
          line: 482,
          column: 68
        }
      },
      "148": {
        start: {
          line: 489,
          column: 8
        },
        end: {
          line: 504,
          column: 9
        }
      },
      "149": {
        start: {
          line: 490,
          column: 32
        },
        end: {
          line: 496,
          column: 45
        }
      },
      "150": {
        start: {
          line: 497,
          column: 12
        },
        end: {
          line: 500,
          column: 15
        }
      },
      "151": {
        start: {
          line: 503,
          column: 12
        },
        end: {
          line: 503,
          column: 68
        }
      },
      "152": {
        start: {
          line: 507,
          column: 0
        },
        end: {
          line: 511,
          column: 20
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 1,
            column: 46
          },
          end: {
            line: 1,
            column: 47
          }
        },
        loc: {
          start: {
            line: 1,
            column: 87
          },
          end: {
            line: 6,
            column: 1
          }
        },
        line: 1
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 47
          }
        },
        loc: {
          start: {
            line: 7,
            column: 62
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 7
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 10,
            column: 40
          },
          end: {
            line: 10,
            column: 41
          }
        },
        loc: {
          start: {
            line: 10,
            column: 73
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 10
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 11,
            column: 11
          },
          end: {
            line: 11,
            column: 12
          }
        },
        loc: {
          start: {
            line: 11,
            column: 34
          },
          end: {
            line: 11,
            column: 73
          }
        },
        line: 11
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 69
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 30
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        loc: {
          start: {
            line: 37,
            column: 23
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 37
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        loc: {
          start: {
            line: 50,
            column: 47
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 50
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        loc: {
          start: {
            line: 79,
            column: 50
          },
          end: {
            line: 136,
            column: 5
          }
        },
        line: 79
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 140,
            column: 5
          }
        },
        loc: {
          start: {
            line: 140,
            column: 61
          },
          end: {
            line: 165,
            column: 5
          }
        },
        line: 140
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 169,
            column: 4
          },
          end: {
            line: 169,
            column: 5
          }
        },
        loc: {
          start: {
            line: 169,
            column: 39
          },
          end: {
            line: 187,
            column: 5
          }
        },
        line: 169
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 176,
            column: 33
          },
          end: {
            line: 176,
            column: 34
          }
        },
        loc: {
          start: {
            line: 176,
            column: 46
          },
          end: {
            line: 181,
            column: 13
          }
        },
        line: 176
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 191,
            column: 4
          },
          end: {
            line: 191,
            column: 5
          }
        },
        loc: {
          start: {
            line: 191,
            column: 51
          },
          end: {
            line: 209,
            column: 5
          }
        },
        line: 191
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 213,
            column: 4
          },
          end: {
            line: 213,
            column: 5
          }
        },
        loc: {
          start: {
            line: 213,
            column: 67
          },
          end: {
            line: 247,
            column: 5
          }
        },
        line: 213
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 225,
            column: 82
          },
          end: {
            line: 225,
            column: 83
          }
        },
        loc: {
          start: {
            line: 225,
            column: 98
          },
          end: {
            line: 240,
            column: 13
          }
        },
        line: 225
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 251,
            column: 4
          },
          end: {
            line: 251,
            column: 5
          }
        },
        loc: {
          start: {
            line: 251,
            column: 87
          },
          end: {
            line: 268,
            column: 5
          }
        },
        line: 251
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 272,
            column: 4
          },
          end: {
            line: 272,
            column: 5
          }
        },
        loc: {
          start: {
            line: 272,
            column: 37
          },
          end: {
            line: 303,
            column: 5
          }
        },
        line: 272
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 307,
            column: 4
          },
          end: {
            line: 307,
            column: 5
          }
        },
        loc: {
          start: {
            line: 307,
            column: 37
          },
          end: {
            line: 370,
            column: 5
          }
        },
        line: 307
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 374,
            column: 4
          },
          end: {
            line: 374,
            column: 5
          }
        },
        loc: {
          start: {
            line: 374,
            column: 42
          },
          end: {
            line: 391,
            column: 5
          }
        },
        line: 374
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 395,
            column: 4
          },
          end: {
            line: 395,
            column: 5
          }
        },
        loc: {
          start: {
            line: 395,
            column: 50
          },
          end: {
            line: 413,
            column: 5
          }
        },
        line: 395
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 417,
            column: 4
          },
          end: {
            line: 417,
            column: 5
          }
        },
        loc: {
          start: {
            line: 417,
            column: 56
          },
          end: {
            line: 439,
            column: 5
          }
        },
        line: 417
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 443,
            column: 4
          },
          end: {
            line: 443,
            column: 5
          }
        },
        loc: {
          start: {
            line: 443,
            column: 77
          },
          end: {
            line: 456,
            column: 5
          }
        },
        line: 443
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 460,
            column: 4
          },
          end: {
            line: 460,
            column: 5
          }
        },
        loc: {
          start: {
            line: 460,
            column: 55
          },
          end: {
            line: 484,
            column: 5
          }
        },
        line: 460
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 488,
            column: 4
          },
          end: {
            line: 488,
            column: 5
          }
        },
        loc: {
          start: {
            line: 488,
            column: 55
          },
          end: {
            line: 505,
            column: 5
          }
        },
        line: 488
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 1,
            column: 17
          },
          end: {
            line: 6,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1,
            column: 18
          },
          end: {
            line: 1,
            column: 22
          }
        }, {
          start: {
            line: 1,
            column: 26
          },
          end: {
            line: 1,
            column: 41
          }
        }, {
          start: {
            line: 1,
            column: 46
          },
          end: {
            line: 6,
            column: 1
          }
        }],
        line: 1
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 34
          },
          end: {
            line: 2,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 42
          },
          end: {
            line: 2,
            column: 48
          }
        }, {
          start: {
            line: 2,
            column: 51
          },
          end: {
            line: 2,
            column: 125
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 2,
            column: 51
          },
          end: {
            line: 2,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 67
          },
          end: {
            line: 2,
            column: 118
          }
        }, {
          start: {
            line: 2,
            column: 121
          },
          end: {
            line: 2,
            column: 125
          }
        }],
        line: 2
      },
      "3": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 4,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 4,
            column: 150
          }
        }, {
          start: {
            line: 4,
            column: 9
          },
          end: {
            line: 4,
            column: 150
          }
        }],
        line: 3
      },
      "4": {
        loc: {
          start: {
            line: 3,
            column: 8
          },
          end: {
            line: 3,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 8
          },
          end: {
            line: 3,
            column: 35
          }
        }, {
          start: {
            line: 3,
            column: 39
          },
          end: {
            line: 3,
            column: 77
          }
        }],
        line: 3
      },
      "5": {
        loc: {
          start: {
            line: 4,
            column: 58
          },
          end: {
            line: 4,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 58
          },
          end: {
            line: 4,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 4
      },
      "6": {
        loc: {
          start: {
            line: 4,
            column: 85
          },
          end: {
            line: 4,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 86
          },
          end: {
            line: 4,
            column: 143
          }
        }, {
          start: {
            line: 4,
            column: 148
          },
          end: {
            line: 4,
            column: 149
          }
        }],
        line: 4
      },
      "7": {
        loc: {
          start: {
            line: 4,
            column: 86
          },
          end: {
            line: 4,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 4,
            column: 94
          },
          end: {
            line: 4,
            column: 98
          }
        }, {
          start: {
            line: 4,
            column: 101
          },
          end: {
            line: 4,
            column: 143
          }
        }],
        line: 4
      },
      "8": {
        loc: {
          start: {
            line: 4,
            column: 101
          },
          end: {
            line: 4,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 4,
            column: 109
          },
          end: {
            line: 4,
            column: 126
          }
        }, {
          start: {
            line: 4,
            column: 129
          },
          end: {
            line: 4,
            column: 143
          }
        }],
        line: 4
      },
      "9": {
        loc: {
          start: {
            line: 5,
            column: 11
          },
          end: {
            line: 5,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 11
          },
          end: {
            line: 5,
            column: 16
          }
        }, {
          start: {
            line: 5,
            column: 20
          },
          end: {
            line: 5,
            column: 21
          }
        }, {
          start: {
            line: 5,
            column: 25
          },
          end: {
            line: 5,
            column: 62
          }
        }],
        line: 5
      },
      "10": {
        loc: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 9,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 7,
            column: 18
          },
          end: {
            line: 7,
            column: 22
          }
        }, {
          start: {
            line: 7,
            column: 26
          },
          end: {
            line: 7,
            column: 41
          }
        }, {
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 9,
            column: 1
          }
        }],
        line: 7
      },
      "11": {
        loc: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 109
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 109
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 8
      },
      "12": {
        loc: {
          start: {
            line: 8,
            column: 8
          },
          end: {
            line: 8,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 8
          },
          end: {
            line: 8,
            column: 35
          }
        }, {
          start: {
            line: 8,
            column: 39
          },
          end: {
            line: 8,
            column: 77
          }
        }],
        line: 8
      },
      "13": {
        loc: {
          start: {
            line: 10,
            column: 14
          },
          end: {
            line: 12,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 10,
            column: 15
          },
          end: {
            line: 10,
            column: 19
          }
        }, {
          start: {
            line: 10,
            column: 23
          },
          end: {
            line: 10,
            column: 35
          }
        }, {
          start: {
            line: 10,
            column: 40
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 10
      },
      "14": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "15": {
        loc: {
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 40,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 40,
            column: 23
          }
        }, {
          start: {
            line: 40,
            column: 27
          },
          end: {
            line: 40,
            column: 37
          }
        }],
        line: 40
      },
      "16": {
        loc: {
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "17": {
        loc: {
          start: {
            line: 81,
            column: 12
          },
          end: {
            line: 83,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 12
          },
          end: {
            line: 83,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "18": {
        loc: {
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 87,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 87,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "19": {
        loc: {
          start: {
            line: 89,
            column: 12
          },
          end: {
            line: 111,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 12
          },
          end: {
            line: 111,
            column: 13
          }
        }, {
          start: {
            line: 98,
            column: 17
          },
          end: {
            line: 111,
            column: 13
          }
        }],
        line: 89
      },
      "20": {
        loc: {
          start: {
            line: 95,
            column: 53
          },
          end: {
            line: 95,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 53
          },
          end: {
            line: 95,
            column: 75
          }
        }, {
          start: {
            line: 95,
            column: 79
          },
          end: {
            line: 95,
            column: 81
          }
        }],
        line: 95
      },
      "21": {
        loc: {
          start: {
            line: 104,
            column: 16
          },
          end: {
            line: 106,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 16
          },
          end: {
            line: 106,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 104
      },
      "22": {
        loc: {
          start: {
            line: 107,
            column: 16
          },
          end: {
            line: 109,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 16
          },
          end: {
            line: 109,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "23": {
        loc: {
          start: {
            line: 149,
            column: 16
          },
          end: {
            line: 154,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 16
          },
          end: {
            line: 154,
            column: 17
          }
        }, {
          start: {
            line: 152,
            column: 21
          },
          end: {
            line: 154,
            column: 17
          }
        }],
        line: 149
      },
      "24": {
        loc: {
          start: {
            line: 213,
            column: 43
          },
          end: {
            line: 213,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 213,
            column: 51
          },
          end: {
            line: 213,
            column: 53
          }
        }],
        line: 213
      },
      "25": {
        loc: {
          start: {
            line: 213,
            column: 55
          },
          end: {
            line: 213,
            column: 65
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 213,
            column: 64
          },
          end: {
            line: 213,
            column: 65
          }
        }],
        line: 213
      },
      "26": {
        loc: {
          start: {
            line: 237,
            column: 33
          },
          end: {
            line: 237,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 237,
            column: 33
          },
          end: {
            line: 237,
            column: 52
          }
        }, {
          start: {
            line: 237,
            column: 56
          },
          end: {
            line: 237,
            column: 83
          }
        }],
        line: 237
      },
      "27": {
        loc: {
          start: {
            line: 251,
            column: 63
          },
          end: {
            line: 251,
            column: 73
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 251,
            column: 71
          },
          end: {
            line: 251,
            column: 73
          }
        }],
        line: 251
      },
      "28": {
        loc: {
          start: {
            line: 251,
            column: 75
          },
          end: {
            line: 251,
            column: 85
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 251,
            column: 84
          },
          end: {
            line: 251,
            column: 85
          }
        }],
        line: 251
      },
      "29": {
        loc: {
          start: {
            line: 275,
            column: 12
          },
          end: {
            line: 278,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 275,
            column: 12
          },
          end: {
            line: 278,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 275
      },
      "30": {
        loc: {
          start: {
            line: 275,
            column: 16
          },
          end: {
            line: 275,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 275,
            column: 16
          },
          end: {
            line: 275,
            column: 21
          }
        }, {
          start: {
            line: 275,
            column: 25
          },
          end: {
            line: 275,
            column: 36
          }
        }],
        line: 275
      },
      "31": {
        loc: {
          start: {
            line: 284,
            column: 12
          },
          end: {
            line: 287,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 284,
            column: 12
          },
          end: {
            line: 287,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 284
      },
      "32": {
        loc: {
          start: {
            line: 293,
            column: 24
          },
          end: {
            line: 293,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 293,
            column: 24
          },
          end: {
            line: 293,
            column: 33
          }
        }, {
          start: {
            line: 293,
            column: 37
          },
          end: {
            line: 293,
            column: 47
          }
        }],
        line: 293
      },
      "33": {
        loc: {
          start: {
            line: 401,
            column: 33
          },
          end: {
            line: 401,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 401,
            column: 33
          },
          end: {
            line: 401,
            column: 56
          }
        }, {
          start: {
            line: 401,
            column: 60
          },
          end: {
            line: 401,
            column: 74
          }
        }],
        line: 401
      },
      "34": {
        loc: {
          start: {
            line: 433,
            column: 19
          },
          end: {
            line: 433,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 433,
            column: 19
          },
          end: {
            line: 433,
            column: 44
          }
        }, {
          start: {
            line: 433,
            column: 48
          },
          end: {
            line: 433,
            column: 52
          }
        }],
        line: 433
      },
      "35": {
        loc: {
          start: {
            line: 446,
            column: 12
          },
          end: {
            line: 451,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 446,
            column: 12
          },
          end: {
            line: 451,
            column: 13
          }
        }, {
          start: {
            line: 449,
            column: 17
          },
          end: {
            line: 451,
            column: 13
          }
        }],
        line: 446
      },
      "36": {
        loc: {
          start: {
            line: 446,
            column: 16
          },
          end: {
            line: 446,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 446,
            column: 16
          },
          end: {
            line: 446,
            column: 37
          }
        }, {
          start: {
            line: 446,
            column: 41
          },
          end: {
            line: 446,
            column: 59
          }
        }],
        line: 446
      },
      "37": {
        loc: {
          start: {
            line: 449,
            column: 17
          },
          end: {
            line: 451,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 449,
            column: 17
          },
          end: {
            line: 451,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 449
      },
      "38": {
        loc: {
          start: {
            line: 449,
            column: 21
          },
          end: {
            line: 449,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 449,
            column: 21
          },
          end: {
            line: 449,
            column: 38
          }
        }, {
          start: {
            line: 449,
            column: 42
          },
          end: {
            line: 449,
            column: 58
          }
        }],
        line: 449
      },
      "39": {
        loc: {
          start: {
            line: 510,
            column: 37
          },
          end: {
            line: 510,
            column: 133
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 510,
            column: 122
          },
          end: {
            line: 510,
            column: 124
          }
        }, {
          start: {
            line: 510,
            column: 127
          },
          end: {
            line: 510,
            column: 133
          }
        }],
        line: 510
      },
      "40": {
        loc: {
          start: {
            line: 510,
            column: 50
          },
          end: {
            line: 510,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 510,
            column: 50
          },
          end: {
            line: 510,
            column: 86
          }
        }, {
          start: {
            line: 510,
            column: 90
          },
          end: {
            line: 510,
            column: 103
          }
        }],
        line: 510
      },
      "41": {
        loc: {
          start: {
            line: 510,
            column: 135
          },
          end: {
            line: 510,
            column: 231
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 510,
            column: 220
          },
          end: {
            line: 510,
            column: 222
          }
        }, {
          start: {
            line: 510,
            column: 225
          },
          end: {
            line: 510,
            column: 231
          }
        }],
        line: 510
      },
      "42": {
        loc: {
          start: {
            line: 510,
            column: 148
          },
          end: {
            line: 510,
            column: 201
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 510,
            column: 148
          },
          end: {
            line: 510,
            column: 184
          }
        }, {
          start: {
            line: 510,
            column: 188
          },
          end: {
            line: 510,
            column: 201
          }
        }],
        line: 510
      },
      "43": {
        loc: {
          start: {
            line: 510,
            column: 233
          },
          end: {
            line: 510,
            column: 329
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 510,
            column: 318
          },
          end: {
            line: 510,
            column: 320
          }
        }, {
          start: {
            line: 510,
            column: 323
          },
          end: {
            line: 510,
            column: 329
          }
        }],
        line: 510
      },
      "44": {
        loc: {
          start: {
            line: 510,
            column: 246
          },
          end: {
            line: 510,
            column: 299
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 510,
            column: 246
          },
          end: {
            line: 510,
            column: 282
          }
        }, {
          start: {
            line: 510,
            column: 286
          },
          end: {
            line: 510,
            column: 299
          }
        }],
        line: 510
      },
      "45": {
        loc: {
          start: {
            line: 510,
            column: 331
          },
          end: {
            line: 510,
            column: 411
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 510,
            column: 400
          },
          end: {
            line: 510,
            column: 402
          }
        }, {
          start: {
            line: 510,
            column: 405
          },
          end: {
            line: 510,
            column: 411
          }
        }],
        line: 510
      },
      "46": {
        loc: {
          start: {
            line: 510,
            column: 344
          },
          end: {
            line: 510,
            column: 381
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 510,
            column: 344
          },
          end: {
            line: 510,
            column: 372
          }
        }, {
          start: {
            line: 510,
            column: 376
          },
          end: {
            line: 510,
            column: 381
          }
        }],
        line: 510
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0],
      "25": [0],
      "26": [0, 0],
      "27": [0],
      "28": [0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\services\\whatsapp.service.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\services\\whatsapp.service.ts"],
      sourcesContent: ["import { Injectable, Logger, BadRequestException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PrismaService } from '../database/prisma.service';\nimport { CryptoService } from './crypto.service';\nimport { Twilio } from 'twilio';\nimport { Queue } from 'bull';\nimport { InjectQueue } from '@nestjs/bull';\n\nexport interface WhatsAppMessage {\n  to: string;\n  body?: string;\n  mediaUrl?: string;\n  templateName?: string;\n  templateParams?: Record<string, string>;\n}\n\nexport interface WhatsAppTemplate {\n  name: string;\n  category: 'MARKETING' | 'UTILITY' | 'AUTHENTICATION';\n  language: string;\n  components: {\n    type: 'HEADER' | 'BODY' | 'FOOTER' | 'BUTTONS';\n    text?: string;\n    parameters?: Array<{ type: string; text: string }>;\n  }[];\n}\n\nexport interface ConversationMetrics {\n  totalMessages: number;\n  sentMessages: number;\n  receivedMessages: number;\n  failedMessages: number;\n  dailyLimit: number;\n  remainingQuota: number;\n}\n\n@Injectable()\nexport class WhatsAppService {\n  private readonly logger = new Logger(WhatsAppService.name);\n  private twilioClient: Twilio;\n  private readonly dailyLimit = 1000;\n\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly prisma: PrismaService,\n    private readonly cryptoService: CryptoService,\n    @InjectQueue('whatsapp') private whatsappQueue: Queue,\n  ) {\n    this.initializeTwilio();\n  }\n\n  private initializeTwilio() {\n    const accountSid = this.configService.get<string>('TWILIO_ACCOUNT_SID');\n    const authToken = this.configService.get<string>('TWILIO_AUTH_TOKEN');\n\n    if (!accountSid || !authToken) {\n      this.logger.warn('Twilio credentials not configured');\n      return;\n    }\n\n    this.twilioClient = new Twilio(accountSid, authToken);\n    this.logger.log('Twilio WhatsApp client initialized');\n  }\n\n  /**\n   * Send WhatsApp message\n   */\n  async sendMessage(\n    organizationId: string,\n    message: WhatsAppMessage,\n  ): Promise<{ success: boolean; messageId?: string; error?: string }> {\n    try {\n      // Check daily limit\n      const canSend = await this.checkDailyLimit(organizationId);\n      if (!canSend) {\n        throw new BadRequestException('Daily message limit exceeded (1000 messages)');\n      }\n\n      // Add to queue for rate limiting\n      const job = await this.whatsappQueue.add('send-message', {\n        organizationId,\n        message,\n      }, {\n        attempts: 3,\n        backoff: {\n          type: 'exponential',\n          delay: 2000,\n        },\n      });\n\n      this.logger.log(`Message queued for sending: ${job.id}`);\n      return { success: true, messageId: job.id.toString() };\n    } catch (error) {\n      this.logger.error('Error sending WhatsApp message:', error);\n      return { success: false, error: error.message };\n    }\n  }\n\n  /**\n   * Process message from queue\n   */\n  async processMessage(\n    organizationId: string,\n    message: WhatsAppMessage,\n  ): Promise<void> {\n    try {\n      if (!this.twilioClient) {\n        throw new Error('Twilio client not initialized');\n      }\n\n      const fromNumber = this.configService.get<string>('TWILIO_WHATSAPP_NUMBER');\n      if (!fromNumber) {\n        throw new Error('Twilio WhatsApp number not configured');\n      }\n\n      let twilioMessage;\n\n      if (message.templateName) {\n        // Send template message\n        twilioMessage = await this.twilioClient.messages.create({\n          from: `whatsapp:${fromNumber}`,\n          to: `whatsapp:${message.to}`,\n          contentSid: message.templateName,\n          contentVariables: JSON.stringify(message.templateParams || {}),\n        });\n      } else {\n        // Send regular message\n        const messageData: any = {\n          from: `whatsapp:${fromNumber}`,\n          to: `whatsapp:${message.to}`,\n        };\n\n        if (message.body) {\n          messageData.body = message.body;\n        }\n\n        if (message.mediaUrl) {\n          messageData.mediaUrl = [message.mediaUrl];\n        }\n\n        twilioMessage = await this.twilioClient.messages.create(messageData);\n      }\n\n      // Log message in database\n      await this.logMessage(organizationId, {\n        twilioSid: twilioMessage.sid,\n        to: message.to,\n        body: message.body,\n        templateName: message.templateName,\n        status: 'sent',\n        direction: 'outbound',\n      });\n\n      this.logger.log(`WhatsApp message sent successfully: ${twilioMessage.sid}`);\n    } catch (error) {\n      this.logger.error('Error processing WhatsApp message:', error);\n      \n      // Log failed message\n      await this.logMessage(organizationId, {\n        to: message.to,\n        body: message.body,\n        templateName: message.templateName,\n        status: 'failed',\n        direction: 'outbound',\n        error: error.message,\n      });\n\n      throw error;\n    }\n  }\n\n  /**\n   * Send broadcast message to multiple recipients\n   */\n  async sendBroadcast(\n    organizationId: string,\n    recipients: string[],\n    message: Omit<WhatsAppMessage, 'to'>,\n  ): Promise<{ success: boolean; queued: number; errors: string[] }> {\n    const errors: string[] = [];\n    let queued = 0;\n\n    for (const recipient of recipients) {\n      try {\n        const result = await this.sendMessage(organizationId, {\n          ...message,\n          to: recipient,\n        });\n\n        if (result.success) {\n          queued++;\n        } else {\n          errors.push(`${recipient}: ${result.error}`);\n        }\n      } catch (error) {\n        errors.push(`${recipient}: ${error.message}`);\n      }\n    }\n\n    return {\n      success: errors.length === 0,\n      queued,\n      errors,\n    };\n  }\n\n  /**\n   * Get message templates\n   */\n  async getTemplates(organizationId: string): Promise<WhatsAppTemplate[]> {\n    try {\n      // Get templates from database\n      const templates = await this.prisma.whatsAppTemplate.findMany({\n        where: { organizationId },\n        orderBy: { createdAt: 'desc' },\n      });\n\n      return templates.map(template => ({\n        name: template.name,\n        category: template.category as any,\n        language: template.language,\n        components: JSON.parse(template.components),\n      }));\n    } catch (error) {\n      this.logger.error('Error fetching WhatsApp templates:', error);\n      return [];\n    }\n  }\n\n  /**\n   * Create message template\n   */\n  async createTemplate(\n    organizationId: string,\n    template: WhatsAppTemplate,\n  ): Promise<{ success: boolean; error?: string }> {\n    try {\n      await this.prisma.whatsAppTemplate.create({\n        data: {\n          organizationId,\n          name: template.name,\n          category: template.category,\n          language: template.language,\n          components: JSON.stringify(template.components),\n        },\n      });\n\n      this.logger.log(`WhatsApp template created: ${template.name}`);\n      return { success: true };\n    } catch (error) {\n      this.logger.error('Error creating WhatsApp template:', error);\n      return { success: false, error: error.message };\n    }\n  }\n\n  /**\n   * Get conversations\n   */\n  async getConversations(\n    organizationId: string,\n    limit = 50,\n    offset = 0,\n  ): Promise<any[]> {\n    try {\n      const conversations = await this.prisma.whatsAppMessage.groupBy({\n        by: ['phoneNumber'],\n        where: { organizationId },\n        _count: { id: true },\n        _max: { createdAt: true },\n        orderBy: { _max: { createdAt: 'desc' } },\n        take: limit,\n        skip: offset,\n      });\n\n      // Get latest message for each conversation\n      const conversationsWithMessages = await Promise.all(\n        conversations.map(async (conv) => {\n          const latestMessage = await this.prisma.whatsAppMessage.findFirst({\n            where: {\n              organizationId,\n              phoneNumber: conv.phoneNumber,\n            },\n            orderBy: { createdAt: 'desc' },\n          });\n\n          return {\n            phoneNumber: conv.phoneNumber,\n            messageCount: conv._count.id,\n            lastMessageAt: conv._max.createdAt,\n            lastMessage: latestMessage?.body || latestMessage?.templateName,\n            lastMessageDirection: latestMessage?.direction,\n          };\n        }),\n      );\n\n      return conversationsWithMessages;\n    } catch (error) {\n      this.logger.error('Error fetching conversations:', error);\n      return [];\n    }\n  }\n\n  /**\n   * Get conversation messages\n   */\n  async getConversationMessages(\n    organizationId: string,\n    phoneNumber: string,\n    limit = 50,\n    offset = 0,\n  ): Promise<any[]> {\n    try {\n      const messages = await this.prisma.whatsAppMessage.findMany({\n        where: {\n          organizationId,\n          phoneNumber,\n        },\n        orderBy: { createdAt: 'desc' },\n        take: limit,\n        skip: offset,\n      });\n\n      return messages;\n    } catch (error) {\n      this.logger.error('Error fetching conversation messages:', error);\n      return [];\n    }\n  }\n\n  /**\n   * Handle incoming webhook\n   */\n  async handleWebhook(webhookData: any): Promise<void> {\n    try {\n      const { From, To, Body, MessageSid, SmsStatus } = webhookData;\n      \n      if (!From || !MessageSid) {\n        this.logger.warn('Invalid webhook data received');\n        return;\n      }\n\n      // Extract phone number (remove whatsapp: prefix)\n      const phoneNumber = From.replace('whatsapp:', '');\n      const toNumber = To?.replace('whatsapp:', '');\n\n      // Find organization by WhatsApp number\n      const organization = await this.findOrganizationByWhatsAppNumber(toNumber);\n      if (!organization) {\n        this.logger.warn(`No organization found for WhatsApp number: ${toNumber}`);\n        return;\n      }\n\n      // Log incoming message\n      await this.logMessage(organization.id, {\n        twilioSid: MessageSid,\n        phoneNumber,\n        body: Body,\n        status: SmsStatus || 'received',\n        direction: 'inbound',\n      });\n\n      // Process automated responses\n      await this.processAutomatedResponse(organization.id, phoneNumber, Body);\n\n      this.logger.log(`Webhook processed for message: ${MessageSid}`);\n    } catch (error) {\n      this.logger.error('Error processing WhatsApp webhook:', error);\n    }\n  }\n\n  /**\n   * Get conversation metrics\n   */\n  async getMetrics(organizationId: string): Promise<ConversationMetrics> {\n    try {\n      const today = new Date();\n      today.setHours(0, 0, 0, 0);\n      const tomorrow = new Date(today);\n      tomorrow.setDate(tomorrow.getDate() + 1);\n\n      const [totalMessages, sentToday, receivedToday, failedToday] = await Promise.all([\n        this.prisma.whatsAppMessage.count({\n          where: { organizationId },\n        }),\n        this.prisma.whatsAppMessage.count({\n          where: {\n            organizationId,\n            direction: 'outbound',\n            status: 'sent',\n            createdAt: {\n              gte: today,\n              lt: tomorrow,\n            },\n          },\n        }),\n        this.prisma.whatsAppMessage.count({\n          where: {\n            organizationId,\n            direction: 'inbound',\n            createdAt: {\n              gte: today,\n              lt: tomorrow,\n            },\n          },\n        }),\n        this.prisma.whatsAppMessage.count({\n          where: {\n            organizationId,\n            direction: 'outbound',\n            status: 'failed',\n            createdAt: {\n              gte: today,\n              lt: tomorrow,\n            },\n          },\n        }),\n      ]);\n\n      return {\n        totalMessages,\n        sentMessages: sentToday,\n        receivedMessages: receivedToday,\n        failedMessages: failedToday,\n        dailyLimit: this.dailyLimit,\n        remainingQuota: Math.max(0, this.dailyLimit - sentToday),\n      };\n    } catch (error) {\n      this.logger.error('Error fetching WhatsApp metrics:', error);\n      return {\n        totalMessages: 0,\n        sentMessages: 0,\n        receivedMessages: 0,\n        failedMessages: 0,\n        dailyLimit: this.dailyLimit,\n        remainingQuota: this.dailyLimit,\n      };\n    }\n  }\n\n  /**\n   * Check daily sending limit\n   */\n  private async checkDailyLimit(organizationId: string): Promise<boolean> {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    const tomorrow = new Date(today);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n\n    const sentToday = await this.prisma.whatsAppMessage.count({\n      where: {\n        organizationId,\n        direction: 'outbound',\n        status: 'sent',\n        createdAt: {\n          gte: today,\n          lt: tomorrow,\n        },\n      },\n    });\n\n    return sentToday < this.dailyLimit;\n  }\n\n  /**\n   * Log message in database\n   */\n  private async logMessage(\n    organizationId: string,\n    messageData: {\n      twilioSid?: string;\n      phoneNumber?: string;\n      to?: string;\n      body?: string;\n      templateName?: string;\n      status: string;\n      direction: 'inbound' | 'outbound';\n      error?: string;\n    },\n  ): Promise<void> {\n    try {\n      await this.prisma.whatsAppMessage.create({\n        data: {\n          organizationId,\n          twilioSid: messageData.twilioSid,\n          phoneNumber: messageData.phoneNumber || messageData.to,\n          body: messageData.body,\n          templateName: messageData.templateName,\n          status: messageData.status,\n          direction: messageData.direction,\n          error: messageData.error,\n        },\n      });\n    } catch (error) {\n      this.logger.error('Error logging WhatsApp message:', error);\n    }\n  }\n\n  /**\n   * Find organization by WhatsApp number\n   */\n  private async findOrganizationByWhatsAppNumber(phoneNumber: string) {\n    try {\n      const integration = await this.prisma.integration.findFirst({\n        where: {\n          platform: 'whatsapp',\n          isActive: true,\n          // Assuming phone number is stored in metadata\n          metadata: {\n            path: ['phoneNumber'],\n            equals: phoneNumber,\n          },\n        },\n        include: {\n          organization: true,\n        },\n      });\n\n      return integration?.organization || null;\n    } catch (error) {\n      this.logger.error('Error finding organization by WhatsApp number:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Process automated responses\n   */\n  private async processAutomatedResponse(\n    organizationId: string,\n    phoneNumber: string,\n    messageBody: string,\n  ): Promise<void> {\n    try {\n      const body = messageBody?.toLowerCase().trim();\n\n      if (body === '/relatorio' || body === '/report') {\n        await this.sendDailyReport(organizationId, phoneNumber);\n      } else if (body === '/ajuda' || body === '/help') {\n        await this.sendHelpMessage(organizationId, phoneNumber);\n      }\n    } catch (error) {\n      this.logger.error('Error processing automated response:', error);\n    }\n  }\n\n  /**\n   * Send daily report\n   */\n  private async sendDailyReport(\n    organizationId: string,\n    phoneNumber: string,\n  ): Promise<void> {\n    try {\n      // Get yesterday's metrics\n      const yesterday = new Date();\n      yesterday.setDate(yesterday.getDate() - 1);\n      yesterday.setHours(0, 0, 0, 0);\n      const today = new Date(yesterday);\n      today.setDate(today.getDate() + 1);\n\n      // This would integrate with your existing metrics service\n      const reportMessage = `\uD83D\uDCCA *Relat\xF3rio Di\xE1rio*\\n\\n` +\n        `\uD83D\uDCC5 Data: ${yesterday.toLocaleDateString('pt-BR')}\\n` +\n        `\uD83D\uDCB0 Vendas: R$ 0,00\\n` +\n        `\uD83D\uDCC8 Convers\xF5es: 0\\n` +\n        `\uD83D\uDCB8 Gastos: R$ 0,00\\n` +\n        `\uD83C\uDFAF ROI: 0%\\n\\n` +\n        `Digite /ajuda para mais op\xE7\xF5es.`;\n\n      await this.sendMessage(organizationId, {\n        to: phoneNumber,\n        body: reportMessage,\n      });\n    } catch (error) {\n      this.logger.error('Error sending daily report:', error);\n    }\n  }\n\n  /**\n   * Send help message\n   */\n  private async sendHelpMessage(\n    organizationId: string,\n    phoneNumber: string,\n  ): Promise<void> {\n    try {\n      const helpMessage = `\uD83E\uDD16 *Comandos Dispon\xEDveis*\\n\\n` +\n        `\uD83D\uDCCA /relatorio - Relat\xF3rio do dia anterior\\n` +\n        `\uD83D\uDCA1 /ajuda - Esta mensagem\\n\\n` +\n        `Voc\xEA tamb\xE9m receber\xE1:\\n` +\n        `\uD83D\uDD14 Notifica\xE7\xF5es de vendas\\n` +\n        `\u26A0\uFE0F Alertas de or\xE7amento\\n` +\n        `\uD83D\uDCC8 Relat\xF3rios di\xE1rios \xE0s 9h`;\n\n      await this.sendMessage(organizationId, {\n        to: phoneNumber,\n        body: helpMessage,\n      });\n    } catch (error) {\n      this.logger.error('Error sending help message:', error);\n    }\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7e1d61f9b51b27df2ebb36ea6e033c9a10174cc7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2h48fpenaj = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2h48fpenaj();
var __decorate =
/* istanbul ignore next */
(cov_2h48fpenaj().s[0]++,
/* istanbul ignore next */
(cov_2h48fpenaj().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2h48fpenaj().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_2h48fpenaj().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_2h48fpenaj().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_2h48fpenaj().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_2h48fpenaj().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_2h48fpenaj().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_2h48fpenaj().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_2h48fpenaj().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_2h48fpenaj().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_2h48fpenaj().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_2h48fpenaj().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_2h48fpenaj().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_2h48fpenaj().b[3][0]++;
    cov_2h48fpenaj().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_2h48fpenaj().b[3][1]++;
    cov_2h48fpenaj().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_2h48fpenaj().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_2h48fpenaj().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_2h48fpenaj().b[5][0]++;
        cov_2h48fpenaj().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_2h48fpenaj().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_2h48fpenaj().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_2h48fpenaj().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_2h48fpenaj().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_2h48fpenaj().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_2h48fpenaj().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_2h48fpenaj().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_2h48fpenaj().s[9]++;
  return /* istanbul ignore next */(cov_2h48fpenaj().b[9][0]++, c > 3) &&
  /* istanbul ignore next */
  (cov_2h48fpenaj().b[9][1]++, r) &&
  /* istanbul ignore next */
  (cov_2h48fpenaj().b[9][2]++, Object.defineProperty(target, key, r)), r;
}));
var __metadata =
/* istanbul ignore next */
(cov_2h48fpenaj().s[10]++,
/* istanbul ignore next */
(cov_2h48fpenaj().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_2h48fpenaj().b[10][1]++, this.__metadata) ||
/* istanbul ignore next */
(cov_2h48fpenaj().b[10][2]++, function (k, v) {
  /* istanbul ignore next */
  cov_2h48fpenaj().f[1]++;
  cov_2h48fpenaj().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_2h48fpenaj().b[12][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_2h48fpenaj().b[12][1]++, typeof Reflect.metadata === "function")) {
    /* istanbul ignore next */
    cov_2h48fpenaj().b[11][0]++;
    cov_2h48fpenaj().s[12]++;
    return Reflect.metadata(k, v);
  } else
  /* istanbul ignore next */
  {
    cov_2h48fpenaj().b[11][1]++;
  }
}));
var __param =
/* istanbul ignore next */
(cov_2h48fpenaj().s[13]++,
/* istanbul ignore next */
(cov_2h48fpenaj().b[13][0]++, this) &&
/* istanbul ignore next */
(cov_2h48fpenaj().b[13][1]++, this.__param) ||
/* istanbul ignore next */
(cov_2h48fpenaj().b[13][2]++, function (paramIndex, decorator) {
  /* istanbul ignore next */
  cov_2h48fpenaj().f[2]++;
  cov_2h48fpenaj().s[14]++;
  return function (target, key) {
    /* istanbul ignore next */
    cov_2h48fpenaj().f[3]++;
    cov_2h48fpenaj().s[15]++;
    decorator(target, key, paramIndex);
  };
}));
var WhatsAppService_1;
var _a, _b, _c, _d;
import { Injectable, Logger, BadRequestException } from '@nestjs/common';
import { ConfigService } from '@nestjs/config';
import { PrismaService } from '../database/prisma.service';
import { CryptoService } from './crypto.service';
import { Twilio } from 'twilio';
import { Queue } from 'bull';
import { InjectQueue } from '@nestjs/bull';
let WhatsAppService =
/* istanbul ignore next */
(cov_2h48fpenaj().s[16]++, WhatsAppService_1 = class WhatsAppService {
  configService;
  prisma;
  cryptoService;
  whatsappQueue;
  logger =
  /* istanbul ignore next */
  (cov_2h48fpenaj().s[17]++, new Logger(WhatsAppService_1.name));
  twilioClient;
  dailyLimit =
  /* istanbul ignore next */
  (cov_2h48fpenaj().s[18]++, 1000);
  constructor(configService, prisma, cryptoService, whatsappQueue) {
    /* istanbul ignore next */
    cov_2h48fpenaj().f[4]++;
    cov_2h48fpenaj().s[19]++;
    this.configService = configService;
    /* istanbul ignore next */
    cov_2h48fpenaj().s[20]++;
    this.prisma = prisma;
    /* istanbul ignore next */
    cov_2h48fpenaj().s[21]++;
    this.cryptoService = cryptoService;
    /* istanbul ignore next */
    cov_2h48fpenaj().s[22]++;
    this.whatsappQueue = whatsappQueue;
    /* istanbul ignore next */
    cov_2h48fpenaj().s[23]++;
    this.initializeTwilio();
  }
  initializeTwilio() {
    /* istanbul ignore next */
    cov_2h48fpenaj().f[5]++;
    const accountSid =
    /* istanbul ignore next */
    (cov_2h48fpenaj().s[24]++, this.configService.get('TWILIO_ACCOUNT_SID'));
    const authToken =
    /* istanbul ignore next */
    (cov_2h48fpenaj().s[25]++, this.configService.get('TWILIO_AUTH_TOKEN'));
    /* istanbul ignore next */
    cov_2h48fpenaj().s[26]++;
    if (
    /* istanbul ignore next */
    (cov_2h48fpenaj().b[15][0]++, !accountSid) ||
    /* istanbul ignore next */
    (cov_2h48fpenaj().b[15][1]++, !authToken)) {
      /* istanbul ignore next */
      cov_2h48fpenaj().b[14][0]++;
      cov_2h48fpenaj().s[27]++;
      this.logger.warn('Twilio credentials not configured');
      /* istanbul ignore next */
      cov_2h48fpenaj().s[28]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2h48fpenaj().b[14][1]++;
    }
    cov_2h48fpenaj().s[29]++;
    this.twilioClient = new Twilio(accountSid, authToken);
    /* istanbul ignore next */
    cov_2h48fpenaj().s[30]++;
    this.logger.log('Twilio WhatsApp client initialized');
  }
  /**
   * Send WhatsApp message
   */
  async sendMessage(organizationId, message) {
    /* istanbul ignore next */
    cov_2h48fpenaj().f[6]++;
    cov_2h48fpenaj().s[31]++;
    try {
      // Check daily limit
      const canSend =
      /* istanbul ignore next */
      (cov_2h48fpenaj().s[32]++, await this.checkDailyLimit(organizationId));
      /* istanbul ignore next */
      cov_2h48fpenaj().s[33]++;
      if (!canSend) {
        /* istanbul ignore next */
        cov_2h48fpenaj().b[16][0]++;
        cov_2h48fpenaj().s[34]++;
        throw new BadRequestException('Daily message limit exceeded (1000 messages)');
      } else
      /* istanbul ignore next */
      {
        cov_2h48fpenaj().b[16][1]++;
      }
      // Add to queue for rate limiting
      const job =
      /* istanbul ignore next */
      (cov_2h48fpenaj().s[35]++, await this.whatsappQueue.add('send-message', {
        organizationId,
        message
      }, {
        attempts: 3,
        backoff: {
          type: 'exponential',
          delay: 2000
        }
      }));
      /* istanbul ignore next */
      cov_2h48fpenaj().s[36]++;
      this.logger.log(`Message queued for sending: ${job.id}`);
      /* istanbul ignore next */
      cov_2h48fpenaj().s[37]++;
      return {
        success: true,
        messageId: job.id.toString()
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2h48fpenaj().s[38]++;
      this.logger.error('Error sending WhatsApp message:', error);
      /* istanbul ignore next */
      cov_2h48fpenaj().s[39]++;
      return {
        success: false,
        error: error.message
      };
    }
  }
  /**
   * Process message from queue
   */
  async processMessage(organizationId, message) {
    /* istanbul ignore next */
    cov_2h48fpenaj().f[7]++;
    cov_2h48fpenaj().s[40]++;
    try {
      /* istanbul ignore next */
      cov_2h48fpenaj().s[41]++;
      if (!this.twilioClient) {
        /* istanbul ignore next */
        cov_2h48fpenaj().b[17][0]++;
        cov_2h48fpenaj().s[42]++;
        throw new Error('Twilio client not initialized');
      } else
      /* istanbul ignore next */
      {
        cov_2h48fpenaj().b[17][1]++;
      }
      const fromNumber =
      /* istanbul ignore next */
      (cov_2h48fpenaj().s[43]++, this.configService.get('TWILIO_WHATSAPP_NUMBER'));
      /* istanbul ignore next */
      cov_2h48fpenaj().s[44]++;
      if (!fromNumber) {
        /* istanbul ignore next */
        cov_2h48fpenaj().b[18][0]++;
        cov_2h48fpenaj().s[45]++;
        throw new Error('Twilio WhatsApp number not configured');
      } else
      /* istanbul ignore next */
      {
        cov_2h48fpenaj().b[18][1]++;
      }
      let twilioMessage;
      /* istanbul ignore next */
      cov_2h48fpenaj().s[46]++;
      if (message.templateName) {
        /* istanbul ignore next */
        cov_2h48fpenaj().b[19][0]++;
        cov_2h48fpenaj().s[47]++;
        // Send template message
        twilioMessage = await this.twilioClient.messages.create({
          from: `whatsapp:${fromNumber}`,
          to: `whatsapp:${message.to}`,
          contentSid: message.templateName,
          contentVariables: JSON.stringify(
          /* istanbul ignore next */
          (cov_2h48fpenaj().b[20][0]++, message.templateParams) ||
          /* istanbul ignore next */
          (cov_2h48fpenaj().b[20][1]++, {}))
        });
      } else {
        /* istanbul ignore next */
        cov_2h48fpenaj().b[19][1]++;
        // Send regular message
        const messageData =
        /* istanbul ignore next */
        (cov_2h48fpenaj().s[48]++, {
          from: `whatsapp:${fromNumber}`,
          to: `whatsapp:${message.to}`
        });
        /* istanbul ignore next */
        cov_2h48fpenaj().s[49]++;
        if (message.body) {
          /* istanbul ignore next */
          cov_2h48fpenaj().b[21][0]++;
          cov_2h48fpenaj().s[50]++;
          messageData.body = message.body;
        } else
        /* istanbul ignore next */
        {
          cov_2h48fpenaj().b[21][1]++;
        }
        cov_2h48fpenaj().s[51]++;
        if (message.mediaUrl) {
          /* istanbul ignore next */
          cov_2h48fpenaj().b[22][0]++;
          cov_2h48fpenaj().s[52]++;
          messageData.mediaUrl = [message.mediaUrl];
        } else
        /* istanbul ignore next */
        {
          cov_2h48fpenaj().b[22][1]++;
        }
        cov_2h48fpenaj().s[53]++;
        twilioMessage = await this.twilioClient.messages.create(messageData);
      }
      // Log message in database
      /* istanbul ignore next */
      cov_2h48fpenaj().s[54]++;
      await this.logMessage(organizationId, {
        twilioSid: twilioMessage.sid,
        to: message.to,
        body: message.body,
        templateName: message.templateName,
        status: 'sent',
        direction: 'outbound'
      });
      /* istanbul ignore next */
      cov_2h48fpenaj().s[55]++;
      this.logger.log(`WhatsApp message sent successfully: ${twilioMessage.sid}`);
    } catch (error) {
      /* istanbul ignore next */
      cov_2h48fpenaj().s[56]++;
      this.logger.error('Error processing WhatsApp message:', error);
      // Log failed message
      /* istanbul ignore next */
      cov_2h48fpenaj().s[57]++;
      await this.logMessage(organizationId, {
        to: message.to,
        body: message.body,
        templateName: message.templateName,
        status: 'failed',
        direction: 'outbound',
        error: error.message
      });
      /* istanbul ignore next */
      cov_2h48fpenaj().s[58]++;
      throw error;
    }
  }
  /**
   * Send broadcast message to multiple recipients
   */
  async sendBroadcast(organizationId, recipients, message) {
    /* istanbul ignore next */
    cov_2h48fpenaj().f[8]++;
    const errors =
    /* istanbul ignore next */
    (cov_2h48fpenaj().s[59]++, []);
    let queued =
    /* istanbul ignore next */
    (cov_2h48fpenaj().s[60]++, 0);
    /* istanbul ignore next */
    cov_2h48fpenaj().s[61]++;
    for (const recipient of recipients) {
      /* istanbul ignore next */
      cov_2h48fpenaj().s[62]++;
      try {
        const result =
        /* istanbul ignore next */
        (cov_2h48fpenaj().s[63]++, await this.sendMessage(organizationId, {
          ...message,
          to: recipient
        }));
        /* istanbul ignore next */
        cov_2h48fpenaj().s[64]++;
        if (result.success) {
          /* istanbul ignore next */
          cov_2h48fpenaj().b[23][0]++;
          cov_2h48fpenaj().s[65]++;
          queued++;
        } else {
          /* istanbul ignore next */
          cov_2h48fpenaj().b[23][1]++;
          cov_2h48fpenaj().s[66]++;
          errors.push(`${recipient}: ${result.error}`);
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_2h48fpenaj().s[67]++;
        errors.push(`${recipient}: ${error.message}`);
      }
    }
    /* istanbul ignore next */
    cov_2h48fpenaj().s[68]++;
    return {
      success: errors.length === 0,
      queued,
      errors
    };
  }
  /**
   * Get message templates
   */
  async getTemplates(organizationId) {
    /* istanbul ignore next */
    cov_2h48fpenaj().f[9]++;
    cov_2h48fpenaj().s[69]++;
    try {
      // Get templates from database
      const templates =
      /* istanbul ignore next */
      (cov_2h48fpenaj().s[70]++, await this.prisma.whatsAppTemplate.findMany({
        where: {
          organizationId
        },
        orderBy: {
          createdAt: 'desc'
        }
      }));
      /* istanbul ignore next */
      cov_2h48fpenaj().s[71]++;
      return templates.map(template => {
        /* istanbul ignore next */
        cov_2h48fpenaj().f[10]++;
        cov_2h48fpenaj().s[72]++;
        return {
          name: template.name,
          category: template.category,
          language: template.language,
          components: JSON.parse(template.components)
        };
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2h48fpenaj().s[73]++;
      this.logger.error('Error fetching WhatsApp templates:', error);
      /* istanbul ignore next */
      cov_2h48fpenaj().s[74]++;
      return [];
    }
  }
  /**
   * Create message template
   */
  async createTemplate(organizationId, template) {
    /* istanbul ignore next */
    cov_2h48fpenaj().f[11]++;
    cov_2h48fpenaj().s[75]++;
    try {
      /* istanbul ignore next */
      cov_2h48fpenaj().s[76]++;
      await this.prisma.whatsAppTemplate.create({
        data: {
          organizationId,
          name: template.name,
          category: template.category,
          language: template.language,
          components: JSON.stringify(template.components)
        }
      });
      /* istanbul ignore next */
      cov_2h48fpenaj().s[77]++;
      this.logger.log(`WhatsApp template created: ${template.name}`);
      /* istanbul ignore next */
      cov_2h48fpenaj().s[78]++;
      return {
        success: true
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2h48fpenaj().s[79]++;
      this.logger.error('Error creating WhatsApp template:', error);
      /* istanbul ignore next */
      cov_2h48fpenaj().s[80]++;
      return {
        success: false,
        error: error.message
      };
    }
  }
  /**
   * Get conversations
   */
  async getConversations(organizationId, limit =
  /* istanbul ignore next */
  (cov_2h48fpenaj().b[24][0]++, 50), offset =
  /* istanbul ignore next */
  (cov_2h48fpenaj().b[25][0]++, 0)) {
    /* istanbul ignore next */
    cov_2h48fpenaj().f[12]++;
    cov_2h48fpenaj().s[81]++;
    try {
      const conversations =
      /* istanbul ignore next */
      (cov_2h48fpenaj().s[82]++, await this.prisma.whatsAppMessage.groupBy({
        by: ['phoneNumber'],
        where: {
          organizationId
        },
        _count: {
          id: true
        },
        _max: {
          createdAt: true
        },
        orderBy: {
          _max: {
            createdAt: 'desc'
          }
        },
        take: limit,
        skip: offset
      }));
      // Get latest message for each conversation
      const conversationsWithMessages =
      /* istanbul ignore next */
      (cov_2h48fpenaj().s[83]++, await Promise.all(conversations.map(async conv => {
        /* istanbul ignore next */
        cov_2h48fpenaj().f[13]++;
        const latestMessage =
        /* istanbul ignore next */
        (cov_2h48fpenaj().s[84]++, await this.prisma.whatsAppMessage.findFirst({
          where: {
            organizationId,
            phoneNumber: conv.phoneNumber
          },
          orderBy: {
            createdAt: 'desc'
          }
        }));
        /* istanbul ignore next */
        cov_2h48fpenaj().s[85]++;
        return {
          phoneNumber: conv.phoneNumber,
          messageCount: conv._count.id,
          lastMessageAt: conv._max.createdAt,
          lastMessage:
          /* istanbul ignore next */
          (cov_2h48fpenaj().b[26][0]++, latestMessage?.body) ||
          /* istanbul ignore next */
          (cov_2h48fpenaj().b[26][1]++, latestMessage?.templateName),
          lastMessageDirection: latestMessage?.direction
        };
      })));
      /* istanbul ignore next */
      cov_2h48fpenaj().s[86]++;
      return conversationsWithMessages;
    } catch (error) {
      /* istanbul ignore next */
      cov_2h48fpenaj().s[87]++;
      this.logger.error('Error fetching conversations:', error);
      /* istanbul ignore next */
      cov_2h48fpenaj().s[88]++;
      return [];
    }
  }
  /**
   * Get conversation messages
   */
  async getConversationMessages(organizationId, phoneNumber, limit =
  /* istanbul ignore next */
  (cov_2h48fpenaj().b[27][0]++, 50), offset =
  /* istanbul ignore next */
  (cov_2h48fpenaj().b[28][0]++, 0)) {
    /* istanbul ignore next */
    cov_2h48fpenaj().f[14]++;
    cov_2h48fpenaj().s[89]++;
    try {
      const messages =
      /* istanbul ignore next */
      (cov_2h48fpenaj().s[90]++, await this.prisma.whatsAppMessage.findMany({
        where: {
          organizationId,
          phoneNumber
        },
        orderBy: {
          createdAt: 'desc'
        },
        take: limit,
        skip: offset
      }));
      /* istanbul ignore next */
      cov_2h48fpenaj().s[91]++;
      return messages;
    } catch (error) {
      /* istanbul ignore next */
      cov_2h48fpenaj().s[92]++;
      this.logger.error('Error fetching conversation messages:', error);
      /* istanbul ignore next */
      cov_2h48fpenaj().s[93]++;
      return [];
    }
  }
  /**
   * Handle incoming webhook
   */
  async handleWebhook(webhookData) {
    /* istanbul ignore next */
    cov_2h48fpenaj().f[15]++;
    cov_2h48fpenaj().s[94]++;
    try {
      const {
        From,
        To,
        Body,
        MessageSid,
        SmsStatus
      } =
      /* istanbul ignore next */
      (cov_2h48fpenaj().s[95]++, webhookData);
      /* istanbul ignore next */
      cov_2h48fpenaj().s[96]++;
      if (
      /* istanbul ignore next */
      (cov_2h48fpenaj().b[30][0]++, !From) ||
      /* istanbul ignore next */
      (cov_2h48fpenaj().b[30][1]++, !MessageSid)) {
        /* istanbul ignore next */
        cov_2h48fpenaj().b[29][0]++;
        cov_2h48fpenaj().s[97]++;
        this.logger.warn('Invalid webhook data received');
        /* istanbul ignore next */
        cov_2h48fpenaj().s[98]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_2h48fpenaj().b[29][1]++;
      }
      // Extract phone number (remove whatsapp: prefix)
      const phoneNumber =
      /* istanbul ignore next */
      (cov_2h48fpenaj().s[99]++, From.replace('whatsapp:', ''));
      const toNumber =
      /* istanbul ignore next */
      (cov_2h48fpenaj().s[100]++, To?.replace('whatsapp:', ''));
      // Find organization by WhatsApp number
      const organization =
      /* istanbul ignore next */
      (cov_2h48fpenaj().s[101]++, await this.findOrganizationByWhatsAppNumber(toNumber));
      /* istanbul ignore next */
      cov_2h48fpenaj().s[102]++;
      if (!organization) {
        /* istanbul ignore next */
        cov_2h48fpenaj().b[31][0]++;
        cov_2h48fpenaj().s[103]++;
        this.logger.warn(`No organization found for WhatsApp number: ${toNumber}`);
        /* istanbul ignore next */
        cov_2h48fpenaj().s[104]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_2h48fpenaj().b[31][1]++;
      }
      // Log incoming message
      cov_2h48fpenaj().s[105]++;
      await this.logMessage(organization.id, {
        twilioSid: MessageSid,
        phoneNumber,
        body: Body,
        status:
        /* istanbul ignore next */
        (cov_2h48fpenaj().b[32][0]++, SmsStatus) ||
        /* istanbul ignore next */
        (cov_2h48fpenaj().b[32][1]++, 'received'),
        direction: 'inbound'
      });
      // Process automated responses
      /* istanbul ignore next */
      cov_2h48fpenaj().s[106]++;
      await this.processAutomatedResponse(organization.id, phoneNumber, Body);
      /* istanbul ignore next */
      cov_2h48fpenaj().s[107]++;
      this.logger.log(`Webhook processed for message: ${MessageSid}`);
    } catch (error) {
      /* istanbul ignore next */
      cov_2h48fpenaj().s[108]++;
      this.logger.error('Error processing WhatsApp webhook:', error);
    }
  }
  /**
   * Get conversation metrics
   */
  async getMetrics(organizationId) {
    /* istanbul ignore next */
    cov_2h48fpenaj().f[16]++;
    cov_2h48fpenaj().s[109]++;
    try {
      const today =
      /* istanbul ignore next */
      (cov_2h48fpenaj().s[110]++, new Date());
      /* istanbul ignore next */
      cov_2h48fpenaj().s[111]++;
      today.setHours(0, 0, 0, 0);
      const tomorrow =
      /* istanbul ignore next */
      (cov_2h48fpenaj().s[112]++, new Date(today));
      /* istanbul ignore next */
      cov_2h48fpenaj().s[113]++;
      tomorrow.setDate(tomorrow.getDate() + 1);
      const [totalMessages, sentToday, receivedToday, failedToday] =
      /* istanbul ignore next */
      (cov_2h48fpenaj().s[114]++, await Promise.all([this.prisma.whatsAppMessage.count({
        where: {
          organizationId
        }
      }), this.prisma.whatsAppMessage.count({
        where: {
          organizationId,
          direction: 'outbound',
          status: 'sent',
          createdAt: {
            gte: today,
            lt: tomorrow
          }
        }
      }), this.prisma.whatsAppMessage.count({
        where: {
          organizationId,
          direction: 'inbound',
          createdAt: {
            gte: today,
            lt: tomorrow
          }
        }
      }), this.prisma.whatsAppMessage.count({
        where: {
          organizationId,
          direction: 'outbound',
          status: 'failed',
          createdAt: {
            gte: today,
            lt: tomorrow
          }
        }
      })]));
      /* istanbul ignore next */
      cov_2h48fpenaj().s[115]++;
      return {
        totalMessages,
        sentMessages: sentToday,
        receivedMessages: receivedToday,
        failedMessages: failedToday,
        dailyLimit: this.dailyLimit,
        remainingQuota: Math.max(0, this.dailyLimit - sentToday)
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2h48fpenaj().s[116]++;
      this.logger.error('Error fetching WhatsApp metrics:', error);
      /* istanbul ignore next */
      cov_2h48fpenaj().s[117]++;
      return {
        totalMessages: 0,
        sentMessages: 0,
        receivedMessages: 0,
        failedMessages: 0,
        dailyLimit: this.dailyLimit,
        remainingQuota: this.dailyLimit
      };
    }
  }
  /**
   * Check daily sending limit
   */
  async checkDailyLimit(organizationId) {
    /* istanbul ignore next */
    cov_2h48fpenaj().f[17]++;
    const today =
    /* istanbul ignore next */
    (cov_2h48fpenaj().s[118]++, new Date());
    /* istanbul ignore next */
    cov_2h48fpenaj().s[119]++;
    today.setHours(0, 0, 0, 0);
    const tomorrow =
    /* istanbul ignore next */
    (cov_2h48fpenaj().s[120]++, new Date(today));
    /* istanbul ignore next */
    cov_2h48fpenaj().s[121]++;
    tomorrow.setDate(tomorrow.getDate() + 1);
    const sentToday =
    /* istanbul ignore next */
    (cov_2h48fpenaj().s[122]++, await this.prisma.whatsAppMessage.count({
      where: {
        organizationId,
        direction: 'outbound',
        status: 'sent',
        createdAt: {
          gte: today,
          lt: tomorrow
        }
      }
    }));
    /* istanbul ignore next */
    cov_2h48fpenaj().s[123]++;
    return sentToday < this.dailyLimit;
  }
  /**
   * Log message in database
   */
  async logMessage(organizationId, messageData) {
    /* istanbul ignore next */
    cov_2h48fpenaj().f[18]++;
    cov_2h48fpenaj().s[124]++;
    try {
      /* istanbul ignore next */
      cov_2h48fpenaj().s[125]++;
      await this.prisma.whatsAppMessage.create({
        data: {
          organizationId,
          twilioSid: messageData.twilioSid,
          phoneNumber:
          /* istanbul ignore next */
          (cov_2h48fpenaj().b[33][0]++, messageData.phoneNumber) ||
          /* istanbul ignore next */
          (cov_2h48fpenaj().b[33][1]++, messageData.to),
          body: messageData.body,
          templateName: messageData.templateName,
          status: messageData.status,
          direction: messageData.direction,
          error: messageData.error
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2h48fpenaj().s[126]++;
      this.logger.error('Error logging WhatsApp message:', error);
    }
  }
  /**
   * Find organization by WhatsApp number
   */
  async findOrganizationByWhatsAppNumber(phoneNumber) {
    /* istanbul ignore next */
    cov_2h48fpenaj().f[19]++;
    cov_2h48fpenaj().s[127]++;
    try {
      const integration =
      /* istanbul ignore next */
      (cov_2h48fpenaj().s[128]++, await this.prisma.integration.findFirst({
        where: {
          platform: 'whatsapp',
          isActive: true,
          // Assuming phone number is stored in metadata
          metadata: {
            path: ['phoneNumber'],
            equals: phoneNumber
          }
        },
        include: {
          organization: true
        }
      }));
      /* istanbul ignore next */
      cov_2h48fpenaj().s[129]++;
      return /* istanbul ignore next */(cov_2h48fpenaj().b[34][0]++, integration?.organization) ||
      /* istanbul ignore next */
      (cov_2h48fpenaj().b[34][1]++, null);
    } catch (error) {
      /* istanbul ignore next */
      cov_2h48fpenaj().s[130]++;
      this.logger.error('Error finding organization by WhatsApp number:', error);
      /* istanbul ignore next */
      cov_2h48fpenaj().s[131]++;
      return null;
    }
  }
  /**
   * Process automated responses
   */
  async processAutomatedResponse(organizationId, phoneNumber, messageBody) {
    /* istanbul ignore next */
    cov_2h48fpenaj().f[20]++;
    cov_2h48fpenaj().s[132]++;
    try {
      const body =
      /* istanbul ignore next */
      (cov_2h48fpenaj().s[133]++, messageBody?.toLowerCase().trim());
      /* istanbul ignore next */
      cov_2h48fpenaj().s[134]++;
      if (
      /* istanbul ignore next */
      (cov_2h48fpenaj().b[36][0]++, body === '/relatorio') ||
      /* istanbul ignore next */
      (cov_2h48fpenaj().b[36][1]++, body === '/report')) {
        /* istanbul ignore next */
        cov_2h48fpenaj().b[35][0]++;
        cov_2h48fpenaj().s[135]++;
        await this.sendDailyReport(organizationId, phoneNumber);
      } else {
        /* istanbul ignore next */
        cov_2h48fpenaj().b[35][1]++;
        cov_2h48fpenaj().s[136]++;
        if (
        /* istanbul ignore next */
        (cov_2h48fpenaj().b[38][0]++, body === '/ajuda') ||
        /* istanbul ignore next */
        (cov_2h48fpenaj().b[38][1]++, body === '/help')) {
          /* istanbul ignore next */
          cov_2h48fpenaj().b[37][0]++;
          cov_2h48fpenaj().s[137]++;
          await this.sendHelpMessage(organizationId, phoneNumber);
        } else
        /* istanbul ignore next */
        {
          cov_2h48fpenaj().b[37][1]++;
        }
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_2h48fpenaj().s[138]++;
      this.logger.error('Error processing automated response:', error);
    }
  }
  /**
   * Send daily report
   */
  async sendDailyReport(organizationId, phoneNumber) {
    /* istanbul ignore next */
    cov_2h48fpenaj().f[21]++;
    cov_2h48fpenaj().s[139]++;
    try {
      // Get yesterday's metrics
      const yesterday =
      /* istanbul ignore next */
      (cov_2h48fpenaj().s[140]++, new Date());
      /* istanbul ignore next */
      cov_2h48fpenaj().s[141]++;
      yesterday.setDate(yesterday.getDate() - 1);
      /* istanbul ignore next */
      cov_2h48fpenaj().s[142]++;
      yesterday.setHours(0, 0, 0, 0);
      const today =
      /* istanbul ignore next */
      (cov_2h48fpenaj().s[143]++, new Date(yesterday));
      /* istanbul ignore next */
      cov_2h48fpenaj().s[144]++;
      today.setDate(today.getDate() + 1);
      // This would integrate with your existing metrics service
      const reportMessage =
      /* istanbul ignore next */
      (cov_2h48fpenaj().s[145]++, `📊 *Relatório Diário*\n\n` + `📅 Data: ${yesterday.toLocaleDateString('pt-BR')}\n` + `💰 Vendas: R$ 0,00\n` + `📈 Conversões: 0\n` + `💸 Gastos: R$ 0,00\n` + `🎯 ROI: 0%\n\n` + `Digite /ajuda para mais opções.`);
      /* istanbul ignore next */
      cov_2h48fpenaj().s[146]++;
      await this.sendMessage(organizationId, {
        to: phoneNumber,
        body: reportMessage
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2h48fpenaj().s[147]++;
      this.logger.error('Error sending daily report:', error);
    }
  }
  /**
   * Send help message
   */
  async sendHelpMessage(organizationId, phoneNumber) {
    /* istanbul ignore next */
    cov_2h48fpenaj().f[22]++;
    cov_2h48fpenaj().s[148]++;
    try {
      const helpMessage =
      /* istanbul ignore next */
      (cov_2h48fpenaj().s[149]++, `🤖 *Comandos Disponíveis*\n\n` + `📊 /relatorio - Relatório do dia anterior\n` + `💡 /ajuda - Esta mensagem\n\n` + `Você também receberá:\n` + `🔔 Notificações de vendas\n` + `⚠️ Alertas de orçamento\n` + `📈 Relatórios diários às 9h`);
      /* istanbul ignore next */
      cov_2h48fpenaj().s[150]++;
      await this.sendMessage(organizationId, {
        to: phoneNumber,
        body: helpMessage
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2h48fpenaj().s[151]++;
      this.logger.error('Error sending help message:', error);
    }
  }
});
/* istanbul ignore next */
cov_2h48fpenaj().s[152]++;
WhatsAppService = WhatsAppService_1 = __decorate([Injectable(), __param(3, InjectQueue('whatsapp')), __metadata("design:paramtypes", [typeof (_a =
/* istanbul ignore next */
(cov_2h48fpenaj().b[40][0]++, typeof ConfigService !== "undefined") &&
/* istanbul ignore next */
(cov_2h48fpenaj().b[40][1]++, ConfigService)) === "function" ?
/* istanbul ignore next */
(cov_2h48fpenaj().b[39][0]++, _a) :
/* istanbul ignore next */
(cov_2h48fpenaj().b[39][1]++, Object), typeof (_b =
/* istanbul ignore next */
(cov_2h48fpenaj().b[42][0]++, typeof PrismaService !== "undefined") &&
/* istanbul ignore next */
(cov_2h48fpenaj().b[42][1]++, PrismaService)) === "function" ?
/* istanbul ignore next */
(cov_2h48fpenaj().b[41][0]++, _b) :
/* istanbul ignore next */
(cov_2h48fpenaj().b[41][1]++, Object), typeof (_c =
/* istanbul ignore next */
(cov_2h48fpenaj().b[44][0]++, typeof CryptoService !== "undefined") &&
/* istanbul ignore next */
(cov_2h48fpenaj().b[44][1]++, CryptoService)) === "function" ?
/* istanbul ignore next */
(cov_2h48fpenaj().b[43][0]++, _c) :
/* istanbul ignore next */
(cov_2h48fpenaj().b[43][1]++, Object), typeof (_d =
/* istanbul ignore next */
(cov_2h48fpenaj().b[46][0]++, typeof Queue !== "undefined") &&
/* istanbul ignore next */
(cov_2h48fpenaj().b[46][1]++, Queue)) === "function" ?
/* istanbul ignore next */
(cov_2h48fpenaj().b[45][0]++, _d) :
/* istanbul ignore next */
(cov_2h48fpenaj().b[45][1]++, Object)])], WhatsAppService);
export { WhatsAppService };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,