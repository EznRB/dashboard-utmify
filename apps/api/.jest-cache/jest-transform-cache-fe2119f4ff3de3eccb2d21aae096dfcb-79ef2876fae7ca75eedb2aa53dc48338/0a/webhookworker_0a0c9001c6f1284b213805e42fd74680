6054c7b8fa2aef0f496bd9cfbd1f60fb
/* istanbul ignore next */
function cov_yh2ismh6d() {
  var path = "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\workers\\webhook.worker.ts";
  var hash = "278486197cdfcf85c6d83df89c6860ccf716659f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\workers\\webhook.worker.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 11
        },
        end: {
          line: 5,
          column: 29
        }
      },
      "1": {
        start: {
          line: 6,
          column: 23
        },
        end: {
          line: 6,
          column: 45
        }
      },
      "2": {
        start: {
          line: 11,
          column: 45
        },
        end: {
          line: 11,
          column: 53
        }
      },
      "3": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 74,
          column: 5
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 17,
          column: 11
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 25,
          column: 11
        }
      },
      "6": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "7": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 29,
          column: 64
        }
      },
      "8": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 30,
          column: 22
        }
      },
      "9": {
        start: {
          line: 32,
          column: 16
        },
        end: {
          line: 32,
          column: 66
        }
      },
      "10": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 33,
          column: 22
        }
      },
      "11": {
        start: {
          line: 36,
          column: 16
        },
        end: {
          line: 36,
          column: 74
        }
      },
      "12": {
        start: {
          line: 37,
          column: 16
        },
        end: {
          line: 37,
          column: 22
        }
      },
      "13": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 39,
          column: 65
        }
      },
      "14": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 40,
          column: 22
        }
      },
      "15": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 65
        }
      },
      "16": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 51,
          column: 11
        }
      },
      "17": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 56,
          column: 11
        }
      },
      "18": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 63,
          column: 11
        }
      },
      "19": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 72,
          column: 11
        }
      },
      "20": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 20
        }
      },
      "21": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 115,
          column: 5
        }
      },
      "22": {
        start: {
          line: 81,
          column: 26
        },
        end: {
          line: 81,
          column: 33
        }
      },
      "23": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 85,
          column: 9
        }
      },
      "24": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 84
        }
      },
      "25": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 19
        }
      },
      "26": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "27": {
        start: {
          line: 87,
          column: 32
        },
        end: {
          line: 87,
          column: 41
        }
      },
      "28": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 90,
          column: 13
        }
      },
      "29": {
        start: {
          line: 89,
          column: 16
        },
        end: {
          line: 89,
          column: 25
        }
      },
      "30": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 109,
          column: 13
        }
      },
      "31": {
        start: {
          line: 92,
          column: 41
        },
        end: {
          line: 92,
          column: 47
        }
      },
      "32": {
        start: {
          line: 93,
          column: 16
        },
        end: {
          line: 108,
          column: 17
        }
      },
      "33": {
        start: {
          line: 95,
          column: 24
        },
        end: {
          line: 95,
          column: 70
        }
      },
      "34": {
        start: {
          line: 96,
          column: 24
        },
        end: {
          line: 96,
          column: 30
        }
      },
      "35": {
        start: {
          line: 98,
          column: 24
        },
        end: {
          line: 98,
          column: 67
        }
      },
      "36": {
        start: {
          line: 99,
          column: 24
        },
        end: {
          line: 99,
          column: 30
        }
      },
      "37": {
        start: {
          line: 101,
          column: 24
        },
        end: {
          line: 101,
          column: 64
        }
      },
      "38": {
        start: {
          line: 102,
          column: 24
        },
        end: {
          line: 102,
          column: 30
        }
      },
      "39": {
        start: {
          line: 104,
          column: 24
        },
        end: {
          line: 104,
          column: 66
        }
      },
      "40": {
        start: {
          line: 105,
          column: 24
        },
        end: {
          line: 105,
          column: 30
        }
      },
      "41": {
        start: {
          line: 107,
          column: 24
        },
        end: {
          line: 107,
          column: 86
        }
      },
      "42": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 81
        }
      },
      "43": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 114,
          column: 20
        }
      },
      "44": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 146,
          column: 5
        }
      },
      "45": {
        start: {
          line: 122,
          column: 70
        },
        end: {
          line: 122,
          column: 77
        }
      },
      "46": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 128,
          column: 11
        }
      },
      "47": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 141,
          column: 9
        }
      },
      "48": {
        start: {
          line: 131,
          column: 16
        },
        end: {
          line: 131,
          column: 70
        }
      },
      "49": {
        start: {
          line: 132,
          column: 16
        },
        end: {
          line: 132,
          column: 22
        }
      },
      "50": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 134,
          column: 69
        }
      },
      "51": {
        start: {
          line: 135,
          column: 16
        },
        end: {
          line: 135,
          column: 22
        }
      },
      "52": {
        start: {
          line: 137,
          column: 16
        },
        end: {
          line: 137,
          column: 72
        }
      },
      "53": {
        start: {
          line: 138,
          column: 16
        },
        end: {
          line: 138,
          column: 22
        }
      },
      "54": {
        start: {
          line: 140,
          column: 16
        },
        end: {
          line: 140,
          column: 95
        }
      },
      "55": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 144,
          column: 83
        }
      },
      "56": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 145,
          column: 20
        }
      },
      "57": {
        start: {
          line: 152,
          column: 4
        },
        end: {
          line: 178,
          column: 5
        }
      },
      "58": {
        start: {
          line: 153,
          column: 31
        },
        end: {
          line: 153,
          column: 38
        }
      },
      "59": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 158,
          column: 11
        }
      },
      "60": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 173,
          column: 9
        }
      },
      "61": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 162,
          column: 81
        }
      },
      "62": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 163,
          column: 22
        }
      },
      "63": {
        start: {
          line: 166,
          column: 16
        },
        end: {
          line: 166,
          column: 77
        }
      },
      "64": {
        start: {
          line: 167,
          column: 16
        },
        end: {
          line: 167,
          column: 22
        }
      },
      "65": {
        start: {
          line: 169,
          column: 16
        },
        end: {
          line: 169,
          column: 83
        }
      },
      "66": {
        start: {
          line: 170,
          column: 16
        },
        end: {
          line: 170,
          column: 22
        }
      },
      "67": {
        start: {
          line: 172,
          column: 16
        },
        end: {
          line: 172,
          column: 81
        }
      },
      "68": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 176,
          column: 80
        }
      },
      "69": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 177,
          column: 20
        }
      },
      "70": {
        start: {
          line: 184,
          column: 4
        },
        end: {
          line: 209,
          column: 5
        }
      },
      "71": {
        start: {
          line: 185,
          column: 26
        },
        end: {
          line: 185,
          column: 33
        }
      },
      "72": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 189,
          column: 9
        }
      },
      "73": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 187,
          column: 84
        }
      },
      "74": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 188,
          column: 19
        }
      },
      "75": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 204,
          column: 9
        }
      },
      "76": {
        start: {
          line: 191,
          column: 32
        },
        end: {
          line: 191,
          column: 41
        }
      },
      "77": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 194,
          column: 13
        }
      },
      "78": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 193,
          column: 25
        }
      },
      "79": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 203,
          column: 13
        }
      },
      "80": {
        start: {
          line: 196,
          column: 41
        },
        end: {
          line: 196,
          column: 47
        }
      },
      "81": {
        start: {
          line: 197,
          column: 16
        },
        end: {
          line: 202,
          column: 17
        }
      },
      "82": {
        start: {
          line: 198,
          column: 20
        },
        end: {
          line: 198,
          column: 67
        }
      },
      "83": {
        start: {
          line: 200,
          column: 21
        },
        end: {
          line: 202,
          column: 17
        }
      },
      "84": {
        start: {
          line: 201,
          column: 20
        },
        end: {
          line: 201,
          column: 74
        }
      },
      "85": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 207,
          column: 81
        }
      },
      "86": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 208,
          column: 20
        }
      },
      "87": {
        start: {
          line: 215,
          column: 4
        },
        end: {
          line: 272,
          column: 5
        }
      },
      "88": {
        start: {
          line: 216,
          column: 71
        },
        end: {
          line: 216,
          column: 76
        }
      },
      "89": {
        start: {
          line: 218,
          column: 25
        },
        end: {
          line: 221,
          column: 10
        }
      },
      "90": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 225,
          column: 9
        }
      },
      "91": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 223,
          column: 86
        }
      },
      "92": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 224,
          column: 19
        }
      },
      "93": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 247,
          column: 9
        }
      },
      "94": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 231,
          column: 15
        }
      },
      "95": {
        start: {
          line: 233,
          column: 12
        },
        end: {
          line: 246,
          column: 13
        }
      },
      "96": {
        start: {
          line: 234,
          column: 16
        },
        end: {
          line: 245,
          column: 19
        }
      },
      "97": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 267,
          column: 9
        }
      },
      "98": {
        start: {
          line: 250,
          column: 33
        },
        end: {
          line: 250,
          column: 75
        }
      },
      "99": {
        start: {
          line: 251,
          column: 32
        },
        end: {
          line: 251,
          column: 63
        }
      },
      "100": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 266,
          column: 13
        }
      },
      "101": {
        start: {
          line: 253,
          column: 16
        },
        end: {
          line: 265,
          column: 19
        }
      },
      "102": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 270,
          column: 80
        }
      },
      "103": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 271,
          column: 20
        }
      },
      "104": {
        start: {
          line: 278,
          column: 4
        },
        end: {
          line: 320,
          column: 5
        }
      },
      "105": {
        start: {
          line: 279,
          column: 61
        },
        end: {
          line: 279,
          column: 74
        }
      },
      "106": {
        start: {
          line: 281,
          column: 27
        },
        end: {
          line: 291,
          column: 10
        }
      },
      "107": {
        start: {
          line: 294,
          column: 31
        },
        end: {
          line: 294,
          column: 72
        }
      },
      "108": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 309,
          column: 11
        }
      },
      "109": {
        start: {
          line: 310,
          column: 8
        },
        end: {
          line: 315,
          column: 11
        }
      },
      "110": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 318,
          column: 83
        }
      },
      "111": {
        start: {
          line: 319,
          column: 8
        },
        end: {
          line: 319,
          column: 20
        }
      },
      "112": {
        start: {
          line: 326,
          column: 4
        },
        end: {
          line: 343,
          column: 5
        }
      },
      "113": {
        start: {
          line: 327,
          column: 67
        },
        end: {
          line: 327,
          column: 80
        }
      },
      "114": {
        start: {
          line: 328,
          column: 8
        },
        end: {
          line: 335,
          column: 11
        }
      },
      "115": {
        start: {
          line: 341,
          column: 8
        },
        end: {
          line: 341,
          column: 79
        }
      },
      "116": {
        start: {
          line: 342,
          column: 8
        },
        end: {
          line: 342,
          column: 20
        }
      },
      "117": {
        start: {
          line: 349,
          column: 4
        },
        end: {
          line: 374,
          column: 5
        }
      },
      "118": {
        start: {
          line: 350,
          column: 39
        },
        end: {
          line: 350,
          column: 44
        }
      },
      "119": {
        start: {
          line: 351,
          column: 8
        },
        end: {
          line: 353,
          column: 9
        }
      },
      "120": {
        start: {
          line: 352,
          column: 12
        },
        end: {
          line: 352,
          column: 19
        }
      },
      "121": {
        start: {
          line: 354,
          column: 8
        },
        end: {
          line: 369,
          column: 9
        }
      },
      "122": {
        start: {
          line: 355,
          column: 56
        },
        end: {
          line: 355,
          column: 63
        }
      },
      "123": {
        start: {
          line: 356,
          column: 12
        },
        end: {
          line: 362,
          column: 15
        }
      },
      "124": {
        start: {
          line: 372,
          column: 8
        },
        end: {
          line: 372,
          column: 81
        }
      },
      "125": {
        start: {
          line: 373,
          column: 8
        },
        end: {
          line: 373,
          column: 20
        }
      },
      "126": {
        start: {
          line: 380,
          column: 4
        },
        end: {
          line: 396,
          column: 5
        }
      },
      "127": {
        start: {
          line: 381,
          column: 95
        },
        end: {
          line: 381,
          column: 100
        }
      },
      "128": {
        start: {
          line: 382,
          column: 8
        },
        end: {
          line: 388,
          column: 11
        }
      },
      "129": {
        start: {
          line: 394,
          column: 8
        },
        end: {
          line: 394,
          column: 76
        }
      },
      "130": {
        start: {
          line: 395,
          column: 8
        },
        end: {
          line: 395,
          column: 20
        }
      },
      "131": {
        start: {
          line: 402,
          column: 4
        },
        end: {
          line: 416,
          column: 5
        }
      },
      "132": {
        start: {
          line: 403,
          column: 86
        },
        end: {
          line: 403,
          column: 93
        }
      },
      "133": {
        start: {
          line: 404,
          column: 8
        },
        end: {
          line: 409,
          column: 11
        }
      },
      "134": {
        start: {
          line: 414,
          column: 8
        },
        end: {
          line: 414,
          column: 82
        }
      },
      "135": {
        start: {
          line: 415,
          column: 8
        },
        end: {
          line: 415,
          column: 20
        }
      },
      "136": {
        start: {
          line: 422,
          column: 47
        },
        end: {
          line: 422,
          column: 55
        }
      },
      "137": {
        start: {
          line: 423,
          column: 24
        },
        end: {
          line: 423,
          column: 25
        }
      },
      "138": {
        start: {
          line: 424,
          column: 4
        },
        end: {
          line: 487,
          column: 5
        }
      },
      "139": {
        start: {
          line: 425,
          column: 8
        },
        end: {
          line: 430,
          column: 11
        }
      },
      "140": {
        start: {
          line: 432,
          column: 23
        },
        end: {
          line: 434,
          column: 10
        }
      },
      "141": {
        start: {
          line: 435,
          column: 8
        },
        end: {
          line: 438,
          column: 9
        }
      },
      "142": {
        start: {
          line: 436,
          column: 12
        },
        end: {
          line: 436,
          column: 78
        }
      },
      "143": {
        start: {
          line: 437,
          column: 12
        },
        end: {
          line: 437,
          column: 19
        }
      },
      "144": {
        start: {
          line: 440,
          column: 31
        },
        end: {
          line: 440,
          column: 53
        }
      },
      "145": {
        start: {
          line: 441,
          column: 8
        },
        end: {
          line: 441,
          column: 62
        }
      },
      "146": {
        start: {
          line: 442,
          column: 8
        },
        end: {
          line: 446,
          column: 11
        }
      },
      "147": {
        start: {
          line: 449,
          column: 8
        },
        end: {
          line: 453,
          column: 11
        }
      },
      "148": {
        start: {
          line: 455,
          column: 8
        },
        end: {
          line: 486,
          column: 9
        }
      },
      "149": {
        start: {
          line: 456,
          column: 33
        },
        end: {
          line: 456,
          column: 50
        }
      },
      "150": {
        start: {
          line: 457,
          column: 26
        },
        end: {
          line: 457,
          column: 53
        }
      },
      "151": {
        start: {
          line: 458,
          column: 12
        },
        end: {
          line: 464,
          column: 15
        }
      },
      "152": {
        start: {
          line: 465,
          column: 12
        },
        end: {
          line: 469,
          column: 15
        }
      },
      "153": {
        start: {
          line: 473,
          column: 12
        },
        end: {
          line: 477,
          column: 15
        }
      },
      "154": {
        start: {
          line: 478,
          column: 33
        },
        end: {
          line: 478,
          column: 50
        }
      },
      "155": {
        start: {
          line: 479,
          column: 12
        },
        end: {
          line: 485,
          column: 15
        }
      },
      "156": {
        start: {
          line: 493,
          column: 69
        },
        end: {
          line: 493,
          column: 77
        }
      },
      "157": {
        start: {
          line: 494,
          column: 4
        },
        end: {
          line: 518,
          column: 5
        }
      },
      "158": {
        start: {
          line: 495,
          column: 8
        },
        end: {
          line: 501,
          column: 11
        }
      },
      "159": {
        start: {
          line: 503,
          column: 8
        },
        end: {
          line: 509,
          column: 11
        }
      },
      "160": {
        start: {
          line: 514,
          column: 8
        },
        end: {
          line: 517,
          column: 11
        }
      },
      "161": {
        start: {
          line: 526,
          column: 4
        },
        end: {
          line: 543,
          column: 5
        }
      },
      "162": {
        start: {
          line: 527,
          column: 23
        },
        end: {
          line: 537,
          column: 10
        }
      },
      "163": {
        start: {
          line: 538,
          column: 8
        },
        end: {
          line: 538,
          column: 38
        }
      },
      "164": {
        start: {
          line: 541,
          column: 8
        },
        end: {
          line: 541,
          column: 77
        }
      },
      "165": {
        start: {
          line: 542,
          column: 8
        },
        end: {
          line: 542,
          column: 17
        }
      },
      "166": {
        start: {
          line: 550,
          column: 4
        },
        end: {
          line: 550,
          column: 63
        }
      },
      "167": {
        start: {
          line: 554,
          column: 4
        },
        end: {
          line: 554,
          column: 60
        }
      },
      "168": {
        start: {
          line: 558,
          column: 4
        },
        end: {
          line: 558,
          column: 75
        }
      },
      "169": {
        start: {
          line: 562,
          column: 4
        },
        end: {
          line: 562,
          column: 75
        }
      },
      "170": {
        start: {
          line: 566,
          column: 4
        },
        end: {
          line: 566,
          column: 83
        }
      },
      "171": {
        start: {
          line: 570,
          column: 4
        },
        end: {
          line: 570,
          column: 75
        }
      }
    },
    fnMap: {
      "0": {
        name: "processIncomingWebhook",
        decl: {
          start: {
            line: 10,
            column: 22
          },
          end: {
            line: 10,
            column: 44
          }
        },
        loc: {
          start: {
            line: 10,
            column: 50
          },
          end: {
            line: 75,
            column: 1
          }
        },
        line: 10
      },
      "1": {
        name: "processMetaAdsWebhook",
        decl: {
          start: {
            line: 79,
            column: 15
          },
          end: {
            line: 79,
            column: 36
          }
        },
        loc: {
          start: {
            line: 79,
            column: 57
          },
          end: {
            line: 116,
            column: 1
          }
        },
        line: 79
      },
      "2": {
        name: "processGoogleAdsWebhook",
        decl: {
          start: {
            line: 120,
            column: 15
          },
          end: {
            line: 120,
            column: 38
          }
        },
        loc: {
          start: {
            line: 120,
            column: 59
          },
          end: {
            line: 147,
            column: 1
          }
        },
        line: 120
      },
      "3": {
        name: "processPaymentWebhook",
        decl: {
          start: {
            line: 151,
            column: 15
          },
          end: {
            line: 151,
            column: 36
          }
        },
        loc: {
          start: {
            line: 151,
            column: 67
          },
          end: {
            line: 179,
            column: 1
          }
        },
        line: 151
      },
      "4": {
        name: "processWhatsAppWebhook",
        decl: {
          start: {
            line: 183,
            column: 15
          },
          end: {
            line: 183,
            column: 37
          }
        },
        loc: {
          start: {
            line: 183,
            column: 58
          },
          end: {
            line: 210,
            column: 1
          }
        },
        line: 183
      },
      "5": {
        name: "processCampaignChange",
        decl: {
          start: {
            line: 214,
            column: 15
          },
          end: {
            line: 214,
            column: 36
          }
        },
        loc: {
          start: {
            line: 214,
            column: 55
          },
          end: {
            line: 273,
            column: 1
          }
        },
        line: 214
      },
      "6": {
        name: "processSuccessfulPayment",
        decl: {
          start: {
            line: 277,
            column: 15
          },
          end: {
            line: 277,
            column: 39
          }
        },
        loc: {
          start: {
            line: 277,
            column: 76
          },
          end: {
            line: 321,
            column: 1
          }
        },
        line: 277
      },
      "7": {
        name: "processFailedPayment",
        decl: {
          start: {
            line: 325,
            column: 15
          },
          end: {
            line: 325,
            column: 35
          }
        },
        loc: {
          start: {
            line: 325,
            column: 72
          },
          end: {
            line: 344,
            column: 1
          }
        },
        line: 325
      },
      "8": {
        name: "processWhatsAppMessage",
        decl: {
          start: {
            line: 348,
            column: 15
          },
          end: {
            line: 348,
            column: 37
          }
        },
        loc: {
          start: {
            line: 348,
            column: 56
          },
          end: {
            line: 375,
            column: 1
          }
        },
        line: 348
      },
      "9": {
        name: "processLeadChange",
        decl: {
          start: {
            line: 379,
            column: 15
          },
          end: {
            line: 379,
            column: 32
          }
        },
        loc: {
          start: {
            line: 379,
            column: 51
          },
          end: {
            line: 397,
            column: 1
          }
        },
        line: 379
      },
      "10": {
        name: "processGoogleConversionChange",
        decl: {
          start: {
            line: 401,
            column: 15
          },
          end: {
            line: 401,
            column: 44
          }
        },
        loc: {
          start: {
            line: 401,
            column: 65
          },
          end: {
            line: 417,
            column: 1
          }
        },
        line: 401
      },
      "11": {
        name: "retryWebhook",
        decl: {
          start: {
            line: 421,
            column: 22
          },
          end: {
            line: 421,
            column: 34
          }
        },
        loc: {
          start: {
            line: 421,
            column: 40
          },
          end: {
            line: 488,
            column: 1
          }
        },
        line: 421
      },
      "12": {
        name: "handleDeadLetterWebhook",
        decl: {
          start: {
            line: 492,
            column: 22
          },
          end: {
            line: 492,
            column: 45
          }
        },
        loc: {
          start: {
            line: 492,
            column: 51
          },
          end: {
            line: 519,
            column: 1
          }
        },
        line: 492
      },
      "13": {
        name: "getCurrentCampaignSpend",
        decl: {
          start: {
            line: 523,
            column: 15
          },
          end: {
            line: 523,
            column: 38
          }
        },
        loc: {
          start: {
            line: 523,
            column: 51
          },
          end: {
            line: 544,
            column: 1
          }
        },
        line: 523
      },
      "14": {
        name: "processAdSetChange",
        decl: {
          start: {
            line: 548,
            column: 15
          },
          end: {
            line: 548,
            column: 33
          }
        },
        loc: {
          start: {
            line: 548,
            column: 52
          },
          end: {
            line: 551,
            column: 1
          }
        },
        line: 548
      },
      "15": {
        name: "processAdChange",
        decl: {
          start: {
            line: 552,
            column: 15
          },
          end: {
            line: 552,
            column: 30
          }
        },
        loc: {
          start: {
            line: 552,
            column: 49
          },
          end: {
            line: 555,
            column: 1
          }
        },
        line: 552
      },
      "16": {
        name: "processGoogleCampaignChange",
        decl: {
          start: {
            line: 556,
            column: 15
          },
          end: {
            line: 556,
            column: 42
          }
        },
        loc: {
          start: {
            line: 556,
            column: 63
          },
          end: {
            line: 559,
            column: 1
          }
        },
        line: 556
      },
      "17": {
        name: "processGoogleAdGroupChange",
        decl: {
          start: {
            line: 560,
            column: 15
          },
          end: {
            line: 560,
            column: 41
          }
        },
        loc: {
          start: {
            line: 560,
            column: 62
          },
          end: {
            line: 563,
            column: 1
          }
        },
        line: 560
      },
      "18": {
        name: "processSubscriptionPayment",
        decl: {
          start: {
            line: 564,
            column: 15
          },
          end: {
            line: 564,
            column: 41
          }
        },
        loc: {
          start: {
            line: 564,
            column: 72
          },
          end: {
            line: 567,
            column: 1
          }
        },
        line: 564
      },
      "19": {
        name: "processWhatsAppTemplateUpdate",
        decl: {
          start: {
            line: 568,
            column: 15
          },
          end: {
            line: 568,
            column: 44
          }
        },
        loc: {
          start: {
            line: 568,
            column: 63
          },
          end: {
            line: 571,
            column: 1
          }
        },
        line: 568
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 30,
            column: 22
          }
        }, {
          start: {
            line: 31,
            column: 12
          },
          end: {
            line: 33,
            column: 22
          }
        }, {
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 34,
            column: 26
          }
        }, {
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 37,
            column: 22
          }
        }, {
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 40,
            column: 22
          }
        }, {
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 42,
            column: 65
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 69,
            column: 23
          },
          end: {
            line: 69,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 69,
            column: 48
          },
          end: {
            line: 69,
            column: 61
          }
        }, {
          start: {
            line: 69,
            column: 64
          },
          end: {
            line: 69,
            column: 79
          }
        }],
        line: 69
      },
      "2": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "3": {
        loc: {
          start: {
            line: 82,
            column: 12
          },
          end: {
            line: 82,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 12
          },
          end: {
            line: 82,
            column: 18
          }
        }, {
          start: {
            line: 82,
            column: 22
          },
          end: {
            line: 82,
            column: 43
          }
        }],
        line: 82
      },
      "4": {
        loc: {
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 90,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 90,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "5": {
        loc: {
          start: {
            line: 88,
            column: 16
          },
          end: {
            line: 88,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 16
          },
          end: {
            line: 88,
            column: 24
          }
        }, {
          start: {
            line: 88,
            column: 28
          },
          end: {
            line: 88,
            column: 51
          }
        }],
        line: 88
      },
      "6": {
        loc: {
          start: {
            line: 93,
            column: 16
          },
          end: {
            line: 108,
            column: 17
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 94,
            column: 20
          },
          end: {
            line: 96,
            column: 30
          }
        }, {
          start: {
            line: 97,
            column: 20
          },
          end: {
            line: 99,
            column: 30
          }
        }, {
          start: {
            line: 100,
            column: 20
          },
          end: {
            line: 102,
            column: 30
          }
        }, {
          start: {
            line: 103,
            column: 20
          },
          end: {
            line: 105,
            column: 30
          }
        }, {
          start: {
            line: 106,
            column: 20
          },
          end: {
            line: 107,
            column: 86
          }
        }],
        line: 93
      },
      "7": {
        loc: {
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 141,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 130,
            column: 12
          },
          end: {
            line: 132,
            column: 22
          }
        }, {
          start: {
            line: 133,
            column: 12
          },
          end: {
            line: 135,
            column: 22
          }
        }, {
          start: {
            line: 136,
            column: 12
          },
          end: {
            line: 138,
            column: 22
          }
        }, {
          start: {
            line: 139,
            column: 12
          },
          end: {
            line: 140,
            column: 95
          }
        }],
        line: 129
      },
      "8": {
        loc: {
          start: {
            line: 159,
            column: 8
          },
          end: {
            line: 173,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 160,
            column: 12
          },
          end: {
            line: 160,
            column: 44
          }
        }, {
          start: {
            line: 161,
            column: 12
          },
          end: {
            line: 163,
            column: 22
          }
        }, {
          start: {
            line: 164,
            column: 12
          },
          end: {
            line: 164,
            column: 49
          }
        }, {
          start: {
            line: 165,
            column: 12
          },
          end: {
            line: 167,
            column: 22
          }
        }, {
          start: {
            line: 168,
            column: 12
          },
          end: {
            line: 170,
            column: 22
          }
        }, {
          start: {
            line: 171,
            column: 12
          },
          end: {
            line: 172,
            column: 81
          }
        }],
        line: 159
      },
      "9": {
        loc: {
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 189,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 189,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 186
      },
      "10": {
        loc: {
          start: {
            line: 186,
            column: 12
          },
          end: {
            line: 186,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 186,
            column: 12
          },
          end: {
            line: 186,
            column: 18
          }
        }, {
          start: {
            line: 186,
            column: 22
          },
          end: {
            line: 186,
            column: 43
          }
        }],
        line: 186
      },
      "11": {
        loc: {
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 194,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 194,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      },
      "12": {
        loc: {
          start: {
            line: 192,
            column: 16
          },
          end: {
            line: 192,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 192,
            column: 16
          },
          end: {
            line: 192,
            column: 24
          }
        }, {
          start: {
            line: 192,
            column: 28
          },
          end: {
            line: 192,
            column: 51
          }
        }],
        line: 192
      },
      "13": {
        loc: {
          start: {
            line: 197,
            column: 16
          },
          end: {
            line: 202,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 197,
            column: 16
          },
          end: {
            line: 202,
            column: 17
          }
        }, {
          start: {
            line: 200,
            column: 21
          },
          end: {
            line: 202,
            column: 17
          }
        }],
        line: 197
      },
      "14": {
        loc: {
          start: {
            line: 200,
            column: 21
          },
          end: {
            line: 202,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 21
          },
          end: {
            line: 202,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 200
      },
      "15": {
        loc: {
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 225,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 225,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 222
      },
      "16": {
        loc: {
          start: {
            line: 227,
            column: 8
          },
          end: {
            line: 247,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 227,
            column: 8
          },
          end: {
            line: 247,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 227
      },
      "17": {
        loc: {
          start: {
            line: 227,
            column: 12
          },
          end: {
            line: 227,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 227,
            column: 12
          },
          end: {
            line: 227,
            column: 18
          }
        }, {
          start: {
            line: 227,
            column: 22
          },
          end: {
            line: 227,
            column: 48
          }
        }],
        line: 227
      },
      "18": {
        loc: {
          start: {
            line: 233,
            column: 12
          },
          end: {
            line: 246,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 233,
            column: 12
          },
          end: {
            line: 246,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 233
      },
      "19": {
        loc: {
          start: {
            line: 249,
            column: 8
          },
          end: {
            line: 267,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 249,
            column: 8
          },
          end: {
            line: 267,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 249
      },
      "20": {
        loc: {
          start: {
            line: 249,
            column: 12
          },
          end: {
            line: 249,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 249,
            column: 12
          },
          end: {
            line: 249,
            column: 24
          }
        }, {
          start: {
            line: 249,
            column: 28
          },
          end: {
            line: 249,
            column: 43
          }
        }],
        line: 249
      },
      "21": {
        loc: {
          start: {
            line: 251,
            column: 32
          },
          end: {
            line: 251,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 251,
            column: 32
          },
          end: {
            line: 251,
            column: 44
          }
        }, {
          start: {
            line: 251,
            column: 48
          },
          end: {
            line: 251,
            column: 63
          }
        }],
        line: 251
      },
      "22": {
        loc: {
          start: {
            line: 252,
            column: 12
          },
          end: {
            line: 266,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 252,
            column: 12
          },
          end: {
            line: 266,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 252
      },
      "23": {
        loc: {
          start: {
            line: 294,
            column: 31
          },
          end: {
            line: 294,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 294,
            column: 31
          },
          end: {
            line: 294,
            column: 55
          }
        }, {
          start: {
            line: 294,
            column: 59
          },
          end: {
            line: 294,
            column: 72
          }
        }],
        line: 294
      },
      "24": {
        loc: {
          start: {
            line: 351,
            column: 8
          },
          end: {
            line: 353,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 351,
            column: 8
          },
          end: {
            line: 353,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 351
      },
      "25": {
        loc: {
          start: {
            line: 351,
            column: 12
          },
          end: {
            line: 351,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 351,
            column: 12
          },
          end: {
            line: 351,
            column: 21
          }
        }, {
          start: {
            line: 351,
            column: 25
          },
          end: {
            line: 351,
            column: 49
          }
        }],
        line: 351
      },
      "26": {
        loc: {
          start: {
            line: 435,
            column: 8
          },
          end: {
            line: 438,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 435,
            column: 8
          },
          end: {
            line: 438,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 435
      },
      "27": {
        loc: {
          start: {
            line: 435,
            column: 12
          },
          end: {
            line: 435,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 435,
            column: 12
          },
          end: {
            line: 435,
            column: 19
          }
        }, {
          start: {
            line: 435,
            column: 23
          },
          end: {
            line: 435,
            column: 39
          }
        }],
        line: 435
      },
      "28": {
        loc: {
          start: {
            line: 455,
            column: 8
          },
          end: {
            line: 486,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 455,
            column: 8
          },
          end: {
            line: 486,
            column: 9
          }
        }, {
          start: {
            line: 471,
            column: 13
          },
          end: {
            line: 486,
            column: 9
          }
        }],
        line: 455
      },
      "29": {
        loc: {
          start: {
            line: 483,
            column: 23
          },
          end: {
            line: 483,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 483,
            column: 48
          },
          end: {
            line: 483,
            column: 61
          }
        }, {
          start: {
            line: 483,
            column: 64
          },
          end: {
            line: 483,
            column: 79
          }
        }],
        line: 483
      },
      "30": {
        loc: {
          start: {
            line: 538,
            column: 15
          },
          end: {
            line: 538,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 538,
            column: 15
          },
          end: {
            line: 538,
            column: 32
          }
        }, {
          start: {
            line: 538,
            column: 36
          },
          end: {
            line: 538,
            column: 37
          }
        }],
        line: 538
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    b: {
      "0": [0, 0, 0, 0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0, 0, 0, 0],
      "7": [0, 0, 0, 0],
      "8": [0, 0, 0, 0, 0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\workers\\webhook.worker.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\workers\\webhook.worker.ts"],
      sourcesContent: ["import { PrismaClient } from '@utmify/database';\nimport { logger } from '../utils/logger';\nimport { WebhookService, OutgoingWebhookData } from '../services/webhook.service';\nimport { getQueueManager } from '../queue';\nimport axios from 'axios';\nimport crypto from 'crypto';\n\nconst db = new PrismaClient();\nconst webhookService = new WebhookService(db);\n\n/**\n * Process incoming webhook events\n */\nexport async function processIncomingWebhook(job: any): Promise<void> {\n  const { webhookId, provider, payload } = job.data;\n  \n  try {\n    logger.info('Processing incoming webhook', {\n      webhookId,\n      provider,\n      jobId: job.id,\n    });\n\n    // Update webhook status to processing\n    await db.webhook.update({\n      where: { id: webhookId },\n      data: { \n        status: 'PROCESSING',\n        processedAt: new Date(),\n      },\n    });\n\n    // Process based on provider\n    switch (provider) {\n      case 'META_ADS':\n        await processMetaAdsWebhook(webhookId, payload);\n        break;\n      case 'GOOGLE_ADS':\n        await processGoogleAdsWebhook(webhookId, payload);\n        break;\n      case 'STRIPE':\n      case 'PAYPAL':\n        await processPaymentWebhook(webhookId, payload, provider);\n        break;\n      case 'WHATSAPP':\n        await processWhatsAppWebhook(webhookId, payload);\n        break;\n      default:\n        throw new Error(`Unknown provider: ${provider}`);\n    }\n\n    // Update webhook status to completed\n    await db.webhook.update({\n      where: { id: webhookId },\n      data: { \n        status: 'COMPLETED',\n        completedAt: new Date(),\n      },\n    });\n\n    logger.info('Incoming webhook processed successfully', {\n      webhookId,\n      provider,\n      jobId: job.id,\n    });\n  } catch (error) {\n    logger.error('Error processing incoming webhook:', error, {\n      webhookId,\n      provider,\n      jobId: job.id,\n    });\n\n    // Update webhook status to failed\n    await db.webhook.update({\n      where: { id: webhookId },\n      data: { \n        status: 'FAILED',\n        error: error instanceof Error ? error.message : 'Unknown error',\n        failedAt: new Date(),\n      },\n    });\n\n    throw error;\n  }\n}\n\n/**\n * Process Meta Ads webhook events\n */\nasync function processMetaAdsWebhook(webhookId: string, payload: any): Promise<void> {\n  try {\n    const { entry } = payload;\n    \n    if (!entry || !Array.isArray(entry)) {\n      logger.warn('Invalid Meta Ads webhook payload', { webhookId, payload });\n      return;\n    }\n\n    for (const entryItem of entry) {\n      const { changes } = entryItem;\n      \n      if (!changes || !Array.isArray(changes)) {\n        continue;\n      }\n\n      for (const change of changes) {\n        const { field, value } = change;\n        \n        switch (field) {\n          case 'campaigns':\n            await processCampaignChange(webhookId, value);\n            break;\n          case 'adsets':\n            await processAdSetChange(webhookId, value);\n            break;\n          case 'ads':\n            await processAdChange(webhookId, value);\n            break;\n          case 'leads':\n            await processLeadChange(webhookId, value);\n            break;\n          default:\n            logger.info('Unhandled Meta Ads field', { field, webhookId });\n        }\n      }\n    }\n  } catch (error) {\n    logger.error('Error processing Meta Ads webhook:', error, { webhookId });\n    throw error;\n  }\n}\n\n/**\n * Process Google Ads webhook events\n */\nasync function processGoogleAdsWebhook(webhookId: string, payload: any): Promise<void> {\n  try {\n    const { eventType, customerId, resourceName, resourceType } = payload;\n    \n    logger.info('Processing Google Ads webhook', {\n      webhookId,\n      eventType,\n      customerId,\n      resourceType,\n    });\n\n    switch (resourceType) {\n      case 'CAMPAIGN':\n        await processGoogleCampaignChange(webhookId, payload);\n        break;\n      case 'AD_GROUP':\n        await processGoogleAdGroupChange(webhookId, payload);\n        break;\n      case 'CONVERSION':\n        await processGoogleConversionChange(webhookId, payload);\n        break;\n      default:\n        logger.info('Unhandled Google Ads resource type', { resourceType, webhookId });\n    }\n  } catch (error) {\n    logger.error('Error processing Google Ads webhook:', error, { webhookId });\n    throw error;\n  }\n}\n\n/**\n * Process payment webhook events (Stripe/PayPal)\n */\nasync function processPaymentWebhook(webhookId: string, payload: any, provider: string): Promise<void> {\n  try {\n    const { type, data } = payload;\n    \n    logger.info('Processing payment webhook', {\n      webhookId,\n      provider,\n      eventType: type,\n    });\n\n    switch (type) {\n      case 'payment_intent.succeeded':\n      case 'charge.succeeded':\n        await processSuccessfulPayment(webhookId, data.object, provider);\n        break;\n      case 'payment_intent.payment_failed':\n      case 'charge.failed':\n        await processFailedPayment(webhookId, data.object, provider);\n        break;\n      case 'invoice.payment_succeeded':\n        await processSubscriptionPayment(webhookId, data.object, provider);\n        break;\n      default:\n        logger.info('Unhandled payment event type', { type, webhookId });\n    }\n  } catch (error) {\n    logger.error('Error processing payment webhook:', error, { webhookId });\n    throw error;\n  }\n}\n\n/**\n * Process WhatsApp webhook events\n */\nasync function processWhatsAppWebhook(webhookId: string, payload: any): Promise<void> {\n  try {\n    const { entry } = payload;\n    \n    if (!entry || !Array.isArray(entry)) {\n      logger.warn('Invalid WhatsApp webhook payload', { webhookId, payload });\n      return;\n    }\n\n    for (const entryItem of entry) {\n      const { changes } = entryItem;\n      \n      if (!changes || !Array.isArray(changes)) {\n        continue;\n      }\n\n      for (const change of changes) {\n        const { field, value } = change;\n        \n        if (field === 'messages') {\n          await processWhatsAppMessage(webhookId, value);\n        } else if (field === 'message_template_status_update') {\n          await processWhatsAppTemplateUpdate(webhookId, value);\n        }\n      }\n    }\n  } catch (error) {\n    logger.error('Error processing WhatsApp webhook:', error, { webhookId });\n    throw error;\n  }\n}\n\n/**\n * Process campaign changes from Meta Ads\n */\nasync function processCampaignChange(webhookId: string, value: any): Promise<void> {\n  try {\n    const { campaign_id, status, daily_budget, lifetime_budget } = value;\n    \n    // Find the campaign in our database\n    const campaign = await db.campaign.findFirst({\n      where: { externalId: campaign_id },\n      include: { organization: true },\n    });\n\n    if (!campaign) {\n      logger.warn('Campaign not found for webhook', { webhookId, campaign_id });\n      return;\n    }\n\n    // Update campaign status if changed\n    if (status && campaign.status !== status) {\n      await db.campaign.update({\n        where: { id: campaign.id },\n        data: { status },\n      });\n\n      // Send outgoing webhook if campaign was paused\n      if (status === 'PAUSED') {\n        await webhookService.sendOutgoingWebhook({\n          eventType: 'CAMPAIGN_PAUSED',\n          organizationId: campaign.organizationId,\n          data: {\n            campaignId: campaign.id,\n            externalId: campaign_id,\n            name: campaign.name,\n            status,\n            pausedAt: new Date().toISOString(),\n          },\n          timestamp: new Date(),\n        });\n      }\n    }\n\n    // Check budget exceeded\n    if (daily_budget || lifetime_budget) {\n      const currentSpend = await getCurrentCampaignSpend(campaign.id);\n      const budgetLimit = daily_budget || lifetime_budget;\n      \n      if (currentSpend > budgetLimit) {\n        await webhookService.sendOutgoingWebhook({\n          eventType: 'BUDGET_EXCEEDED',\n          organizationId: campaign.organizationId,\n          data: {\n            campaignId: campaign.id,\n            externalId: campaign_id,\n            name: campaign.name,\n            budgetLimit,\n            currentSpend,\n            percentage: Math.round((currentSpend / budgetLimit) * 100),\n          },\n          timestamp: new Date(),\n        });\n      }\n    }\n  } catch (error) {\n    logger.error('Error processing campaign change:', error, { webhookId });\n    throw error;\n  }\n}\n\n/**\n * Process successful payment\n */\nasync function processSuccessfulPayment(webhookId: string, paymentObject: any, provider: string): Promise<void> {\n  try {\n    const { id, amount, currency, customer, metadata } = paymentObject;\n    \n    // Create conversion record\n    const conversion = await db.conversion.create({\n      data: {\n        externalId: id,\n        value: amount / 100, // Convert from cents\n        currency: currency.toUpperCase(),\n        eventType: 'PURCHASE',\n        source: provider.toUpperCase(),\n        metadata: paymentObject,\n        // TODO: Link to campaign and organization based on metadata or customer\n      },\n    });\n\n    // Send outgoing webhook for new conversion\n    // TODO: Get organization ID from payment metadata or customer\n    const organizationId = metadata?.organizationId || 'default-org';\n    \n    await webhookService.sendOutgoingWebhook({\n      eventType: 'NEW_CONVERSION',\n      organizationId,\n      data: {\n        conversionId: conversion.id,\n        externalId: id,\n        value: conversion.value,\n        currency: conversion.currency,\n        eventType: conversion.eventType,\n        source: provider,\n        customer,\n        timestamp: new Date().toISOString(),\n      },\n      timestamp: new Date(),\n    });\n\n    logger.info('Successful payment processed', {\n      webhookId,\n      conversionId: conversion.id,\n      amount: conversion.value,\n      currency: conversion.currency,\n    });\n  } catch (error) {\n    logger.error('Error processing successful payment:', error, { webhookId });\n    throw error;\n  }\n}\n\n/**\n * Process failed payment\n */\nasync function processFailedPayment(webhookId: string, paymentObject: any, provider: string): Promise<void> {\n  try {\n    const { id, amount, currency, failure_reason, customer } = paymentObject;\n    \n    logger.info('Failed payment processed', {\n      webhookId,\n      paymentId: id,\n      amount: amount / 100,\n      currency,\n      reason: failure_reason,\n      customer,\n    });\n\n    // TODO: Implement failed payment handling logic\n    // This could include updating campaign performance metrics,\n    // sending notifications, or triggering retargeting campaigns\n  } catch (error) {\n    logger.error('Error processing failed payment:', error, { webhookId });\n    throw error;\n  }\n}\n\n/**\n * Process WhatsApp message\n */\nasync function processWhatsAppMessage(webhookId: string, value: any): Promise<void> {\n  try {\n    const { messages, contacts } = value;\n    \n    if (!messages || !Array.isArray(messages)) {\n      return;\n    }\n\n    for (const message of messages) {\n      const { id, from, type, text, timestamp } = message;\n      \n      logger.info('WhatsApp message received', {\n        webhookId,\n        messageId: id,\n        from,\n        type,\n        timestamp,\n      });\n\n      // TODO: Process WhatsApp message\n      // This could include:\n      // - Storing the message in database\n      // - Triggering automated responses\n      // - Updating lead information\n      // - Sending notifications to sales team\n    }\n  } catch (error) {\n    logger.error('Error processing WhatsApp message:', error, { webhookId });\n    throw error;\n  }\n}\n\n/**\n * Process lead change from Meta Ads\n */\nasync function processLeadChange(webhookId: string, value: any): Promise<void> {\n  try {\n    const { leadgen_id, page_id, form_id, adgroup_id, campaign_id, ad_id, created_time } = value;\n    \n    logger.info('Meta Ads lead received', {\n      webhookId,\n      leadgen_id,\n      campaign_id,\n      adgroup_id,\n      ad_id,\n    });\n\n    // TODO: Fetch lead details from Meta API and process\n    // This would require making an API call to get the actual lead data\n    // and then creating a conversion record\n  } catch (error) {\n    logger.error('Error processing lead change:', error, { webhookId });\n    throw error;\n  }\n}\n\n/**\n * Process Google Ads conversion\n */\nasync function processGoogleConversionChange(webhookId: string, payload: any): Promise<void> {\n  try {\n    const { customerId, conversionAction, conversionValue, conversionDateTime } = payload;\n    \n    logger.info('Google Ads conversion received', {\n      webhookId,\n      customerId,\n      conversionAction,\n      conversionValue,\n    });\n\n    // TODO: Process Google Ads conversion\n    // Create conversion record and send outgoing webhook\n  } catch (error) {\n    logger.error('Error processing Google conversion:', error, { webhookId });\n    throw error;\n  }\n}\n\n/**\n * Retry failed webhook with exponential backoff\n */\nexport async function retryWebhook(job: any): Promise<void> {\n  const { configId, webhookData, attempt } = job.data;\n  const maxAttempts = 3;\n  \n  try {\n    logger.info('Retrying webhook', {\n      configId,\n      attempt,\n      maxAttempts,\n      jobId: job.id,\n    });\n\n    // Get webhook configuration\n    const config = await db.webhookConfig.findUnique({\n      where: { id: configId },\n    });\n\n    if (!config || !config.isActive) {\n      logger.warn('Webhook config not found or inactive', { configId });\n      return;\n    }\n\n    // Try to send webhook again\n    const webhookService = new WebhookService(db);\n    await webhookService.sendOutgoingWebhook(webhookData);\n\n    logger.info('Webhook retry successful', {\n      configId,\n      attempt,\n      jobId: job.id,\n    });\n  } catch (error) {\n    logger.error('Webhook retry failed:', error, {\n      configId,\n      attempt,\n      jobId: job.id,\n    });\n\n    // If we haven't reached max attempts, schedule another retry\n    if (attempt < maxAttempts) {\n      const queueManager = getQueueManager();\n      const delay = Math.pow(2, attempt) * 1000; // Exponential backoff: 2s, 4s, 8s\n      \n      await queueManager.addJob('webhook-retry', {\n        configId,\n        webhookData,\n        attempt: attempt + 1,\n      }, {\n        delay,\n      });\n\n      logger.info('Webhook retry scheduled', {\n        configId,\n        nextAttempt: attempt + 1,\n        delay,\n      });\n    } else {\n      // Max attempts reached, move to dead letter queue\n      logger.error('Webhook max retries exceeded, moving to DLQ', {\n        configId,\n        attempt,\n        maxAttempts,\n      });\n\n      const queueManager = getQueueManager();\n      await queueManager.addJob('webhook-dlq', {\n        configId,\n        webhookData,\n        finalAttempt: attempt,\n        error: error instanceof Error ? error.message : 'Unknown error',\n        failedAt: new Date().toISOString(),\n      });\n    }\n  }\n}\n\n/**\n * Handle webhooks in dead letter queue\n */\nexport async function handleDeadLetterWebhook(job: any): Promise<void> {\n  const { configId, webhookData, finalAttempt, error, failedAt } = job.data;\n  \n  try {\n    logger.error('Webhook moved to dead letter queue', {\n      configId,\n      finalAttempt,\n      error,\n      failedAt,\n      jobId: job.id,\n    });\n\n    // Update webhook config to mark as having failed webhooks\n    await db.webhookConfig.update({\n      where: { id: configId },\n      data: {\n        totalFailed: { increment: 1 },\n        lastFailedAt: new Date(),\n      },\n    });\n\n    // TODO: Send notification to administrators about failed webhook\n    // This could include email alerts, Slack notifications, etc.\n  } catch (error) {\n    logger.error('Error handling dead letter webhook:', error, {\n      configId,\n      jobId: job.id,\n    });\n  }\n}\n\n/**\n * Helper function to get current campaign spend\n */\nasync function getCurrentCampaignSpend(campaignId: string): Promise<number> {\n  // This is a simplified implementation\n  // In a real scenario, you'd calculate the actual spend from your metrics\n  try {\n    const result = await db.campaignMetrics.aggregate({\n      where: {\n        campaignId,\n        date: {\n          gte: new Date(new Date().setHours(0, 0, 0, 0)), // Today\n        },\n      },\n      _sum: {\n        spend: true,\n      },\n    });\n\n    return result._sum.spend || 0;\n  } catch (error) {\n    logger.error('Error getting campaign spend:', error, { campaignId });\n    return 0;\n  }\n}\n\n/**\n * Helper functions for other webhook processing\n */\nasync function processAdSetChange(webhookId: string, value: any): Promise<void> {\n  // TODO: Implement adset change processing\n  logger.info('AdSet change received', { webhookId, value });\n}\n\nasync function processAdChange(webhookId: string, value: any): Promise<void> {\n  // TODO: Implement ad change processing\n  logger.info('Ad change received', { webhookId, value });\n}\n\nasync function processGoogleCampaignChange(webhookId: string, payload: any): Promise<void> {\n  // TODO: Implement Google campaign change processing\n  logger.info('Google campaign change received', { webhookId, payload });\n}\n\nasync function processGoogleAdGroupChange(webhookId: string, payload: any): Promise<void> {\n  // TODO: Implement Google ad group change processing\n  logger.info('Google ad group change received', { webhookId, payload });\n}\n\nasync function processSubscriptionPayment(webhookId: string, invoice: any, provider: string): Promise<void> {\n  // TODO: Implement subscription payment processing\n  logger.info('Subscription payment received', { webhookId, invoice, provider });\n}\n\nasync function processWhatsAppTemplateUpdate(webhookId: string, value: any): Promise<void> {\n  // TODO: Implement WhatsApp template update processing\n  logger.info('WhatsApp template update received', { webhookId, value });\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "278486197cdfcf85c6d83df89c6860ccf716659f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_yh2ismh6d = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_yh2ismh6d();
import { PrismaClient } from '@utmify/database';
import { logger } from '../utils/logger';
import { WebhookService } from '../services/webhook.service';
import { getQueueManager } from '../queue';
const db =
/* istanbul ignore next */
(cov_yh2ismh6d().s[0]++, new PrismaClient());
const webhookService =
/* istanbul ignore next */
(cov_yh2ismh6d().s[1]++, new WebhookService(db));
/**
 * Process incoming webhook events
 */
export async function processIncomingWebhook(job) {
  /* istanbul ignore next */
  cov_yh2ismh6d().f[0]++;
  const {
    webhookId,
    provider,
    payload
  } =
  /* istanbul ignore next */
  (cov_yh2ismh6d().s[2]++, job.data);
  /* istanbul ignore next */
  cov_yh2ismh6d().s[3]++;
  try {
    /* istanbul ignore next */
    cov_yh2ismh6d().s[4]++;
    logger.info('Processing incoming webhook', {
      webhookId,
      provider,
      jobId: job.id
    });
    // Update webhook status to processing
    /* istanbul ignore next */
    cov_yh2ismh6d().s[5]++;
    await db.webhook.update({
      where: {
        id: webhookId
      },
      data: {
        status: 'PROCESSING',
        processedAt: new Date()
      }
    });
    // Process based on provider
    /* istanbul ignore next */
    cov_yh2ismh6d().s[6]++;
    switch (provider) {
      case 'META_ADS':
        /* istanbul ignore next */
        cov_yh2ismh6d().b[0][0]++;
        cov_yh2ismh6d().s[7]++;
        await processMetaAdsWebhook(webhookId, payload);
        /* istanbul ignore next */
        cov_yh2ismh6d().s[8]++;
        break;
      case 'GOOGLE_ADS':
        /* istanbul ignore next */
        cov_yh2ismh6d().b[0][1]++;
        cov_yh2ismh6d().s[9]++;
        await processGoogleAdsWebhook(webhookId, payload);
        /* istanbul ignore next */
        cov_yh2ismh6d().s[10]++;
        break;
      case 'STRIPE':
        /* istanbul ignore next */
        cov_yh2ismh6d().b[0][2]++;
      case 'PAYPAL':
        /* istanbul ignore next */
        cov_yh2ismh6d().b[0][3]++;
        cov_yh2ismh6d().s[11]++;
        await processPaymentWebhook(webhookId, payload, provider);
        /* istanbul ignore next */
        cov_yh2ismh6d().s[12]++;
        break;
      case 'WHATSAPP':
        /* istanbul ignore next */
        cov_yh2ismh6d().b[0][4]++;
        cov_yh2ismh6d().s[13]++;
        await processWhatsAppWebhook(webhookId, payload);
        /* istanbul ignore next */
        cov_yh2ismh6d().s[14]++;
        break;
      default:
        /* istanbul ignore next */
        cov_yh2ismh6d().b[0][5]++;
        cov_yh2ismh6d().s[15]++;
        throw new Error(`Unknown provider: ${provider}`);
    }
    // Update webhook status to completed
    /* istanbul ignore next */
    cov_yh2ismh6d().s[16]++;
    await db.webhook.update({
      where: {
        id: webhookId
      },
      data: {
        status: 'COMPLETED',
        completedAt: new Date()
      }
    });
    /* istanbul ignore next */
    cov_yh2ismh6d().s[17]++;
    logger.info('Incoming webhook processed successfully', {
      webhookId,
      provider,
      jobId: job.id
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_yh2ismh6d().s[18]++;
    logger.error('Error processing incoming webhook:', error, {
      webhookId,
      provider,
      jobId: job.id
    });
    // Update webhook status to failed
    /* istanbul ignore next */
    cov_yh2ismh6d().s[19]++;
    await db.webhook.update({
      where: {
        id: webhookId
      },
      data: {
        status: 'FAILED',
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_yh2ismh6d().b[1][0]++, error.message) :
        /* istanbul ignore next */
        (cov_yh2ismh6d().b[1][1]++, 'Unknown error'),
        failedAt: new Date()
      }
    });
    /* istanbul ignore next */
    cov_yh2ismh6d().s[20]++;
    throw error;
  }
}
/**
 * Process Meta Ads webhook events
 */
async function processMetaAdsWebhook(webhookId, payload) {
  /* istanbul ignore next */
  cov_yh2ismh6d().f[1]++;
  cov_yh2ismh6d().s[21]++;
  try {
    const {
      entry
    } =
    /* istanbul ignore next */
    (cov_yh2ismh6d().s[22]++, payload);
    /* istanbul ignore next */
    cov_yh2ismh6d().s[23]++;
    if (
    /* istanbul ignore next */
    (cov_yh2ismh6d().b[3][0]++, !entry) ||
    /* istanbul ignore next */
    (cov_yh2ismh6d().b[3][1]++, !Array.isArray(entry))) {
      /* istanbul ignore next */
      cov_yh2ismh6d().b[2][0]++;
      cov_yh2ismh6d().s[24]++;
      logger.warn('Invalid Meta Ads webhook payload', {
        webhookId,
        payload
      });
      /* istanbul ignore next */
      cov_yh2ismh6d().s[25]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_yh2ismh6d().b[2][1]++;
    }
    cov_yh2ismh6d().s[26]++;
    for (const entryItem of entry) {
      const {
        changes
      } =
      /* istanbul ignore next */
      (cov_yh2ismh6d().s[27]++, entryItem);
      /* istanbul ignore next */
      cov_yh2ismh6d().s[28]++;
      if (
      /* istanbul ignore next */
      (cov_yh2ismh6d().b[5][0]++, !changes) ||
      /* istanbul ignore next */
      (cov_yh2ismh6d().b[5][1]++, !Array.isArray(changes))) {
        /* istanbul ignore next */
        cov_yh2ismh6d().b[4][0]++;
        cov_yh2ismh6d().s[29]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_yh2ismh6d().b[4][1]++;
      }
      cov_yh2ismh6d().s[30]++;
      for (const change of changes) {
        const {
          field,
          value
        } =
        /* istanbul ignore next */
        (cov_yh2ismh6d().s[31]++, change);
        /* istanbul ignore next */
        cov_yh2ismh6d().s[32]++;
        switch (field) {
          case 'campaigns':
            /* istanbul ignore next */
            cov_yh2ismh6d().b[6][0]++;
            cov_yh2ismh6d().s[33]++;
            await processCampaignChange(webhookId, value);
            /* istanbul ignore next */
            cov_yh2ismh6d().s[34]++;
            break;
          case 'adsets':
            /* istanbul ignore next */
            cov_yh2ismh6d().b[6][1]++;
            cov_yh2ismh6d().s[35]++;
            await processAdSetChange(webhookId, value);
            /* istanbul ignore next */
            cov_yh2ismh6d().s[36]++;
            break;
          case 'ads':
            /* istanbul ignore next */
            cov_yh2ismh6d().b[6][2]++;
            cov_yh2ismh6d().s[37]++;
            await processAdChange(webhookId, value);
            /* istanbul ignore next */
            cov_yh2ismh6d().s[38]++;
            break;
          case 'leads':
            /* istanbul ignore next */
            cov_yh2ismh6d().b[6][3]++;
            cov_yh2ismh6d().s[39]++;
            await processLeadChange(webhookId, value);
            /* istanbul ignore next */
            cov_yh2ismh6d().s[40]++;
            break;
          default:
            /* istanbul ignore next */
            cov_yh2ismh6d().b[6][4]++;
            cov_yh2ismh6d().s[41]++;
            logger.info('Unhandled Meta Ads field', {
              field,
              webhookId
            });
        }
      }
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_yh2ismh6d().s[42]++;
    logger.error('Error processing Meta Ads webhook:', error, {
      webhookId
    });
    /* istanbul ignore next */
    cov_yh2ismh6d().s[43]++;
    throw error;
  }
}
/**
 * Process Google Ads webhook events
 */
async function processGoogleAdsWebhook(webhookId, payload) {
  /* istanbul ignore next */
  cov_yh2ismh6d().f[2]++;
  cov_yh2ismh6d().s[44]++;
  try {
    const {
      eventType,
      customerId,
      resourceName,
      resourceType
    } =
    /* istanbul ignore next */
    (cov_yh2ismh6d().s[45]++, payload);
    /* istanbul ignore next */
    cov_yh2ismh6d().s[46]++;
    logger.info('Processing Google Ads webhook', {
      webhookId,
      eventType,
      customerId,
      resourceType
    });
    /* istanbul ignore next */
    cov_yh2ismh6d().s[47]++;
    switch (resourceType) {
      case 'CAMPAIGN':
        /* istanbul ignore next */
        cov_yh2ismh6d().b[7][0]++;
        cov_yh2ismh6d().s[48]++;
        await processGoogleCampaignChange(webhookId, payload);
        /* istanbul ignore next */
        cov_yh2ismh6d().s[49]++;
        break;
      case 'AD_GROUP':
        /* istanbul ignore next */
        cov_yh2ismh6d().b[7][1]++;
        cov_yh2ismh6d().s[50]++;
        await processGoogleAdGroupChange(webhookId, payload);
        /* istanbul ignore next */
        cov_yh2ismh6d().s[51]++;
        break;
      case 'CONVERSION':
        /* istanbul ignore next */
        cov_yh2ismh6d().b[7][2]++;
        cov_yh2ismh6d().s[52]++;
        await processGoogleConversionChange(webhookId, payload);
        /* istanbul ignore next */
        cov_yh2ismh6d().s[53]++;
        break;
      default:
        /* istanbul ignore next */
        cov_yh2ismh6d().b[7][3]++;
        cov_yh2ismh6d().s[54]++;
        logger.info('Unhandled Google Ads resource type', {
          resourceType,
          webhookId
        });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_yh2ismh6d().s[55]++;
    logger.error('Error processing Google Ads webhook:', error, {
      webhookId
    });
    /* istanbul ignore next */
    cov_yh2ismh6d().s[56]++;
    throw error;
  }
}
/**
 * Process payment webhook events (Stripe/PayPal)
 */
async function processPaymentWebhook(webhookId, payload, provider) {
  /* istanbul ignore next */
  cov_yh2ismh6d().f[3]++;
  cov_yh2ismh6d().s[57]++;
  try {
    const {
      type,
      data
    } =
    /* istanbul ignore next */
    (cov_yh2ismh6d().s[58]++, payload);
    /* istanbul ignore next */
    cov_yh2ismh6d().s[59]++;
    logger.info('Processing payment webhook', {
      webhookId,
      provider,
      eventType: type
    });
    /* istanbul ignore next */
    cov_yh2ismh6d().s[60]++;
    switch (type) {
      case 'payment_intent.succeeded':
        /* istanbul ignore next */
        cov_yh2ismh6d().b[8][0]++;
      case 'charge.succeeded':
        /* istanbul ignore next */
        cov_yh2ismh6d().b[8][1]++;
        cov_yh2ismh6d().s[61]++;
        await processSuccessfulPayment(webhookId, data.object, provider);
        /* istanbul ignore next */
        cov_yh2ismh6d().s[62]++;
        break;
      case 'payment_intent.payment_failed':
        /* istanbul ignore next */
        cov_yh2ismh6d().b[8][2]++;
      case 'charge.failed':
        /* istanbul ignore next */
        cov_yh2ismh6d().b[8][3]++;
        cov_yh2ismh6d().s[63]++;
        await processFailedPayment(webhookId, data.object, provider);
        /* istanbul ignore next */
        cov_yh2ismh6d().s[64]++;
        break;
      case 'invoice.payment_succeeded':
        /* istanbul ignore next */
        cov_yh2ismh6d().b[8][4]++;
        cov_yh2ismh6d().s[65]++;
        await processSubscriptionPayment(webhookId, data.object, provider);
        /* istanbul ignore next */
        cov_yh2ismh6d().s[66]++;
        break;
      default:
        /* istanbul ignore next */
        cov_yh2ismh6d().b[8][5]++;
        cov_yh2ismh6d().s[67]++;
        logger.info('Unhandled payment event type', {
          type,
          webhookId
        });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_yh2ismh6d().s[68]++;
    logger.error('Error processing payment webhook:', error, {
      webhookId
    });
    /* istanbul ignore next */
    cov_yh2ismh6d().s[69]++;
    throw error;
  }
}
/**
 * Process WhatsApp webhook events
 */
async function processWhatsAppWebhook(webhookId, payload) {
  /* istanbul ignore next */
  cov_yh2ismh6d().f[4]++;
  cov_yh2ismh6d().s[70]++;
  try {
    const {
      entry
    } =
    /* istanbul ignore next */
    (cov_yh2ismh6d().s[71]++, payload);
    /* istanbul ignore next */
    cov_yh2ismh6d().s[72]++;
    if (
    /* istanbul ignore next */
    (cov_yh2ismh6d().b[10][0]++, !entry) ||
    /* istanbul ignore next */
    (cov_yh2ismh6d().b[10][1]++, !Array.isArray(entry))) {
      /* istanbul ignore next */
      cov_yh2ismh6d().b[9][0]++;
      cov_yh2ismh6d().s[73]++;
      logger.warn('Invalid WhatsApp webhook payload', {
        webhookId,
        payload
      });
      /* istanbul ignore next */
      cov_yh2ismh6d().s[74]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_yh2ismh6d().b[9][1]++;
    }
    cov_yh2ismh6d().s[75]++;
    for (const entryItem of entry) {
      const {
        changes
      } =
      /* istanbul ignore next */
      (cov_yh2ismh6d().s[76]++, entryItem);
      /* istanbul ignore next */
      cov_yh2ismh6d().s[77]++;
      if (
      /* istanbul ignore next */
      (cov_yh2ismh6d().b[12][0]++, !changes) ||
      /* istanbul ignore next */
      (cov_yh2ismh6d().b[12][1]++, !Array.isArray(changes))) {
        /* istanbul ignore next */
        cov_yh2ismh6d().b[11][0]++;
        cov_yh2ismh6d().s[78]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_yh2ismh6d().b[11][1]++;
      }
      cov_yh2ismh6d().s[79]++;
      for (const change of changes) {
        const {
          field,
          value
        } =
        /* istanbul ignore next */
        (cov_yh2ismh6d().s[80]++, change);
        /* istanbul ignore next */
        cov_yh2ismh6d().s[81]++;
        if (field === 'messages') {
          /* istanbul ignore next */
          cov_yh2ismh6d().b[13][0]++;
          cov_yh2ismh6d().s[82]++;
          await processWhatsAppMessage(webhookId, value);
        } else {
          /* istanbul ignore next */
          cov_yh2ismh6d().b[13][1]++;
          cov_yh2ismh6d().s[83]++;
          if (field === 'message_template_status_update') {
            /* istanbul ignore next */
            cov_yh2ismh6d().b[14][0]++;
            cov_yh2ismh6d().s[84]++;
            await processWhatsAppTemplateUpdate(webhookId, value);
          } else
          /* istanbul ignore next */
          {
            cov_yh2ismh6d().b[14][1]++;
          }
        }
      }
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_yh2ismh6d().s[85]++;
    logger.error('Error processing WhatsApp webhook:', error, {
      webhookId
    });
    /* istanbul ignore next */
    cov_yh2ismh6d().s[86]++;
    throw error;
  }
}
/**
 * Process campaign changes from Meta Ads
 */
async function processCampaignChange(webhookId, value) {
  /* istanbul ignore next */
  cov_yh2ismh6d().f[5]++;
  cov_yh2ismh6d().s[87]++;
  try {
    const {
      campaign_id,
      status,
      daily_budget,
      lifetime_budget
    } =
    /* istanbul ignore next */
    (cov_yh2ismh6d().s[88]++, value);
    // Find the campaign in our database
    const campaign =
    /* istanbul ignore next */
    (cov_yh2ismh6d().s[89]++, await db.campaign.findFirst({
      where: {
        externalId: campaign_id
      },
      include: {
        organization: true
      }
    }));
    /* istanbul ignore next */
    cov_yh2ismh6d().s[90]++;
    if (!campaign) {
      /* istanbul ignore next */
      cov_yh2ismh6d().b[15][0]++;
      cov_yh2ismh6d().s[91]++;
      logger.warn('Campaign not found for webhook', {
        webhookId,
        campaign_id
      });
      /* istanbul ignore next */
      cov_yh2ismh6d().s[92]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_yh2ismh6d().b[15][1]++;
    }
    // Update campaign status if changed
    cov_yh2ismh6d().s[93]++;
    if (
    /* istanbul ignore next */
    (cov_yh2ismh6d().b[17][0]++, status) &&
    /* istanbul ignore next */
    (cov_yh2ismh6d().b[17][1]++, campaign.status !== status)) {
      /* istanbul ignore next */
      cov_yh2ismh6d().b[16][0]++;
      cov_yh2ismh6d().s[94]++;
      await db.campaign.update({
        where: {
          id: campaign.id
        },
        data: {
          status
        }
      });
      // Send outgoing webhook if campaign was paused
      /* istanbul ignore next */
      cov_yh2ismh6d().s[95]++;
      if (status === 'PAUSED') {
        /* istanbul ignore next */
        cov_yh2ismh6d().b[18][0]++;
        cov_yh2ismh6d().s[96]++;
        await webhookService.sendOutgoingWebhook({
          eventType: 'CAMPAIGN_PAUSED',
          organizationId: campaign.organizationId,
          data: {
            campaignId: campaign.id,
            externalId: campaign_id,
            name: campaign.name,
            status,
            pausedAt: new Date().toISOString()
          },
          timestamp: new Date()
        });
      } else
      /* istanbul ignore next */
      {
        cov_yh2ismh6d().b[18][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_yh2ismh6d().b[16][1]++;
    }
    // Check budget exceeded
    cov_yh2ismh6d().s[97]++;
    if (
    /* istanbul ignore next */
    (cov_yh2ismh6d().b[20][0]++, daily_budget) ||
    /* istanbul ignore next */
    (cov_yh2ismh6d().b[20][1]++, lifetime_budget)) {
      /* istanbul ignore next */
      cov_yh2ismh6d().b[19][0]++;
      const currentSpend =
      /* istanbul ignore next */
      (cov_yh2ismh6d().s[98]++, await getCurrentCampaignSpend(campaign.id));
      const budgetLimit =
      /* istanbul ignore next */
      (cov_yh2ismh6d().s[99]++,
      /* istanbul ignore next */
      (cov_yh2ismh6d().b[21][0]++, daily_budget) ||
      /* istanbul ignore next */
      (cov_yh2ismh6d().b[21][1]++, lifetime_budget));
      /* istanbul ignore next */
      cov_yh2ismh6d().s[100]++;
      if (currentSpend > budgetLimit) {
        /* istanbul ignore next */
        cov_yh2ismh6d().b[22][0]++;
        cov_yh2ismh6d().s[101]++;
        await webhookService.sendOutgoingWebhook({
          eventType: 'BUDGET_EXCEEDED',
          organizationId: campaign.organizationId,
          data: {
            campaignId: campaign.id,
            externalId: campaign_id,
            name: campaign.name,
            budgetLimit,
            currentSpend,
            percentage: Math.round(currentSpend / budgetLimit * 100)
          },
          timestamp: new Date()
        });
      } else
      /* istanbul ignore next */
      {
        cov_yh2ismh6d().b[22][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_yh2ismh6d().b[19][1]++;
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_yh2ismh6d().s[102]++;
    logger.error('Error processing campaign change:', error, {
      webhookId
    });
    /* istanbul ignore next */
    cov_yh2ismh6d().s[103]++;
    throw error;
  }
}
/**
 * Process successful payment
 */
async function processSuccessfulPayment(webhookId, paymentObject, provider) {
  /* istanbul ignore next */
  cov_yh2ismh6d().f[6]++;
  cov_yh2ismh6d().s[104]++;
  try {
    const {
      id,
      amount,
      currency,
      customer,
      metadata
    } =
    /* istanbul ignore next */
    (cov_yh2ismh6d().s[105]++, paymentObject);
    // Create conversion record
    const conversion =
    /* istanbul ignore next */
    (cov_yh2ismh6d().s[106]++, await db.conversion.create({
      data: {
        externalId: id,
        value: amount / 100,
        // Convert from cents
        currency: currency.toUpperCase(),
        eventType: 'PURCHASE',
        source: provider.toUpperCase(),
        metadata: paymentObject
        // TODO: Link to campaign and organization based on metadata or customer
      }
    }));
    // Send outgoing webhook for new conversion
    // TODO: Get organization ID from payment metadata or customer
    const organizationId =
    /* istanbul ignore next */
    (cov_yh2ismh6d().s[107]++,
    /* istanbul ignore next */
    (cov_yh2ismh6d().b[23][0]++, metadata?.organizationId) ||
    /* istanbul ignore next */
    (cov_yh2ismh6d().b[23][1]++, 'default-org'));
    /* istanbul ignore next */
    cov_yh2ismh6d().s[108]++;
    await webhookService.sendOutgoingWebhook({
      eventType: 'NEW_CONVERSION',
      organizationId,
      data: {
        conversionId: conversion.id,
        externalId: id,
        value: conversion.value,
        currency: conversion.currency,
        eventType: conversion.eventType,
        source: provider,
        customer,
        timestamp: new Date().toISOString()
      },
      timestamp: new Date()
    });
    /* istanbul ignore next */
    cov_yh2ismh6d().s[109]++;
    logger.info('Successful payment processed', {
      webhookId,
      conversionId: conversion.id,
      amount: conversion.value,
      currency: conversion.currency
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_yh2ismh6d().s[110]++;
    logger.error('Error processing successful payment:', error, {
      webhookId
    });
    /* istanbul ignore next */
    cov_yh2ismh6d().s[111]++;
    throw error;
  }
}
/**
 * Process failed payment
 */
async function processFailedPayment(webhookId, paymentObject, provider) {
  /* istanbul ignore next */
  cov_yh2ismh6d().f[7]++;
  cov_yh2ismh6d().s[112]++;
  try {
    const {
      id,
      amount,
      currency,
      failure_reason,
      customer
    } =
    /* istanbul ignore next */
    (cov_yh2ismh6d().s[113]++, paymentObject);
    /* istanbul ignore next */
    cov_yh2ismh6d().s[114]++;
    logger.info('Failed payment processed', {
      webhookId,
      paymentId: id,
      amount: amount / 100,
      currency,
      reason: failure_reason,
      customer
    });
    // TODO: Implement failed payment handling logic
    // This could include updating campaign performance metrics,
    // sending notifications, or triggering retargeting campaigns
  } catch (error) {
    /* istanbul ignore next */
    cov_yh2ismh6d().s[115]++;
    logger.error('Error processing failed payment:', error, {
      webhookId
    });
    /* istanbul ignore next */
    cov_yh2ismh6d().s[116]++;
    throw error;
  }
}
/**
 * Process WhatsApp message
 */
async function processWhatsAppMessage(webhookId, value) {
  /* istanbul ignore next */
  cov_yh2ismh6d().f[8]++;
  cov_yh2ismh6d().s[117]++;
  try {
    const {
      messages,
      contacts
    } =
    /* istanbul ignore next */
    (cov_yh2ismh6d().s[118]++, value);
    /* istanbul ignore next */
    cov_yh2ismh6d().s[119]++;
    if (
    /* istanbul ignore next */
    (cov_yh2ismh6d().b[25][0]++, !messages) ||
    /* istanbul ignore next */
    (cov_yh2ismh6d().b[25][1]++, !Array.isArray(messages))) {
      /* istanbul ignore next */
      cov_yh2ismh6d().b[24][0]++;
      cov_yh2ismh6d().s[120]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_yh2ismh6d().b[24][1]++;
    }
    cov_yh2ismh6d().s[121]++;
    for (const message of messages) {
      const {
        id,
        from,
        type,
        text,
        timestamp
      } =
      /* istanbul ignore next */
      (cov_yh2ismh6d().s[122]++, message);
      /* istanbul ignore next */
      cov_yh2ismh6d().s[123]++;
      logger.info('WhatsApp message received', {
        webhookId,
        messageId: id,
        from,
        type,
        timestamp
      });
      // TODO: Process WhatsApp message
      // This could include:
      // - Storing the message in database
      // - Triggering automated responses
      // - Updating lead information
      // - Sending notifications to sales team
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_yh2ismh6d().s[124]++;
    logger.error('Error processing WhatsApp message:', error, {
      webhookId
    });
    /* istanbul ignore next */
    cov_yh2ismh6d().s[125]++;
    throw error;
  }
}
/**
 * Process lead change from Meta Ads
 */
async function processLeadChange(webhookId, value) {
  /* istanbul ignore next */
  cov_yh2ismh6d().f[9]++;
  cov_yh2ismh6d().s[126]++;
  try {
    const {
      leadgen_id,
      page_id,
      form_id,
      adgroup_id,
      campaign_id,
      ad_id,
      created_time
    } =
    /* istanbul ignore next */
    (cov_yh2ismh6d().s[127]++, value);
    /* istanbul ignore next */
    cov_yh2ismh6d().s[128]++;
    logger.info('Meta Ads lead received', {
      webhookId,
      leadgen_id,
      campaign_id,
      adgroup_id,
      ad_id
    });
    // TODO: Fetch lead details from Meta API and process
    // This would require making an API call to get the actual lead data
    // and then creating a conversion record
  } catch (error) {
    /* istanbul ignore next */
    cov_yh2ismh6d().s[129]++;
    logger.error('Error processing lead change:', error, {
      webhookId
    });
    /* istanbul ignore next */
    cov_yh2ismh6d().s[130]++;
    throw error;
  }
}
/**
 * Process Google Ads conversion
 */
async function processGoogleConversionChange(webhookId, payload) {
  /* istanbul ignore next */
  cov_yh2ismh6d().f[10]++;
  cov_yh2ismh6d().s[131]++;
  try {
    const {
      customerId,
      conversionAction,
      conversionValue,
      conversionDateTime
    } =
    /* istanbul ignore next */
    (cov_yh2ismh6d().s[132]++, payload);
    /* istanbul ignore next */
    cov_yh2ismh6d().s[133]++;
    logger.info('Google Ads conversion received', {
      webhookId,
      customerId,
      conversionAction,
      conversionValue
    });
    // TODO: Process Google Ads conversion
    // Create conversion record and send outgoing webhook
  } catch (error) {
    /* istanbul ignore next */
    cov_yh2ismh6d().s[134]++;
    logger.error('Error processing Google conversion:', error, {
      webhookId
    });
    /* istanbul ignore next */
    cov_yh2ismh6d().s[135]++;
    throw error;
  }
}
/**
 * Retry failed webhook with exponential backoff
 */
export async function retryWebhook(job) {
  /* istanbul ignore next */
  cov_yh2ismh6d().f[11]++;
  const {
    configId,
    webhookData,
    attempt
  } =
  /* istanbul ignore next */
  (cov_yh2ismh6d().s[136]++, job.data);
  const maxAttempts =
  /* istanbul ignore next */
  (cov_yh2ismh6d().s[137]++, 3);
  /* istanbul ignore next */
  cov_yh2ismh6d().s[138]++;
  try {
    /* istanbul ignore next */
    cov_yh2ismh6d().s[139]++;
    logger.info('Retrying webhook', {
      configId,
      attempt,
      maxAttempts,
      jobId: job.id
    });
    // Get webhook configuration
    const config =
    /* istanbul ignore next */
    (cov_yh2ismh6d().s[140]++, await db.webhookConfig.findUnique({
      where: {
        id: configId
      }
    }));
    /* istanbul ignore next */
    cov_yh2ismh6d().s[141]++;
    if (
    /* istanbul ignore next */
    (cov_yh2ismh6d().b[27][0]++, !config) ||
    /* istanbul ignore next */
    (cov_yh2ismh6d().b[27][1]++, !config.isActive)) {
      /* istanbul ignore next */
      cov_yh2ismh6d().b[26][0]++;
      cov_yh2ismh6d().s[142]++;
      logger.warn('Webhook config not found or inactive', {
        configId
      });
      /* istanbul ignore next */
      cov_yh2ismh6d().s[143]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_yh2ismh6d().b[26][1]++;
    }
    // Try to send webhook again
    const webhookService =
    /* istanbul ignore next */
    (cov_yh2ismh6d().s[144]++, new WebhookService(db));
    /* istanbul ignore next */
    cov_yh2ismh6d().s[145]++;
    await webhookService.sendOutgoingWebhook(webhookData);
    /* istanbul ignore next */
    cov_yh2ismh6d().s[146]++;
    logger.info('Webhook retry successful', {
      configId,
      attempt,
      jobId: job.id
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_yh2ismh6d().s[147]++;
    logger.error('Webhook retry failed:', error, {
      configId,
      attempt,
      jobId: job.id
    });
    // If we haven't reached max attempts, schedule another retry
    /* istanbul ignore next */
    cov_yh2ismh6d().s[148]++;
    if (attempt < maxAttempts) {
      /* istanbul ignore next */
      cov_yh2ismh6d().b[28][0]++;
      const queueManager =
      /* istanbul ignore next */
      (cov_yh2ismh6d().s[149]++, getQueueManager());
      const delay =
      /* istanbul ignore next */
      (cov_yh2ismh6d().s[150]++, Math.pow(2, attempt) * 1000); // Exponential backoff: 2s, 4s, 8s
      /* istanbul ignore next */
      cov_yh2ismh6d().s[151]++;
      await queueManager.addJob('webhook-retry', {
        configId,
        webhookData,
        attempt: attempt + 1
      }, {
        delay
      });
      /* istanbul ignore next */
      cov_yh2ismh6d().s[152]++;
      logger.info('Webhook retry scheduled', {
        configId,
        nextAttempt: attempt + 1,
        delay
      });
    } else {
      /* istanbul ignore next */
      cov_yh2ismh6d().b[28][1]++;
      cov_yh2ismh6d().s[153]++;
      // Max attempts reached, move to dead letter queue
      logger.error('Webhook max retries exceeded, moving to DLQ', {
        configId,
        attempt,
        maxAttempts
      });
      const queueManager =
      /* istanbul ignore next */
      (cov_yh2ismh6d().s[154]++, getQueueManager());
      /* istanbul ignore next */
      cov_yh2ismh6d().s[155]++;
      await queueManager.addJob('webhook-dlq', {
        configId,
        webhookData,
        finalAttempt: attempt,
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_yh2ismh6d().b[29][0]++, error.message) :
        /* istanbul ignore next */
        (cov_yh2ismh6d().b[29][1]++, 'Unknown error'),
        failedAt: new Date().toISOString()
      });
    }
  }
}
/**
 * Handle webhooks in dead letter queue
 */
export async function handleDeadLetterWebhook(job) {
  /* istanbul ignore next */
  cov_yh2ismh6d().f[12]++;
  const {
    configId,
    webhookData,
    finalAttempt,
    error,
    failedAt
  } =
  /* istanbul ignore next */
  (cov_yh2ismh6d().s[156]++, job.data);
  /* istanbul ignore next */
  cov_yh2ismh6d().s[157]++;
  try {
    /* istanbul ignore next */
    cov_yh2ismh6d().s[158]++;
    logger.error('Webhook moved to dead letter queue', {
      configId,
      finalAttempt,
      error,
      failedAt,
      jobId: job.id
    });
    // Update webhook config to mark as having failed webhooks
    /* istanbul ignore next */
    cov_yh2ismh6d().s[159]++;
    await db.webhookConfig.update({
      where: {
        id: configId
      },
      data: {
        totalFailed: {
          increment: 1
        },
        lastFailedAt: new Date()
      }
    });
    // TODO: Send notification to administrators about failed webhook
    // This could include email alerts, Slack notifications, etc.
  } catch (error) {
    /* istanbul ignore next */
    cov_yh2ismh6d().s[160]++;
    logger.error('Error handling dead letter webhook:', error, {
      configId,
      jobId: job.id
    });
  }
}
/**
 * Helper function to get current campaign spend
 */
async function getCurrentCampaignSpend(campaignId) {
  /* istanbul ignore next */
  cov_yh2ismh6d().f[13]++;
  cov_yh2ismh6d().s[161]++;
  // This is a simplified implementation
  // In a real scenario, you'd calculate the actual spend from your metrics
  try {
    const result =
    /* istanbul ignore next */
    (cov_yh2ismh6d().s[162]++, await db.campaignMetrics.aggregate({
      where: {
        campaignId,
        date: {
          gte: new Date(new Date().setHours(0, 0, 0, 0)) // Today
        }
      },
      _sum: {
        spend: true
      }
    }));
    /* istanbul ignore next */
    cov_yh2ismh6d().s[163]++;
    return /* istanbul ignore next */(cov_yh2ismh6d().b[30][0]++, result._sum.spend) ||
    /* istanbul ignore next */
    (cov_yh2ismh6d().b[30][1]++, 0);
  } catch (error) {
    /* istanbul ignore next */
    cov_yh2ismh6d().s[164]++;
    logger.error('Error getting campaign spend:', error, {
      campaignId
    });
    /* istanbul ignore next */
    cov_yh2ismh6d().s[165]++;
    return 0;
  }
}
/**
 * Helper functions for other webhook processing
 */
async function processAdSetChange(webhookId, value) {
  /* istanbul ignore next */
  cov_yh2ismh6d().f[14]++;
  cov_yh2ismh6d().s[166]++;
  // TODO: Implement adset change processing
  logger.info('AdSet change received', {
    webhookId,
    value
  });
}
async function processAdChange(webhookId, value) {
  /* istanbul ignore next */
  cov_yh2ismh6d().f[15]++;
  cov_yh2ismh6d().s[167]++;
  // TODO: Implement ad change processing
  logger.info('Ad change received', {
    webhookId,
    value
  });
}
async function processGoogleCampaignChange(webhookId, payload) {
  /* istanbul ignore next */
  cov_yh2ismh6d().f[16]++;
  cov_yh2ismh6d().s[168]++;
  // TODO: Implement Google campaign change processing
  logger.info('Google campaign change received', {
    webhookId,
    payload
  });
}
async function processGoogleAdGroupChange(webhookId, payload) {
  /* istanbul ignore next */
  cov_yh2ismh6d().f[17]++;
  cov_yh2ismh6d().s[169]++;
  // TODO: Implement Google ad group change processing
  logger.info('Google ad group change received', {
    webhookId,
    payload
  });
}
async function processSubscriptionPayment(webhookId, invoice, provider) {
  /* istanbul ignore next */
  cov_yh2ismh6d().f[18]++;
  cov_yh2ismh6d().s[170]++;
  // TODO: Implement subscription payment processing
  logger.info('Subscription payment received', {
    webhookId,
    invoice,
    provider
  });
}
async function processWhatsAppTemplateUpdate(webhookId, value) {
  /* istanbul ignore next */
  cov_yh2ismh6d().f[19]++;
  cov_yh2ismh6d().s[171]++;
  // TODO: Implement WhatsApp template update processing
  logger.info('WhatsApp template update received', {
    webhookId,
    value
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,