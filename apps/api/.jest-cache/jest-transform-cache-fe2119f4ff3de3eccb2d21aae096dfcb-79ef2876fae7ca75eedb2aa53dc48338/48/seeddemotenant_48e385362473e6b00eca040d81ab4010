b280625def5ca8c914fd45d719367e37
/* istanbul ignore next */
function cov_1c7eri5tdm() {
  var path = "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\scripts\\seed-demo-tenant.ts";
  var hash = "e376de663aeb85459013cd51fd661a761e7dcedc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\scripts\\seed-demo-tenant.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 15
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "1": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "2": {
        start: {
          line: 6,
          column: 8
        },
        end: {
          line: 6,
          column: 64
        }
      },
      "3": {
        start: {
          line: 8,
          column: 28
        },
        end: {
          line: 10,
          column: 10
        }
      },
      "4": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 14,
          column: 9
        }
      },
      "5": {
        start: {
          line: 12,
          column: 12
        },
        end: {
          line: 12,
          column: 56
        }
      },
      "6": {
        start: {
          line: 13,
          column: 12
        },
        end: {
          line: 13,
          column: 19
        }
      },
      "7": {
        start: {
          line: 16,
          column: 24
        },
        end: {
          line: 21,
          column: 10
        }
      },
      "8": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 64
        }
      },
      "9": {
        start: {
          line: 24,
          column: 26
        },
        end: {
          line: 32,
          column: 10
        }
      },
      "10": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 63
        }
      },
      "11": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 73
        }
      },
      "12": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 74
        }
      },
      "13": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 51
        }
      },
      "14": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 20
        }
      },
      "15": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 35
        }
      },
      "16": {
        start: {
          line: 46,
          column: 0
        },
        end: {
          line: 56,
          column: 1
        }
      },
      "17": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 55,
          column: 7
        }
      },
      "18": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 42
        }
      },
      "19": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 24
        }
      },
      "20": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 48
        }
      },
      "21": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "seedDemoTenant",
        decl: {
          start: {
            line: 4,
            column: 15
          },
          end: {
            line: 4,
            column: 29
          }
        },
        loc: {
          start: {
            line: 4,
            column: 32
          },
          end: {
            line: 44,
            column: 1
          }
        },
        line: 4
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 48,
            column: 14
          },
          end: {
            line: 48,
            column: 15
          }
        },
        loc: {
          start: {
            line: 48,
            column: 20
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 48
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 52,
            column: 15
          },
          end: {
            line: 52,
            column: 16
          }
        },
        loc: {
          start: {
            line: 52,
            column: 26
          },
          end: {
            line: 55,
            column: 5
          }
        },
        line: 52
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 11,
            column: 8
          },
          end: {
            line: 14,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 11,
            column: 8
          },
          end: {
            line: 14,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 11
      },
      "1": {
        loc: {
          start: {
            line: 46,
            column: 0
          },
          end: {
            line: 56,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 0
          },
          end: {
            line: 56,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\scripts\\seed-demo-tenant.ts",
      mappings: "AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,kBAAkB,CAAA;AAC/C,OAAO,EAAE,MAAM,EAAE,MAAM,iBAAiB,CAAA;AAExC,MAAM,MAAM,GAAG,IAAI,YAAY,EAAE,CAAA;AAEjC,KAAK,UAAU,cAAc;IAC3B,IAAI,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,0CAA0C,CAAC,CAAA;QAEvD,4CAA4C;QAC5C,MAAM,WAAW,GAAG,MAAM,MAAM,CAAC,YAAY,CAAC,UAAU,CAAC;YACvD,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;SACxB,CAAC,CAAA;QAEF,IAAI,WAAW,EAAE,CAAC;YAChB,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAA;YAC3C,OAAM;QACR,CAAC;QAED,4CAA4C;QAC5C,MAAM,OAAO,GAAG,MAAM,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC;YAC/C,IAAI,EAAE;gBACJ,IAAI,EAAE,mBAAmB;gBACzB,IAAI,EAAE,MAAM;aACb;SACF,CAAC,CAAA;QAEF,OAAO,CAAC,GAAG,CAAC,8BAA8B,OAAO,CAAC,EAAE,EAAE,CAAC,CAAA;QAEvD,8CAA8C;QAC9C,MAAM,SAAS,GAAG,MAAM,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;YACzC,IAAI,EAAE;gBACJ,KAAK,EAAE,uBAAuB;gBAC9B,IAAI,EAAE,YAAY;gBAClB,QAAQ,EAAE,+BAA+B,EAAE,mBAAmB;gBAC9D,IAAI,EAAE,OAAO;gBACb,cAAc,EAAE,OAAO,CAAC,EAAE;aAC3B;SACF,CAAC,CAAA;QAEF,OAAO,CAAC,GAAG,CAAC,2BAA2B,SAAS,CAAC,EAAE,EAAE,CAAC,CAAA;QACtD,OAAO,CAAC,GAAG,CAAC,mDAAmD,CAAC,CAAA;IAElE,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,2CAA2C,EAAE,KAAK,CAAC,CAAA;QACjE,OAAO,CAAC,KAAK,CAAC,cAAc,EAAE,KAAK,CAAC,KAAK,CAAC,CAAA;QAC1C,MAAM,KAAK,CAAA;IACb,CAAC;YAAS,CAAC;QACT,MAAM,MAAM,CAAC,WAAW,EAAE,CAAA;IAC5B,CAAC;AACH,CAAC;AAED,uCAAuC;AACvC,IAAI,OAAO,CAAC,IAAI,KAAK,MAAM,EAAE,CAAC;IAC5B,cAAc,EAAE;SACb,IAAI,CAAC,GAAG,EAAE;QACT,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAA;QACjC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;IACjB,CAAC,CAAC;SACD,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;QACf,MAAM,CAAC,KAAK,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAA;QACvC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;IACjB,CAAC,CAAC,CAAA;AACN,CAAC;AAED,OAAO,EAAE,cAAc,EAAE,CAAA",
      names: [],
      sources: ["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\scripts\\seed-demo-tenant.ts"],
      sourcesContent: ["import { PrismaClient } from '@utmify/database'\nimport { logger } from '../utils/logger'\n\nconst prisma = new PrismaClient()\n\nasync function seedDemoTenant() {\n  try {\n    console.log('\uD83C\uDF31 Iniciando seed da organiza\xE7\xE3o demo...')\n\n    // Verificar se a organiza\xE7\xE3o demo j\xE1 existe\n    const existingOrg = await prisma.organization.findUnique({\n      where: { slug: 'demo' }\n    })\n\n    if (existingOrg) {\n      console.log('\u2705 Organiza\xE7\xE3o demo j\xE1 existe')\n      return\n    }\n\n    // Criar organiza\xE7\xE3o demo com campos b\xE1sicos\n    const demoOrg = await prisma.organization.create({\n      data: {\n        name: 'Demo Organization',\n        slug: 'demo'\n      }\n    })\n\n    console.log(`\u2705 Organiza\xE7\xE3o demo criada: ${demoOrg.id}`)\n\n    // Criar usu\xE1rio admin para a organiza\xE7\xE3o demo\n    const adminUser = await prisma.user.create({\n      data: {\n        email: 'admin@demo.utmify.com',\n        name: 'Admin Demo',\n        password: '$2b$10$rQZ8kZKZKZKZKZKZKZKZKu', // senha: 'demo123'\n        role: 'ADMIN',\n        organizationId: demoOrg.id\n      }\n    })\n\n    console.log(`\u2705 Usu\xE1rio admin criado: ${adminUser.id}`)\n    console.log('\u2705 Seed da organiza\xE7\xE3o demo conclu\xEDdo com sucesso!')\n\n  } catch (error) {\n    console.error('\u274C Erro ao fazer seed da organiza\xE7\xE3o demo:', error)\n    console.error('Stack trace:', error.stack)\n    throw error\n  } finally {\n    await prisma.$disconnect()\n  }\n}\n\n// Executar seed se chamado diretamente\nif (require.main === module) {\n  seedDemoTenant()\n    .then(() => {\n      logger.info('\uD83C\uDF89 Seed conclu\xEDdo!')\n      process.exit(0)\n    })\n    .catch((error) => {\n      logger.error('\uD83D\uDCA5 Erro no seed:', error)\n      process.exit(1)\n    })\n}\n\nexport { seedDemoTenant }"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e376de663aeb85459013cd51fd661a761e7dcedc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1c7eri5tdm = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1c7eri5tdm();
import { PrismaClient } from '@utmify/database';
import { logger } from '../utils/logger';
const prisma =
/* istanbul ignore next */
(cov_1c7eri5tdm().s[0]++, new PrismaClient());
async function seedDemoTenant() {
  /* istanbul ignore next */
  cov_1c7eri5tdm().f[0]++;
  cov_1c7eri5tdm().s[1]++;
  try {
    /* istanbul ignore next */
    cov_1c7eri5tdm().s[2]++;
    console.log('🌱 Iniciando seed da organização demo...');
    // Verificar se a organização demo já existe
    const existingOrg =
    /* istanbul ignore next */
    (cov_1c7eri5tdm().s[3]++, await prisma.organization.findUnique({
      where: {
        slug: 'demo'
      }
    }));
    /* istanbul ignore next */
    cov_1c7eri5tdm().s[4]++;
    if (existingOrg) {
      /* istanbul ignore next */
      cov_1c7eri5tdm().b[0][0]++;
      cov_1c7eri5tdm().s[5]++;
      console.log('✅ Organização demo já existe');
      /* istanbul ignore next */
      cov_1c7eri5tdm().s[6]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1c7eri5tdm().b[0][1]++;
    }
    // Criar organização demo com campos básicos
    const demoOrg =
    /* istanbul ignore next */
    (cov_1c7eri5tdm().s[7]++, await prisma.organization.create({
      data: {
        name: 'Demo Organization',
        slug: 'demo'
      }
    }));
    /* istanbul ignore next */
    cov_1c7eri5tdm().s[8]++;
    console.log(`✅ Organização demo criada: ${demoOrg.id}`);
    // Criar usuário admin para a organização demo
    const adminUser =
    /* istanbul ignore next */
    (cov_1c7eri5tdm().s[9]++, await prisma.user.create({
      data: {
        email: 'admin@demo.utmify.com',
        name: 'Admin Demo',
        password: '$2b$10$rQZ8kZKZKZKZKZKZKZKZKu',
        // senha: 'demo123'
        role: 'ADMIN',
        organizationId: demoOrg.id
      }
    }));
    /* istanbul ignore next */
    cov_1c7eri5tdm().s[10]++;
    console.log(`✅ Usuário admin criado: ${adminUser.id}`);
    /* istanbul ignore next */
    cov_1c7eri5tdm().s[11]++;
    console.log('✅ Seed da organização demo concluído com sucesso!');
  } catch (error) {
    /* istanbul ignore next */
    cov_1c7eri5tdm().s[12]++;
    console.error('❌ Erro ao fazer seed da organização demo:', error);
    /* istanbul ignore next */
    cov_1c7eri5tdm().s[13]++;
    console.error('Stack trace:', error.stack);
    /* istanbul ignore next */
    cov_1c7eri5tdm().s[14]++;
    throw error;
  } finally {
    /* istanbul ignore next */
    cov_1c7eri5tdm().s[15]++;
    await prisma.$disconnect();
  }
}
// Executar seed se chamado diretamente
/* istanbul ignore next */
cov_1c7eri5tdm().s[16]++;
if (require.main === module) {
  /* istanbul ignore next */
  cov_1c7eri5tdm().b[1][0]++;
  cov_1c7eri5tdm().s[17]++;
  seedDemoTenant().then(() => {
    /* istanbul ignore next */
    cov_1c7eri5tdm().f[1]++;
    cov_1c7eri5tdm().s[18]++;
    logger.info('🎉 Seed concluído!');
    /* istanbul ignore next */
    cov_1c7eri5tdm().s[19]++;
    process.exit(0);
  }).catch(error => {
    /* istanbul ignore next */
    cov_1c7eri5tdm().f[2]++;
    cov_1c7eri5tdm().s[20]++;
    logger.error('💥 Erro no seed:', error);
    /* istanbul ignore next */
    cov_1c7eri5tdm().s[21]++;
    process.exit(1);
  });
} else
/* istanbul ignore next */
{
  cov_1c7eri5tdm().b[1][1]++;
}
export { seedDemoTenant };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMWM3ZXJpNXRkbSIsImFjdHVhbENvdmVyYWdlIiwiUHJpc21hQ2xpZW50IiwibG9nZ2VyIiwicHJpc21hIiwicyIsInNlZWREZW1vVGVuYW50IiwiZiIsImNvbnNvbGUiLCJsb2ciLCJleGlzdGluZ09yZyIsIm9yZ2FuaXphdGlvbiIsImZpbmRVbmlxdWUiLCJ3aGVyZSIsInNsdWciLCJiIiwiZGVtb09yZyIsImNyZWF0ZSIsImRhdGEiLCJuYW1lIiwiaWQiLCJhZG1pblVzZXIiLCJ1c2VyIiwiZW1haWwiLCJwYXNzd29yZCIsInJvbGUiLCJvcmdhbml6YXRpb25JZCIsImVycm9yIiwic3RhY2siLCIkZGlzY29ubmVjdCIsInJlcXVpcmUiLCJtYWluIiwibW9kdWxlIiwidGhlbiIsImluZm8iLCJwcm9jZXNzIiwiZXhpdCIsImNhdGNoIl0sInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxFbnpvIE1hcmNlbG9cXERlc2t0b3BcXFByb2pldG9zIEVtcHJlc2FcXFNhYXMgVXRtaWZ5XFx1dG1pZnktY2xvbmVcXGFwcHNcXGFwaVxcc3JjXFxzY3JpcHRzXFxzZWVkLWRlbW8tdGVuYW50LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByaXNtYUNsaWVudCB9IGZyb20gJ0B1dG1pZnkvZGF0YWJhc2UnXG5pbXBvcnQgeyBsb2dnZXIgfSBmcm9tICcuLi91dGlscy9sb2dnZXInXG5cbmNvbnN0IHByaXNtYSA9IG5ldyBQcmlzbWFDbGllbnQoKVxuXG5hc3luYyBmdW5jdGlvbiBzZWVkRGVtb1RlbmFudCgpIHtcbiAgdHJ5IHtcbiAgICBjb25zb2xlLmxvZygn8J+MsSBJbmljaWFuZG8gc2VlZCBkYSBvcmdhbml6YcOnw6NvIGRlbW8uLi4nKVxuXG4gICAgLy8gVmVyaWZpY2FyIHNlIGEgb3JnYW5pemHDp8OjbyBkZW1vIGrDoSBleGlzdGVcbiAgICBjb25zdCBleGlzdGluZ09yZyA9IGF3YWl0IHByaXNtYS5vcmdhbml6YXRpb24uZmluZFVuaXF1ZSh7XG4gICAgICB3aGVyZTogeyBzbHVnOiAnZGVtbycgfVxuICAgIH0pXG5cbiAgICBpZiAoZXhpc3RpbmdPcmcpIHtcbiAgICAgIGNvbnNvbGUubG9nKCfinIUgT3JnYW5pemHDp8OjbyBkZW1vIGrDoSBleGlzdGUnKVxuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgLy8gQ3JpYXIgb3JnYW5pemHDp8OjbyBkZW1vIGNvbSBjYW1wb3MgYsOhc2ljb3NcbiAgICBjb25zdCBkZW1vT3JnID0gYXdhaXQgcHJpc21hLm9yZ2FuaXphdGlvbi5jcmVhdGUoe1xuICAgICAgZGF0YToge1xuICAgICAgICBuYW1lOiAnRGVtbyBPcmdhbml6YXRpb24nLFxuICAgICAgICBzbHVnOiAnZGVtbydcbiAgICAgIH1cbiAgICB9KVxuXG4gICAgY29uc29sZS5sb2coYOKchSBPcmdhbml6YcOnw6NvIGRlbW8gY3JpYWRhOiAke2RlbW9PcmcuaWR9YClcblxuICAgIC8vIENyaWFyIHVzdcOhcmlvIGFkbWluIHBhcmEgYSBvcmdhbml6YcOnw6NvIGRlbW9cbiAgICBjb25zdCBhZG1pblVzZXIgPSBhd2FpdCBwcmlzbWEudXNlci5jcmVhdGUoe1xuICAgICAgZGF0YToge1xuICAgICAgICBlbWFpbDogJ2FkbWluQGRlbW8udXRtaWZ5LmNvbScsXG4gICAgICAgIG5hbWU6ICdBZG1pbiBEZW1vJyxcbiAgICAgICAgcGFzc3dvcmQ6ICckMmIkMTAkclFaOGtaS1pLWktaS1pLWktaS1pLdScsIC8vIHNlbmhhOiAnZGVtbzEyMydcbiAgICAgICAgcm9sZTogJ0FETUlOJyxcbiAgICAgICAgb3JnYW5pemF0aW9uSWQ6IGRlbW9PcmcuaWRcbiAgICAgIH1cbiAgICB9KVxuXG4gICAgY29uc29sZS5sb2coYOKchSBVc3XDoXJpbyBhZG1pbiBjcmlhZG86ICR7YWRtaW5Vc2VyLmlkfWApXG4gICAgY29uc29sZS5sb2coJ+KchSBTZWVkIGRhIG9yZ2FuaXphw6fDo28gZGVtbyBjb25jbHXDrWRvIGNvbSBzdWNlc3NvIScpXG5cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCfinYwgRXJybyBhbyBmYXplciBzZWVkIGRhIG9yZ2FuaXphw6fDo28gZGVtbzonLCBlcnJvcilcbiAgICBjb25zb2xlLmVycm9yKCdTdGFjayB0cmFjZTonLCBlcnJvci5zdGFjaylcbiAgICB0aHJvdyBlcnJvclxuICB9IGZpbmFsbHkge1xuICAgIGF3YWl0IHByaXNtYS4kZGlzY29ubmVjdCgpXG4gIH1cbn1cblxuLy8gRXhlY3V0YXIgc2VlZCBzZSBjaGFtYWRvIGRpcmV0YW1lbnRlXG5pZiAocmVxdWlyZS5tYWluID09PSBtb2R1bGUpIHtcbiAgc2VlZERlbW9UZW5hbnQoKVxuICAgIC50aGVuKCgpID0+IHtcbiAgICAgIGxvZ2dlci5pbmZvKCfwn46JIFNlZWQgY29uY2x1w61kbyEnKVxuICAgICAgcHJvY2Vzcy5leGl0KDApXG4gICAgfSlcbiAgICAuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICBsb2dnZXIuZXJyb3IoJ/CfkqUgRXJybyBubyBzZWVkOicsIGVycm9yKVxuICAgICAgcHJvY2Vzcy5leGl0KDEpXG4gICAgfSlcbn1cblxuZXhwb3J0IHsgc2VlZERlbW9UZW5hbnQgfSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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