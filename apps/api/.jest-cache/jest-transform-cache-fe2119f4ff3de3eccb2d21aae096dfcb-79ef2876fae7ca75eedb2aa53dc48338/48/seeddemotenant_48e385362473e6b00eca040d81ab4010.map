{"version":3,"names":["cov_1c7eri5tdm","actualCoverage","PrismaClient","logger","prisma","s","seedDemoTenant","f","console","log","existingOrg","organization","findUnique","where","slug","b","demoOrg","create","data","name","id","adminUser","user","email","password","role","organizationId","error","stack","$disconnect","require","main","module","then","info","process","exit","catch"],"sources":["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\scripts\\seed-demo-tenant.ts"],"sourcesContent":["import { PrismaClient } from '@utmify/database'\nimport { logger } from '../utils/logger'\n\nconst prisma = new PrismaClient()\n\nasync function seedDemoTenant() {\n  try {\n    console.log('🌱 Iniciando seed da organização demo...')\n\n    // Verificar se a organização demo já existe\n    const existingOrg = await prisma.organization.findUnique({\n      where: { slug: 'demo' }\n    })\n\n    if (existingOrg) {\n      console.log('✅ Organização demo já existe')\n      return\n    }\n\n    // Criar organização demo com campos básicos\n    const demoOrg = await prisma.organization.create({\n      data: {\n        name: 'Demo Organization',\n        slug: 'demo'\n      }\n    })\n\n    console.log(`✅ Organização demo criada: ${demoOrg.id}`)\n\n    // Criar usuário admin para a organização demo\n    const adminUser = await prisma.user.create({\n      data: {\n        email: 'admin@demo.utmify.com',\n        name: 'Admin Demo',\n        password: '$2b$10$rQZ8kZKZKZKZKZKZKZKZKu', // senha: 'demo123'\n        role: 'ADMIN',\n        organizationId: demoOrg.id\n      }\n    })\n\n    console.log(`✅ Usuário admin criado: ${adminUser.id}`)\n    console.log('✅ Seed da organização demo concluído com sucesso!')\n\n  } catch (error) {\n    console.error('❌ Erro ao fazer seed da organização demo:', error)\n    console.error('Stack trace:', error.stack)\n    throw error\n  } finally {\n    await prisma.$disconnect()\n  }\n}\n\n// Executar seed se chamado diretamente\nif (require.main === module) {\n  seedDemoTenant()\n    .then(() => {\n      logger.info('🎉 Seed concluído!')\n      process.exit(0)\n    })\n    .catch((error) => {\n      logger.error('💥 Erro no seed:', error)\n      process.exit(1)\n    })\n}\n\nexport { seedDemoTenant }"],"mappings":"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","ignoreList":[]}