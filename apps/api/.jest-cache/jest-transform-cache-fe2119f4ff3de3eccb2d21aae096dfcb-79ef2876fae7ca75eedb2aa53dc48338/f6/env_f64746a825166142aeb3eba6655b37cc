81c357dadf45d1a93768d231f9ea8133
/* istanbul ignore next */
function cov_1mfyrpqdbc() {
  var path = "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\config\\env.ts";
  var hash = "738b4b9f04b20ab403d65e31a2017d1edeb69198";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\config\\env.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 18
        },
        end: {
          line: 45,
          column: 2
        }
      },
      "1": {
        start: {
          line: 47,
          column: 17
        },
        end: {
          line: 62,
          column: 1
        }
      },
      "2": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "3": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 44
        }
      },
      "4": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 59,
          column: 9
        }
      },
      "5": {
        start: {
          line: 53,
          column: 32
        },
        end: {
          line: 55,
          column: 27
        }
      },
      "6": {
        start: {
          line: 54,
          column: 28
        },
        end: {
          line: 54,
          column: 67
        }
      },
      "7": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 62
        }
      },
      "8": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 39
        }
      },
      "9": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 28
        }
      },
      "10": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 20
        }
      },
      "11": {
        start: {
          line: 63,
          column: 22
        },
        end: {
          line: 63,
          column: 32
        }
      },
      "12": {
        start: {
          line: 65,
          column: 29
        },
        end: {
          line: 65,
          column: 62
        }
      },
      "13": {
        start: {
          line: 66,
          column: 28
        },
        end: {
          line: 66,
          column: 60
        }
      },
      "14": {
        start: {
          line: 67,
          column: 22
        },
        end: {
          line: 67,
          column: 48
        }
      },
      "15": {
        start: {
          line: 69,
          column: 24
        },
        end: {
          line: 84,
          column: 1
        }
      },
      "16": {
        start: {
          line: 86,
          column: 27
        },
        end: {
          line: 98,
          column: 1
        }
      },
      "17": {
        start: {
          line: 100,
          column: 25
        },
        end: {
          line: 108,
          column: 1
        }
      },
      "18": {
        start: {
          line: 110,
          column: 26
        },
        end: {
          line: 119,
          column: 8
        }
      },
      "19": {
        start: {
          line: 121,
          column: 26
        },
        end: {
          line: 126,
          column: 1
        }
      },
      "20": {
        start: {
          line: 122,
          column: 56
        },
        end: {
          line: 122,
          column: 69
        }
      },
      "21": {
        start: {
          line: 128,
          column: 31
        },
        end: {
          line: 136,
          column: 1
        }
      },
      "22": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 41
        }
      },
      "23": {
        start: {
          line: 138,
          column: 28
        },
        end: {
          line: 149,
          column: 1
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 47,
            column: 17
          },
          end: {
            line: 47,
            column: 18
          }
        },
        loc: {
          start: {
            line: 47,
            column: 23
          },
          end: {
            line: 62,
            column: 1
          }
        },
        line: 47
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 54,
            column: 21
          },
          end: {
            line: 54,
            column: 22
          }
        },
        loc: {
          start: {
            line: 54,
            column: 28
          },
          end: {
            line: 54,
            column: 67
          }
        },
        line: 54
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 122,
            column: 46
          },
          end: {
            line: 122,
            column: 47
          }
        },
        loc: {
          start: {
            line: 122,
            column: 56
          },
          end: {
            line: 122,
            column: 69
          }
        },
        line: 122
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 133,
            column: 18
          },
          end: {
            line: 133,
            column: 19
          }
        },
        loc: {
          start: {
            line: 133,
            column: 31
          },
          end: {
            line: 135,
            column: 5
          }
        },
        line: 133
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "1": {
        loc: {
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 83,
            column: 5
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 72,
            column: 20
          }
        }, {
          start: {
            line: 72,
            column: 24
          },
          end: {
            line: 83,
            column: 5
          }
        }],
        line: 72
      },
      "2": {
        loc: {
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 97,
            column: 5
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 92,
            column: 20
          }
        }, {
          start: {
            line: 92,
            column: 24
          },
          end: {
            line: 97,
            column: 5
          }
        }],
        line: 92
      },
      "3": {
        loc: {
          start: {
            line: 110,
            column: 26
          },
          end: {
            line: 119,
            column: 8
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 110,
            column: 45
          },
          end: {
            line: 119,
            column: 1
          }
        }, {
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 119,
            column: 8
          }
        }],
        line: 110
      },
      "4": {
        loc: {
          start: {
            line: 112,
            column: 10
          },
          end: {
            line: 112,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 112,
            column: 10
          },
          end: {
            line: 112,
            column: 26
          }
        }, {
          start: {
            line: 112,
            column: 30
          },
          end: {
            line: 112,
            column: 33
          }
        }],
        line: 112
      },
      "5": {
        loc: {
          start: {
            line: 134,
            column: 15
          },
          end: {
            line: 134,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 134,
            column: 15
          },
          end: {
            line: 134,
            column: 25
          }
        }, {
          start: {
            line: 134,
            column: 29
          },
          end: {
            line: 134,
            column: 40
          }
        }],
        line: 134
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\config\\env.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\config\\env.ts"],
      sourcesContent: ["import { z } from 'zod'\n\n// Environment variables schema\nconst envSchema = z.object({\n  // Server\n  NODE_ENV: z.enum(['development', 'production', 'test']).default('development'),\n  PORT: z.coerce.number().default(3001),\n  HOST: z.string().default('0.0.0.0'),\n  LOG_LEVEL: z.enum(['fatal', 'error', 'warn', 'info', 'debug', 'trace']).default('info'),\n  \n  // Database\n  DATABASE_URL: z.string().min(1, 'DATABASE_URL is required'),\n  \n  // Redis\n  REDIS_URL: z.string().default('redis://localhost:6379'),\n  \n  // JWT\n  JWT_SECRET: z.string().min(32, 'JWT_SECRET must be at least 32 characters'),\n  JWT_REFRESH_SECRET: z.string().min(32, 'JWT_REFRESH_SECRET must be at least 32 characters'),\n  JWT_ACCESS_EXPIRES_IN: z.string().default('15m'),\n  JWT_REFRESH_EXPIRES_IN: z.string().default('7d'),\n  \n  // Email\n  SMTP_HOST: z.string().optional(),\n  SMTP_PORT: z.coerce.number().optional(),\n  SMTP_USER: z.string().optional(),\n  SMTP_PASS: z.string().optional(),\n  SMTP_FROM: z.string().email().optional(),\n  \n  // External APIs\n  GOOGLE_ADS_CLIENT_ID: z.string().optional(),\n  GOOGLE_ADS_CLIENT_SECRET: z.string().optional(),\n  FACEBOOK_APP_ID: z.string().optional(),\n  FACEBOOK_APP_SECRET: z.string().optional(),\n  \n  // Rate Limiting\n  RATE_LIMIT_MAX: z.coerce.number().default(100),\n  RATE_LIMIT_WINDOW: z.coerce.number().default(60000), // 1 minute\n  \n  // CORS\n  CORS_ORIGIN: z.string().default('http://localhost:3000'),\n  \n  // File Upload\n  MAX_FILE_SIZE: z.coerce.number().default(5242880), // 5MB\n  UPLOAD_DIR: z.string().default('./uploads'),\n  \n  // Webhooks\n  WEBHOOK_SECRET: z.string().optional(),\n  \n  // Monitoring\n  SENTRY_DSN: z.string().optional(),\n  \n  // Feature Flags\n  ENABLE_SWAGGER: z.coerce.boolean().default(true),\n  ENABLE_METRICS: z.coerce.boolean().default(true),\n  ENABLE_RATE_LIMITING: z.coerce.boolean().default(true),\n})\n\n// Parse and validate environment variables\nconst parseEnv = () => {\n  try {\n    return envSchema.parse(process.env)\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      const missingVars = error.errors\n        .map(err => `${err.path.join('.')}: ${err.message}`)\n        .join('\\n')\n      \n      console.error('\u274C Invalid environment variables:')\n      console.error(missingVars)\n      process.exit(1)\n    }\n    throw error\n  }\n}\n\nexport const config = parseEnv()\n\n// Type for environment config\nexport type Config = typeof config\n\n// Helper to check if we're in development\nexport const isDevelopment = config.NODE_ENV === 'development'\nexport const isProduction = config.NODE_ENV === 'production'\nexport const isTest = config.NODE_ENV === 'test'\n\n// Database configuration\nexport const dbConfig = {\n  url: config.DATABASE_URL,\n  // Add connection pool settings for production\n  ...(isProduction && {\n    pool: {\n      min: 2,\n      max: 10,\n      acquireTimeoutMillis: 30000,\n      createTimeoutMillis: 30000,\n      destroyTimeoutMillis: 5000,\n      idleTimeoutMillis: 30000,\n      reapIntervalMillis: 1000,\n      createRetryIntervalMillis: 200,\n    },\n  }),\n}\n\n// Redis configuration\nexport const redisConfig = {\n  url: config.REDIS_URL,\n  retryDelayOnFailover: 100,\n  enableReadyCheck: false,\n  maxRetriesPerRequest: 3,\n  lazyConnect: true,\n  ...(isProduction && {\n    family: 4,\n    keepAlive: true,\n    connectTimeout: 10000,\n    commandTimeout: 5000,\n  }),\n}\n\n// JWT configuration\nexport const jwtConfig = {\n  secret: config.JWT_SECRET,\n  refreshSecret: config.JWT_REFRESH_SECRET,\n  accessExpiresIn: config.JWT_ACCESS_EXPIRES_IN,\n  refreshExpiresIn: config.JWT_REFRESH_EXPIRES_IN,\n  algorithm: 'HS256' as const,\n  issuer: 'utmify-api',\n  audience: 'utmify-app',\n}\n\n// SMTP configuration\nexport const smtpConfig = config.SMTP_HOST ? {\n  host: config.SMTP_HOST,\n  port: config.SMTP_PORT || 587,\n  secure: config.SMTP_PORT === 465,\n  auth: {\n    user: config.SMTP_USER!,\n    pass: config.SMTP_PASS!,\n  },\n  from: config.SMTP_FROM!,\n} : null\n\n// CORS configuration\nexport const corsConfig = {\n  origin: config.CORS_ORIGIN.split(',').map(origin => origin.trim()),\n  credentials: true,\n  methods: ['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS'],\n  allowedHeaders: ['Content-Type', 'Authorization', 'X-Requested-With'],\n}\n\n// Rate limiting configuration\nexport const rateLimitConfig = {\n  max: config.RATE_LIMIT_MAX,\n  timeWindow: config.RATE_LIMIT_WINDOW,\n  skipSuccessfulRequests: false,\n  skipOnError: true,\n  keyGenerator: (request: any) => {\n    return request.ip || 'anonymous'\n  },\n}\n\n// File upload configuration\nexport const uploadConfig = {\n  maxFileSize: config.MAX_FILE_SIZE,\n  uploadDir: config.UPLOAD_DIR,\n  allowedMimeTypes: [\n    'image/jpeg',\n    'image/png',\n    'image/webp',\n    'image/svg+xml',\n    'text/csv',\n    'application/json',\n  ],\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "738b4b9f04b20ab403d65e31a2017d1edeb69198"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1mfyrpqdbc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1mfyrpqdbc();
import { z } from 'zod';
// Environment variables schema
const envSchema =
/* istanbul ignore next */
(cov_1mfyrpqdbc().s[0]++, z.object({
  // Server
  NODE_ENV: z.enum(['development', 'production', 'test']).default('development'),
  PORT: z.coerce.number().default(3001),
  HOST: z.string().default('0.0.0.0'),
  LOG_LEVEL: z.enum(['fatal', 'error', 'warn', 'info', 'debug', 'trace']).default('info'),
  // Database
  DATABASE_URL: z.string().min(1, 'DATABASE_URL is required'),
  // Redis
  REDIS_URL: z.string().default('redis://localhost:6379'),
  // JWT
  JWT_SECRET: z.string().min(32, 'JWT_SECRET must be at least 32 characters'),
  JWT_REFRESH_SECRET: z.string().min(32, 'JWT_REFRESH_SECRET must be at least 32 characters'),
  JWT_ACCESS_EXPIRES_IN: z.string().default('15m'),
  JWT_REFRESH_EXPIRES_IN: z.string().default('7d'),
  // Email
  SMTP_HOST: z.string().optional(),
  SMTP_PORT: z.coerce.number().optional(),
  SMTP_USER: z.string().optional(),
  SMTP_PASS: z.string().optional(),
  SMTP_FROM: z.string().email().optional(),
  // External APIs
  GOOGLE_ADS_CLIENT_ID: z.string().optional(),
  GOOGLE_ADS_CLIENT_SECRET: z.string().optional(),
  FACEBOOK_APP_ID: z.string().optional(),
  FACEBOOK_APP_SECRET: z.string().optional(),
  // Rate Limiting
  RATE_LIMIT_MAX: z.coerce.number().default(100),
  RATE_LIMIT_WINDOW: z.coerce.number().default(60000),
  // 1 minute
  // CORS
  CORS_ORIGIN: z.string().default('http://localhost:3000'),
  // File Upload
  MAX_FILE_SIZE: z.coerce.number().default(5242880),
  // 5MB
  UPLOAD_DIR: z.string().default('./uploads'),
  // Webhooks
  WEBHOOK_SECRET: z.string().optional(),
  // Monitoring
  SENTRY_DSN: z.string().optional(),
  // Feature Flags
  ENABLE_SWAGGER: z.coerce.boolean().default(true),
  ENABLE_METRICS: z.coerce.boolean().default(true),
  ENABLE_RATE_LIMITING: z.coerce.boolean().default(true)
}));
// Parse and validate environment variables
/* istanbul ignore next */
cov_1mfyrpqdbc().s[1]++;
const parseEnv = () => {
  /* istanbul ignore next */
  cov_1mfyrpqdbc().f[0]++;
  cov_1mfyrpqdbc().s[2]++;
  try {
    /* istanbul ignore next */
    cov_1mfyrpqdbc().s[3]++;
    return envSchema.parse(process.env);
  } catch (error) {
    /* istanbul ignore next */
    cov_1mfyrpqdbc().s[4]++;
    if (error instanceof z.ZodError) {
      /* istanbul ignore next */
      cov_1mfyrpqdbc().b[0][0]++;
      const missingVars =
      /* istanbul ignore next */
      (cov_1mfyrpqdbc().s[5]++, error.errors.map(err => {
        /* istanbul ignore next */
        cov_1mfyrpqdbc().f[1]++;
        cov_1mfyrpqdbc().s[6]++;
        return `${err.path.join('.')}: ${err.message}`;
      }).join('\n'));
      /* istanbul ignore next */
      cov_1mfyrpqdbc().s[7]++;
      console.error('❌ Invalid environment variables:');
      /* istanbul ignore next */
      cov_1mfyrpqdbc().s[8]++;
      console.error(missingVars);
      /* istanbul ignore next */
      cov_1mfyrpqdbc().s[9]++;
      process.exit(1);
    } else
    /* istanbul ignore next */
    {
      cov_1mfyrpqdbc().b[0][1]++;
    }
    cov_1mfyrpqdbc().s[10]++;
    throw error;
  }
};
export const config =
/* istanbul ignore next */
(cov_1mfyrpqdbc().s[11]++, parseEnv());
// Helper to check if we're in development
export const isDevelopment =
/* istanbul ignore next */
(cov_1mfyrpqdbc().s[12]++, config.NODE_ENV === 'development');
export const isProduction =
/* istanbul ignore next */
(cov_1mfyrpqdbc().s[13]++, config.NODE_ENV === 'production');
export const isTest =
/* istanbul ignore next */
(cov_1mfyrpqdbc().s[14]++, config.NODE_ENV === 'test');
// Database configuration
export const dbConfig =
/* istanbul ignore next */
(cov_1mfyrpqdbc().s[15]++, {
  url: config.DATABASE_URL,
  // Add connection pool settings for production
  ...(
  /* istanbul ignore next */
  (cov_1mfyrpqdbc().b[1][0]++, isProduction) &&
  /* istanbul ignore next */
  (cov_1mfyrpqdbc().b[1][1]++, {
    pool: {
      min: 2,
      max: 10,
      acquireTimeoutMillis: 30000,
      createTimeoutMillis: 30000,
      destroyTimeoutMillis: 5000,
      idleTimeoutMillis: 30000,
      reapIntervalMillis: 1000,
      createRetryIntervalMillis: 200
    }
  }))
});
// Redis configuration
export const redisConfig =
/* istanbul ignore next */
(cov_1mfyrpqdbc().s[16]++, {
  url: config.REDIS_URL,
  retryDelayOnFailover: 100,
  enableReadyCheck: false,
  maxRetriesPerRequest: 3,
  lazyConnect: true,
  ...(
  /* istanbul ignore next */
  (cov_1mfyrpqdbc().b[2][0]++, isProduction) &&
  /* istanbul ignore next */
  (cov_1mfyrpqdbc().b[2][1]++, {
    family: 4,
    keepAlive: true,
    connectTimeout: 10000,
    commandTimeout: 5000
  }))
});
// JWT configuration
export const jwtConfig =
/* istanbul ignore next */
(cov_1mfyrpqdbc().s[17]++, {
  secret: config.JWT_SECRET,
  refreshSecret: config.JWT_REFRESH_SECRET,
  accessExpiresIn: config.JWT_ACCESS_EXPIRES_IN,
  refreshExpiresIn: config.JWT_REFRESH_EXPIRES_IN,
  algorithm: 'HS256',
  issuer: 'utmify-api',
  audience: 'utmify-app'
});
// SMTP configuration
export const smtpConfig =
/* istanbul ignore next */
(cov_1mfyrpqdbc().s[18]++, config.SMTP_HOST ?
/* istanbul ignore next */
(cov_1mfyrpqdbc().b[3][0]++, {
  host: config.SMTP_HOST,
  port:
  /* istanbul ignore next */
  (cov_1mfyrpqdbc().b[4][0]++, config.SMTP_PORT) ||
  /* istanbul ignore next */
  (cov_1mfyrpqdbc().b[4][1]++, 587),
  secure: config.SMTP_PORT === 465,
  auth: {
    user: config.SMTP_USER,
    pass: config.SMTP_PASS
  },
  from: config.SMTP_FROM
}) :
/* istanbul ignore next */
(cov_1mfyrpqdbc().b[3][1]++, null));
// CORS configuration
export const corsConfig =
/* istanbul ignore next */
(cov_1mfyrpqdbc().s[19]++, {
  origin: config.CORS_ORIGIN.split(',').map(origin => {
    /* istanbul ignore next */
    cov_1mfyrpqdbc().f[2]++;
    cov_1mfyrpqdbc().s[20]++;
    return origin.trim();
  }),
  credentials: true,
  methods: ['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS'],
  allowedHeaders: ['Content-Type', 'Authorization', 'X-Requested-With']
});
// Rate limiting configuration
export const rateLimitConfig =
/* istanbul ignore next */
(cov_1mfyrpqdbc().s[21]++, {
  max: config.RATE_LIMIT_MAX,
  timeWindow: config.RATE_LIMIT_WINDOW,
  skipSuccessfulRequests: false,
  skipOnError: true,
  keyGenerator: request => {
    /* istanbul ignore next */
    cov_1mfyrpqdbc().f[3]++;
    cov_1mfyrpqdbc().s[22]++;
    return /* istanbul ignore next */(cov_1mfyrpqdbc().b[5][0]++, request.ip) ||
    /* istanbul ignore next */
    (cov_1mfyrpqdbc().b[5][1]++, 'anonymous');
  }
});
// File upload configuration
export const uploadConfig =
/* istanbul ignore next */
(cov_1mfyrpqdbc().s[23]++, {
  maxFileSize: config.MAX_FILE_SIZE,
  uploadDir: config.UPLOAD_DIR,
  allowedMimeTypes: ['image/jpeg', 'image/png', 'image/webp', 'image/svg+xml', 'text/csv', 'application/json']
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMW1meXJwcWRiYyIsImFjdHVhbENvdmVyYWdlIiwieiIsImVudlNjaGVtYSIsInMiLCJvYmplY3QiLCJOT0RFX0VOViIsImVudW0iLCJkZWZhdWx0IiwiUE9SVCIsImNvZXJjZSIsIm51bWJlciIsIkhPU1QiLCJzdHJpbmciLCJMT0dfTEVWRUwiLCJEQVRBQkFTRV9VUkwiLCJtaW4iLCJSRURJU19VUkwiLCJKV1RfU0VDUkVUIiwiSldUX1JFRlJFU0hfU0VDUkVUIiwiSldUX0FDQ0VTU19FWFBJUkVTX0lOIiwiSldUX1JFRlJFU0hfRVhQSVJFU19JTiIsIlNNVFBfSE9TVCIsIm9wdGlvbmFsIiwiU01UUF9QT1JUIiwiU01UUF9VU0VSIiwiU01UUF9QQVNTIiwiU01UUF9GUk9NIiwiZW1haWwiLCJHT09HTEVfQURTX0NMSUVOVF9JRCIsIkdPT0dMRV9BRFNfQ0xJRU5UX1NFQ1JFVCIsIkZBQ0VCT09LX0FQUF9JRCIsIkZBQ0VCT09LX0FQUF9TRUNSRVQiLCJSQVRFX0xJTUlUX01BWCIsIlJBVEVfTElNSVRfV0lORE9XIiwiQ09SU19PUklHSU4iLCJNQVhfRklMRV9TSVpFIiwiVVBMT0FEX0RJUiIsIldFQkhPT0tfU0VDUkVUIiwiU0VOVFJZX0RTTiIsIkVOQUJMRV9TV0FHR0VSIiwiYm9vbGVhbiIsIkVOQUJMRV9NRVRSSUNTIiwiRU5BQkxFX1JBVEVfTElNSVRJTkciLCJwYXJzZUVudiIsImYiLCJwYXJzZSIsInByb2Nlc3MiLCJlbnYiLCJlcnJvciIsIlpvZEVycm9yIiwiYiIsIm1pc3NpbmdWYXJzIiwiZXJyb3JzIiwibWFwIiwiZXJyIiwicGF0aCIsImpvaW4iLCJtZXNzYWdlIiwiY29uc29sZSIsImV4aXQiLCJjb25maWciLCJpc0RldmVsb3BtZW50IiwiaXNQcm9kdWN0aW9uIiwiaXNUZXN0IiwiZGJDb25maWciLCJ1cmwiLCJwb29sIiwibWF4IiwiYWNxdWlyZVRpbWVvdXRNaWxsaXMiLCJjcmVhdGVUaW1lb3V0TWlsbGlzIiwiZGVzdHJveVRpbWVvdXRNaWxsaXMiLCJpZGxlVGltZW91dE1pbGxpcyIsInJlYXBJbnRlcnZhbE1pbGxpcyIsImNyZWF0ZVJldHJ5SW50ZXJ2YWxNaWxsaXMiLCJyZWRpc0NvbmZpZyIsInJldHJ5RGVsYXlPbkZhaWxvdmVyIiwiZW5hYmxlUmVhZHlDaGVjayIsIm1heFJldHJpZXNQZXJSZXF1ZXN0IiwibGF6eUNvbm5lY3QiLCJmYW1pbHkiLCJrZWVwQWxpdmUiLCJjb25uZWN0VGltZW91dCIsImNvbW1hbmRUaW1lb3V0Iiwiand0Q29uZmlnIiwic2VjcmV0IiwicmVmcmVzaFNlY3JldCIsImFjY2Vzc0V4cGlyZXNJbiIsInJlZnJlc2hFeHBpcmVzSW4iLCJhbGdvcml0aG0iLCJpc3N1ZXIiLCJhdWRpZW5jZSIsInNtdHBDb25maWciLCJob3N0IiwicG9ydCIsInNlY3VyZSIsImF1dGgiLCJ1c2VyIiwicGFzcyIsImZyb20iLCJjb3JzQ29uZmlnIiwib3JpZ2luIiwic3BsaXQiLCJ0cmltIiwiY3JlZGVudGlhbHMiLCJtZXRob2RzIiwiYWxsb3dlZEhlYWRlcnMiLCJyYXRlTGltaXRDb25maWciLCJ0aW1lV2luZG93Iiwic2tpcFN1Y2Nlc3NmdWxSZXF1ZXN0cyIsInNraXBPbkVycm9yIiwia2V5R2VuZXJhdG9yIiwicmVxdWVzdCIsImlwIiwidXBsb2FkQ29uZmlnIiwibWF4RmlsZVNpemUiLCJ1cGxvYWREaXIiLCJhbGxvd2VkTWltZVR5cGVzIl0sInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxFbnpvIE1hcmNlbG9cXERlc2t0b3BcXFByb2pldG9zIEVtcHJlc2FcXFNhYXMgVXRtaWZ5XFx1dG1pZnktY2xvbmVcXGFwcHNcXGFwaVxcc3JjXFxjb25maWdcXGVudi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB6IH0gZnJvbSAnem9kJ1xuXG4vLyBFbnZpcm9ubWVudCB2YXJpYWJsZXMgc2NoZW1hXG5jb25zdCBlbnZTY2hlbWEgPSB6Lm9iamVjdCh7XG4gIC8vIFNlcnZlclxuICBOT0RFX0VOVjogei5lbnVtKFsnZGV2ZWxvcG1lbnQnLCAncHJvZHVjdGlvbicsICd0ZXN0J10pLmRlZmF1bHQoJ2RldmVsb3BtZW50JyksXG4gIFBPUlQ6IHouY29lcmNlLm51bWJlcigpLmRlZmF1bHQoMzAwMSksXG4gIEhPU1Q6IHouc3RyaW5nKCkuZGVmYXVsdCgnMC4wLjAuMCcpLFxuICBMT0dfTEVWRUw6IHouZW51bShbJ2ZhdGFsJywgJ2Vycm9yJywgJ3dhcm4nLCAnaW5mbycsICdkZWJ1ZycsICd0cmFjZSddKS5kZWZhdWx0KCdpbmZvJyksXG4gIFxuICAvLyBEYXRhYmFzZVxuICBEQVRBQkFTRV9VUkw6IHouc3RyaW5nKCkubWluKDEsICdEQVRBQkFTRV9VUkwgaXMgcmVxdWlyZWQnKSxcbiAgXG4gIC8vIFJlZGlzXG4gIFJFRElTX1VSTDogei5zdHJpbmcoKS5kZWZhdWx0KCdyZWRpczovL2xvY2FsaG9zdDo2Mzc5JyksXG4gIFxuICAvLyBKV1RcbiAgSldUX1NFQ1JFVDogei5zdHJpbmcoKS5taW4oMzIsICdKV1RfU0VDUkVUIG11c3QgYmUgYXQgbGVhc3QgMzIgY2hhcmFjdGVycycpLFxuICBKV1RfUkVGUkVTSF9TRUNSRVQ6IHouc3RyaW5nKCkubWluKDMyLCAnSldUX1JFRlJFU0hfU0VDUkVUIG11c3QgYmUgYXQgbGVhc3QgMzIgY2hhcmFjdGVycycpLFxuICBKV1RfQUNDRVNTX0VYUElSRVNfSU46IHouc3RyaW5nKCkuZGVmYXVsdCgnMTVtJyksXG4gIEpXVF9SRUZSRVNIX0VYUElSRVNfSU46IHouc3RyaW5nKCkuZGVmYXVsdCgnN2QnKSxcbiAgXG4gIC8vIEVtYWlsXG4gIFNNVFBfSE9TVDogei5zdHJpbmcoKS5vcHRpb25hbCgpLFxuICBTTVRQX1BPUlQ6IHouY29lcmNlLm51bWJlcigpLm9wdGlvbmFsKCksXG4gIFNNVFBfVVNFUjogei5zdHJpbmcoKS5vcHRpb25hbCgpLFxuICBTTVRQX1BBU1M6IHouc3RyaW5nKCkub3B0aW9uYWwoKSxcbiAgU01UUF9GUk9NOiB6LnN0cmluZygpLmVtYWlsKCkub3B0aW9uYWwoKSxcbiAgXG4gIC8vIEV4dGVybmFsIEFQSXNcbiAgR09PR0xFX0FEU19DTElFTlRfSUQ6IHouc3RyaW5nKCkub3B0aW9uYWwoKSxcbiAgR09PR0xFX0FEU19DTElFTlRfU0VDUkVUOiB6LnN0cmluZygpLm9wdGlvbmFsKCksXG4gIEZBQ0VCT09LX0FQUF9JRDogei5zdHJpbmcoKS5vcHRpb25hbCgpLFxuICBGQUNFQk9PS19BUFBfU0VDUkVUOiB6LnN0cmluZygpLm9wdGlvbmFsKCksXG4gIFxuICAvLyBSYXRlIExpbWl0aW5nXG4gIFJBVEVfTElNSVRfTUFYOiB6LmNvZXJjZS5udW1iZXIoKS5kZWZhdWx0KDEwMCksXG4gIFJBVEVfTElNSVRfV0lORE9XOiB6LmNvZXJjZS5udW1iZXIoKS5kZWZhdWx0KDYwMDAwKSwgLy8gMSBtaW51dGVcbiAgXG4gIC8vIENPUlNcbiAgQ09SU19PUklHSU46IHouc3RyaW5nKCkuZGVmYXVsdCgnaHR0cDovL2xvY2FsaG9zdDozMDAwJyksXG4gIFxuICAvLyBGaWxlIFVwbG9hZFxuICBNQVhfRklMRV9TSVpFOiB6LmNvZXJjZS5udW1iZXIoKS5kZWZhdWx0KDUyNDI4ODApLCAvLyA1TUJcbiAgVVBMT0FEX0RJUjogei5zdHJpbmcoKS5kZWZhdWx0KCcuL3VwbG9hZHMnKSxcbiAgXG4gIC8vIFdlYmhvb2tzXG4gIFdFQkhPT0tfU0VDUkVUOiB6LnN0cmluZygpLm9wdGlvbmFsKCksXG4gIFxuICAvLyBNb25pdG9yaW5nXG4gIFNFTlRSWV9EU046IHouc3RyaW5nKCkub3B0aW9uYWwoKSxcbiAgXG4gIC8vIEZlYXR1cmUgRmxhZ3NcbiAgRU5BQkxFX1NXQUdHRVI6IHouY29lcmNlLmJvb2xlYW4oKS5kZWZhdWx0KHRydWUpLFxuICBFTkFCTEVfTUVUUklDUzogei5jb2VyY2UuYm9vbGVhbigpLmRlZmF1bHQodHJ1ZSksXG4gIEVOQUJMRV9SQVRFX0xJTUlUSU5HOiB6LmNvZXJjZS5ib29sZWFuKCkuZGVmYXVsdCh0cnVlKSxcbn0pXG5cbi8vIFBhcnNlIGFuZCB2YWxpZGF0ZSBlbnZpcm9ubWVudCB2YXJpYWJsZXNcbmNvbnN0IHBhcnNlRW52ID0gKCkgPT4ge1xuICB0cnkge1xuICAgIHJldHVybiBlbnZTY2hlbWEucGFyc2UocHJvY2Vzcy5lbnYpXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgaWYgKGVycm9yIGluc3RhbmNlb2Ygei5ab2RFcnJvcikge1xuICAgICAgY29uc3QgbWlzc2luZ1ZhcnMgPSBlcnJvci5lcnJvcnNcbiAgICAgICAgLm1hcChlcnIgPT4gYCR7ZXJyLnBhdGguam9pbignLicpfTogJHtlcnIubWVzc2FnZX1gKVxuICAgICAgICAuam9pbignXFxuJylcbiAgICAgIFxuICAgICAgY29uc29sZS5lcnJvcign4p2MIEludmFsaWQgZW52aXJvbm1lbnQgdmFyaWFibGVzOicpXG4gICAgICBjb25zb2xlLmVycm9yKG1pc3NpbmdWYXJzKVxuICAgICAgcHJvY2Vzcy5leGl0KDEpXG4gICAgfVxuICAgIHRocm93IGVycm9yXG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IHBhcnNlRW52KClcblxuLy8gVHlwZSBmb3IgZW52aXJvbm1lbnQgY29uZmlnXG5leHBvcnQgdHlwZSBDb25maWcgPSB0eXBlb2YgY29uZmlnXG5cbi8vIEhlbHBlciB0byBjaGVjayBpZiB3ZSdyZSBpbiBkZXZlbG9wbWVudFxuZXhwb3J0IGNvbnN0IGlzRGV2ZWxvcG1lbnQgPSBjb25maWcuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCdcbmV4cG9ydCBjb25zdCBpc1Byb2R1Y3Rpb24gPSBjb25maWcuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJ1xuZXhwb3J0IGNvbnN0IGlzVGVzdCA9IGNvbmZpZy5OT0RFX0VOViA9PT0gJ3Rlc3QnXG5cbi8vIERhdGFiYXNlIGNvbmZpZ3VyYXRpb25cbmV4cG9ydCBjb25zdCBkYkNvbmZpZyA9IHtcbiAgdXJsOiBjb25maWcuREFUQUJBU0VfVVJMLFxuICAvLyBBZGQgY29ubmVjdGlvbiBwb29sIHNldHRpbmdzIGZvciBwcm9kdWN0aW9uXG4gIC4uLihpc1Byb2R1Y3Rpb24gJiYge1xuICAgIHBvb2w6IHtcbiAgICAgIG1pbjogMixcbiAgICAgIG1heDogMTAsXG4gICAgICBhY3F1aXJlVGltZW91dE1pbGxpczogMzAwMDAsXG4gICAgICBjcmVhdGVUaW1lb3V0TWlsbGlzOiAzMDAwMCxcbiAgICAgIGRlc3Ryb3lUaW1lb3V0TWlsbGlzOiA1MDAwLFxuICAgICAgaWRsZVRpbWVvdXRNaWxsaXM6IDMwMDAwLFxuICAgICAgcmVhcEludGVydmFsTWlsbGlzOiAxMDAwLFxuICAgICAgY3JlYXRlUmV0cnlJbnRlcnZhbE1pbGxpczogMjAwLFxuICAgIH0sXG4gIH0pLFxufVxuXG4vLyBSZWRpcyBjb25maWd1cmF0aW9uXG5leHBvcnQgY29uc3QgcmVkaXNDb25maWcgPSB7XG4gIHVybDogY29uZmlnLlJFRElTX1VSTCxcbiAgcmV0cnlEZWxheU9uRmFpbG92ZXI6IDEwMCxcbiAgZW5hYmxlUmVhZHlDaGVjazogZmFsc2UsXG4gIG1heFJldHJpZXNQZXJSZXF1ZXN0OiAzLFxuICBsYXp5Q29ubmVjdDogdHJ1ZSxcbiAgLi4uKGlzUHJvZHVjdGlvbiAmJiB7XG4gICAgZmFtaWx5OiA0LFxuICAgIGtlZXBBbGl2ZTogdHJ1ZSxcbiAgICBjb25uZWN0VGltZW91dDogMTAwMDAsXG4gICAgY29tbWFuZFRpbWVvdXQ6IDUwMDAsXG4gIH0pLFxufVxuXG4vLyBKV1QgY29uZmlndXJhdGlvblxuZXhwb3J0IGNvbnN0IGp3dENvbmZpZyA9IHtcbiAgc2VjcmV0OiBjb25maWcuSldUX1NFQ1JFVCxcbiAgcmVmcmVzaFNlY3JldDogY29uZmlnLkpXVF9SRUZSRVNIX1NFQ1JFVCxcbiAgYWNjZXNzRXhwaXJlc0luOiBjb25maWcuSldUX0FDQ0VTU19FWFBJUkVTX0lOLFxuICByZWZyZXNoRXhwaXJlc0luOiBjb25maWcuSldUX1JFRlJFU0hfRVhQSVJFU19JTixcbiAgYWxnb3JpdGhtOiAnSFMyNTYnIGFzIGNvbnN0LFxuICBpc3N1ZXI6ICd1dG1pZnktYXBpJyxcbiAgYXVkaWVuY2U6ICd1dG1pZnktYXBwJyxcbn1cblxuLy8gU01UUCBjb25maWd1cmF0aW9uXG5leHBvcnQgY29uc3Qgc210cENvbmZpZyA9IGNvbmZpZy5TTVRQX0hPU1QgPyB7XG4gIGhvc3Q6IGNvbmZpZy5TTVRQX0hPU1QsXG4gIHBvcnQ6IGNvbmZpZy5TTVRQX1BPUlQgfHwgNTg3LFxuICBzZWN1cmU6IGNvbmZpZy5TTVRQX1BPUlQgPT09IDQ2NSxcbiAgYXV0aDoge1xuICAgIHVzZXI6IGNvbmZpZy5TTVRQX1VTRVIhLFxuICAgIHBhc3M6IGNvbmZpZy5TTVRQX1BBU1MhLFxuICB9LFxuICBmcm9tOiBjb25maWcuU01UUF9GUk9NISxcbn0gOiBudWxsXG5cbi8vIENPUlMgY29uZmlndXJhdGlvblxuZXhwb3J0IGNvbnN0IGNvcnNDb25maWcgPSB7XG4gIG9yaWdpbjogY29uZmlnLkNPUlNfT1JJR0lOLnNwbGl0KCcsJykubWFwKG9yaWdpbiA9PiBvcmlnaW4udHJpbSgpKSxcbiAgY3JlZGVudGlhbHM6IHRydWUsXG4gIG1ldGhvZHM6IFsnR0VUJywgJ1BPU1QnLCAnUFVUJywgJ0RFTEVURScsICdQQVRDSCcsICdPUFRJT05TJ10sXG4gIGFsbG93ZWRIZWFkZXJzOiBbJ0NvbnRlbnQtVHlwZScsICdBdXRob3JpemF0aW9uJywgJ1gtUmVxdWVzdGVkLVdpdGgnXSxcbn1cblxuLy8gUmF0ZSBsaW1pdGluZyBjb25maWd1cmF0aW9uXG5leHBvcnQgY29uc3QgcmF0ZUxpbWl0Q29uZmlnID0ge1xuICBtYXg6IGNvbmZpZy5SQVRFX0xJTUlUX01BWCxcbiAgdGltZVdpbmRvdzogY29uZmlnLlJBVEVfTElNSVRfV0lORE9XLFxuICBza2lwU3VjY2Vzc2Z1bFJlcXVlc3RzOiBmYWxzZSxcbiAgc2tpcE9uRXJyb3I6IHRydWUsXG4gIGtleUdlbmVyYXRvcjogKHJlcXVlc3Q6IGFueSkgPT4ge1xuICAgIHJldHVybiByZXF1ZXN0LmlwIHx8ICdhbm9ueW1vdXMnXG4gIH0sXG59XG5cbi8vIEZpbGUgdXBsb2FkIGNvbmZpZ3VyYXRpb25cbmV4cG9ydCBjb25zdCB1cGxvYWRDb25maWcgPSB7XG4gIG1heEZpbGVTaXplOiBjb25maWcuTUFYX0ZJTEVfU0laRSxcbiAgdXBsb2FkRGlyOiBjb25maWcuVVBMT0FEX0RJUixcbiAgYWxsb3dlZE1pbWVUeXBlczogW1xuICAgICdpbWFnZS9qcGVnJyxcbiAgICAnaW1hZ2UvcG5nJyxcbiAgICAnaW1hZ2Uvd2VicCcsXG4gICAgJ2ltYWdlL3N2Zyt4bWwnLFxuICAgICd0ZXh0L2NzdicsXG4gICAgJ2FwcGxpY2F0aW9uL2pzb24nLFxuICBdLFxufSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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