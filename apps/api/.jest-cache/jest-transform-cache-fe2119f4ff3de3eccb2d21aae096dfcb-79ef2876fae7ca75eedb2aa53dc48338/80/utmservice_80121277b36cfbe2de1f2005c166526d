2456bfe069a3a746217ebb569436468f
/* istanbul ignore next */
function cov_1e4lm2ja96() {
  var path = "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\services\\utm.service.ts";
  var hash = "cbbc98b2e300ccab66671035fba3bba84c4946bf";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\services\\utm.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 11,
          column: 34
        }
      },
      "1": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 35
        }
      },
      "2": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 35
        }
      },
      "3": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 39
        }
      },
      "4": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 18,
          column: 54
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 49
        }
      },
      "6": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 41
        }
      },
      "7": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 45
        }
      },
      "8": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 57
        }
      },
      "9": {
        start: {
          line: 20,
          column: 0
        },
        end: {
          line: 24,
          column: 48
        }
      },
      "10": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 52
        }
      },
      "11": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 50
        }
      },
      "12": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 42
        }
      },
      "13": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 42
        }
      },
      "14": {
        start: {
          line: 34,
          column: 26
        },
        end: {
          line: 34,
          column: 35
        }
      },
      "15": {
        start: {
          line: 35,
          column: 24
        },
        end: {
          line: 35,
          column: 71
        }
      },
      "16": {
        start: {
          line: 36,
          column: 25
        },
        end: {
          line: 36,
          column: 52
        }
      },
      "17": {
        start: {
          line: 38,
          column: 20
        },
        end: {
          line: 38,
          column: 45
        }
      },
      "18": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 40,
          column: 63
        }
      },
      "19": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 63
        }
      },
      "20": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 42,
          column: 63
        }
      },
      "21": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 63
        }
      },
      "22": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 44,
          column: 67
        }
      },
      "23": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 67
        }
      },
      "24": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 46,
          column: 59
        }
      },
      "25": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 46,
          column: 59
        }
      },
      "26": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 48,
          column: 65
        }
      },
      "27": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 65
        }
      },
      "28": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 54,
          column: 9
        }
      },
      "29": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 53,
          column: 15
        }
      },
      "30": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 49
        }
      },
      "31": {
        start: {
          line: 55,
          column: 25
        },
        end: {
          line: 55,
          column: 39
        }
      },
      "32": {
        start: {
          line: 57,
          column: 30
        },
        end: {
          line: 64,
          column: 10
        }
      },
      "33": {
        start: {
          line: 65,
          column: 24
        },
        end: {
          line: 84,
          column: 10
        }
      },
      "34": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 23
        }
      },
      "35": {
        start: {
          line: 91,
          column: 22
        },
        end: {
          line: 93,
          column: 9
        }
      },
      "36": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 102,
          column: 9
        }
      },
      "37": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 101,
          column: 14
        }
      },
      "38": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "39": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 40
        }
      },
      "40": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 108,
          column: 9
        }
      },
      "41": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 46
        }
      },
      "42": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 111,
          column: 9
        }
      },
      "43": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 46
        }
      },
      "44": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 114,
          column: 9
        }
      },
      "45": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 50
        }
      },
      "46": {
        start: {
          line: 115,
          column: 31
        },
        end: {
          line: 133,
          column: 10
        }
      },
      "47": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 32
        }
      },
      "48": {
        start: {
          line: 140,
          column: 24
        },
        end: {
          line: 145,
          column: 10
        }
      },
      "49": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 148,
          column: 9
        }
      },
      "50": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 147,
          column: 24
        }
      },
      "51": {
        start: {
          line: 150,
          column: 20
        },
        end: {
          line: 150,
          column: 30
        }
      },
      "52": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 167,
          column: 9
        }
      },
      "53": {
        start: {
          line: 154,
          column: 16
        },
        end: {
          line: 154,
          column: 74
        }
      },
      "54": {
        start: {
          line: 155,
          column: 16
        },
        end: {
          line: 155,
          column: 22
        }
      },
      "55": {
        start: {
          line: 157,
          column: 16
        },
        end: {
          line: 157,
          column: 78
        }
      },
      "56": {
        start: {
          line: 158,
          column: 16
        },
        end: {
          line: 158,
          column: 22
        }
      },
      "57": {
        start: {
          line: 160,
          column: 16
        },
        end: {
          line: 160,
          column: 79
        }
      },
      "58": {
        start: {
          line: 161,
          column: 16
        },
        end: {
          line: 161,
          column: 22
        }
      },
      "59": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 163,
          column: 79
        }
      },
      "60": {
        start: {
          line: 164,
          column: 16
        },
        end: {
          line: 164,
          column: 22
        }
      },
      "61": {
        start: {
          line: 166,
          column: 16
        },
        end: {
          line: 166,
          column: 40
        }
      },
      "62": {
        start: {
          line: 168,
          column: 28
        },
        end: {
          line: 173,
          column: 9
        }
      },
      "63": {
        start: {
          line: 175,
          column: 90
        },
        end: {
          line: 207,
          column: 10
        }
      },
      "64": {
        start: {
          line: 209,
          column: 31
        },
        end: {
          line: 209,
          column: 93
        }
      },
      "65": {
        start: {
          line: 211,
          column: 31
        },
        end: {
          line: 211,
          column: 86
        }
      },
      "66": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 223,
          column: 10
        }
      },
      "67": {
        start: {
          line: 229,
          column: 24
        },
        end: {
          line: 229,
          column: 39
        }
      },
      "68": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 241,
          column: 9
        }
      },
      "69": {
        start: {
          line: 232,
          column: 29
        },
        end: {
          line: 234,
          column: 14
        }
      },
      "70": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 237,
          column: 13
        }
      },
      "71": {
        start: {
          line: 236,
          column: 16
        },
        end: {
          line: 236,
          column: 54
        }
      },
      "72": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 240,
          column: 34
        }
      },
      "73": {
        start: {
          line: 242,
          column: 24
        },
        end: {
          line: 242,
          column: 71
        }
      },
      "74": {
        start: {
          line: 243,
          column: 25
        },
        end: {
          line: 243,
          column: 52
        }
      },
      "75": {
        start: {
          line: 244,
          column: 24
        },
        end: {
          line: 251,
          column: 10
        }
      },
      "76": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 252,
          column: 23
        }
      },
      "77": {
        start: {
          line: 258,
          column: 24
        },
        end: {
          line: 260,
          column: 10
        }
      },
      "78": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 263,
          column: 9
        }
      },
      "79": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 262,
          column: 24
        }
      },
      "80": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 267,
          column: 9
        }
      },
      "81": {
        start: {
          line: 266,
          column: 12
        },
        end: {
          line: 266,
          column: 24
        }
      },
      "82": {
        start: {
          line: 269,
          column: 23
        },
        end: {
          line: 269,
          column: 59
        }
      },
      "83": {
        start: {
          line: 270,
          column: 23
        },
        end: {
          line: 270,
          column: 41
        }
      },
      "84": {
        start: {
          line: 272,
          column: 20
        },
        end: {
          line: 272,
          column: 88
        }
      },
      "85": {
        start: {
          line: 274,
          column: 26
        },
        end: {
          line: 274,
          column: 96
        }
      },
      "86": {
        start: {
          line: 275,
          column: 30
        },
        end: {
          line: 280,
          column: 10
        }
      },
      "87": {
        start: {
          line: 281,
          column: 25
        },
        end: {
          line: 281,
          column: 39
        }
      },
      "88": {
        start: {
          line: 283,
          column: 8
        },
        end: {
          line: 303,
          column: 11
        }
      },
      "89": {
        start: {
          line: 305,
          column: 8
        },
        end: {
          line: 317,
          column: 11
        }
      },
      "90": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 320,
          column: 10
        }
      },
      "91": {
        start: {
          line: 326,
          column: 24
        },
        end: {
          line: 329,
          column: 9
        }
      },
      "92": {
        start: {
          line: 330,
          column: 8
        },
        end: {
          line: 345,
          column: 9
        }
      },
      "93": {
        start: {
          line: 331,
          column: 12
        },
        end: {
          line: 344,
          column: 13
        }
      },
      "94": {
        start: {
          line: 332,
          column: 32
        },
        end: {
          line: 336,
          column: 18
        }
      },
      "95": {
        start: {
          line: 337,
          column: 16
        },
        end: {
          line: 337,
          column: 46
        }
      },
      "96": {
        start: {
          line: 340,
          column: 16
        },
        end: {
          line: 343,
          column: 19
        }
      },
      "97": {
        start: {
          line: 346,
          column: 8
        },
        end: {
          line: 346,
          column: 23
        }
      },
      "98": {
        start: {
          line: 352,
          column: 24
        },
        end: {
          line: 357,
          column: 10
        }
      },
      "99": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 360,
          column: 9
        }
      },
      "100": {
        start: {
          line: 359,
          column: 12
        },
        end: {
          line: 359,
          column: 24
        }
      },
      "101": {
        start: {
          line: 361,
          column: 8
        },
        end: {
          line: 367,
          column: 11
        }
      },
      "102": {
        start: {
          line: 373,
          column: 24
        },
        end: {
          line: 378,
          column: 10
        }
      },
      "103": {
        start: {
          line: 379,
          column: 8
        },
        end: {
          line: 381,
          column: 9
        }
      },
      "104": {
        start: {
          line: 380,
          column: 12
        },
        end: {
          line: 380,
          column: 25
        }
      },
      "105": {
        start: {
          line: 382,
          column: 8
        },
        end: {
          line: 384,
          column: 11
        }
      },
      "106": {
        start: {
          line: 385,
          column: 8
        },
        end: {
          line: 385,
          column: 20
        }
      },
      "107": {
        start: {
          line: 391,
          column: 24
        },
        end: {
          line: 391,
          column: 38
        }
      },
      "108": {
        start: {
          line: 393,
          column: 8
        },
        end: {
          line: 398,
          column: 9
        }
      },
      "109": {
        start: {
          line: 394,
          column: 28
        },
        end: {
          line: 396,
          column: 14
        }
      },
      "110": {
        start: {
          line: 397,
          column: 12
        },
        end: {
          line: 397,
          column: 36
        }
      },
      "111": {
        start: {
          line: 399,
          column: 8
        },
        end: {
          line: 401,
          column: 9
        }
      },
      "112": {
        start: {
          line: 400,
          column: 12
        },
        end: {
          line: 400,
          column: 55
        }
      },
      "113": {
        start: {
          line: 402,
          column: 27
        },
        end: {
          line: 416,
          column: 10
        }
      },
      "114": {
        start: {
          line: 418,
          column: 8
        },
        end: {
          line: 430,
          column: 11
        }
      },
      "115": {
        start: {
          line: 431,
          column: 8
        },
        end: {
          line: 431,
          column: 26
        }
      },
      "116": {
        start: {
          line: 439,
          column: 23
        },
        end: {
          line: 452,
          column: 10
        }
      },
      "117": {
        start: {
          line: 454,
          column: 24
        },
        end: {
          line: 454,
          column: 26
        }
      },
      "118": {
        start: {
          line: 455,
          column: 8
        },
        end: {
          line: 477,
          column: 11
        }
      },
      "119": {
        start: {
          line: 457,
          column: 25
        },
        end: {
          line: 457,
          column: 50
        }
      },
      "120": {
        start: {
          line: 458,
          column: 12
        },
        end: {
          line: 475,
          column: 13
        }
      },
      "121": {
        start: {
          line: 460,
          column: 20
        },
        end: {
          line: 460,
          column: 188
        }
      },
      "122": {
        start: {
          line: 461,
          column: 20
        },
        end: {
          line: 461,
          column: 26
        }
      },
      "123": {
        start: {
          line: 463,
          column: 20
        },
        end: {
          line: 463,
          column: 141
        }
      },
      "124": {
        start: {
          line: 464,
          column: 20
        },
        end: {
          line: 464,
          column: 26
        }
      },
      "125": {
        start: {
          line: 466,
          column: 38
        },
        end: {
          line: 466,
          column: 52
        }
      },
      "126": {
        start: {
          line: 467,
          column: 20
        },
        end: {
          line: 467,
          column: 70
        }
      },
      "127": {
        start: {
          line: 468,
          column: 20
        },
        end: {
          line: 468,
          column: 94
        }
      },
      "128": {
        start: {
          line: 469,
          column: 20
        },
        end: {
          line: 469,
          column: 26
        }
      },
      "129": {
        start: {
          line: 471,
          column: 20
        },
        end: {
          line: 471,
          column: 98
        }
      },
      "130": {
        start: {
          line: 472,
          column: 20
        },
        end: {
          line: 472,
          column: 26
        }
      },
      "131": {
        start: {
          line: 474,
          column: 20
        },
        end: {
          line: 474,
          column: 59
        }
      },
      "132": {
        start: {
          line: 476,
          column: 12
        },
        end: {
          line: 476,
          column: 51
        }
      },
      "133": {
        start: {
          line: 478,
          column: 8
        },
        end: {
          line: 481,
          column: 12
        }
      },
      "134": {
        start: {
          line: 478,
          column: 63
        },
        end: {
          line: 481,
          column: 9
        }
      },
      "135": {
        start: {
          line: 489,
          column: 22
        },
        end: {
          line: 489,
          column: 32
        }
      },
      "136": {
        start: {
          line: 490,
          column: 8
        },
        end: {
          line: 506,
          column: 9
        }
      },
      "137": {
        start: {
          line: 492,
          column: 16
        },
        end: {
          line: 492,
          column: 75
        }
      },
      "138": {
        start: {
          line: 493,
          column: 16
        },
        end: {
          line: 493,
          column: 22
        }
      },
      "139": {
        start: {
          line: 495,
          column: 16
        },
        end: {
          line: 495,
          column: 76
        }
      },
      "140": {
        start: {
          line: 496,
          column: 16
        },
        end: {
          line: 496,
          column: 22
        }
      },
      "141": {
        start: {
          line: 498,
          column: 16
        },
        end: {
          line: 498,
          column: 76
        }
      },
      "142": {
        start: {
          line: 499,
          column: 16
        },
        end: {
          line: 499,
          column: 22
        }
      },
      "143": {
        start: {
          line: 501,
          column: 16
        },
        end: {
          line: 501,
          column: 126
        }
      },
      "144": {
        start: {
          line: 502,
          column: 16
        },
        end: {
          line: 502,
          column: 83
        }
      },
      "145": {
        start: {
          line: 503,
          column: 16
        },
        end: {
          line: 503,
          column: 22
        }
      },
      "146": {
        start: {
          line: 505,
          column: 16
        },
        end: {
          line: 505,
          column: 76
        }
      },
      "147": {
        start: {
          line: 508,
          column: 28
        },
        end: {
          line: 514,
          column: 9
        }
      },
      "148": {
        start: {
          line: 515,
          column: 8
        },
        end: {
          line: 516,
          column: 68
        }
      },
      "149": {
        start: {
          line: 516,
          column: 12
        },
        end: {
          line: 516,
          column: 68
        }
      },
      "150": {
        start: {
          line: 517,
          column: 8
        },
        end: {
          line: 518,
          column: 68
        }
      },
      "151": {
        start: {
          line: 518,
          column: 12
        },
        end: {
          line: 518,
          column: 68
        }
      },
      "152": {
        start: {
          line: 519,
          column: 8
        },
        end: {
          line: 520,
          column: 72
        }
      },
      "153": {
        start: {
          line: 520,
          column: 12
        },
        end: {
          line: 520,
          column: 72
        }
      },
      "154": {
        start: {
          line: 522,
          column: 25
        },
        end: {
          line: 545,
          column: 10
        }
      },
      "155": {
        start: {
          line: 547,
          column: 27
        },
        end: {
          line: 572,
          column: 10
        }
      },
      "156": {
        start: {
          line: 548,
          column: 29
        },
        end: {
          line: 562,
          column: 13
        }
      },
      "157": {
        start: {
          line: 563,
          column: 12
        },
        end: {
          line: 570,
          column: 13
        }
      },
      "158": {
        start: {
          line: 564,
          column: 16
        },
        end: {
          line: 569,
          column: 19
        }
      },
      "159": {
        start: {
          line: 571,
          column: 12
        },
        end: {
          line: 571,
          column: 28
        }
      },
      "160": {
        start: {
          line: 574,
          column: 26
        },
        end: {
          line: 574,
          column: 64
        }
      },
      "161": {
        start: {
          line: 575,
          column: 25
        },
        end: {
          line: 575,
          column: 68
        }
      },
      "162": {
        start: {
          line: 577,
          column: 8
        },
        end: {
          line: 617,
          column: 9
        }
      },
      "163": {
        start: {
          line: 579,
          column: 16
        },
        end: {
          line: 583,
          column: 18
        }
      },
      "164": {
        start: {
          line: 585,
          column: 16
        },
        end: {
          line: 607,
          column: 18
        }
      },
      "165": {
        start: {
          line: 600,
          column: 74
        },
        end: {
          line: 600,
          column: 102
        }
      },
      "166": {
        start: {
          line: 601,
          column: 79
        },
        end: {
          line: 601,
          column: 112
        }
      },
      "167": {
        start: {
          line: 602,
          column: 73
        },
        end: {
          line: 602,
          column: 106
        }
      },
      "168": {
        start: {
          line: 610,
          column: 16
        },
        end: {
          line: 614,
          column: 18
        }
      },
      "169": {
        start: {
          line: 616,
          column: 16
        },
        end: {
          line: 616,
          column: 67
        }
      },
      "170": {
        start: {
          line: 623,
          column: 8
        },
        end: {
          line: 625,
          column: 9
        }
      },
      "171": {
        start: {
          line: 624,
          column: 12
        },
        end: {
          line: 624,
          column: 44
        }
      },
      "172": {
        start: {
          line: 626,
          column: 24
        },
        end: {
          line: 626,
          column: 44
        }
      },
      "173": {
        start: {
          line: 627,
          column: 27
        },
        end: {
          line: 627,
          column: 44
        }
      },
      "174": {
        start: {
          line: 628,
          column: 24
        },
        end: {
          line: 637,
          column: 10
        }
      },
      "175": {
        start: {
          line: 629,
          column: 12
        },
        end: {
          line: 636,
          column: 25
        }
      },
      "176": {
        start: {
          line: 630,
          column: 30
        },
        end: {
          line: 630,
          column: 41
        }
      },
      "177": {
        start: {
          line: 632,
          column: 16
        },
        end: {
          line: 634,
          column: 17
        }
      },
      "178": {
        start: {
          line: 633,
          column: 20
        },
        end: {
          line: 633,
          column: 60
        }
      },
      "179": {
        start: {
          line: 635,
          column: 16
        },
        end: {
          line: 635,
          column: 35
        }
      },
      "180": {
        start: {
          line: 638,
          column: 8
        },
        end: {
          line: 638,
          column: 51
        }
      },
      "181": {
        start: {
          line: 642,
          column: 21
        },
        end: {
          line: 642,
          column: 55
        }
      },
      "182": {
        start: {
          line: 643,
          column: 28
        },
        end: {
          line: 645,
          column: 9
        }
      },
      "183": {
        start: {
          line: 646,
          column: 8
        },
        end: {
          line: 648,
          column: 9
        }
      },
      "184": {
        start: {
          line: 647,
          column: 12
        },
        end: {
          line: 647,
          column: 39
        }
      },
      "185": {
        start: {
          line: 649,
          column: 32
        },
        end: {
          line: 669,
          column: 10
        }
      },
      "186": {
        start: {
          line: 670,
          column: 8
        },
        end: {
          line: 689,
          column: 10
        }
      },
      "187": {
        start: {
          line: 671,
          column: 41
        },
        end: {
          line: 682,
          column: 13
        }
      },
      "188": {
        start: {
          line: 692,
          column: 21
        },
        end: {
          line: 705,
          column: 10
        }
      },
      "189": {
        start: {
          line: 706,
          column: 8
        },
        end: {
          line: 706,
          column: 23
        }
      },
      "190": {
        start: {
          line: 709,
          column: 22
        },
        end: {
          line: 719,
          column: 10
        }
      },
      "191": {
        start: {
          line: 720,
          column: 8
        },
        end: {
          line: 736,
          column: 10
        }
      },
      "192": {
        start: {
          line: 721,
          column: 38
        },
        end: {
          line: 735,
          column: 13
        }
      },
      "193": {
        start: {
          line: 739,
          column: 8
        },
        end: {
          line: 756,
          column: 11
        }
      },
      "194": {
        start: {
          line: 759,
          column: 8
        },
        end: {
          line: 764,
          column: 11
        }
      },
      "195": {
        start: {
          line: 767,
          column: 8
        },
        end: {
          line: 776,
          column: 11
        }
      },
      "196": {
        start: {
          line: 780,
          column: 24
        },
        end: {
          line: 798,
          column: 10
        }
      },
      "197": {
        start: {
          line: 799,
          column: 8
        },
        end: {
          line: 800,
          column: 19
        }
      },
      "198": {
        start: {
          line: 800,
          column: 12
        },
        end: {
          line: 800,
          column: 19
        }
      },
      "199": {
        start: {
          line: 801,
          column: 22
        },
        end: {
          line: 810,
          column: 10
        }
      },
      "200": {
        start: {
          line: 811,
          column: 8
        },
        end: {
          line: 821,
          column: 9
        }
      },
      "201": {
        start: {
          line: 812,
          column: 34
        },
        end: {
          line: 812,
          column: 72
        }
      },
      "202": {
        start: {
          line: 813,
          column: 12
        },
        end: {
          line: 820,
          column: 13
        }
      },
      "203": {
        start: {
          line: 814,
          column: 16
        },
        end: {
          line: 814,
          column: 54
        }
      },
      "204": {
        start: {
          line: 816,
          column: 16
        },
        end: {
          line: 819,
          column: 19
        }
      },
      "205": {
        start: {
          line: 824,
          column: 26
        },
        end: {
          line: 824,
          column: 40
        }
      },
      "206": {
        start: {
          line: 825,
          column: 27
        },
        end: {
          line: 825,
          column: 48
        }
      },
      "207": {
        start: {
          line: 826,
          column: 32
        },
        end: {
          line: 826,
          column: 58
        }
      },
      "208": {
        start: {
          line: 827,
          column: 31
        },
        end: {
          line: 827,
          column: 88
        }
      },
      "209": {
        start: {
          line: 829,
          column: 8
        },
        end: {
          line: 838,
          column: 9
        }
      },
      "210": {
        start: {
          line: 831,
          column: 16
        },
        end: {
          line: 831,
          column: 35
        }
      },
      "211": {
        start: {
          line: 832,
          column: 16
        },
        end: {
          line: 832,
          column: 22
        }
      },
      "212": {
        start: {
          line: 834,
          column: 16
        },
        end: {
          line: 834,
          column: 39
        }
      },
      "213": {
        start: {
          line: 835,
          column: 16
        },
        end: {
          line: 835,
          column: 22
        }
      },
      "214": {
        start: {
          line: 837,
          column: 16
        },
        end: {
          line: 837,
          column: 29
        }
      },
      "215": {
        start: {
          line: 839,
          column: 8
        },
        end: {
          line: 850,
          column: 9
        }
      },
      "216": {
        start: {
          line: 841,
          column: 16
        },
        end: {
          line: 841,
          column: 47
        }
      },
      "217": {
        start: {
          line: 843,
          column: 16
        },
        end: {
          line: 843,
          column: 47
        }
      },
      "218": {
        start: {
          line: 845,
          column: 16
        },
        end: {
          line: 845,
          column: 49
        }
      },
      "219": {
        start: {
          line: 847,
          column: 16
        },
        end: {
          line: 847,
          column: 89
        }
      },
      "220": {
        start: {
          line: 849,
          column: 16
        },
        end: {
          line: 849,
          column: 29
        }
      },
      "221": {
        start: {
          line: 853,
          column: 27
        },
        end: {
          line: 853,
          column: 48
        }
      },
      "222": {
        start: {
          line: 854,
          column: 32
        },
        end: {
          line: 854,
          column: 58
        }
      },
      "223": {
        start: {
          line: 855,
          column: 31
        },
        end: {
          line: 855,
          column: 88
        }
      },
      "224": {
        start: {
          line: 857,
          column: 22
        },
        end: {
          line: 857,
          column: 34
        }
      },
      "225": {
        start: {
          line: 858,
          column: 8
        },
        end: {
          line: 858,
          column: 81
        }
      },
      "226": {
        start: {
          line: 859,
          column: 8
        },
        end: {
          line: 859,
          column: 72
        }
      },
      "227": {
        start: {
          line: 860,
          column: 8
        },
        end: {
          line: 860,
          column: 82
        }
      },
      "228": {
        start: {
          line: 861,
          column: 8
        },
        end: {
          line: 861,
          column: 74
        }
      },
      "229": {
        start: {
          line: 863,
          column: 23
        },
        end: {
          line: 863,
          column: 31
        }
      },
      "230": {
        start: {
          line: 864,
          column: 8
        },
        end: {
          line: 869,
          column: 9
        }
      },
      "231": {
        start: {
          line: 865,
          column: 12
        },
        end: {
          line: 865,
          column: 30
        }
      },
      "232": {
        start: {
          line: 867,
          column: 13
        },
        end: {
          line: 869,
          column: 9
        }
      },
      "233": {
        start: {
          line: 868,
          column: 12
        },
        end: {
          line: 868,
          column: 34
        }
      },
      "234": {
        start: {
          line: 870,
          column: 8
        },
        end: {
          line: 885,
          column: 11
        }
      },
      "235": {
        start: {
          line: 889,
          column: 29
        },
        end: {
          line: 904,
          column: 10
        }
      },
      "236": {
        start: {
          line: 905,
          column: 8
        },
        end: {
          line: 905,
          column: 28
        }
      },
      "237": {
        start: {
          line: 909,
          column: 8
        },
        end: {
          line: 909,
          column: 73
        }
      },
      "238": {
        start: {
          line: 910,
          column: 28
        },
        end: {
          line: 920,
          column: 10
        }
      },
      "239": {
        start: {
          line: 921,
          column: 8
        },
        end: {
          line: 921,
          column: 27
        }
      },
      "240": {
        start: {
          line: 925,
          column: 36
        },
        end: {
          line: 930,
          column: 10
        }
      },
      "241": {
        start: {
          line: 931,
          column: 8
        },
        end: {
          line: 933,
          column: 9
        }
      },
      "242": {
        start: {
          line: 932,
          column: 12
        },
        end: {
          line: 932,
          column: 53
        }
      },
      "243": {
        start: {
          line: 935,
          column: 8
        },
        end: {
          line: 937,
          column: 9
        }
      },
      "244": {
        start: {
          line: 936,
          column: 12
        },
        end: {
          line: 936,
          column: 92
        }
      },
      "245": {
        start: {
          line: 938,
          column: 27
        },
        end: {
          line: 938,
          column: 29
        }
      },
      "246": {
        start: {
          line: 939,
          column: 8
        },
        end: {
          line: 940,
          column: 54
        }
      },
      "247": {
        start: {
          line: 940,
          column: 12
        },
        end: {
          line: 940,
          column: 54
        }
      },
      "248": {
        start: {
          line: 941,
          column: 8
        },
        end: {
          line: 942,
          column: 46
        }
      },
      "249": {
        start: {
          line: 942,
          column: 12
        },
        end: {
          line: 942,
          column: 46
        }
      },
      "250": {
        start: {
          line: 943,
          column: 8
        },
        end: {
          line: 946,
          column: 9
        }
      },
      "251": {
        start: {
          line: 944,
          column: 12
        },
        end: {
          line: 944,
          column: 48
        }
      },
      "252": {
        start: {
          line: 945,
          column: 12
        },
        end: {
          line: 945,
          column: 74
        }
      },
      "253": {
        start: {
          line: 947,
          column: 28
        },
        end: {
          line: 950,
          column: 10
        }
      },
      "254": {
        start: {
          line: 951,
          column: 8
        },
        end: {
          line: 951,
          column: 27
        }
      },
      "255": {
        start: {
          line: 955,
          column: 28
        },
        end: {
          line: 960,
          column: 10
        }
      },
      "256": {
        start: {
          line: 961,
          column: 8
        },
        end: {
          line: 963,
          column: 9
        }
      },
      "257": {
        start: {
          line: 962,
          column: 12
        },
        end: {
          line: 962,
          column: 53
        }
      },
      "258": {
        start: {
          line: 964,
          column: 8
        },
        end: {
          line: 966,
          column: 11
        }
      },
      "259": {
        start: {
          line: 969,
          column: 28
        },
        end: {
          line: 974,
          column: 10
        }
      },
      "260": {
        start: {
          line: 975,
          column: 8
        },
        end: {
          line: 977,
          column: 9
        }
      },
      "261": {
        start: {
          line: 976,
          column: 12
        },
        end: {
          line: 976,
          column: 53
        }
      },
      "262": {
        start: {
          line: 979,
          column: 27
        },
        end: {
          line: 979,
          column: 73
        }
      },
      "263": {
        start: {
          line: 981,
          column: 8
        },
        end: {
          line: 1000,
          column: 9
        }
      },
      "264": {
        start: {
          line: 982,
          column: 12
        },
        end: {
          line: 990,
          column: 15
        }
      },
      "265": {
        start: {
          line: 993,
          column: 12
        },
        end: {
          line: 999,
          column: 15
        }
      },
      "266": {
        start: {
          line: 1001,
          column: 8
        },
        end: {
          line: 1001,
          column: 26
        }
      },
      "267": {
        start: {
          line: 1004,
          column: 29
        },
        end: {
          line: 1013,
          column: 10
        }
      },
      "268": {
        start: {
          line: 1014,
          column: 24
        },
        end: {
          line: 1014,
          column: 26
        }
      },
      "269": {
        start: {
          line: 1015,
          column: 8
        },
        end: {
          line: 1033,
          column: 9
        }
      },
      "270": {
        start: {
          line: 1016,
          column: 12
        },
        end: {
          line: 1032,
          column: 13
        }
      },
      "271": {
        start: {
          line: 1017,
          column: 31
        },
        end: {
          line: 1017,
          column: 83
        }
      },
      "272": {
        start: {
          line: 1018,
          column: 16
        },
        end: {
          line: 1023,
          column: 19
        }
      },
      "273": {
        start: {
          line: 1026,
          column: 16
        },
        end: {
          line: 1031,
          column: 19
        }
      },
      "274": {
        start: {
          line: 1034,
          column: 8
        },
        end: {
          line: 1034,
          column: 23
        }
      },
      "275": {
        start: {
          line: 1037,
          column: 8
        },
        end: {
          line: 1060,
          column: 9
        }
      },
      "276": {
        start: {
          line: 1039,
          column: 16
        },
        end: {
          line: 1041,
          column: 17
        }
      },
      "277": {
        start: {
          line: 1040,
          column: 20
        },
        end: {
          line: 1040,
          column: 93
        }
      },
      "278": {
        start: {
          line: 1042,
          column: 16
        },
        end: {
          line: 1042,
          column: 22
        }
      },
      "279": {
        start: {
          line: 1044,
          column: 16
        },
        end: {
          line: 1046,
          column: 17
        }
      },
      "280": {
        start: {
          line: 1045,
          column: 20
        },
        end: {
          line: 1045,
          column: 87
        }
      },
      "281": {
        start: {
          line: 1047,
          column: 16
        },
        end: {
          line: 1047,
          column: 22
        }
      },
      "282": {
        start: {
          line: 1049,
          column: 16
        },
        end: {
          line: 1051,
          column: 17
        }
      },
      "283": {
        start: {
          line: 1050,
          column: 20
        },
        end: {
          line: 1050,
          column: 87
        }
      },
      "284": {
        start: {
          line: 1052,
          column: 16
        },
        end: {
          line: 1052,
          column: 22
        }
      },
      "285": {
        start: {
          line: 1054,
          column: 16
        },
        end: {
          line: 1056,
          column: 17
        }
      },
      "286": {
        start: {
          line: 1055,
          column: 20
        },
        end: {
          line: 1055,
          column: 60
        }
      },
      "287": {
        start: {
          line: 1057,
          column: 16
        },
        end: {
          line: 1057,
          column: 22
        }
      },
      "288": {
        start: {
          line: 1059,
          column: 16
        },
        end: {
          line: 1059,
          column: 77
        }
      },
      "289": {
        start: {
          line: 1063,
          column: 8
        },
        end: {
          line: 1074,
          column: 9
        }
      },
      "290": {
        start: {
          line: 1065,
          column: 16
        },
        end: {
          line: 1065,
          column: 76
        }
      },
      "291": {
        start: {
          line: 1067,
          column: 16
        },
        end: {
          line: 1067,
          column: 74
        }
      },
      "292": {
        start: {
          line: 1069,
          column: 16
        },
        end: {
          line: 1069,
          column: 70
        }
      },
      "293": {
        start: {
          line: 1071,
          column: 16
        },
        end: {
          line: 1071,
          column: 68
        }
      },
      "294": {
        start: {
          line: 1073,
          column: 16
        },
        end: {
          line: 1073,
          column: 114
        }
      },
      "295": {
        start: {
          line: 1077,
          column: 8
        },
        end: {
          line: 1089,
          column: 9
        }
      },
      "296": {
        start: {
          line: 1080,
          column: 12
        },
        end: {
          line: 1082,
          column: 13
        }
      },
      "297": {
        start: {
          line: 1081,
          column: 16
        },
        end: {
          line: 1081,
          column: 76
        }
      },
      "298": {
        start: {
          line: 1084,
          column: 12
        },
        end: {
          line: 1084,
          column: 68
        }
      },
      "299": {
        start: {
          line: 1084,
          column: 41
        },
        end: {
          line: 1084,
          column: 66
        }
      },
      "300": {
        start: {
          line: 1085,
          column: 12
        },
        end: {
          line: 1085,
          column: 88
        }
      },
      "301": {
        start: {
          line: 1088,
          column: 12
        },
        end: {
          line: 1088,
          column: 88
        }
      },
      "302": {
        start: {
          line: 1092,
          column: 8
        },
        end: {
          line: 1102,
          column: 9
        }
      },
      "303": {
        start: {
          line: 1094,
          column: 12
        },
        end: {
          line: 1096,
          column: 13
        }
      },
      "304": {
        start: {
          line: 1095,
          column: 16
        },
        end: {
          line: 1095,
          column: 76
        }
      },
      "305": {
        start: {
          line: 1097,
          column: 12
        },
        end: {
          line: 1097,
          column: 68
        }
      },
      "306": {
        start: {
          line: 1097,
          column: 41
        },
        end: {
          line: 1097,
          column: 66
        }
      },
      "307": {
        start: {
          line: 1098,
          column: 12
        },
        end: {
          line: 1098,
          column: 86
        }
      },
      "308": {
        start: {
          line: 1101,
          column: 12
        },
        end: {
          line: 1101,
          column: 86
        }
      },
      "309": {
        start: {
          line: 1105,
          column: 8
        },
        end: {
          line: 1115,
          column: 9
        }
      },
      "310": {
        start: {
          line: 1107,
          column: 12
        },
        end: {
          line: 1109,
          column: 13
        }
      },
      "311": {
        start: {
          line: 1108,
          column: 16
        },
        end: {
          line: 1108,
          column: 76
        }
      },
      "312": {
        start: {
          line: 1110,
          column: 12
        },
        end: {
          line: 1110,
          column: 68
        }
      },
      "313": {
        start: {
          line: 1110,
          column: 41
        },
        end: {
          line: 1110,
          column: 66
        }
      },
      "314": {
        start: {
          line: 1111,
          column: 12
        },
        end: {
          line: 1111,
          column: 82
        }
      },
      "315": {
        start: {
          line: 1114,
          column: 12
        },
        end: {
          line: 1114,
          column: 82
        }
      },
      "316": {
        start: {
          line: 1118,
          column: 8
        },
        end: {
          line: 1142,
          column: 9
        }
      },
      "317": {
        start: {
          line: 1120,
          column: 32
        },
        end: {
          line: 1124,
          column: 13
        }
      },
      "318": {
        start: {
          line: 1125,
          column: 29
        },
        end: {
          line: 1132,
          column: 14
        }
      },
      "319": {
        start: {
          line: 1133,
          column: 12
        },
        end: {
          line: 1138,
          column: 13
        }
      },
      "320": {
        start: {
          line: 1134,
          column: 16
        },
        end: {
          line: 1134,
          column: 83
        }
      },
      "321": {
        start: {
          line: 1137,
          column: 16
        },
        end: {
          line: 1137,
          column: 97
        }
      },
      "322": {
        start: {
          line: 1141,
          column: 12
        },
        end: {
          line: 1141,
          column: 79
        }
      },
      "323": {
        start: {
          line: 1145,
          column: 8
        },
        end: {
          line: 1156,
          column: 9
        }
      },
      "324": {
        start: {
          line: 1147,
          column: 16
        },
        end: {
          line: 1147,
          column: 87
        }
      },
      "325": {
        start: {
          line: 1149,
          column: 16
        },
        end: {
          line: 1149,
          column: 85
        }
      },
      "326": {
        start: {
          line: 1151,
          column: 16
        },
        end: {
          line: 1151,
          column: 81
        }
      },
      "327": {
        start: {
          line: 1153,
          column: 16
        },
        end: {
          line: 1153,
          column: 79
        }
      },
      "328": {
        start: {
          line: 1155,
          column: 16
        },
        end: {
          line: 1155,
          column: 60
        }
      },
      "329": {
        start: {
          line: 1160,
          column: 24
        },
        end: {
          line: 1171,
          column: 9
        }
      },
      "330": {
        start: {
          line: 1173,
          column: 8
        },
        end: {
          line: 1173,
          column: 61
        }
      },
      "331": {
        start: {
          line: 1174,
          column: 8
        },
        end: {
          line: 1174,
          column: 42
        }
      },
      "332": {
        start: {
          line: 1178,
          column: 24
        },
        end: {
          line: 1188,
          column: 9
        }
      },
      "333": {
        start: {
          line: 1189,
          column: 8
        },
        end: {
          line: 1189,
          column: 59
        }
      },
      "334": {
        start: {
          line: 1190,
          column: 8
        },
        end: {
          line: 1190,
          column: 42
        }
      },
      "335": {
        start: {
          line: 1194,
          column: 24
        },
        end: {
          line: 1199,
          column: 9
        }
      },
      "336": {
        start: {
          line: 1200,
          column: 8
        },
        end: {
          line: 1200,
          column: 55
        }
      },
      "337": {
        start: {
          line: 1201,
          column: 8
        },
        end: {
          line: 1201,
          column: 42
        }
      },
      "338": {
        start: {
          line: 1204,
          column: 24
        },
        end: {
          line: 1209,
          column: 9
        }
      },
      "339": {
        start: {
          line: 1210,
          column: 25
        },
        end: {
          line: 1217,
          column: 10
        }
      },
      "340": {
        start: {
          line: 1218,
          column: 8
        },
        end: {
          line: 1220,
          column: 9
        }
      },
      "341": {
        start: {
          line: 1219,
          column: 12
        },
        end: {
          line: 1219,
          column: 77
        }
      },
      "342": {
        start: {
          line: 1221,
          column: 8
        },
        end: {
          line: 1221,
          column: 75
        }
      },
      "343": {
        start: {
          line: 1227,
          column: 23
        },
        end: {
          line: 1227,
          column: 40
        }
      },
      "344": {
        start: {
          line: 1228,
          column: 21
        },
        end: {
          line: 1228,
          column: 74
        }
      },
      "345": {
        start: {
          line: 1229,
          column: 8
        },
        end: {
          line: 1229,
          column: 67
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 1
          },
          end: {
            line: 7,
            column: 2
          }
        },
        loc: {
          start: {
            line: 7,
            column: 22
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 1
          },
          end: {
            line: 13,
            column: 2
          }
        },
        loc: {
          start: {
            line: 13,
            column: 32
          },
          end: {
            line: 18,
            column: 1
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 1
          },
          end: {
            line: 20,
            column: 2
          }
        },
        loc: {
          start: {
            line: 20,
            column: 29
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 18
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 30
          },
          end: {
            line: 86,
            column: 5
          }
        },
        line: 33
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 51,
            column: 54
          },
          end: {
            line: 51,
            column: 55
          }
        },
        loc: {
          start: {
            line: 51,
            column: 72
          },
          end: {
            line: 53,
            column: 13
          }
        },
        line: 51
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        },
        loc: {
          start: {
            line: 90,
            column: 46
          },
          end: {
            line: 135,
            column: 5
          }
        },
        line: 90
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 139,
            column: 4
          },
          end: {
            line: 139,
            column: 5
          }
        },
        loc: {
          start: {
            line: 139,
            column: 53
          },
          end: {
            line: 224,
            column: 5
          }
        },
        line: 139
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 228,
            column: 4
          },
          end: {
            line: 228,
            column: 5
          }
        },
        loc: {
          start: {
            line: 228,
            column: 27
          },
          end: {
            line: 253,
            column: 5
          }
        },
        line: 228
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 257,
            column: 4
          },
          end: {
            line: 257,
            column: 5
          }
        },
        loc: {
          start: {
            line: 257,
            column: 57
          },
          end: {
            line: 321,
            column: 5
          }
        },
        line: 257
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 325,
            column: 4
          },
          end: {
            line: 325,
            column: 5
          }
        },
        loc: {
          start: {
            line: 325,
            column: 35
          },
          end: {
            line: 347,
            column: 5
          }
        },
        line: 325
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 351,
            column: 4
          },
          end: {
            line: 351,
            column: 5
          }
        },
        loc: {
          start: {
            line: 351,
            column: 54
          },
          end: {
            line: 368,
            column: 5
          }
        },
        line: 351
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 372,
            column: 4
          },
          end: {
            line: 372,
            column: 5
          }
        },
        loc: {
          start: {
            line: 372,
            column: 48
          },
          end: {
            line: 386,
            column: 5
          }
        },
        line: 372
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 390,
            column: 4
          },
          end: {
            line: 390,
            column: 5
          }
        },
        loc: {
          start: {
            line: 390,
            column: 32
          },
          end: {
            line: 432,
            column: 5
          }
        },
        line: 390
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 436,
            column: 4
          },
          end: {
            line: 436,
            column: 5
          }
        },
        loc: {
          start: {
            line: 436,
            column: 56
          },
          end: {
            line: 482,
            column: 5
          }
        },
        line: 436
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 455,
            column: 23
          },
          end: {
            line: 455,
            column: 24
          }
        },
        loc: {
          start: {
            line: 455,
            column: 34
          },
          end: {
            line: 477,
            column: 9
          }
        },
        line: 455
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 478,
            column: 43
          },
          end: {
            line: 478,
            column: 44
          }
        },
        loc: {
          start: {
            line: 478,
            column: 63
          },
          end: {
            line: 481,
            column: 9
          }
        },
        line: 478
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 486,
            column: 4
          },
          end: {
            line: 486,
            column: 5
          }
        },
        loc: {
          start: {
            line: 486,
            column: 30
          },
          end: {
            line: 618,
            column: 5
          }
        },
        line: 486
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 547,
            column: 40
          },
          end: {
            line: 547,
            column: 41
          }
        },
        loc: {
          start: {
            line: 547,
            column: 48
          },
          end: {
            line: 572,
            column: 9
          }
        },
        line: 547
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 600,
            column: 59
          },
          end: {
            line: 600,
            column: 60
          }
        },
        loc: {
          start: {
            line: 600,
            column: 74
          },
          end: {
            line: 600,
            column: 102
          }
        },
        line: 600
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 601,
            column: 64
          },
          end: {
            line: 601,
            column: 65
          }
        },
        loc: {
          start: {
            line: 601,
            column: 79
          },
          end: {
            line: 601,
            column: 112
          }
        },
        line: 601
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 602,
            column: 58
          },
          end: {
            line: 602,
            column: 59
          }
        },
        loc: {
          start: {
            line: 602,
            column: 73
          },
          end: {
            line: 602,
            column: 106
          }
        },
        line: 602
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 622,
            column: 4
          },
          end: {
            line: 622,
            column: 5
          }
        },
        loc: {
          start: {
            line: 622,
            column: 22
          },
          end: {
            line: 639,
            column: 5
          }
        },
        line: 622
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 628,
            column: 33
          },
          end: {
            line: 628,
            column: 34
          }
        },
        loc: {
          start: {
            line: 628,
            column: 40
          },
          end: {
            line: 637,
            column: 9
          }
        },
        line: 628
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 629,
            column: 31
          },
          end: {
            line: 629,
            column: 32
          }
        },
        loc: {
          start: {
            line: 629,
            column: 41
          },
          end: {
            line: 636,
            column: 13
          }
        },
        line: 629
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 641,
            column: 4
          },
          end: {
            line: 641,
            column: 5
          }
        },
        loc: {
          start: {
            line: 641,
            column: 52
          },
          end: {
            line: 690,
            column: 5
          }
        },
        line: 641
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 671,
            column: 31
          },
          end: {
            line: 671,
            column: 32
          }
        },
        loc: {
          start: {
            line: 671,
            column: 41
          },
          end: {
            line: 682,
            column: 13
          }
        },
        line: 671
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 691,
            column: 4
          },
          end: {
            line: 691,
            column: 5
          }
        },
        loc: {
          start: {
            line: 691,
            column: 59
          },
          end: {
            line: 707,
            column: 5
          }
        },
        line: 691
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 708,
            column: 4
          },
          end: {
            line: 708,
            column: 5
          }
        },
        loc: {
          start: {
            line: 708,
            column: 47
          },
          end: {
            line: 737,
            column: 5
          }
        },
        line: 708
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 721,
            column: 29
          },
          end: {
            line: 721,
            column: 30
          }
        },
        loc: {
          start: {
            line: 721,
            column: 38
          },
          end: {
            line: 735,
            column: 13
          }
        },
        line: 721
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 738,
            column: 4
          },
          end: {
            line: 738,
            column: 5
          }
        },
        loc: {
          start: {
            line: 738,
            column: 69
          },
          end: {
            line: 757,
            column: 5
          }
        },
        line: 738
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 758,
            column: 4
          },
          end: {
            line: 758,
            column: 5
          }
        },
        loc: {
          start: {
            line: 758,
            column: 57
          },
          end: {
            line: 765,
            column: 5
          }
        },
        line: 758
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 766,
            column: 4
          },
          end: {
            line: 766,
            column: 5
          }
        },
        loc: {
          start: {
            line: 766,
            column: 58
          },
          end: {
            line: 777,
            column: 5
          }
        },
        line: 766
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 779,
            column: 4
          },
          end: {
            line: 779,
            column: 5
          }
        },
        loc: {
          start: {
            line: 779,
            column: 44
          },
          end: {
            line: 822,
            column: 5
          }
        },
        line: 779
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 823,
            column: 4
          },
          end: {
            line: 823,
            column: 5
          }
        },
        loc: {
          start: {
            line: 823,
            column: 38
          },
          end: {
            line: 851,
            column: 5
          }
        },
        line: 823
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 852,
            column: 4
          },
          end: {
            line: 852,
            column: 5
          }
        },
        loc: {
          start: {
            line: 852,
            column: 37
          },
          end: {
            line: 886,
            column: 5
          }
        },
        line: 852
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 888,
            column: 4
          },
          end: {
            line: 888,
            column: 5
          }
        },
        loc: {
          start: {
            line: 888,
            column: 42
          },
          end: {
            line: 906,
            column: 5
          }
        },
        line: 888
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 907,
            column: 4
          },
          end: {
            line: 907,
            column: 5
          }
        },
        loc: {
          start: {
            line: 907,
            column: 34
          },
          end: {
            line: 922,
            column: 5
          }
        },
        line: 907
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 923,
            column: 4
          },
          end: {
            line: 923,
            column: 5
          }
        },
        loc: {
          start: {
            line: 923,
            column: 38
          },
          end: {
            line: 952,
            column: 5
          }
        },
        line: 923
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 953,
            column: 4
          },
          end: {
            line: 953,
            column: 5
          }
        },
        loc: {
          start: {
            line: 953,
            column: 48
          },
          end: {
            line: 967,
            column: 5
          }
        },
        line: 953
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 968,
            column: 4
          },
          end: {
            line: 968,
            column: 5
          }
        },
        loc: {
          start: {
            line: 968,
            column: 46
          },
          end: {
            line: 1002,
            column: 5
          }
        },
        line: 968
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 1003,
            column: 4
          },
          end: {
            line: 1003,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1003,
            column: 40
          },
          end: {
            line: 1035,
            column: 5
          }
        },
        line: 1003
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 1036,
            column: 4
          },
          end: {
            line: 1036,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1036,
            column: 54
          },
          end: {
            line: 1061,
            column: 5
          }
        },
        line: 1036
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 1062,
            column: 4
          },
          end: {
            line: 1062,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1062,
            column: 46
          },
          end: {
            line: 1075,
            column: 5
          }
        },
        line: 1062
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 1076,
            column: 4
          },
          end: {
            line: 1076,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1076,
            column: 38
          },
          end: {
            line: 1090,
            column: 5
          }
        },
        line: 1076
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 1084,
            column: 30
          },
          end: {
            line: 1084,
            column: 31
          }
        },
        loc: {
          start: {
            line: 1084,
            column: 41
          },
          end: {
            line: 1084,
            column: 66
          }
        },
        line: 1084
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 1091,
            column: 4
          },
          end: {
            line: 1091,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1091,
            column: 36
          },
          end: {
            line: 1103,
            column: 5
          }
        },
        line: 1091
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 1097,
            column: 30
          },
          end: {
            line: 1097,
            column: 31
          }
        },
        loc: {
          start: {
            line: 1097,
            column: 41
          },
          end: {
            line: 1097,
            column: 66
          }
        },
        line: 1097
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 1104,
            column: 4
          },
          end: {
            line: 1104,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1104,
            column: 32
          },
          end: {
            line: 1116,
            column: 5
          }
        },
        line: 1104
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 1110,
            column: 30
          },
          end: {
            line: 1110,
            column: 31
          }
        },
        loc: {
          start: {
            line: 1110,
            column: 41
          },
          end: {
            line: 1110,
            column: 66
          }
        },
        line: 1110
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 1117,
            column: 4
          },
          end: {
            line: 1117,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1117,
            column: 30
          },
          end: {
            line: 1143,
            column: 5
          }
        },
        line: 1117
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 1144,
            column: 4
          },
          end: {
            line: 1144,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1144,
            column: 57
          },
          end: {
            line: 1157,
            column: 5
          }
        },
        line: 1144
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 1158,
            column: 4
          },
          end: {
            line: 1158,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1158,
            column: 51
          },
          end: {
            line: 1175,
            column: 5
          }
        },
        line: 1158
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 1176,
            column: 4
          },
          end: {
            line: 1176,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1176,
            column: 49
          },
          end: {
            line: 1191,
            column: 5
          }
        },
        line: 1176
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 1192,
            column: 4
          },
          end: {
            line: 1192,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1192,
            column: 45
          },
          end: {
            line: 1202,
            column: 5
          }
        },
        line: 1192
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 1203,
            column: 4
          },
          end: {
            line: 1203,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1203,
            column: 43
          },
          end: {
            line: 1222,
            column: 5
          }
        },
        line: 1203
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 1226,
            column: 4
          },
          end: {
            line: 1226,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1226,
            column: 44
          },
          end: {
            line: 1230,
            column: 5
          }
        },
        line: 1226
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 11,
            column: 3
          },
          end: {
            line: 11,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 3
          },
          end: {
            line: 11,
            column: 12
          }
        }, {
          start: {
            line: 11,
            column: 17
          },
          end: {
            line: 11,
            column: 31
          }
        }],
        line: 11
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 3
          },
          end: {
            line: 18,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 3
          },
          end: {
            line: 18,
            column: 22
          }
        }, {
          start: {
            line: 18,
            column: 27
          },
          end: {
            line: 18,
            column: 51
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 24,
            column: 3
          },
          end: {
            line: 24,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 3
          },
          end: {
            line: 24,
            column: 19
          }
        }, {
          start: {
            line: 24,
            column: 24
          },
          end: {
            line: 24,
            column: 45
          }
        }],
        line: 24
      },
      "3": {
        loc: {
          start: {
            line: 35,
            column: 24
          },
          end: {
            line: 35,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 24
          },
          end: {
            line: 35,
            column: 44
          }
        }, {
          start: {
            line: 35,
            column: 48
          },
          end: {
            line: 35,
            column: 71
          }
        }],
        line: 35
      },
      "4": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 40,
            column: 63
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 40,
            column: 63
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "5": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 42,
            column: 63
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 42,
            column: 63
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "6": {
        loc: {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 44,
            column: 67
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 44,
            column: 67
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "7": {
        loc: {
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 46,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 46,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "8": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 48,
            column: 65
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 48,
            column: 65
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "9": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "10": {
        loc: {
          start: {
            line: 80,
            column: 22
          },
          end: {
            line: 80,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 22
          },
          end: {
            line: 80,
            column: 31
          }
        }, {
          start: {
            line: 80,
            column: 35
          },
          end: {
            line: 80,
            column: 37
          }
        }],
        line: 80
      },
      "11": {
        loc: {
          start: {
            line: 81,
            column: 26
          },
          end: {
            line: 81,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 26
          },
          end: {
            line: 81,
            column: 39
          }
        }, {
          start: {
            line: 81,
            column: 43
          },
          end: {
            line: 81,
            column: 48
          }
        }],
        line: 81
      },
      "12": {
        loc: {
          start: {
            line: 82,
            column: 27
          },
          end: {
            line: 82,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 82,
            column: 44
          },
          end: {
            line: 82,
            column: 68
          }
        }, {
          start: {
            line: 82,
            column: 71
          },
          end: {
            line: 82,
            column: 75
          }
        }],
        line: 82
      },
      "13": {
        loc: {
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "14": {
        loc: {
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "15": {
        loc: {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "16": {
        loc: {
          start: {
            line: 109,
            column: 8
          },
          end: {
            line: 111,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 8
          },
          end: {
            line: 111,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 109
      },
      "17": {
        loc: {
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 112
      },
      "18": {
        loc: {
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 148,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 148,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "19": {
        loc: {
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 167,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 153,
            column: 12
          },
          end: {
            line: 155,
            column: 22
          }
        }, {
          start: {
            line: 156,
            column: 12
          },
          end: {
            line: 158,
            column: 22
          }
        }, {
          start: {
            line: 159,
            column: 12
          },
          end: {
            line: 161,
            column: 22
          }
        }, {
          start: {
            line: 162,
            column: 12
          },
          end: {
            line: 164,
            column: 22
          }
        }, {
          start: {
            line: 165,
            column: 12
          },
          end: {
            line: 166,
            column: 40
          }
        }],
        line: 152
      },
      "20": {
        loc: {
          start: {
            line: 211,
            column: 31
          },
          end: {
            line: 211,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 211,
            column: 49
          },
          end: {
            line: 211,
            column: 82
          }
        }, {
          start: {
            line: 211,
            column: 85
          },
          end: {
            line: 211,
            column: 86
          }
        }],
        line: 211
      },
      "21": {
        loc: {
          start: {
            line: 230,
            column: 8
          },
          end: {
            line: 241,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 230,
            column: 8
          },
          end: {
            line: 241,
            column: 9
          }
        }, {
          start: {
            line: 239,
            column: 13
          },
          end: {
            line: 241,
            column: 9
          }
        }],
        line: 230
      },
      "22": {
        loc: {
          start: {
            line: 235,
            column: 12
          },
          end: {
            line: 237,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 235,
            column: 12
          },
          end: {
            line: 237,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 235
      },
      "23": {
        loc: {
          start: {
            line: 242,
            column: 24
          },
          end: {
            line: 242,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 242,
            column: 24
          },
          end: {
            line: 242,
            column: 44
          }
        }, {
          start: {
            line: 242,
            column: 48
          },
          end: {
            line: 242,
            column: 71
          }
        }],
        line: 242
      },
      "24": {
        loc: {
          start: {
            line: 261,
            column: 8
          },
          end: {
            line: 263,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 261,
            column: 8
          },
          end: {
            line: 263,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 261
      },
      "25": {
        loc: {
          start: {
            line: 261,
            column: 12
          },
          end: {
            line: 261,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 261,
            column: 12
          },
          end: {
            line: 261,
            column: 20
          }
        }, {
          start: {
            line: 261,
            column: 24
          },
          end: {
            line: 261,
            column: 51
          }
        }],
        line: 261
      },
      "26": {
        loc: {
          start: {
            line: 265,
            column: 8
          },
          end: {
            line: 267,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 265,
            column: 8
          },
          end: {
            line: 267,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 265
      },
      "27": {
        loc: {
          start: {
            line: 265,
            column: 12
          },
          end: {
            line: 265,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 265,
            column: 12
          },
          end: {
            line: 265,
            column: 29
          }
        }, {
          start: {
            line: 265,
            column: 33
          },
          end: {
            line: 265,
            column: 63
          }
        }],
        line: 265
      },
      "28": {
        loc: {
          start: {
            line: 272,
            column: 20
          },
          end: {
            line: 272,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 272,
            column: 45
          },
          end: {
            line: 272,
            column: 81
          }
        }, {
          start: {
            line: 272,
            column: 84
          },
          end: {
            line: 272,
            column: 88
          }
        }],
        line: 272
      },
      "29": {
        loc: {
          start: {
            line: 295,
            column: 28
          },
          end: {
            line: 295,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 295,
            column: 28
          },
          end: {
            line: 295,
            column: 46
          }
        }, {
          start: {
            line: 295,
            column: 50
          },
          end: {
            line: 295,
            column: 59
          }
        }],
        line: 295
      },
      "30": {
        loc: {
          start: {
            line: 311,
            column: 30
          },
          end: {
            line: 315,
            column: 31
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 312,
            column: 22
          },
          end: {
            line: 314,
            column: 21
          }
        }, {
          start: {
            line: 315,
            column: 22
          },
          end: {
            line: 315,
            column: 31
          }
        }],
        line: 311
      },
      "31": {
        loc: {
          start: {
            line: 358,
            column: 8
          },
          end: {
            line: 360,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 358,
            column: 8
          },
          end: {
            line: 360,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 358
      },
      "32": {
        loc: {
          start: {
            line: 365,
            column: 27
          },
          end: {
            line: 365,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 365,
            column: 44
          },
          end: {
            line: 365,
            column: 68
          }
        }, {
          start: {
            line: 365,
            column: 71
          },
          end: {
            line: 365,
            column: 80
          }
        }],
        line: 365
      },
      "33": {
        loc: {
          start: {
            line: 379,
            column: 8
          },
          end: {
            line: 381,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 379,
            column: 8
          },
          end: {
            line: 381,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 379
      },
      "34": {
        loc: {
          start: {
            line: 393,
            column: 8
          },
          end: {
            line: 398,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 393,
            column: 8
          },
          end: {
            line: 398,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 393
      },
      "35": {
        loc: {
          start: {
            line: 393,
            column: 12
          },
          end: {
            line: 393,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 393,
            column: 12
          },
          end: {
            line: 393,
            column: 22
          }
        }, {
          start: {
            line: 393,
            column: 26
          },
          end: {
            line: 393,
            column: 40
          }
        }],
        line: 393
      },
      "36": {
        loc: {
          start: {
            line: 399,
            column: 8
          },
          end: {
            line: 401,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 399,
            column: 8
          },
          end: {
            line: 401,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 399
      },
      "37": {
        loc: {
          start: {
            line: 424,
            column: 33
          },
          end: {
            line: 428,
            column: 31
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 425,
            column: 22
          },
          end: {
            line: 427,
            column: 21
          }
        }, {
          start: {
            line: 428,
            column: 22
          },
          end: {
            line: 428,
            column: 31
          }
        }],
        line: 424
      },
      "38": {
        loc: {
          start: {
            line: 458,
            column: 12
          },
          end: {
            line: 475,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 459,
            column: 16
          },
          end: {
            line: 461,
            column: 26
          }
        }, {
          start: {
            line: 462,
            column: 16
          },
          end: {
            line: 464,
            column: 26
          }
        }, {
          start: {
            line: 465,
            column: 16
          },
          end: {
            line: 469,
            column: 26
          }
        }, {
          start: {
            line: 470,
            column: 16
          },
          end: {
            line: 472,
            column: 26
          }
        }, {
          start: {
            line: 473,
            column: 16
          },
          end: {
            line: 474,
            column: 59
          }
        }],
        line: 458
      },
      "39": {
        loc: {
          start: {
            line: 476,
            column: 28
          },
          end: {
            line: 476,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 476,
            column: 28
          },
          end: {
            line: 476,
            column: 40
          }
        }, {
          start: {
            line: 476,
            column: 44
          },
          end: {
            line: 476,
            column: 45
          }
        }],
        line: 476
      },
      "40": {
        loc: {
          start: {
            line: 490,
            column: 8
          },
          end: {
            line: 506,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 491,
            column: 12
          },
          end: {
            line: 493,
            column: 22
          }
        }, {
          start: {
            line: 494,
            column: 12
          },
          end: {
            line: 496,
            column: 22
          }
        }, {
          start: {
            line: 497,
            column: 12
          },
          end: {
            line: 499,
            column: 22
          }
        }, {
          start: {
            line: 500,
            column: 12
          },
          end: {
            line: 503,
            column: 22
          }
        }, {
          start: {
            line: 504,
            column: 12
          },
          end: {
            line: 505,
            column: 76
          }
        }],
        line: 490
      },
      "41": {
        loc: {
          start: {
            line: 501,
            column: 28
          },
          end: {
            line: 501,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 501,
            column: 48
          },
          end: {
            line: 501,
            column: 75
          }
        }, {
          start: {
            line: 501,
            column: 78
          },
          end: {
            line: 501,
            column: 125
          }
        }],
        line: 501
      },
      "42": {
        loc: {
          start: {
            line: 502,
            column: 26
          },
          end: {
            line: 502,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 502,
            column: 44
          },
          end: {
            line: 502,
            column: 69
          }
        }, {
          start: {
            line: 502,
            column: 72
          },
          end: {
            line: 502,
            column: 82
          }
        }],
        line: 502
      },
      "43": {
        loc: {
          start: {
            line: 515,
            column: 8
          },
          end: {
            line: 516,
            column: 68
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 515,
            column: 8
          },
          end: {
            line: 516,
            column: 68
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 515
      },
      "44": {
        loc: {
          start: {
            line: 517,
            column: 8
          },
          end: {
            line: 518,
            column: 68
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 517,
            column: 8
          },
          end: {
            line: 518,
            column: 68
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 517
      },
      "45": {
        loc: {
          start: {
            line: 519,
            column: 8
          },
          end: {
            line: 520,
            column: 72
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 519,
            column: 8
          },
          end: {
            line: 520,
            column: 72
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 519
      },
      "46": {
        loc: {
          start: {
            line: 525,
            column: 24
          },
          end: {
            line: 532,
            column: 25
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 525,
            column: 48
          },
          end: {
            line: 532,
            column: 17
          }
        }, {
          start: {
            line: 532,
            column: 20
          },
          end: {
            line: 532,
            column: 25
          }
        }],
        line: 525
      },
      "47": {
        loc: {
          start: {
            line: 533,
            column: 29
          },
          end: {
            line: 540,
            column: 25
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 533,
            column: 58
          },
          end: {
            line: 540,
            column: 17
          }
        }, {
          start: {
            line: 540,
            column: 20
          },
          end: {
            line: 540,
            column: 25
          }
        }],
        line: 533
      },
      "48": {
        loc: {
          start: {
            line: 563,
            column: 12
          },
          end: {
            line: 570,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 563,
            column: 12
          },
          end: {
            line: 570,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 563
      },
      "49": {
        loc: {
          start: {
            line: 568,
            column: 36
          },
          end: {
            line: 568,
            column: 128
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 568,
            column: 58
          },
          end: {
            line: 568,
            column: 121
          }
        }, {
          start: {
            line: 568,
            column: 124
          },
          end: {
            line: 568,
            column: 128
          }
        }],
        line: 568
      },
      "50": {
        loc: {
          start: {
            line: 577,
            column: 8
          },
          end: {
            line: 617,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 578,
            column: 12
          },
          end: {
            line: 583,
            column: 18
          }
        }, {
          start: {
            line: 584,
            column: 12
          },
          end: {
            line: 607,
            column: 18
          }
        }, {
          start: {
            line: 608,
            column: 12
          },
          end: {
            line: 614,
            column: 18
          }
        }, {
          start: {
            line: 615,
            column: 12
          },
          end: {
            line: 616,
            column: 67
          }
        }],
        line: 577
      },
      "51": {
        loc: {
          start: {
            line: 600,
            column: 81
          },
          end: {
            line: 600,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 600,
            column: 81
          },
          end: {
            line: 600,
            column: 96
          }
        }, {
          start: {
            line: 600,
            column: 100
          },
          end: {
            line: 600,
            column: 101
          }
        }],
        line: 600
      },
      "52": {
        loc: {
          start: {
            line: 601,
            column: 86
          },
          end: {
            line: 601,
            column: 111
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 601,
            column: 86
          },
          end: {
            line: 601,
            column: 106
          }
        }, {
          start: {
            line: 601,
            column: 110
          },
          end: {
            line: 601,
            column: 111
          }
        }],
        line: 601
      },
      "53": {
        loc: {
          start: {
            line: 602,
            column: 80
          },
          end: {
            line: 602,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 602,
            column: 80
          },
          end: {
            line: 602,
            column: 100
          }
        }, {
          start: {
            line: 602,
            column: 104
          },
          end: {
            line: 602,
            column: 105
          }
        }],
        line: 602
      },
      "54": {
        loc: {
          start: {
            line: 623,
            column: 8
          },
          end: {
            line: 625,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 623,
            column: 8
          },
          end: {
            line: 625,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 623
      },
      "55": {
        loc: {
          start: {
            line: 632,
            column: 16
          },
          end: {
            line: 634,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 632,
            column: 16
          },
          end: {
            line: 634,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 632
      },
      "56": {
        loc: {
          start: {
            line: 632,
            column: 20
          },
          end: {
            line: 632,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 632,
            column: 20
          },
          end: {
            line: 632,
            column: 45
          }
        }, {
          start: {
            line: 632,
            column: 50
          },
          end: {
            line: 632,
            column: 69
          }
        }, {
          start: {
            line: 632,
            column: 73
          },
          end: {
            line: 632,
            column: 92
          }
        }],
        line: 632
      },
      "57": {
        loc: {
          start: {
            line: 635,
            column: 23
          },
          end: {
            line: 635,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 635,
            column: 23
          },
          end: {
            line: 635,
            column: 28
          }
        }, {
          start: {
            line: 635,
            column: 32
          },
          end: {
            line: 635,
            column: 34
          }
        }],
        line: 635
      },
      "58": {
        loc: {
          start: {
            line: 646,
            column: 8
          },
          end: {
            line: 648,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 646,
            column: 8
          },
          end: {
            line: 648,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 646
      },
      "59": {
        loc: {
          start: {
            line: 696,
            column: 29
          },
          end: {
            line: 696,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 696,
            column: 29
          },
          end: {
            line: 696,
            column: 49
          }
        }, {
          start: {
            line: 696,
            column: 53
          },
          end: {
            line: 696,
            column: 55
          }
        }],
        line: 696
      },
      "60": {
        loc: {
          start: {
            line: 697,
            column: 26
          },
          end: {
            line: 697,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 697,
            column: 26
          },
          end: {
            line: 697,
            column: 43
          }
        }, {
          start: {
            line: 697,
            column: 47
          },
          end: {
            line: 697,
            column: 51
          }
        }],
        line: 697
      },
      "61": {
        loc: {
          start: {
            line: 703,
            column: 30
          },
          end: {
            line: 703,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 703,
            column: 30
          },
          end: {
            line: 703,
            column: 51
          }
        }, {
          start: {
            line: 703,
            column: 55
          },
          end: {
            line: 703,
            column: 57
          }
        }],
        line: 703
      },
      "62": {
        loc: {
          start: {
            line: 799,
            column: 8
          },
          end: {
            line: 800,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 799,
            column: 8
          },
          end: {
            line: 800,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 799
      },
      "63": {
        loc: {
          start: {
            line: 813,
            column: 12
          },
          end: {
            line: 820,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 813,
            column: 12
          },
          end: {
            line: 820,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 813
      },
      "64": {
        loc: {
          start: {
            line: 827,
            column: 31
          },
          end: {
            line: 827,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 827,
            column: 48
          },
          end: {
            line: 827,
            column: 84
          }
        }, {
          start: {
            line: 827,
            column: 87
          },
          end: {
            line: 827,
            column: 88
          }
        }],
        line: 827
      },
      "65": {
        loc: {
          start: {
            line: 829,
            column: 8
          },
          end: {
            line: 838,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 830,
            column: 12
          },
          end: {
            line: 832,
            column: 22
          }
        }, {
          start: {
            line: 833,
            column: 12
          },
          end: {
            line: 835,
            column: 22
          }
        }, {
          start: {
            line: 836,
            column: 12
          },
          end: {
            line: 837,
            column: 29
          }
        }],
        line: 829
      },
      "66": {
        loc: {
          start: {
            line: 839,
            column: 8
          },
          end: {
            line: 850,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 840,
            column: 12
          },
          end: {
            line: 841,
            column: 47
          }
        }, {
          start: {
            line: 842,
            column: 12
          },
          end: {
            line: 843,
            column: 47
          }
        }, {
          start: {
            line: 844,
            column: 12
          },
          end: {
            line: 845,
            column: 49
          }
        }, {
          start: {
            line: 846,
            column: 12
          },
          end: {
            line: 847,
            column: 89
          }
        }, {
          start: {
            line: 848,
            column: 12
          },
          end: {
            line: 849,
            column: 29
          }
        }],
        line: 839
      },
      "67": {
        loc: {
          start: {
            line: 847,
            column: 23
          },
          end: {
            line: 847,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 847,
            column: 23
          },
          end: {
            line: 847,
            column: 47
          }
        }, {
          start: {
            line: 847,
            column: 51
          },
          end: {
            line: 847,
            column: 88
          }
        }],
        line: 847
      },
      "68": {
        loc: {
          start: {
            line: 847,
            column: 61
          },
          end: {
            line: 847,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 847,
            column: 61
          },
          end: {
            line: 847,
            column: 82
          }
        }, {
          start: {
            line: 847,
            column: 86
          },
          end: {
            line: 847,
            column: 87
          }
        }],
        line: 847
      },
      "69": {
        loc: {
          start: {
            line: 855,
            column: 31
          },
          end: {
            line: 855,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 855,
            column: 48
          },
          end: {
            line: 855,
            column: 84
          }
        }, {
          start: {
            line: 855,
            column: 87
          },
          end: {
            line: 855,
            column: 88
          }
        }],
        line: 855
      },
      "70": {
        loc: {
          start: {
            line: 858,
            column: 51
          },
          end: {
            line: 858,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 858,
            column: 51
          },
          end: {
            line: 858,
            column: 70
          }
        }, {
          start: {
            line: 858,
            column: 74
          },
          end: {
            line: 858,
            column: 79
          }
        }],
        line: 858
      },
      "71": {
        loc: {
          start: {
            line: 864,
            column: 8
          },
          end: {
            line: 869,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 864,
            column: 8
          },
          end: {
            line: 869,
            column: 9
          }
        }, {
          start: {
            line: 867,
            column: 13
          },
          end: {
            line: 869,
            column: 9
          }
        }],
        line: 864
      },
      "72": {
        loc: {
          start: {
            line: 864,
            column: 12
          },
          end: {
            line: 864,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 864,
            column: 12
          },
          end: {
            line: 864,
            column: 50
          }
        }, {
          start: {
            line: 864,
            column: 54
          },
          end: {
            line: 864,
            column: 71
          }
        }],
        line: 864
      },
      "73": {
        loc: {
          start: {
            line: 867,
            column: 13
          },
          end: {
            line: 869,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 867,
            column: 13
          },
          end: {
            line: 869,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 867
      },
      "74": {
        loc: {
          start: {
            line: 867,
            column: 17
          },
          end: {
            line: 867,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 867,
            column: 17
          },
          end: {
            line: 867,
            column: 55
          }
        }, {
          start: {
            line: 867,
            column: 59
          },
          end: {
            line: 867,
            column: 77
          }
        }],
        line: 867
      },
      "75": {
        loc: {
          start: {
            line: 916,
            column: 29
          },
          end: {
            line: 916,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 916,
            column: 29
          },
          end: {
            line: 916,
            column: 45
          }
        }, {
          start: {
            line: 916,
            column: 49
          },
          end: {
            line: 916,
            column: 62
          }
        }],
        line: 916
      },
      "76": {
        loc: {
          start: {
            line: 931,
            column: 8
          },
          end: {
            line: 933,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 931,
            column: 8
          },
          end: {
            line: 933,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 931
      },
      "77": {
        loc: {
          start: {
            line: 935,
            column: 8
          },
          end: {
            line: 937,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 935,
            column: 8
          },
          end: {
            line: 937,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 935
      },
      "78": {
        loc: {
          start: {
            line: 939,
            column: 8
          },
          end: {
            line: 940,
            column: 54
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 939,
            column: 8
          },
          end: {
            line: 940,
            column: 54
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 939
      },
      "79": {
        loc: {
          start: {
            line: 941,
            column: 8
          },
          end: {
            line: 942,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 941,
            column: 8
          },
          end: {
            line: 942,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 941
      },
      "80": {
        loc: {
          start: {
            line: 943,
            column: 8
          },
          end: {
            line: 946,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 943,
            column: 8
          },
          end: {
            line: 946,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 943
      },
      "81": {
        loc: {
          start: {
            line: 945,
            column: 36
          },
          end: {
            line: 945,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 945,
            column: 52
          },
          end: {
            line: 945,
            column: 61
          }
        }, {
          start: {
            line: 945,
            column: 64
          },
          end: {
            line: 945,
            column: 73
          }
        }],
        line: 945
      },
      "82": {
        loc: {
          start: {
            line: 961,
            column: 8
          },
          end: {
            line: 963,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 961,
            column: 8
          },
          end: {
            line: 963,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 961
      },
      "83": {
        loc: {
          start: {
            line: 975,
            column: 8
          },
          end: {
            line: 977,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 975,
            column: 8
          },
          end: {
            line: 977,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 975
      },
      "84": {
        loc: {
          start: {
            line: 981,
            column: 8
          },
          end: {
            line: 1000,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 981,
            column: 8
          },
          end: {
            line: 1000,
            column: 9
          }
        }, {
          start: {
            line: 992,
            column: 13
          },
          end: {
            line: 1000,
            column: 9
          }
        }],
        line: 981
      },
      "85": {
        loc: {
          start: {
            line: 1030,
            column: 27
          },
          end: {
            line: 1030,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1030,
            column: 52
          },
          end: {
            line: 1030,
            column: 65
          }
        }, {
          start: {
            line: 1030,
            column: 68
          },
          end: {
            line: 1030,
            column: 83
          }
        }],
        line: 1030
      },
      "86": {
        loc: {
          start: {
            line: 1037,
            column: 8
          },
          end: {
            line: 1060,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 1038,
            column: 12
          },
          end: {
            line: 1042,
            column: 22
          }
        }, {
          start: {
            line: 1043,
            column: 12
          },
          end: {
            line: 1047,
            column: 22
          }
        }, {
          start: {
            line: 1048,
            column: 12
          },
          end: {
            line: 1052,
            column: 22
          }
        }, {
          start: {
            line: 1053,
            column: 12
          },
          end: {
            line: 1057,
            column: 22
          }
        }, {
          start: {
            line: 1058,
            column: 12
          },
          end: {
            line: 1059,
            column: 77
          }
        }],
        line: 1037
      },
      "87": {
        loc: {
          start: {
            line: 1039,
            column: 16
          },
          end: {
            line: 1041,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1039,
            column: 16
          },
          end: {
            line: 1041,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1039
      },
      "88": {
        loc: {
          start: {
            line: 1039,
            column: 20
          },
          end: {
            line: 1039,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1039,
            column: 20
          },
          end: {
            line: 1039,
            column: 41
          }
        }, {
          start: {
            line: 1039,
            column: 45
          },
          end: {
            line: 1039,
            column: 62
          }
        }],
        line: 1039
      },
      "89": {
        loc: {
          start: {
            line: 1044,
            column: 16
          },
          end: {
            line: 1046,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1044,
            column: 16
          },
          end: {
            line: 1046,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1044
      },
      "90": {
        loc: {
          start: {
            line: 1044,
            column: 20
          },
          end: {
            line: 1044,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1044,
            column: 20
          },
          end: {
            line: 1044,
            column: 35
          }
        }, {
          start: {
            line: 1044,
            column: 39
          },
          end: {
            line: 1044,
            column: 58
          }
        }],
        line: 1044
      },
      "91": {
        loc: {
          start: {
            line: 1049,
            column: 16
          },
          end: {
            line: 1051,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1049,
            column: 16
          },
          end: {
            line: 1051,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1049
      },
      "92": {
        loc: {
          start: {
            line: 1049,
            column: 20
          },
          end: {
            line: 1049,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1049,
            column: 20
          },
          end: {
            line: 1049,
            column: 38
          }
        }, {
          start: {
            line: 1049,
            column: 42
          },
          end: {
            line: 1049,
            column: 62
          }
        }],
        line: 1049
      },
      "93": {
        loc: {
          start: {
            line: 1054,
            column: 16
          },
          end: {
            line: 1056,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1054,
            column: 16
          },
          end: {
            line: 1056,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1054
      },
      "94": {
        loc: {
          start: {
            line: 1063,
            column: 8
          },
          end: {
            line: 1074,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 1064,
            column: 12
          },
          end: {
            line: 1065,
            column: 76
          }
        }, {
          start: {
            line: 1066,
            column: 12
          },
          end: {
            line: 1067,
            column: 74
          }
        }, {
          start: {
            line: 1068,
            column: 12
          },
          end: {
            line: 1069,
            column: 70
          }
        }, {
          start: {
            line: 1070,
            column: 12
          },
          end: {
            line: 1071,
            column: 68
          }
        }, {
          start: {
            line: 1072,
            column: 12
          },
          end: {
            line: 1073,
            column: 114
          }
        }],
        line: 1063
      },
      "95": {
        loc: {
          start: {
            line: 1080,
            column: 12
          },
          end: {
            line: 1082,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1080,
            column: 12
          },
          end: {
            line: 1082,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1080
      },
      "96": {
        loc: {
          start: {
            line: 1080,
            column: 16
          },
          end: {
            line: 1080,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1080,
            column: 16
          },
          end: {
            line: 1080,
            column: 37
          }
        }, {
          start: {
            line: 1080,
            column: 41
          },
          end: {
            line: 1080,
            column: 58
          }
        }],
        line: 1080
      },
      "97": {
        loc: {
          start: {
            line: 1094,
            column: 12
          },
          end: {
            line: 1096,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1094,
            column: 12
          },
          end: {
            line: 1096,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1094
      },
      "98": {
        loc: {
          start: {
            line: 1094,
            column: 16
          },
          end: {
            line: 1094,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1094,
            column: 16
          },
          end: {
            line: 1094,
            column: 31
          }
        }, {
          start: {
            line: 1094,
            column: 35
          },
          end: {
            line: 1094,
            column: 54
          }
        }],
        line: 1094
      },
      "99": {
        loc: {
          start: {
            line: 1107,
            column: 12
          },
          end: {
            line: 1109,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1107,
            column: 12
          },
          end: {
            line: 1109,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1107
      },
      "100": {
        loc: {
          start: {
            line: 1107,
            column: 16
          },
          end: {
            line: 1107,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1107,
            column: 16
          },
          end: {
            line: 1107,
            column: 34
          }
        }, {
          start: {
            line: 1107,
            column: 38
          },
          end: {
            line: 1107,
            column: 58
          }
        }],
        line: 1107
      },
      "101": {
        loc: {
          start: {
            line: 1133,
            column: 12
          },
          end: {
            line: 1138,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1133,
            column: 12
          },
          end: {
            line: 1138,
            column: 13
          }
        }, {
          start: {
            line: 1136,
            column: 17
          },
          end: {
            line: 1138,
            column: 13
          }
        }],
        line: 1133
      },
      "102": {
        loc: {
          start: {
            line: 1145,
            column: 8
          },
          end: {
            line: 1156,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 1146,
            column: 12
          },
          end: {
            line: 1147,
            column: 87
          }
        }, {
          start: {
            line: 1148,
            column: 12
          },
          end: {
            line: 1149,
            column: 85
          }
        }, {
          start: {
            line: 1150,
            column: 12
          },
          end: {
            line: 1151,
            column: 81
          }
        }, {
          start: {
            line: 1152,
            column: 12
          },
          end: {
            line: 1153,
            column: 79
          }
        }, {
          start: {
            line: 1154,
            column: 12
          },
          end: {
            line: 1155,
            column: 60
          }
        }],
        line: 1145
      },
      "103": {
        loc: {
          start: {
            line: 1161,
            column: 23
          },
          end: {
            line: 1161,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1161,
            column: 23
          },
          end: {
            line: 1161,
            column: 41
          }
        }, {
          start: {
            line: 1161,
            column: 45
          },
          end: {
            line: 1161,
            column: 56
          }
        }],
        line: 1161
      },
      "104": {
        loc: {
          start: {
            line: 1196,
            column: 30
          },
          end: {
            line: 1196,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1196,
            column: 30
          },
          end: {
            line: 1196,
            column: 55
          }
        }, {
          start: {
            line: 1196,
            column: 59
          },
          end: {
            line: 1196,
            column: 60
          }
        }],
        line: 1196
      },
      "105": {
        loc: {
          start: {
            line: 1218,
            column: 8
          },
          end: {
            line: 1220,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1218,
            column: 8
          },
          end: {
            line: 1220,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1218
      },
      "106": {
        loc: {
          start: {
            line: 1228,
            column: 24
          },
          end: {
            line: 1228,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1228,
            column: 24
          },
          end: {
            line: 1228,
            column: 33
          }
        }, {
          start: {
            line: 1228,
            column: 37
          },
          end: {
            line: 1228,
            column: 46
          }
        }],
        line: 1228
      },
      "107": {
        loc: {
          start: {
            line: 1228,
            column: 50
          },
          end: {
            line: 1228,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1228,
            column: 50
          },
          end: {
            line: 1228,
            column: 59
          }
        }, {
          start: {
            line: 1228,
            column: 63
          },
          end: {
            line: 1228,
            column: 72
          }
        }],
        line: 1228
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0,
      "302": 0,
      "303": 0,
      "304": 0,
      "305": 0,
      "306": 0,
      "307": 0,
      "308": 0,
      "309": 0,
      "310": 0,
      "311": 0,
      "312": 0,
      "313": 0,
      "314": 0,
      "315": 0,
      "316": 0,
      "317": 0,
      "318": 0,
      "319": 0,
      "320": 0,
      "321": 0,
      "322": 0,
      "323": 0,
      "324": 0,
      "325": 0,
      "326": 0,
      "327": 0,
      "328": 0,
      "329": 0,
      "330": 0,
      "331": 0,
      "332": 0,
      "333": 0,
      "334": 0,
      "335": 0,
      "336": 0,
      "337": 0,
      "338": 0,
      "339": 0,
      "340": 0,
      "341": 0,
      "342": 0,
      "343": 0,
      "344": 0,
      "345": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0, 0, 0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0, 0, 0, 0],
      "39": [0, 0],
      "40": [0, 0, 0, 0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0, 0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0, 0],
      "66": [0, 0, 0, 0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0],
      "85": [0, 0],
      "86": [0, 0, 0, 0, 0],
      "87": [0, 0],
      "88": [0, 0],
      "89": [0, 0],
      "90": [0, 0],
      "91": [0, 0],
      "92": [0, 0],
      "93": [0, 0],
      "94": [0, 0, 0, 0, 0],
      "95": [0, 0],
      "96": [0, 0],
      "97": [0, 0],
      "98": [0, 0],
      "99": [0, 0],
      "100": [0, 0],
      "101": [0, 0],
      "102": [0, 0, 0, 0, 0],
      "103": [0, 0],
      "104": [0, 0],
      "105": [0, 0],
      "106": [0, 0],
      "107": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\services\\utm.service.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\services\\utm.service.ts"],
      sourcesContent: ["import { PrismaService } from '../database/prisma.service';\n// import { UTMStatus, ConversionEventType, AttributionModel } from '@utmify/database';\nimport { nanoid } from 'nanoid';\nimport QRCode from 'qrcode';\n// import { UAParser } from 'ua-parser-js';\n// import geoip from 'geoip-lite';\nimport { ApiError } from '../utils/errors';\n\n// Temporary enums until @utmify/database is properly resolved\nenum UTMStatus {\n  ACTIVE = 'ACTIVE',\n  PAUSED = 'PAUSED',\n  ARCHIVED = 'ARCHIVED'\n}\n\nenum ConversionEventType {\n  PURCHASE = 'PURCHASE',\n  LEAD = 'LEAD',\n  SIGNUP = 'SIGNUP',\n  VIEW_CONTENT = 'VIEW_CONTENT'\n}\n\nenum AttributionModel {\n  FIRST_CLICK = 'FIRST_CLICK',\n  LAST_CLICK = 'LAST_CLICK',\n  LINEAR = 'LINEAR'\n}\n\ninterface CreateUTMData {\n  originalUrl: string;\n  utmSource?: string;\n  utmMedium?: string;\n  utmCampaign?: string;\n  utmTerm?: string;\n  utmContent?: string;\n  customParams?: Record<string, string>;\n  title?: string;\n  description?: string;\n  tags?: string[];\n  expiresAt?: string;\n  isPublic?: boolean;\n  organizationId: string;\n  userId: string;\n}\n\ninterface ListUTMQuery {\n  page: number;\n  limit: number;\n  search?: string;\n  status?: UTMStatus;\n  utmSource?: string;\n  utmMedium?: string;\n  utmCampaign?: string;\n  sortBy: 'createdAt' | 'clickCount' | 'conversionCount' | 'title';\n  sortOrder: 'asc' | 'desc';\n}\n\ninterface StatsQuery {\n  period: '24h' | '7d' | '30d' | '90d' | 'all';\n  groupBy: 'hour' | 'day' | 'week' | 'month';\n}\n\ninterface TrackingData {\n  userAgent?: string;\n  referer?: string;\n  ipAddress?: string;\n}\n\ninterface ConversionData {\n  utmLinkId?: string;\n  shortCode?: string;\n  eventType: string;\n  eventName?: string;\n  value?: number;\n  currency?: string;\n  customerId?: string;\n  customerEmail?: string;\n  metadata?: Record<string, any>;\n  organizationId: string;\n}\n\nexport class UTMService {\n  private prisma: PrismaService\n\n  constructor() {\n    this.prisma = new PrismaService()\n  }\n\n  /**\n   * Criar novo link UTM\n   */\n  async createUTMLink(data: CreateUTMData) {\n    const shortCode = nanoid(8);\n    const baseUrl = process.env.BASE_URL || 'http://localhost:3000';\n    const shortUrl = `${baseUrl}/r/${shortCode}`;\n\n    // Construir URL completa com par\xE2metros UTM\n    const url = new URL(data.originalUrl);\n    if (data.utmSource) url.searchParams.set('utm_source', data.utmSource);\n    if (data.utmMedium) url.searchParams.set('utm_medium', data.utmMedium);\n    if (data.utmCampaign) url.searchParams.set('utm_campaign', data.utmCampaign);\n    if (data.utmTerm) url.searchParams.set('utm_term', data.utmTerm);\n    if (data.utmContent) url.searchParams.set('utm_content', data.utmContent);\n    \n    // Adicionar par\xE2metros customizados\n    if (data.customParams) {\n      Object.entries(data.customParams).forEach(([key, value]) => {\n        url.searchParams.set(key, value);\n      });\n    }\n\n    const finalUrl = url.toString();\n\n    // Gerar QR Code\n    const qrCodeDataUrl = await QRCode.toDataURL(shortUrl, {\n      width: 256,\n      margin: 2,\n      color: {\n        dark: '#000000',\n        light: '#FFFFFF'\n      }\n    });\n\n    const utmLink = await this.prisma.uTMLink.create({\n      data: {\n        organizationId: data.organizationId,\n        originalUrl: finalUrl,\n        utmSource: data.utmSource,\n        utmMedium: data.utmMedium,\n        utmCampaign: data.utmCampaign,\n        utmTerm: data.utmTerm,\n        utmContent: data.utmContent,\n        customParams: data.customParams,\n        shortCode,\n        shortUrl,\n        qrCodeUrl: qrCodeDataUrl,\n        title: data.title,\n        description: data.description,\n        tags: data.tags || [],\n        isPublic: data.isPublic || false,\n        expiresAt: data.expiresAt ? new Date(data.expiresAt) : null,\n      },\n    });\n\n    return utmLink;\n  }\n\n  /**\n   * Listar links UTM\n   */\n  async listUTMLinks(organizationId: string, query: ListUTMQuery) {\n    const where: any = {\n      organizationId,\n    };\n\n    if (query.search) {\n      where.OR = [\n        { title: { contains: query.search, mode: 'insensitive' } },\n        { originalUrl: { contains: query.search, mode: 'insensitive' } },\n        { utmSource: { contains: query.search, mode: 'insensitive' } },\n        { utmMedium: { contains: query.search, mode: 'insensitive' } },\n        { utmCampaign: { contains: query.search, mode: 'insensitive' } },\n      ];\n    }\n\n    if (query.status) {\n      where.status = query.status;\n    }\n\n    if (query.utmSource) {\n      where.utmSource = query.utmSource;\n    }\n\n    if (query.utmMedium) {\n      where.utmMedium = query.utmMedium;\n    }\n\n    if (query.utmCampaign) {\n      where.utmCampaign = query.utmCampaign;\n    }\n\n    const [links, total] = await Promise.all([\n      this.prisma.uTMLink.findMany({\n        where,\n        skip: (query.page - 1) * query.limit,\n        take: query.limit,\n        orderBy: {\n          [query.sortBy]: query.sortOrder,\n        },\n        include: {\n          _count: {\n            select: {\n              clicks: true,\n              conversions: true,\n            },\n          },\n        },\n      }),\n      this.prisma.uTMLink.count({ where }),\n    ]);\n\n    return { links, total };\n  }\n\n  /**\n   * Obter estat\xEDsticas de um link UTM\n   */\n  async getUTMStats(organizationId: string, linkId: string, query: StatsQuery) {\n    const utmLink = await this.prisma.uTMLink.findFirst({\n      where: {\n        id: linkId,\n        organizationId,\n      },\n    });\n\n    if (!utmLink) {\n      return null;\n    }\n\n    // Calcular per\xEDodo\n    const now = new Date();\n    let startDate: Date;\n\n    switch (query.period) {\n      case '24h':\n        startDate = new Date(now.getTime() - 24 * 60 * 60 * 1000);\n        break;\n      case '7d':\n        startDate = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\n        break;\n      case '30d':\n        startDate = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000);\n        break;\n      case '90d':\n        startDate = new Date(now.getTime() - 90 * 24 * 60 * 60 * 1000);\n        break;\n      default:\n        startDate = new Date(0);\n    }\n\n    const whereClause = {\n      utmLinkId: linkId,\n      clickedAt: {\n        gte: startDate,\n      },\n    };\n\n    // Estat\xEDsticas b\xE1sicas\n    const [totalClicks, uniqueClicks, conversions, clicksByCountry, clicksByDevice] = await Promise.all([\n      this.prisma.uTMClick.count({ where: whereClause }),\n      this.prisma.uTMClick.count({ where: { ...whereClause, isUnique: true } }),\n      this.prisma.uTMConversion.count({\n        where: {\n          utmLinkId: linkId,\n          convertedAt: {\n            gte: startDate,\n          },\n        },\n      }),\n      this.prisma.uTMClick.groupBy({\n        by: ['country'],\n        where: whereClause,\n        _count: true,\n        orderBy: {\n          _count: {\n            country: 'desc',\n          },\n        },\n        take: 10,\n      }),\n      this.prisma.uTMClick.groupBy({\n        by: ['deviceType'],\n        where: whereClause,\n        _count: true,\n        orderBy: {\n          _count: {\n            deviceType: 'desc',\n          },\n        },\n      }),\n    ]);\n\n    // Cliques ao longo do tempo\n    const clicksOverTime = await this.getClicksOverTime(linkId, startDate, query.groupBy);\n\n    // Taxa de convers\xE3o\n    const conversionRate = totalClicks > 0 ? (conversions / totalClicks) * 100 : 0;\n\n    return {\n      link: utmLink,\n      stats: {\n        totalClicks,\n        uniqueClicks,\n        conversions,\n        conversionRate: Math.round(conversionRate * 100) / 100,\n        clicksByCountry,\n        clicksByDevice,\n        clicksOverTime,\n      },\n    };\n  }\n\n  /**\n   * Encurtar URL\n   */\n  async shortenUrl(data: { url: string; customCode?: string; organizationId: string }) {\n    let shortCode = data.customCode;\n\n    if (shortCode) {\n      // Verificar se o c\xF3digo personalizado j\xE1 existe\n      const existing = await this.prisma.uTMLink.findUnique({\n        where: { shortCode },\n      });\n\n      if (existing) {\n        throw new Error('CUSTOM_CODE_EXISTS');\n      }\n    } else {\n      shortCode = nanoid(8);\n    }\n\n    const baseUrl = process.env.BASE_URL || 'http://localhost:3000';\n    const shortUrl = `${baseUrl}/r/${shortCode}`;\n\n    const utmLink = await this.prisma.uTMLink.create({\n      data: {\n        organizationId: data.organizationId,\n        originalUrl: data.url,\n        shortCode,\n        shortUrl,\n      },\n    });\n\n    return utmLink;\n  }\n\n  /**\n   * Rastrear clique e redirecionar\n   */\n  async trackClickAndRedirect(shortCode: string, trackingData: TrackingData) {\n    const utmLink = await this.prisma.uTMLink.findUnique({\n      where: { shortCode },\n    });\n\n    if (!utmLink || utmLink.status !== 'ACTIVE') {\n      return null;\n    }\n\n    // Verificar se o link expirou\n    if (utmLink.expiresAt && utmLink.expiresAt < new Date()) {\n      return null;\n    }\n\n    // Analisar User Agent\n    const parser = new UAParser(trackingData.userAgent);\n    const device = parser.getResult();\n\n    // Obter geolocaliza\xE7\xE3o\n    const geo = trackingData.ipAddress ? geoip.lookup(trackingData.ipAddress) : null;\n\n    // Verificar se \xE9 um clique \xFAnico (baseado no IP e User Agent)\n    const sessionId = this.generateSessionId(trackingData.ipAddress, trackingData.userAgent);\n    const existingClick = await this.prisma.uTMClick.findFirst({\n      where: {\n        utmLinkId: utmLink.id,\n        sessionId,\n      },\n    });\n\n    const isUnique = !existingClick;\n\n    // Registrar o clique\n    await this.prisma.uTMClick.create({\n      data: {\n        utmLinkId: utmLink.id,\n        organizationId: utmLink.organizationId,\n        ipAddress: trackingData.ipAddress,\n        userAgent: trackingData.userAgent,\n        referer: trackingData.referer,\n        country: geo?.country,\n        region: geo?.region,\n        city: geo?.city,\n        latitude: geo?.ll?.[0],\n        longitude: geo?.ll?.[1],\n        deviceType: device.device.type || 'desktop',\n        browser: device.browser.name,\n        browserVersion: device.browser.version,\n        os: device.os.name,\n        osVersion: device.os.version,\n        sessionId,\n        isUnique,\n      },\n    });\n\n    // Atualizar contadores\n    await this.prisma.uTMLink.update({\n      where: { id: utmLink.id },\n      data: {\n        clickCount: {\n          increment: 1,\n        },\n        uniqueClicks: isUnique\n          ? {\n              increment: 1,\n            }\n          : undefined,\n      },\n    });\n\n    return {\n      originalUrl: utmLink.originalUrl,\n    };\n  }\n\n  /**\n   * Cria\xE7\xE3o em massa de links UTM\n   */\n  async bulkCreateUTMLinks(data: {\n    links: CreateUTMData[];\n    organizationId: string;\n    userId: string;\n  }) {\n    const results = {\n      created: [],\n      failed: [],\n    };\n\n    for (const linkData of data.links) {\n      try {\n        const utmLink = await this.createUTMLink({\n          ...linkData,\n          organizationId: data.organizationId,\n          userId: data.userId,\n        });\n        results.created.push(utmLink);\n      } catch (error) {\n        results.failed.push({\n          data: linkData,\n          error: error.message,\n        });\n      }\n    }\n\n    return results;\n  }\n\n  /**\n   * Atualizar link UTM\n   */\n  async updateUTMLink(organizationId: string, linkId: string, data: Partial<CreateUTMData>) {\n    const utmLink = await this.prisma.uTMLink.findFirst({\n      where: {\n        id: linkId,\n        organizationId,\n      },\n    });\n\n    if (!utmLink) {\n      return null;\n    }\n\n    return await this.prisma.uTMLink.update({\n      where: { id: linkId },\n      data: {\n        ...data,\n        expiresAt: data.expiresAt ? new Date(data.expiresAt) : undefined,\n      },\n    });\n  }\n\n  /**\n   * Deletar link UTM\n   */\n  async deleteUTMLink(organizationId: string, linkId: string) {\n    const utmLink = await this.prisma.uTMLink.findFirst({\n      where: {\n        id: linkId,\n        organizationId,\n      },\n    });\n\n    if (!utmLink) {\n      return false;\n    }\n\n    await this.prisma.uTMLink.delete({\n      where: { id: linkId },\n    });\n\n    return true;\n  }\n\n  /**\n   * Rastrear convers\xE3o\n   */\n  async trackConversion(data: ConversionData) {\n    let utmLinkId = data.utmLinkId;\n\n    // Se n\xE3o foi fornecido o ID do link, buscar pelo c\xF3digo curto\n    if (!utmLinkId && data.shortCode) {\n      const utmLink = await this.prisma.uTMLink.findUnique({\n        where: { shortCode: data.shortCode },\n      });\n      utmLinkId = utmLink?.id;\n    }\n\n    if (!utmLinkId) {\n      throw new Error('Link UTM n\xE3o encontrado');\n    }\n\n    const conversion = await this.prisma.uTMConversion.create({\n      data: {\n        utmLinkId,\n        organizationId: data.organizationId,\n        eventType: data.eventType as ConversionEventType,\n        eventName: data.eventName,\n        value: data.value,\n        currency: data.currency,\n        customerId: data.customerId,\n        customerEmail: data.customerEmail,\n        metadata: data.metadata,\n        attributionModel: AttributionModel.LAST_CLICK,\n        attributionWeight: 1.0,\n      },\n    });\n\n    // Atualizar contador de convers\xF5es\n    await this.prisma.uTMLink.update({\n      where: { id: utmLinkId },\n      data: {\n        conversionCount: {\n          increment: 1,\n        },\n        conversionValue: data.value\n          ? {\n              increment: data.value,\n            }\n          : undefined,\n      },\n    });\n\n    return conversion;\n  }\n\n  /**\n   * Obter cliques ao longo do tempo\n   */\n  private async getClicksOverTime(linkId: string, startDate: Date, groupBy: string) {\n    // Esta \xE9 uma implementa\xE7\xE3o simplificada\n    // Em produ\xE7\xE3o, voc\xEA pode usar queries SQL mais complexas\n    const clicks = await this.prisma.uTMClick.findMany({\n      where: {\n        utmLinkId: linkId,\n        clickedAt: {\n          gte: startDate,\n        },\n      },\n      select: {\n        clickedAt: true,\n      },\n      orderBy: {\n        clickedAt: 'asc',\n      },\n    });\n\n    // Agrupar por per\xEDodo\n    const grouped = {};\n    clicks.forEach((click) => {\n      let key: string;\n      const date = new Date(click.clickedAt);\n\n      switch (groupBy) {\n        case 'hour':\n          key = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')} ${String(date.getHours()).padStart(2, '0')}:00`;\n          break;\n        case 'day':\n          key = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;\n          break;\n        case 'week':\n          const weekStart = new Date(date);\n          weekStart.setDate(date.getDate() - date.getDay());\n          key = `${weekStart.getFullYear()}-W${Math.ceil(weekStart.getDate() / 7)}`;\n          break;\n        case 'month':\n          key = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n          break;\n        default:\n          key = date.toISOString().split('T')[0];\n      }\n\n      grouped[key] = (grouped[key] || 0) + 1;\n    });\n\n    return Object.entries(grouped).map(([date, count]) => ({\n      date,\n      count,\n    }));\n  }\n\n  /**\n   * Exportar dados UTM\n   */\n  async exportData(options: {\n    format: 'csv' | 'json' | 'xlsx';\n    dateRange: string;\n    startDate?: string;\n    endDate?: string;\n    includeClicks: boolean;\n    includeConversions: boolean;\n    includeMetrics: boolean;\n    utmSource?: string;\n    utmMedium?: string;\n    utmCampaign?: string;\n    organizationId: string;\n  }) {\n    // Calculate date range\n    let startDate: Date;\n    let endDate: Date = new Date();\n\n    switch (options.dateRange) {\n      case 'last7days':\n        startDate = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000);\n        break;\n      case 'last30days':\n        startDate = new Date(Date.now() - 30 * 24 * 60 * 60 * 1000);\n        break;\n      case 'last90days':\n        startDate = new Date(Date.now() - 90 * 24 * 60 * 60 * 1000);\n        break;\n      case 'custom':\n        startDate = options.startDate ? new Date(options.startDate) : new Date(Date.now() - 30 * 24 * 60 * 60 * 1000);\n        endDate = options.endDate ? new Date(options.endDate) : new Date();\n        break;\n      default:\n        startDate = new Date(Date.now() - 30 * 24 * 60 * 60 * 1000);\n    }\n\n    // Build where clause for UTM links\n    const whereClause: any = {\n      organizationId: options.organizationId,\n      createdAt: {\n        gte: startDate,\n        lte: endDate,\n      },\n    };\n\n    if (options.utmSource) whereClause.utmSource = { contains: options.utmSource };\n    if (options.utmMedium) whereClause.utmMedium = { contains: options.utmMedium };\n    if (options.utmCampaign) whereClause.utmCampaign = { contains: options.utmCampaign };\n\n    // Fetch UTM links with related data\n    const utmLinks = await this.prisma.uTMLink.findMany({\n      where: whereClause,\n      include: {\n        clicks: options.includeClicks ? {\n          where: {\n            createdAt: {\n              gte: startDate,\n              lte: endDate,\n            },\n          },\n        } : false,\n        conversions: options.includeConversions ? {\n          where: {\n            createdAt: {\n              gte: startDate,\n              lte: endDate,\n            },\n          },\n        } : false,\n      },\n      orderBy: {\n        createdAt: 'desc',\n      },\n    });\n\n    // Prepare export data\n    const exportData = utmLinks.map(link => {\n      const baseData = {\n        id: link.id,\n        title: link.title,\n        originalUrl: link.originalUrl,\n        shortUrl: link.shortUrl,\n        shortCode: link.shortCode,\n        utmSource: link.utmSource,\n        utmMedium: link.utmMedium,\n        utmCampaign: link.utmCampaign,\n        utmTerm: link.utmTerm,\n        utmContent: link.utmContent,\n        status: link.status,\n        createdAt: link.createdAt,\n        expiresAt: link.expiresAt,\n      };\n\n      if (options.includeMetrics) {\n        Object.assign(baseData, {\n          clickCount: link.clickCount,\n          conversionCount: link.conversionCount,\n          conversionValue: link.conversionValue,\n          conversionRate: link.clickCount > 0 ? (link.conversionCount / link.clickCount * 100).toFixed(2) + '%' : '0%',\n        });\n      }\n\n      return baseData;\n    });\n\n    // Generate filename\n    const timestamp = new Date().toISOString().split('T')[0];\n    const filename = `utm-export-${timestamp}.${options.format}`;\n\n    // Format data based on export format\n    switch (options.format) {\n      case 'csv':\n        return {\n          data: this.generateCSV(exportData),\n          filename,\n          mimeType: 'text/csv',\n        };\n      case 'json':\n        return {\n          data: JSON.stringify({\n            exportDate: new Date().toISOString(),\n            dateRange: {\n              start: startDate.toISOString(),\n              end: endDate.toISOString(),\n            },\n            filters: {\n              utmSource: options.utmSource,\n              utmMedium: options.utmMedium,\n              utmCampaign: options.utmCampaign,\n            },\n            data: exportData,\n            summary: {\n              totalLinks: exportData.length,\n              totalClicks: exportData.reduce((sum, item) => sum + (item.clickCount || 0), 0),\n              totalConversions: exportData.reduce((sum, item) => sum + (item.conversionCount || 0), 0),\n              totalValue: exportData.reduce((sum, item) => sum + (item.conversionValue || 0), 0),\n            },\n          }, null, 2),\n          filename,\n          mimeType: 'application/json',\n        };\n      case 'xlsx':\n        // For now, return CSV format for XLSX (would need xlsx library for proper implementation)\n        return {\n          data: this.generateCSV(exportData),\n          filename: filename.replace('.xlsx', '.csv'),\n          mimeType: 'text/csv',\n        };\n      default:\n        throw new Error('Formato de export n\xE3o suportado');\n    }\n  }\n\n  /**\n   * Gerar CSV a partir dos dados\n   */\n  private generateCSV(data: any[]): string {\n    if (data.length === 0) {\n      return 'Nenhum dado encontrado';\n    }\n\n    const headers = Object.keys(data[0]);\n    const csvHeaders = headers.join(',');\n    \n    const csvRows = data.map(row => {\n      return headers.map(header => {\n        const value = row[header];\n        // Escape commas and quotes in CSV\n        if (typeof value === 'string' && (value.includes(',') || value.includes('\"'))) {\n          return `\"${value.replace(/\"/g, '\"\"')}\"`;\n        }\n        return value || '';\n      }).join(',');\n    });\n\n    return [csvHeaders, ...csvRows].join('\\n');\n  }\n\n  // Notification methods\n  async getNotifications(organizationId: string, options: {\n    page: number;\n    limit: number;\n    unreadOnly: boolean;\n  }) {\n    const skip = (options.page - 1) * options.limit;\n    \n    const whereClause: any = {\n      organizationId\n    };\n    \n    if (options.unreadOnly) {\n      whereClause.isRead = false;\n    }\n    \n    const [alerts, total] = await Promise.all([\n      this.prisma.notificationAlert.findMany({\n        where: whereClause,\n        orderBy: { createdAt: 'desc' },\n        skip,\n        take: options.limit,\n        include: {\n          rule: {\n            select: {\n              name: true\n            }\n          },\n          utmLink: {\n            select: {\n              campaign: true\n            }\n          }\n        }\n      }),\n      this.prisma.notificationAlert.count({ where: whereClause })\n    ]);\n    \n    return {\n      alerts: alerts.map(alert => ({\n        id: alert.id,\n        ruleId: alert.ruleId,\n        ruleName: alert.rule.name,\n        message: alert.message,\n        severity: alert.severity,\n        utmLinkId: alert.utmLinkId,\n        utmCampaign: alert.utmLink?.campaign,\n        data: alert.data as Record<string, any>,\n        isRead: alert.isRead,\n        createdAt: alert.createdAt.toISOString()\n      })),\n      pagination: {\n        page: options.page,\n        limit: options.limit,\n        total,\n        totalPages: Math.ceil(total / options.limit)\n      }\n    };\n  }\n  \n  async createNotificationRule(organizationId: string, ruleData: any) {\n    const rule = await this.prisma.notificationRule.create({\n      data: {\n        organizationId,\n        name: ruleData.name,\n        description: ruleData.description || '',\n        isActive: ruleData.isActive ?? true,\n        triggerType: ruleData.triggerType,\n        condition: ruleData.condition,\n        channels: ruleData.channels,\n        recipients: ruleData.recipients,\n        message: ruleData.message,\n        utmCampaigns: ruleData.utmCampaigns || []\n      }\n    });\n    \n    return rule.id;\n  }\n  \n  async getNotificationRules(organizationId: string) {\n    const rules = await this.prisma.notificationRule.findMany({\n      where: { organizationId },\n      orderBy: { createdAt: 'desc' },\n      include: {\n        _count: {\n          select: {\n            alerts: true\n          }\n        }\n      }\n    });\n    \n    return {\n      rules: rules.map(rule => ({\n        id: rule.id,\n        name: rule.name,\n        description: rule.description,\n        isActive: rule.isActive,\n        triggerType: rule.triggerType,\n        condition: rule.condition as Record<string, any>,\n        channels: rule.channels,\n        recipients: rule.recipients,\n        message: rule.message,\n        utmCampaigns: rule.utmCampaigns,\n        createdAt: rule.createdAt.toISOString(),\n        lastTriggered: rule.lastTriggered?.toISOString(),\n        alertCount: rule._count.alerts\n      }))\n    };\n  }\n  \n  async updateNotificationRule(organizationId: string, ruleId: string, updateData: any) {\n    await this.prisma.notificationRule.updateMany({\n      where: {\n        id: ruleId,\n        organizationId\n      },\n      data: {\n        name: updateData.name,\n        description: updateData.description,\n        isActive: updateData.isActive,\n        triggerType: updateData.triggerType,\n        condition: updateData.condition,\n        channels: updateData.channels,\n        recipients: updateData.recipients,\n        message: updateData.message,\n        utmCampaigns: updateData.utmCampaigns,\n        updatedAt: new Date()\n      }\n    });\n  }\n  \n  async deleteNotificationRule(organizationId: string, ruleId: string) {\n    await this.prisma.notificationRule.deleteMany({\n      where: {\n        id: ruleId,\n        organizationId\n      }\n    });\n  }\n  \n  async markNotificationAsRead(organizationId: string, alertId: string) {\n    await this.prisma.notificationAlert.updateMany({\n      where: {\n        id: alertId,\n        organizationId\n      },\n      data: {\n        isRead: true,\n        readAt: new Date()\n      }\n    });\n  }\n  \n  // Method to check rules and trigger notifications\n  async checkNotificationRules(utmLinkId: string) {\n    const utmLink = await this.prisma.uTMLink.findUnique({\n      where: { id: utmLinkId },\n      include: {\n        clicks: {\n          where: {\n            clickedAt: {\n              gte: new Date(Date.now() - 24 * 60 * 60 * 1000) // Last 24 hours\n            }\n          }\n        },\n        conversions: {\n          where: {\n            convertedAt: {\n              gte: new Date(Date.now() - 24 * 60 * 60 * 1000) // Last 24 hours\n            }\n          }\n        }\n      }\n    });\n    \n    if (!utmLink) return;\n    \n    const rules = await this.prisma.notificationRule.findMany({\n      where: {\n        organizationId: utmLink.organizationId,\n        isActive: true,\n        OR: [\n          { utmCampaigns: { isEmpty: true } },\n          { utmCampaigns: { has: utmLink.utmCampaign } }\n        ]\n      }\n    });\n    \n    for (const rule of rules) {\n      const shouldTrigger = await this.evaluateRule(rule, utmLink);\n      \n      if (shouldTrigger) {\n        await this.createAlert(rule, utmLink);\n        \n        // Update last triggered\n        await this.prisma.notificationRule.update({\n          where: { id: rule.id },\n          data: { lastTriggered: new Date() }\n        });\n      }\n    }\n  }\n  \n  private async evaluateRule(rule: any, utmLink: any): Promise<boolean> {\n    const condition = rule.condition as any;\n    const clickCount = utmLink.clicks.length;\n    const conversionCount = utmLink.conversions.length;\n    const conversionRate = clickCount > 0 ? (conversionCount / clickCount) * 100 : 0;\n    \n    let value: number;\n    \n    switch (rule.triggerType) {\n      case 'click_threshold':\n        value = clickCount;\n        break;\n      case 'conversion_rate':\n        value = conversionRate;\n        break;\n      default:\n        return false;\n    }\n    \n    switch (condition.operator) {\n      case 'greater_than':\n        return value > condition.value;\n      case 'less_than':\n        return value < condition.value;\n      case 'equals':\n        return value === condition.value;\n      case 'between':\n        return value >= condition.value && value <= (condition.secondValue || 0);\n      default:\n        return false;\n    }\n  }\n  \n  private async createAlert(rule: any, utmLink: any) {\n    const clickCount = utmLink.clicks.length;\n    const conversionCount = utmLink.conversions.length;\n    const conversionRate = clickCount > 0 ? (conversionCount / clickCount) * 100 : 0;\n    \n    // Replace template variables in message\n    let message = rule.message;\n    message = message.replace(/{{campaign}}/g, utmLink.utmCampaign || 'N/A');\n    message = message.replace(/{{clicks}}/g, clickCount.toString());\n    message = message.replace(/{{conversions}}/g, conversionCount.toString());\n    message = message.replace(/{{rate}}/g, conversionRate.toFixed(2));\n    \n    // Determine severity based on rule type and values\n    let severity = 'medium';\n    if (rule.triggerType === 'click_threshold' && clickCount > 5000) {\n      severity = 'high';\n    } else if (rule.triggerType === 'conversion_rate' && conversionRate < 1) {\n      severity = 'critical';\n    }\n    \n    await this.prisma.notificationAlert.create({\n      data: {\n        organizationId: utmLink.organizationId,\n        ruleId: rule.id,\n        utmLinkId: utmLink.id,\n        message,\n        severity,\n        data: {\n          clicks: clickCount,\n          conversions: conversionCount,\n          conversionRate,\n          campaign: utmLink.utmCampaign\n        },\n        isRead: false\n      }\n    });\n  }\n\n  // Integration management methods\n  async getIntegrations(organizationId: string) {\n    const integrations = await this.prisma.integration.findMany({\n      where: {\n        organizationId\n      },\n      select: {\n        id: true,\n        platform: true,\n        isActive: true,\n        lastSync: true,\n        accountName: true,\n        syncStatus: true,\n        settings: true,\n        createdAt: true,\n        updatedAt: true\n      }\n    });\n\n    return integrations;\n  }\n\n  async createIntegration(data: {\n    organizationId: string;\n    userId: string;\n    platform: 'GOOGLE_ANALYTICS' | 'FACEBOOK_PIXEL' | 'GOOGLE_ADS' | 'WEBHOOK';\n    config: Record<string, any>;\n    accountName?: string;\n  }) {\n    // Validate configuration based on integration platform\n    await this.validateIntegrationConfig(data.platform, data.config);\n\n    const integration = await this.prisma.integration.create({\n      data: {\n        organizationId: data.organizationId,\n        userId: data.userId,\n        platform: data.platform,\n        settings: data.config,\n        accountName: data.accountName || data.platform,\n        isActive: false,\n        syncStatus: 'PENDING'\n      }\n    });\n\n    return integration;\n  }\n\n  async updateIntegration(id: string, data: {\n    organizationId: string;\n    accountName?: string;\n    config?: Record<string, any>;\n    isActive?: boolean;\n  }) {\n    // Verify integration belongs to organization\n    const existingIntegration = await this.prisma.integration.findFirst({\n      where: {\n        id,\n        organizationId: data.organizationId\n      }\n    });\n\n    if (!existingIntegration) {\n      throw new Error('Integration not found');\n    }\n\n    // Validate configuration if provided\n    if (data.config) {\n      await this.validateIntegrationConfig(existingIntegration.platform, data.config);\n    }\n\n    const updateData: any = {};\n    if (data.accountName !== undefined) updateData.accountName = data.accountName;\n    if (data.config !== undefined) updateData.settings = data.config;\n    if (data.isActive !== undefined) {\n      updateData.isActive = data.isActive;\n      updateData.syncStatus = data.isActive ? 'SYNCING' : 'PENDING';\n    }\n\n    const integration = await this.prisma.integration.update({\n      where: { id },\n      data: updateData\n    });\n\n    return integration;\n  }\n\n  async deleteIntegration(id: string, organizationId: string) {\n    // Verify integration belongs to organization\n    const integration = await this.prisma.integration.findFirst({\n      where: {\n        id,\n        organizationId\n      }\n    });\n\n    if (!integration) {\n      throw new Error('Integration not found');\n    }\n\n    await this.prisma.integration.delete({\n      where: { id }\n    });\n  }\n\n  async testIntegration(id: string, organizationId: string) {\n    const integration = await this.prisma.integration.findFirst({\n      where: {\n        id,\n        organizationId\n      }\n    });\n\n    if (!integration) {\n      throw new Error('Integration not found');\n    }\n\n    // Test connection based on integration platform\n    const testResult = await this.performIntegrationTest(integration);\n\n    // Update last sync time if test is successful\n    if (testResult.success) {\n      await this.prisma.integration.update({\n        where: { id },\n        data: {\n          lastSync: new Date(),\n          syncStatus: 'SYNCING',\n          isActive: true,\n          lastError: null\n        }\n      });\n    } else {\n      await this.prisma.integration.update({\n        where: { id },\n        data: {\n          syncStatus: 'ERROR',\n          lastError: testResult.error\n        }\n      });\n    }\n\n    return testResult;\n  }\n\n  async sendEventToIntegrations(data: {\n    organizationId: string;\n    eventType: string;\n    eventData: Record<string, any>;\n    utmLinkId?: string;\n  }) {\n    const integrations = await this.prisma.integration.findMany({\n      where: {\n        organizationId: data.organizationId,\n        enabled: true,\n        status: 'connected',\n        events: {\n          has: data.eventType\n        }\n      }\n    });\n\n    const results = [];\n\n    for (const integration of integrations) {\n      try {\n        const result = await this.sendEventToIntegration(integration, data);\n        results.push({\n          integrationId: integration.id,\n          integrationName: integration.name,\n          success: true,\n          result\n        });\n      } catch (error) {\n        results.push({\n          integrationId: integration.id,\n          integrationName: integration.name,\n          success: false,\n          error: error instanceof Error ? error.message : 'Unknown error'\n        });\n      }\n    }\n\n    return results;\n  }\n\n  private async validateIntegrationConfig(platform: string, config: Record<string, any>) {\n    switch (platform) {\n      case 'GOOGLE_ANALYTICS':\n        if (!config.measurementId || !config.apiSecret) {\n          throw new Error('Google Analytics requires measurementId and apiSecret');\n        }\n        break;\n      case 'FACEBOOK_PIXEL':\n        if (!config.pixelId || !config.accessToken) {\n          throw new Error('Facebook Pixel requires pixelId and accessToken');\n        }\n        break;\n      case 'GOOGLE_ADS':\n        if (!config.customerId || !config.conversionId) {\n          throw new Error('Google Ads requires customerId and conversionId');\n        }\n        break;\n      case 'WEBHOOK':\n        if (!config.url) {\n          throw new Error('Webhook requires url');\n        }\n        break;\n      default:\n        throw new Error(`Unknown integration platform: ${platform}`);\n    }\n  }\n\n  private async performIntegrationTest(integration: any) {\n    switch (integration.platform) {\n      case 'GOOGLE_ANALYTICS':\n        return await this.testGoogleAnalytics(integration.settings);\n      case 'FACEBOOK_PIXEL':\n        return await this.testFacebookPixel(integration.settings);\n      case 'GOOGLE_ADS':\n        return await this.testGoogleAds(integration.settings);\n      case 'WEBHOOK':\n        return await this.testWebhook(integration.settings);\n      default:\n        return { success: false, message: 'Unknown integration platform', error: 'Unsupported platform' };\n    }\n  }\n\n  private async testGoogleAnalytics(config: any) {\n    try {\n      // Simulate Google Analytics API test\n      // In real implementation, you would make an actual API call\n      if (!config.measurementId || !config.apiSecret) {\n        return { success: false, message: 'Invalid configuration' };\n      }\n      \n      // Simulate API call delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      return { success: true, message: 'Google Analytics connection successful' };\n    } catch (error) {\n      return { success: false, message: 'Failed to connect to Google Analytics' };\n    }\n  }\n\n  private async testFacebookPixel(config: any) {\n    try {\n      // Simulate Facebook Pixel API test\n      if (!config.pixelId || !config.accessToken) {\n        return { success: false, message: 'Invalid configuration' };\n      }\n      \n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      return { success: true, message: 'Facebook Pixel connection successful' };\n    } catch (error) {\n      return { success: false, message: 'Failed to connect to Facebook Pixel' };\n    }\n  }\n\n  private async testGoogleAds(config: any) {\n    try {\n      // Simulate Google Ads API test\n      if (!config.customerId || !config.conversionId) {\n        return { success: false, message: 'Invalid configuration' };\n      }\n      \n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      return { success: true, message: 'Google Ads connection successful' };\n    } catch (error) {\n      return { success: false, message: 'Failed to connect to Google Ads' };\n    }\n  }\n\n  private async testWebhook(config: any) {\n    try {\n      // Test webhook by sending a test payload\n      const testPayload = {\n        test: true,\n        timestamp: new Date().toISOString(),\n        message: 'Test webhook connection'\n      };\n\n      const response = await fetch(config.url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          ...config.headers\n        },\n        body: JSON.stringify(testPayload)\n      });\n\n      if (response.ok) {\n        return { success: true, message: 'Webhook connection successful' };\n      } else {\n        return { success: false, message: `Webhook returned status ${response.status}` };\n      }\n    } catch (error) {\n      return { success: false, message: 'Failed to connect to webhook' };\n    }\n  }\n\n  private async sendEventToIntegration(integration: any, eventData: any) {\n    switch (integration.type) {\n      case 'google_analytics':\n        return await this.sendToGoogleAnalytics(integration.config, eventData);\n      case 'facebook_pixel':\n        return await this.sendToFacebookPixel(integration.config, eventData);\n      case 'google_ads':\n        return await this.sendToGoogleAds(integration.config, eventData);\n      case 'webhook':\n        return await this.sendToWebhook(integration.config, eventData);\n      default:\n        throw new Error('Unknown integration type');\n    }\n  }\n\n  private async sendToGoogleAnalytics(config: any, eventData: any) {\n    // Simulate sending event to Google Analytics\n    const payload = {\n      client_id: eventData.clientId || 'anonymous',\n      events: [{\n        name: eventData.eventType,\n        params: {\n          ...eventData.eventData,\n          utm_source: eventData.eventData.utm_source,\n          utm_medium: eventData.eventData.utm_medium,\n          utm_campaign: eventData.eventData.utm_campaign\n        }\n      }]\n    };\n\n    // In real implementation, send to GA4 Measurement Protocol\n    console.log('Sending to Google Analytics:', payload);\n    \n    return { success: true, payload };\n  }\n\n  private async sendToFacebookPixel(config: any, eventData: any) {\n    // Simulate sending event to Facebook Pixel\n    const payload = {\n      data: [{\n        event_name: eventData.eventType,\n        event_time: Math.floor(Date.now() / 1000),\n        custom_data: eventData.eventData,\n        user_data: {\n          client_ip_address: eventData.clientIp,\n          client_user_agent: eventData.userAgent\n        }\n      }]\n    };\n\n    console.log('Sending to Facebook Pixel:', payload);\n    \n    return { success: true, payload };\n  }\n\n  private async sendToGoogleAds(config: any, eventData: any) {\n    // Simulate sending conversion to Google Ads\n    const payload = {\n      conversion_action: config.conversionId,\n      conversion_value: eventData.eventData.value || 0,\n      conversion_time: new Date().toISOString(),\n      order_id: eventData.eventData.orderId\n    };\n\n    console.log('Sending to Google Ads:', payload);\n    \n    return { success: true, payload };\n  }\n\n  private async sendToWebhook(config: any, eventData: any) {\n    const payload = {\n      event_type: eventData.eventType,\n      event_data: eventData.eventData,\n      utm_link_id: eventData.utmLinkId,\n      timestamp: new Date().toISOString()\n    };\n\n    const response = await fetch(config.url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        ...config.headers\n      },\n      body: JSON.stringify(payload)\n    });\n\n    if (!response.ok) {\n      throw new Error(`Webhook failed with status ${response.status}`);\n    }\n\n    return { success: true, payload, response: await response.text() };\n  }\n\n  /**\n   * Gerar ID de sess\xE3o\n   */\n  private generateSessionId(ipAddress?: string, userAgent?: string): string {\n    const crypto = require('crypto');\n    const data = `${ipAddress || 'unknown'}-${userAgent || 'unknown'}`;\n    return crypto.createHash('md5').update(data).digest('hex');\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "cbbc98b2e300ccab66671035fba3bba84c4946bf"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1e4lm2ja96 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1e4lm2ja96();
import { PrismaService } from '../database/prisma.service';
// import { UTMStatus, ConversionEventType, AttributionModel } from '@utmify/database';
import { nanoid } from 'nanoid';
import QRCode from 'qrcode';
// Temporary enums until @utmify/database is properly resolved
var UTMStatus;
/* istanbul ignore next */
cov_1e4lm2ja96().s[0]++;
(function (UTMStatus) {
  /* istanbul ignore next */
  cov_1e4lm2ja96().f[0]++;
  cov_1e4lm2ja96().s[1]++;
  UTMStatus["ACTIVE"] = "ACTIVE";
  /* istanbul ignore next */
  cov_1e4lm2ja96().s[2]++;
  UTMStatus["PAUSED"] = "PAUSED";
  /* istanbul ignore next */
  cov_1e4lm2ja96().s[3]++;
  UTMStatus["ARCHIVED"] = "ARCHIVED";
})(
/* istanbul ignore next */
(cov_1e4lm2ja96().b[0][0]++, UTMStatus) ||
/* istanbul ignore next */
(cov_1e4lm2ja96().b[0][1]++, UTMStatus = {}));
var ConversionEventType;
/* istanbul ignore next */
cov_1e4lm2ja96().s[4]++;
(function (ConversionEventType) {
  /* istanbul ignore next */
  cov_1e4lm2ja96().f[1]++;
  cov_1e4lm2ja96().s[5]++;
  ConversionEventType["PURCHASE"] = "PURCHASE";
  /* istanbul ignore next */
  cov_1e4lm2ja96().s[6]++;
  ConversionEventType["LEAD"] = "LEAD";
  /* istanbul ignore next */
  cov_1e4lm2ja96().s[7]++;
  ConversionEventType["SIGNUP"] = "SIGNUP";
  /* istanbul ignore next */
  cov_1e4lm2ja96().s[8]++;
  ConversionEventType["VIEW_CONTENT"] = "VIEW_CONTENT";
})(
/* istanbul ignore next */
(cov_1e4lm2ja96().b[1][0]++, ConversionEventType) ||
/* istanbul ignore next */
(cov_1e4lm2ja96().b[1][1]++, ConversionEventType = {}));
var AttributionModel;
/* istanbul ignore next */
cov_1e4lm2ja96().s[9]++;
(function (AttributionModel) {
  /* istanbul ignore next */
  cov_1e4lm2ja96().f[2]++;
  cov_1e4lm2ja96().s[10]++;
  AttributionModel["FIRST_CLICK"] = "FIRST_CLICK";
  /* istanbul ignore next */
  cov_1e4lm2ja96().s[11]++;
  AttributionModel["LAST_CLICK"] = "LAST_CLICK";
  /* istanbul ignore next */
  cov_1e4lm2ja96().s[12]++;
  AttributionModel["LINEAR"] = "LINEAR";
})(
/* istanbul ignore next */
(cov_1e4lm2ja96().b[2][0]++, AttributionModel) ||
/* istanbul ignore next */
(cov_1e4lm2ja96().b[2][1]++, AttributionModel = {}));
export class UTMService {
  prisma;
  constructor() {
    /* istanbul ignore next */
    cov_1e4lm2ja96().f[3]++;
    cov_1e4lm2ja96().s[13]++;
    this.prisma = new PrismaService();
  }
  /**
   * Criar novo link UTM
   */
  async createUTMLink(data) {
    /* istanbul ignore next */
    cov_1e4lm2ja96().f[4]++;
    const shortCode =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[14]++, nanoid(8));
    const baseUrl =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[15]++,
    /* istanbul ignore next */
    (cov_1e4lm2ja96().b[3][0]++, process.env.BASE_URL) ||
    /* istanbul ignore next */
    (cov_1e4lm2ja96().b[3][1]++, 'http://localhost:3000'));
    const shortUrl =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[16]++, `${baseUrl}/r/${shortCode}`);
    // Construir URL completa com parâmetros UTM
    const url =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[17]++, new URL(data.originalUrl));
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[18]++;
    if (data.utmSource) {
      /* istanbul ignore next */
      cov_1e4lm2ja96().b[4][0]++;
      cov_1e4lm2ja96().s[19]++;
      url.searchParams.set('utm_source', data.utmSource);
    } else
    /* istanbul ignore next */
    {
      cov_1e4lm2ja96().b[4][1]++;
    }
    cov_1e4lm2ja96().s[20]++;
    if (data.utmMedium) {
      /* istanbul ignore next */
      cov_1e4lm2ja96().b[5][0]++;
      cov_1e4lm2ja96().s[21]++;
      url.searchParams.set('utm_medium', data.utmMedium);
    } else
    /* istanbul ignore next */
    {
      cov_1e4lm2ja96().b[5][1]++;
    }
    cov_1e4lm2ja96().s[22]++;
    if (data.utmCampaign) {
      /* istanbul ignore next */
      cov_1e4lm2ja96().b[6][0]++;
      cov_1e4lm2ja96().s[23]++;
      url.searchParams.set('utm_campaign', data.utmCampaign);
    } else
    /* istanbul ignore next */
    {
      cov_1e4lm2ja96().b[6][1]++;
    }
    cov_1e4lm2ja96().s[24]++;
    if (data.utmTerm) {
      /* istanbul ignore next */
      cov_1e4lm2ja96().b[7][0]++;
      cov_1e4lm2ja96().s[25]++;
      url.searchParams.set('utm_term', data.utmTerm);
    } else
    /* istanbul ignore next */
    {
      cov_1e4lm2ja96().b[7][1]++;
    }
    cov_1e4lm2ja96().s[26]++;
    if (data.utmContent) {
      /* istanbul ignore next */
      cov_1e4lm2ja96().b[8][0]++;
      cov_1e4lm2ja96().s[27]++;
      url.searchParams.set('utm_content', data.utmContent);
    } else
    /* istanbul ignore next */
    {
      cov_1e4lm2ja96().b[8][1]++;
    }
    // Adicionar parâmetros customizados
    cov_1e4lm2ja96().s[28]++;
    if (data.customParams) {
      /* istanbul ignore next */
      cov_1e4lm2ja96().b[9][0]++;
      cov_1e4lm2ja96().s[29]++;
      Object.entries(data.customParams).forEach(([key, value]) => {
        /* istanbul ignore next */
        cov_1e4lm2ja96().f[5]++;
        cov_1e4lm2ja96().s[30]++;
        url.searchParams.set(key, value);
      });
    } else
    /* istanbul ignore next */
    {
      cov_1e4lm2ja96().b[9][1]++;
    }
    const finalUrl =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[31]++, url.toString());
    // Gerar QR Code
    const qrCodeDataUrl =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[32]++, await QRCode.toDataURL(shortUrl, {
      width: 256,
      margin: 2,
      color: {
        dark: '#000000',
        light: '#FFFFFF'
      }
    }));
    const utmLink =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[33]++, await this.prisma.uTMLink.create({
      data: {
        organizationId: data.organizationId,
        originalUrl: finalUrl,
        utmSource: data.utmSource,
        utmMedium: data.utmMedium,
        utmCampaign: data.utmCampaign,
        utmTerm: data.utmTerm,
        utmContent: data.utmContent,
        customParams: data.customParams,
        shortCode,
        shortUrl,
        qrCodeUrl: qrCodeDataUrl,
        title: data.title,
        description: data.description,
        tags:
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[10][0]++, data.tags) ||
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[10][1]++, []),
        isPublic:
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[11][0]++, data.isPublic) ||
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[11][1]++, false),
        expiresAt: data.expiresAt ?
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[12][0]++, new Date(data.expiresAt)) :
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[12][1]++, null)
      }
    }));
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[34]++;
    return utmLink;
  }
  /**
   * Listar links UTM
   */
  async listUTMLinks(organizationId, query) {
    /* istanbul ignore next */
    cov_1e4lm2ja96().f[6]++;
    const where =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[35]++, {
      organizationId
    });
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[36]++;
    if (query.search) {
      /* istanbul ignore next */
      cov_1e4lm2ja96().b[13][0]++;
      cov_1e4lm2ja96().s[37]++;
      where.OR = [{
        title: {
          contains: query.search,
          mode: 'insensitive'
        }
      }, {
        originalUrl: {
          contains: query.search,
          mode: 'insensitive'
        }
      }, {
        utmSource: {
          contains: query.search,
          mode: 'insensitive'
        }
      }, {
        utmMedium: {
          contains: query.search,
          mode: 'insensitive'
        }
      }, {
        utmCampaign: {
          contains: query.search,
          mode: 'insensitive'
        }
      }];
    } else
    /* istanbul ignore next */
    {
      cov_1e4lm2ja96().b[13][1]++;
    }
    cov_1e4lm2ja96().s[38]++;
    if (query.status) {
      /* istanbul ignore next */
      cov_1e4lm2ja96().b[14][0]++;
      cov_1e4lm2ja96().s[39]++;
      where.status = query.status;
    } else
    /* istanbul ignore next */
    {
      cov_1e4lm2ja96().b[14][1]++;
    }
    cov_1e4lm2ja96().s[40]++;
    if (query.utmSource) {
      /* istanbul ignore next */
      cov_1e4lm2ja96().b[15][0]++;
      cov_1e4lm2ja96().s[41]++;
      where.utmSource = query.utmSource;
    } else
    /* istanbul ignore next */
    {
      cov_1e4lm2ja96().b[15][1]++;
    }
    cov_1e4lm2ja96().s[42]++;
    if (query.utmMedium) {
      /* istanbul ignore next */
      cov_1e4lm2ja96().b[16][0]++;
      cov_1e4lm2ja96().s[43]++;
      where.utmMedium = query.utmMedium;
    } else
    /* istanbul ignore next */
    {
      cov_1e4lm2ja96().b[16][1]++;
    }
    cov_1e4lm2ja96().s[44]++;
    if (query.utmCampaign) {
      /* istanbul ignore next */
      cov_1e4lm2ja96().b[17][0]++;
      cov_1e4lm2ja96().s[45]++;
      where.utmCampaign = query.utmCampaign;
    } else
    /* istanbul ignore next */
    {
      cov_1e4lm2ja96().b[17][1]++;
    }
    const [links, total] =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[46]++, await Promise.all([this.prisma.uTMLink.findMany({
      where,
      skip: (query.page - 1) * query.limit,
      take: query.limit,
      orderBy: {
        [query.sortBy]: query.sortOrder
      },
      include: {
        _count: {
          select: {
            clicks: true,
            conversions: true
          }
        }
      }
    }), this.prisma.uTMLink.count({
      where
    })]));
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[47]++;
    return {
      links,
      total
    };
  }
  /**
   * Obter estatísticas de um link UTM
   */
  async getUTMStats(organizationId, linkId, query) {
    /* istanbul ignore next */
    cov_1e4lm2ja96().f[7]++;
    const utmLink =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[48]++, await this.prisma.uTMLink.findFirst({
      where: {
        id: linkId,
        organizationId
      }
    }));
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[49]++;
    if (!utmLink) {
      /* istanbul ignore next */
      cov_1e4lm2ja96().b[18][0]++;
      cov_1e4lm2ja96().s[50]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1e4lm2ja96().b[18][1]++;
    }
    // Calcular período
    const now =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[51]++, new Date());
    let startDate;
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[52]++;
    switch (query.period) {
      case '24h':
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[19][0]++;
        cov_1e4lm2ja96().s[53]++;
        startDate = new Date(now.getTime() - 24 * 60 * 60 * 1000);
        /* istanbul ignore next */
        cov_1e4lm2ja96().s[54]++;
        break;
      case '7d':
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[19][1]++;
        cov_1e4lm2ja96().s[55]++;
        startDate = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);
        /* istanbul ignore next */
        cov_1e4lm2ja96().s[56]++;
        break;
      case '30d':
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[19][2]++;
        cov_1e4lm2ja96().s[57]++;
        startDate = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000);
        /* istanbul ignore next */
        cov_1e4lm2ja96().s[58]++;
        break;
      case '90d':
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[19][3]++;
        cov_1e4lm2ja96().s[59]++;
        startDate = new Date(now.getTime() - 90 * 24 * 60 * 60 * 1000);
        /* istanbul ignore next */
        cov_1e4lm2ja96().s[60]++;
        break;
      default:
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[19][4]++;
        cov_1e4lm2ja96().s[61]++;
        startDate = new Date(0);
    }
    const whereClause =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[62]++, {
      utmLinkId: linkId,
      clickedAt: {
        gte: startDate
      }
    });
    // Estatísticas básicas
    const [totalClicks, uniqueClicks, conversions, clicksByCountry, clicksByDevice] =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[63]++, await Promise.all([this.prisma.uTMClick.count({
      where: whereClause
    }), this.prisma.uTMClick.count({
      where: {
        ...whereClause,
        isUnique: true
      }
    }), this.prisma.uTMConversion.count({
      where: {
        utmLinkId: linkId,
        convertedAt: {
          gte: startDate
        }
      }
    }), this.prisma.uTMClick.groupBy({
      by: ['country'],
      where: whereClause,
      _count: true,
      orderBy: {
        _count: {
          country: 'desc'
        }
      },
      take: 10
    }), this.prisma.uTMClick.groupBy({
      by: ['deviceType'],
      where: whereClause,
      _count: true,
      orderBy: {
        _count: {
          deviceType: 'desc'
        }
      }
    })]));
    // Cliques ao longo do tempo
    const clicksOverTime =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[64]++, await this.getClicksOverTime(linkId, startDate, query.groupBy));
    // Taxa de conversão
    const conversionRate =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[65]++, totalClicks > 0 ?
    /* istanbul ignore next */
    (cov_1e4lm2ja96().b[20][0]++, conversions / totalClicks * 100) :
    /* istanbul ignore next */
    (cov_1e4lm2ja96().b[20][1]++, 0));
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[66]++;
    return {
      link: utmLink,
      stats: {
        totalClicks,
        uniqueClicks,
        conversions,
        conversionRate: Math.round(conversionRate * 100) / 100,
        clicksByCountry,
        clicksByDevice,
        clicksOverTime
      }
    };
  }
  /**
   * Encurtar URL
   */
  async shortenUrl(data) {
    /* istanbul ignore next */
    cov_1e4lm2ja96().f[8]++;
    let shortCode =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[67]++, data.customCode);
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[68]++;
    if (shortCode) {
      /* istanbul ignore next */
      cov_1e4lm2ja96().b[21][0]++;
      // Verificar se o código personalizado já existe
      const existing =
      /* istanbul ignore next */
      (cov_1e4lm2ja96().s[69]++, await this.prisma.uTMLink.findUnique({
        where: {
          shortCode
        }
      }));
      /* istanbul ignore next */
      cov_1e4lm2ja96().s[70]++;
      if (existing) {
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[22][0]++;
        cov_1e4lm2ja96().s[71]++;
        throw new Error('CUSTOM_CODE_EXISTS');
      } else
      /* istanbul ignore next */
      {
        cov_1e4lm2ja96().b[22][1]++;
      }
    } else {
      /* istanbul ignore next */
      cov_1e4lm2ja96().b[21][1]++;
      cov_1e4lm2ja96().s[72]++;
      shortCode = nanoid(8);
    }
    const baseUrl =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[73]++,
    /* istanbul ignore next */
    (cov_1e4lm2ja96().b[23][0]++, process.env.BASE_URL) ||
    /* istanbul ignore next */
    (cov_1e4lm2ja96().b[23][1]++, 'http://localhost:3000'));
    const shortUrl =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[74]++, `${baseUrl}/r/${shortCode}`);
    const utmLink =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[75]++, await this.prisma.uTMLink.create({
      data: {
        organizationId: data.organizationId,
        originalUrl: data.url,
        shortCode,
        shortUrl
      }
    }));
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[76]++;
    return utmLink;
  }
  /**
   * Rastrear clique e redirecionar
   */
  async trackClickAndRedirect(shortCode, trackingData) {
    /* istanbul ignore next */
    cov_1e4lm2ja96().f[9]++;
    const utmLink =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[77]++, await this.prisma.uTMLink.findUnique({
      where: {
        shortCode
      }
    }));
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[78]++;
    if (
    /* istanbul ignore next */
    (cov_1e4lm2ja96().b[25][0]++, !utmLink) ||
    /* istanbul ignore next */
    (cov_1e4lm2ja96().b[25][1]++, utmLink.status !== 'ACTIVE')) {
      /* istanbul ignore next */
      cov_1e4lm2ja96().b[24][0]++;
      cov_1e4lm2ja96().s[79]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1e4lm2ja96().b[24][1]++;
    }
    // Verificar se o link expirou
    cov_1e4lm2ja96().s[80]++;
    if (
    /* istanbul ignore next */
    (cov_1e4lm2ja96().b[27][0]++, utmLink.expiresAt) &&
    /* istanbul ignore next */
    (cov_1e4lm2ja96().b[27][1]++, utmLink.expiresAt < new Date())) {
      /* istanbul ignore next */
      cov_1e4lm2ja96().b[26][0]++;
      cov_1e4lm2ja96().s[81]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1e4lm2ja96().b[26][1]++;
    }
    // Analisar User Agent
    const parser =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[82]++, new UAParser(trackingData.userAgent));
    const device =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[83]++, parser.getResult());
    // Obter geolocalização
    const geo =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[84]++, trackingData.ipAddress ?
    /* istanbul ignore next */
    (cov_1e4lm2ja96().b[28][0]++, geoip.lookup(trackingData.ipAddress)) :
    /* istanbul ignore next */
    (cov_1e4lm2ja96().b[28][1]++, null));
    // Verificar se é um clique único (baseado no IP e User Agent)
    const sessionId =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[85]++, this.generateSessionId(trackingData.ipAddress, trackingData.userAgent));
    const existingClick =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[86]++, await this.prisma.uTMClick.findFirst({
      where: {
        utmLinkId: utmLink.id,
        sessionId
      }
    }));
    const isUnique =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[87]++, !existingClick);
    // Registrar o clique
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[88]++;
    await this.prisma.uTMClick.create({
      data: {
        utmLinkId: utmLink.id,
        organizationId: utmLink.organizationId,
        ipAddress: trackingData.ipAddress,
        userAgent: trackingData.userAgent,
        referer: trackingData.referer,
        country: geo?.country,
        region: geo?.region,
        city: geo?.city,
        latitude: geo?.ll?.[0],
        longitude: geo?.ll?.[1],
        deviceType:
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[29][0]++, device.device.type) ||
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[29][1]++, 'desktop'),
        browser: device.browser.name,
        browserVersion: device.browser.version,
        os: device.os.name,
        osVersion: device.os.version,
        sessionId,
        isUnique
      }
    });
    // Atualizar contadores
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[89]++;
    await this.prisma.uTMLink.update({
      where: {
        id: utmLink.id
      },
      data: {
        clickCount: {
          increment: 1
        },
        uniqueClicks: isUnique ?
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[30][0]++, {
          increment: 1
        }) :
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[30][1]++, undefined)
      }
    });
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[90]++;
    return {
      originalUrl: utmLink.originalUrl
    };
  }
  /**
   * Criação em massa de links UTM
   */
  async bulkCreateUTMLinks(data) {
    /* istanbul ignore next */
    cov_1e4lm2ja96().f[10]++;
    const results =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[91]++, {
      created: [],
      failed: []
    });
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[92]++;
    for (const linkData of data.links) {
      /* istanbul ignore next */
      cov_1e4lm2ja96().s[93]++;
      try {
        const utmLink =
        /* istanbul ignore next */
        (cov_1e4lm2ja96().s[94]++, await this.createUTMLink({
          ...linkData,
          organizationId: data.organizationId,
          userId: data.userId
        }));
        /* istanbul ignore next */
        cov_1e4lm2ja96().s[95]++;
        results.created.push(utmLink);
      } catch (error) {
        /* istanbul ignore next */
        cov_1e4lm2ja96().s[96]++;
        results.failed.push({
          data: linkData,
          error: error.message
        });
      }
    }
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[97]++;
    return results;
  }
  /**
   * Atualizar link UTM
   */
  async updateUTMLink(organizationId, linkId, data) {
    /* istanbul ignore next */
    cov_1e4lm2ja96().f[11]++;
    const utmLink =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[98]++, await this.prisma.uTMLink.findFirst({
      where: {
        id: linkId,
        organizationId
      }
    }));
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[99]++;
    if (!utmLink) {
      /* istanbul ignore next */
      cov_1e4lm2ja96().b[31][0]++;
      cov_1e4lm2ja96().s[100]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1e4lm2ja96().b[31][1]++;
    }
    cov_1e4lm2ja96().s[101]++;
    return await this.prisma.uTMLink.update({
      where: {
        id: linkId
      },
      data: {
        ...data,
        expiresAt: data.expiresAt ?
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[32][0]++, new Date(data.expiresAt)) :
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[32][1]++, undefined)
      }
    });
  }
  /**
   * Deletar link UTM
   */
  async deleteUTMLink(organizationId, linkId) {
    /* istanbul ignore next */
    cov_1e4lm2ja96().f[12]++;
    const utmLink =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[102]++, await this.prisma.uTMLink.findFirst({
      where: {
        id: linkId,
        organizationId
      }
    }));
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[103]++;
    if (!utmLink) {
      /* istanbul ignore next */
      cov_1e4lm2ja96().b[33][0]++;
      cov_1e4lm2ja96().s[104]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_1e4lm2ja96().b[33][1]++;
    }
    cov_1e4lm2ja96().s[105]++;
    await this.prisma.uTMLink.delete({
      where: {
        id: linkId
      }
    });
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[106]++;
    return true;
  }
  /**
   * Rastrear conversão
   */
  async trackConversion(data) {
    /* istanbul ignore next */
    cov_1e4lm2ja96().f[13]++;
    let utmLinkId =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[107]++, data.utmLinkId);
    // Se não foi fornecido o ID do link, buscar pelo código curto
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[108]++;
    if (
    /* istanbul ignore next */
    (cov_1e4lm2ja96().b[35][0]++, !utmLinkId) &&
    /* istanbul ignore next */
    (cov_1e4lm2ja96().b[35][1]++, data.shortCode)) {
      /* istanbul ignore next */
      cov_1e4lm2ja96().b[34][0]++;
      const utmLink =
      /* istanbul ignore next */
      (cov_1e4lm2ja96().s[109]++, await this.prisma.uTMLink.findUnique({
        where: {
          shortCode: data.shortCode
        }
      }));
      /* istanbul ignore next */
      cov_1e4lm2ja96().s[110]++;
      utmLinkId = utmLink?.id;
    } else
    /* istanbul ignore next */
    {
      cov_1e4lm2ja96().b[34][1]++;
    }
    cov_1e4lm2ja96().s[111]++;
    if (!utmLinkId) {
      /* istanbul ignore next */
      cov_1e4lm2ja96().b[36][0]++;
      cov_1e4lm2ja96().s[112]++;
      throw new Error('Link UTM não encontrado');
    } else
    /* istanbul ignore next */
    {
      cov_1e4lm2ja96().b[36][1]++;
    }
    const conversion =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[113]++, await this.prisma.uTMConversion.create({
      data: {
        utmLinkId,
        organizationId: data.organizationId,
        eventType: data.eventType,
        eventName: data.eventName,
        value: data.value,
        currency: data.currency,
        customerId: data.customerId,
        customerEmail: data.customerEmail,
        metadata: data.metadata,
        attributionModel: AttributionModel.LAST_CLICK,
        attributionWeight: 1.0
      }
    }));
    // Atualizar contador de conversões
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[114]++;
    await this.prisma.uTMLink.update({
      where: {
        id: utmLinkId
      },
      data: {
        conversionCount: {
          increment: 1
        },
        conversionValue: data.value ?
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[37][0]++, {
          increment: data.value
        }) :
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[37][1]++, undefined)
      }
    });
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[115]++;
    return conversion;
  }
  /**
   * Obter cliques ao longo do tempo
   */
  async getClicksOverTime(linkId, startDate, groupBy) {
    /* istanbul ignore next */
    cov_1e4lm2ja96().f[14]++;
    // Esta é uma implementação simplificada
    // Em produção, você pode usar queries SQL mais complexas
    const clicks =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[116]++, await this.prisma.uTMClick.findMany({
      where: {
        utmLinkId: linkId,
        clickedAt: {
          gte: startDate
        }
      },
      select: {
        clickedAt: true
      },
      orderBy: {
        clickedAt: 'asc'
      }
    }));
    // Agrupar por período
    const grouped =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[117]++, {});
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[118]++;
    clicks.forEach(click => {
      /* istanbul ignore next */
      cov_1e4lm2ja96().f[15]++;
      let key;
      const date =
      /* istanbul ignore next */
      (cov_1e4lm2ja96().s[119]++, new Date(click.clickedAt));
      /* istanbul ignore next */
      cov_1e4lm2ja96().s[120]++;
      switch (groupBy) {
        case 'hour':
          /* istanbul ignore next */
          cov_1e4lm2ja96().b[38][0]++;
          cov_1e4lm2ja96().s[121]++;
          key = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')} ${String(date.getHours()).padStart(2, '0')}:00`;
          /* istanbul ignore next */
          cov_1e4lm2ja96().s[122]++;
          break;
        case 'day':
          /* istanbul ignore next */
          cov_1e4lm2ja96().b[38][1]++;
          cov_1e4lm2ja96().s[123]++;
          key = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;
          /* istanbul ignore next */
          cov_1e4lm2ja96().s[124]++;
          break;
        case 'week':
          /* istanbul ignore next */
          cov_1e4lm2ja96().b[38][2]++;
          const weekStart =
          /* istanbul ignore next */
          (cov_1e4lm2ja96().s[125]++, new Date(date));
          /* istanbul ignore next */
          cov_1e4lm2ja96().s[126]++;
          weekStart.setDate(date.getDate() - date.getDay());
          /* istanbul ignore next */
          cov_1e4lm2ja96().s[127]++;
          key = `${weekStart.getFullYear()}-W${Math.ceil(weekStart.getDate() / 7)}`;
          /* istanbul ignore next */
          cov_1e4lm2ja96().s[128]++;
          break;
        case 'month':
          /* istanbul ignore next */
          cov_1e4lm2ja96().b[38][3]++;
          cov_1e4lm2ja96().s[129]++;
          key = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;
          /* istanbul ignore next */
          cov_1e4lm2ja96().s[130]++;
          break;
        default:
          /* istanbul ignore next */
          cov_1e4lm2ja96().b[38][4]++;
          cov_1e4lm2ja96().s[131]++;
          key = date.toISOString().split('T')[0];
      }
      /* istanbul ignore next */
      cov_1e4lm2ja96().s[132]++;
      grouped[key] = (
      /* istanbul ignore next */
      (cov_1e4lm2ja96().b[39][0]++, grouped[key]) ||
      /* istanbul ignore next */
      (cov_1e4lm2ja96().b[39][1]++, 0)) + 1;
    });
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[133]++;
    return Object.entries(grouped).map(([date, count]) => {
      /* istanbul ignore next */
      cov_1e4lm2ja96().f[16]++;
      cov_1e4lm2ja96().s[134]++;
      return {
        date,
        count
      };
    });
  }
  /**
   * Exportar dados UTM
   */
  async exportData(options) {
    /* istanbul ignore next */
    cov_1e4lm2ja96().f[17]++;
    // Calculate date range
    let startDate;
    let endDate =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[135]++, new Date());
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[136]++;
    switch (options.dateRange) {
      case 'last7days':
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[40][0]++;
        cov_1e4lm2ja96().s[137]++;
        startDate = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000);
        /* istanbul ignore next */
        cov_1e4lm2ja96().s[138]++;
        break;
      case 'last30days':
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[40][1]++;
        cov_1e4lm2ja96().s[139]++;
        startDate = new Date(Date.now() - 30 * 24 * 60 * 60 * 1000);
        /* istanbul ignore next */
        cov_1e4lm2ja96().s[140]++;
        break;
      case 'last90days':
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[40][2]++;
        cov_1e4lm2ja96().s[141]++;
        startDate = new Date(Date.now() - 90 * 24 * 60 * 60 * 1000);
        /* istanbul ignore next */
        cov_1e4lm2ja96().s[142]++;
        break;
      case 'custom':
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[40][3]++;
        cov_1e4lm2ja96().s[143]++;
        startDate = options.startDate ?
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[41][0]++, new Date(options.startDate)) :
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[41][1]++, new Date(Date.now() - 30 * 24 * 60 * 60 * 1000));
        /* istanbul ignore next */
        cov_1e4lm2ja96().s[144]++;
        endDate = options.endDate ?
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[42][0]++, new Date(options.endDate)) :
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[42][1]++, new Date());
        /* istanbul ignore next */
        cov_1e4lm2ja96().s[145]++;
        break;
      default:
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[40][4]++;
        cov_1e4lm2ja96().s[146]++;
        startDate = new Date(Date.now() - 30 * 24 * 60 * 60 * 1000);
    }
    // Build where clause for UTM links
    const whereClause =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[147]++, {
      organizationId: options.organizationId,
      createdAt: {
        gte: startDate,
        lte: endDate
      }
    });
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[148]++;
    if (options.utmSource) {
      /* istanbul ignore next */
      cov_1e4lm2ja96().b[43][0]++;
      cov_1e4lm2ja96().s[149]++;
      whereClause.utmSource = {
        contains: options.utmSource
      };
    } else
    /* istanbul ignore next */
    {
      cov_1e4lm2ja96().b[43][1]++;
    }
    cov_1e4lm2ja96().s[150]++;
    if (options.utmMedium) {
      /* istanbul ignore next */
      cov_1e4lm2ja96().b[44][0]++;
      cov_1e4lm2ja96().s[151]++;
      whereClause.utmMedium = {
        contains: options.utmMedium
      };
    } else
    /* istanbul ignore next */
    {
      cov_1e4lm2ja96().b[44][1]++;
    }
    cov_1e4lm2ja96().s[152]++;
    if (options.utmCampaign) {
      /* istanbul ignore next */
      cov_1e4lm2ja96().b[45][0]++;
      cov_1e4lm2ja96().s[153]++;
      whereClause.utmCampaign = {
        contains: options.utmCampaign
      };
    } else
    /* istanbul ignore next */
    {
      cov_1e4lm2ja96().b[45][1]++;
    }
    // Fetch UTM links with related data
    const utmLinks =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[154]++, await this.prisma.uTMLink.findMany({
      where: whereClause,
      include: {
        clicks: options.includeClicks ?
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[46][0]++, {
          where: {
            createdAt: {
              gte: startDate,
              lte: endDate
            }
          }
        }) :
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[46][1]++, false),
        conversions: options.includeConversions ?
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[47][0]++, {
          where: {
            createdAt: {
              gte: startDate,
              lte: endDate
            }
          }
        }) :
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[47][1]++, false)
      },
      orderBy: {
        createdAt: 'desc'
      }
    }));
    // Prepare export data
    const exportData =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[155]++, utmLinks.map(link => {
      /* istanbul ignore next */
      cov_1e4lm2ja96().f[18]++;
      const baseData =
      /* istanbul ignore next */
      (cov_1e4lm2ja96().s[156]++, {
        id: link.id,
        title: link.title,
        originalUrl: link.originalUrl,
        shortUrl: link.shortUrl,
        shortCode: link.shortCode,
        utmSource: link.utmSource,
        utmMedium: link.utmMedium,
        utmCampaign: link.utmCampaign,
        utmTerm: link.utmTerm,
        utmContent: link.utmContent,
        status: link.status,
        createdAt: link.createdAt,
        expiresAt: link.expiresAt
      });
      /* istanbul ignore next */
      cov_1e4lm2ja96().s[157]++;
      if (options.includeMetrics) {
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[48][0]++;
        cov_1e4lm2ja96().s[158]++;
        Object.assign(baseData, {
          clickCount: link.clickCount,
          conversionCount: link.conversionCount,
          conversionValue: link.conversionValue,
          conversionRate: link.clickCount > 0 ?
          /* istanbul ignore next */
          (cov_1e4lm2ja96().b[49][0]++, (link.conversionCount / link.clickCount * 100).toFixed(2) + '%') :
          /* istanbul ignore next */
          (cov_1e4lm2ja96().b[49][1]++, '0%')
        });
      } else
      /* istanbul ignore next */
      {
        cov_1e4lm2ja96().b[48][1]++;
      }
      cov_1e4lm2ja96().s[159]++;
      return baseData;
    }));
    // Generate filename
    const timestamp =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[160]++, new Date().toISOString().split('T')[0]);
    const filename =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[161]++, `utm-export-${timestamp}.${options.format}`);
    // Format data based on export format
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[162]++;
    switch (options.format) {
      case 'csv':
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[50][0]++;
        cov_1e4lm2ja96().s[163]++;
        return {
          data: this.generateCSV(exportData),
          filename,
          mimeType: 'text/csv'
        };
      case 'json':
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[50][1]++;
        cov_1e4lm2ja96().s[164]++;
        return {
          data: JSON.stringify({
            exportDate: new Date().toISOString(),
            dateRange: {
              start: startDate.toISOString(),
              end: endDate.toISOString()
            },
            filters: {
              utmSource: options.utmSource,
              utmMedium: options.utmMedium,
              utmCampaign: options.utmCampaign
            },
            data: exportData,
            summary: {
              totalLinks: exportData.length,
              totalClicks: exportData.reduce((sum, item) => {
                /* istanbul ignore next */
                cov_1e4lm2ja96().f[19]++;
                cov_1e4lm2ja96().s[165]++;
                return sum + (
                /* istanbul ignore next */
                (cov_1e4lm2ja96().b[51][0]++, item.clickCount) ||
                /* istanbul ignore next */
                (cov_1e4lm2ja96().b[51][1]++, 0));
              }, 0),
              totalConversions: exportData.reduce((sum, item) => {
                /* istanbul ignore next */
                cov_1e4lm2ja96().f[20]++;
                cov_1e4lm2ja96().s[166]++;
                return sum + (
                /* istanbul ignore next */
                (cov_1e4lm2ja96().b[52][0]++, item.conversionCount) ||
                /* istanbul ignore next */
                (cov_1e4lm2ja96().b[52][1]++, 0));
              }, 0),
              totalValue: exportData.reduce((sum, item) => {
                /* istanbul ignore next */
                cov_1e4lm2ja96().f[21]++;
                cov_1e4lm2ja96().s[167]++;
                return sum + (
                /* istanbul ignore next */
                (cov_1e4lm2ja96().b[53][0]++, item.conversionValue) ||
                /* istanbul ignore next */
                (cov_1e4lm2ja96().b[53][1]++, 0));
              }, 0)
            }
          }, null, 2),
          filename,
          mimeType: 'application/json'
        };
      case 'xlsx':
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[50][2]++;
        cov_1e4lm2ja96().s[168]++;
        // For now, return CSV format for XLSX (would need xlsx library for proper implementation)
        return {
          data: this.generateCSV(exportData),
          filename: filename.replace('.xlsx', '.csv'),
          mimeType: 'text/csv'
        };
      default:
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[50][3]++;
        cov_1e4lm2ja96().s[169]++;
        throw new Error('Formato de export não suportado');
    }
  }
  /**
   * Gerar CSV a partir dos dados
   */
  generateCSV(data) {
    /* istanbul ignore next */
    cov_1e4lm2ja96().f[22]++;
    cov_1e4lm2ja96().s[170]++;
    if (data.length === 0) {
      /* istanbul ignore next */
      cov_1e4lm2ja96().b[54][0]++;
      cov_1e4lm2ja96().s[171]++;
      return 'Nenhum dado encontrado';
    } else
    /* istanbul ignore next */
    {
      cov_1e4lm2ja96().b[54][1]++;
    }
    const headers =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[172]++, Object.keys(data[0]));
    const csvHeaders =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[173]++, headers.join(','));
    const csvRows =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[174]++, data.map(row => {
      /* istanbul ignore next */
      cov_1e4lm2ja96().f[23]++;
      cov_1e4lm2ja96().s[175]++;
      return headers.map(header => {
        /* istanbul ignore next */
        cov_1e4lm2ja96().f[24]++;
        const value =
        /* istanbul ignore next */
        (cov_1e4lm2ja96().s[176]++, row[header]);
        // Escape commas and quotes in CSV
        /* istanbul ignore next */
        cov_1e4lm2ja96().s[177]++;
        if (
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[56][0]++, typeof value === 'string') && (
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[56][1]++, value.includes(',')) ||
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[56][2]++, value.includes('"')))) {
          /* istanbul ignore next */
          cov_1e4lm2ja96().b[55][0]++;
          cov_1e4lm2ja96().s[178]++;
          return `"${value.replace(/"/g, '""')}"`;
        } else
        /* istanbul ignore next */
        {
          cov_1e4lm2ja96().b[55][1]++;
        }
        cov_1e4lm2ja96().s[179]++;
        return /* istanbul ignore next */(cov_1e4lm2ja96().b[57][0]++, value) ||
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[57][1]++, '');
      }).join(',');
    }));
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[180]++;
    return [csvHeaders, ...csvRows].join('\n');
  }
  // Notification methods
  async getNotifications(organizationId, options) {
    /* istanbul ignore next */
    cov_1e4lm2ja96().f[25]++;
    const skip =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[181]++, (options.page - 1) * options.limit);
    const whereClause =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[182]++, {
      organizationId
    });
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[183]++;
    if (options.unreadOnly) {
      /* istanbul ignore next */
      cov_1e4lm2ja96().b[58][0]++;
      cov_1e4lm2ja96().s[184]++;
      whereClause.isRead = false;
    } else
    /* istanbul ignore next */
    {
      cov_1e4lm2ja96().b[58][1]++;
    }
    const [alerts, total] =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[185]++, await Promise.all([this.prisma.notificationAlert.findMany({
      where: whereClause,
      orderBy: {
        createdAt: 'desc'
      },
      skip,
      take: options.limit,
      include: {
        rule: {
          select: {
            name: true
          }
        },
        utmLink: {
          select: {
            campaign: true
          }
        }
      }
    }), this.prisma.notificationAlert.count({
      where: whereClause
    })]));
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[186]++;
    return {
      alerts: alerts.map(alert => {
        /* istanbul ignore next */
        cov_1e4lm2ja96().f[26]++;
        cov_1e4lm2ja96().s[187]++;
        return {
          id: alert.id,
          ruleId: alert.ruleId,
          ruleName: alert.rule.name,
          message: alert.message,
          severity: alert.severity,
          utmLinkId: alert.utmLinkId,
          utmCampaign: alert.utmLink?.campaign,
          data: alert.data,
          isRead: alert.isRead,
          createdAt: alert.createdAt.toISOString()
        };
      }),
      pagination: {
        page: options.page,
        limit: options.limit,
        total,
        totalPages: Math.ceil(total / options.limit)
      }
    };
  }
  async createNotificationRule(organizationId, ruleData) {
    /* istanbul ignore next */
    cov_1e4lm2ja96().f[27]++;
    const rule =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[188]++, await this.prisma.notificationRule.create({
      data: {
        organizationId,
        name: ruleData.name,
        description:
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[59][0]++, ruleData.description) ||
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[59][1]++, ''),
        isActive:
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[60][0]++, ruleData.isActive) ??
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[60][1]++, true),
        triggerType: ruleData.triggerType,
        condition: ruleData.condition,
        channels: ruleData.channels,
        recipients: ruleData.recipients,
        message: ruleData.message,
        utmCampaigns:
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[61][0]++, ruleData.utmCampaigns) ||
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[61][1]++, [])
      }
    }));
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[189]++;
    return rule.id;
  }
  async getNotificationRules(organizationId) {
    /* istanbul ignore next */
    cov_1e4lm2ja96().f[28]++;
    const rules =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[190]++, await this.prisma.notificationRule.findMany({
      where: {
        organizationId
      },
      orderBy: {
        createdAt: 'desc'
      },
      include: {
        _count: {
          select: {
            alerts: true
          }
        }
      }
    }));
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[191]++;
    return {
      rules: rules.map(rule => {
        /* istanbul ignore next */
        cov_1e4lm2ja96().f[29]++;
        cov_1e4lm2ja96().s[192]++;
        return {
          id: rule.id,
          name: rule.name,
          description: rule.description,
          isActive: rule.isActive,
          triggerType: rule.triggerType,
          condition: rule.condition,
          channels: rule.channels,
          recipients: rule.recipients,
          message: rule.message,
          utmCampaigns: rule.utmCampaigns,
          createdAt: rule.createdAt.toISOString(),
          lastTriggered: rule.lastTriggered?.toISOString(),
          alertCount: rule._count.alerts
        };
      })
    };
  }
  async updateNotificationRule(organizationId, ruleId, updateData) {
    /* istanbul ignore next */
    cov_1e4lm2ja96().f[30]++;
    cov_1e4lm2ja96().s[193]++;
    await this.prisma.notificationRule.updateMany({
      where: {
        id: ruleId,
        organizationId
      },
      data: {
        name: updateData.name,
        description: updateData.description,
        isActive: updateData.isActive,
        triggerType: updateData.triggerType,
        condition: updateData.condition,
        channels: updateData.channels,
        recipients: updateData.recipients,
        message: updateData.message,
        utmCampaigns: updateData.utmCampaigns,
        updatedAt: new Date()
      }
    });
  }
  async deleteNotificationRule(organizationId, ruleId) {
    /* istanbul ignore next */
    cov_1e4lm2ja96().f[31]++;
    cov_1e4lm2ja96().s[194]++;
    await this.prisma.notificationRule.deleteMany({
      where: {
        id: ruleId,
        organizationId
      }
    });
  }
  async markNotificationAsRead(organizationId, alertId) {
    /* istanbul ignore next */
    cov_1e4lm2ja96().f[32]++;
    cov_1e4lm2ja96().s[195]++;
    await this.prisma.notificationAlert.updateMany({
      where: {
        id: alertId,
        organizationId
      },
      data: {
        isRead: true,
        readAt: new Date()
      }
    });
  }
  // Method to check rules and trigger notifications
  async checkNotificationRules(utmLinkId) {
    /* istanbul ignore next */
    cov_1e4lm2ja96().f[33]++;
    const utmLink =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[196]++, await this.prisma.uTMLink.findUnique({
      where: {
        id: utmLinkId
      },
      include: {
        clicks: {
          where: {
            clickedAt: {
              gte: new Date(Date.now() - 24 * 60 * 60 * 1000) // Last 24 hours
            }
          }
        },
        conversions: {
          where: {
            convertedAt: {
              gte: new Date(Date.now() - 24 * 60 * 60 * 1000) // Last 24 hours
            }
          }
        }
      }
    }));
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[197]++;
    if (!utmLink) {
      /* istanbul ignore next */
      cov_1e4lm2ja96().b[62][0]++;
      cov_1e4lm2ja96().s[198]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1e4lm2ja96().b[62][1]++;
    }
    const rules =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[199]++, await this.prisma.notificationRule.findMany({
      where: {
        organizationId: utmLink.organizationId,
        isActive: true,
        OR: [{
          utmCampaigns: {
            isEmpty: true
          }
        }, {
          utmCampaigns: {
            has: utmLink.utmCampaign
          }
        }]
      }
    }));
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[200]++;
    for (const rule of rules) {
      const shouldTrigger =
      /* istanbul ignore next */
      (cov_1e4lm2ja96().s[201]++, await this.evaluateRule(rule, utmLink));
      /* istanbul ignore next */
      cov_1e4lm2ja96().s[202]++;
      if (shouldTrigger) {
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[63][0]++;
        cov_1e4lm2ja96().s[203]++;
        await this.createAlert(rule, utmLink);
        // Update last triggered
        /* istanbul ignore next */
        cov_1e4lm2ja96().s[204]++;
        await this.prisma.notificationRule.update({
          where: {
            id: rule.id
          },
          data: {
            lastTriggered: new Date()
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_1e4lm2ja96().b[63][1]++;
      }
    }
  }
  async evaluateRule(rule, utmLink) {
    /* istanbul ignore next */
    cov_1e4lm2ja96().f[34]++;
    const condition =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[205]++, rule.condition);
    const clickCount =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[206]++, utmLink.clicks.length);
    const conversionCount =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[207]++, utmLink.conversions.length);
    const conversionRate =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[208]++, clickCount > 0 ?
    /* istanbul ignore next */
    (cov_1e4lm2ja96().b[64][0]++, conversionCount / clickCount * 100) :
    /* istanbul ignore next */
    (cov_1e4lm2ja96().b[64][1]++, 0));
    let value;
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[209]++;
    switch (rule.triggerType) {
      case 'click_threshold':
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[65][0]++;
        cov_1e4lm2ja96().s[210]++;
        value = clickCount;
        /* istanbul ignore next */
        cov_1e4lm2ja96().s[211]++;
        break;
      case 'conversion_rate':
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[65][1]++;
        cov_1e4lm2ja96().s[212]++;
        value = conversionRate;
        /* istanbul ignore next */
        cov_1e4lm2ja96().s[213]++;
        break;
      default:
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[65][2]++;
        cov_1e4lm2ja96().s[214]++;
        return false;
    }
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[215]++;
    switch (condition.operator) {
      case 'greater_than':
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[66][0]++;
        cov_1e4lm2ja96().s[216]++;
        return value > condition.value;
      case 'less_than':
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[66][1]++;
        cov_1e4lm2ja96().s[217]++;
        return value < condition.value;
      case 'equals':
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[66][2]++;
        cov_1e4lm2ja96().s[218]++;
        return value === condition.value;
      case 'between':
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[66][3]++;
        cov_1e4lm2ja96().s[219]++;
        return /* istanbul ignore next */(cov_1e4lm2ja96().b[67][0]++, value >= condition.value) &&
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[67][1]++, value <= (
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[68][0]++, condition.secondValue) ||
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[68][1]++, 0)));
      default:
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[66][4]++;
        cov_1e4lm2ja96().s[220]++;
        return false;
    }
  }
  async createAlert(rule, utmLink) {
    /* istanbul ignore next */
    cov_1e4lm2ja96().f[35]++;
    const clickCount =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[221]++, utmLink.clicks.length);
    const conversionCount =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[222]++, utmLink.conversions.length);
    const conversionRate =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[223]++, clickCount > 0 ?
    /* istanbul ignore next */
    (cov_1e4lm2ja96().b[69][0]++, conversionCount / clickCount * 100) :
    /* istanbul ignore next */
    (cov_1e4lm2ja96().b[69][1]++, 0));
    // Replace template variables in message
    let message =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[224]++, rule.message);
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[225]++;
    message = message.replace(/{{campaign}}/g,
    /* istanbul ignore next */
    (cov_1e4lm2ja96().b[70][0]++, utmLink.utmCampaign) ||
    /* istanbul ignore next */
    (cov_1e4lm2ja96().b[70][1]++, 'N/A'));
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[226]++;
    message = message.replace(/{{clicks}}/g, clickCount.toString());
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[227]++;
    message = message.replace(/{{conversions}}/g, conversionCount.toString());
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[228]++;
    message = message.replace(/{{rate}}/g, conversionRate.toFixed(2));
    // Determine severity based on rule type and values
    let severity =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[229]++, 'medium');
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[230]++;
    if (
    /* istanbul ignore next */
    (cov_1e4lm2ja96().b[72][0]++, rule.triggerType === 'click_threshold') &&
    /* istanbul ignore next */
    (cov_1e4lm2ja96().b[72][1]++, clickCount > 5000)) {
      /* istanbul ignore next */
      cov_1e4lm2ja96().b[71][0]++;
      cov_1e4lm2ja96().s[231]++;
      severity = 'high';
    } else {
      /* istanbul ignore next */
      cov_1e4lm2ja96().b[71][1]++;
      cov_1e4lm2ja96().s[232]++;
      if (
      /* istanbul ignore next */
      (cov_1e4lm2ja96().b[74][0]++, rule.triggerType === 'conversion_rate') &&
      /* istanbul ignore next */
      (cov_1e4lm2ja96().b[74][1]++, conversionRate < 1)) {
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[73][0]++;
        cov_1e4lm2ja96().s[233]++;
        severity = 'critical';
      } else
      /* istanbul ignore next */
      {
        cov_1e4lm2ja96().b[73][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[234]++;
    await this.prisma.notificationAlert.create({
      data: {
        organizationId: utmLink.organizationId,
        ruleId: rule.id,
        utmLinkId: utmLink.id,
        message,
        severity,
        data: {
          clicks: clickCount,
          conversions: conversionCount,
          conversionRate,
          campaign: utmLink.utmCampaign
        },
        isRead: false
      }
    });
  }
  // Integration management methods
  async getIntegrations(organizationId) {
    /* istanbul ignore next */
    cov_1e4lm2ja96().f[36]++;
    const integrations =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[235]++, await this.prisma.integration.findMany({
      where: {
        organizationId
      },
      select: {
        id: true,
        platform: true,
        isActive: true,
        lastSync: true,
        accountName: true,
        syncStatus: true,
        settings: true,
        createdAt: true,
        updatedAt: true
      }
    }));
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[236]++;
    return integrations;
  }
  async createIntegration(data) {
    /* istanbul ignore next */
    cov_1e4lm2ja96().f[37]++;
    cov_1e4lm2ja96().s[237]++;
    // Validate configuration based on integration platform
    await this.validateIntegrationConfig(data.platform, data.config);
    const integration =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[238]++, await this.prisma.integration.create({
      data: {
        organizationId: data.organizationId,
        userId: data.userId,
        platform: data.platform,
        settings: data.config,
        accountName:
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[75][0]++, data.accountName) ||
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[75][1]++, data.platform),
        isActive: false,
        syncStatus: 'PENDING'
      }
    }));
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[239]++;
    return integration;
  }
  async updateIntegration(id, data) {
    /* istanbul ignore next */
    cov_1e4lm2ja96().f[38]++;
    // Verify integration belongs to organization
    const existingIntegration =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[240]++, await this.prisma.integration.findFirst({
      where: {
        id,
        organizationId: data.organizationId
      }
    }));
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[241]++;
    if (!existingIntegration) {
      /* istanbul ignore next */
      cov_1e4lm2ja96().b[76][0]++;
      cov_1e4lm2ja96().s[242]++;
      throw new Error('Integration not found');
    } else
    /* istanbul ignore next */
    {
      cov_1e4lm2ja96().b[76][1]++;
    }
    // Validate configuration if provided
    cov_1e4lm2ja96().s[243]++;
    if (data.config) {
      /* istanbul ignore next */
      cov_1e4lm2ja96().b[77][0]++;
      cov_1e4lm2ja96().s[244]++;
      await this.validateIntegrationConfig(existingIntegration.platform, data.config);
    } else
    /* istanbul ignore next */
    {
      cov_1e4lm2ja96().b[77][1]++;
    }
    const updateData =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[245]++, {});
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[246]++;
    if (data.accountName !== undefined) {
      /* istanbul ignore next */
      cov_1e4lm2ja96().b[78][0]++;
      cov_1e4lm2ja96().s[247]++;
      updateData.accountName = data.accountName;
    } else
    /* istanbul ignore next */
    {
      cov_1e4lm2ja96().b[78][1]++;
    }
    cov_1e4lm2ja96().s[248]++;
    if (data.config !== undefined) {
      /* istanbul ignore next */
      cov_1e4lm2ja96().b[79][0]++;
      cov_1e4lm2ja96().s[249]++;
      updateData.settings = data.config;
    } else
    /* istanbul ignore next */
    {
      cov_1e4lm2ja96().b[79][1]++;
    }
    cov_1e4lm2ja96().s[250]++;
    if (data.isActive !== undefined) {
      /* istanbul ignore next */
      cov_1e4lm2ja96().b[80][0]++;
      cov_1e4lm2ja96().s[251]++;
      updateData.isActive = data.isActive;
      /* istanbul ignore next */
      cov_1e4lm2ja96().s[252]++;
      updateData.syncStatus = data.isActive ?
      /* istanbul ignore next */
      (cov_1e4lm2ja96().b[81][0]++, 'SYNCING') :
      /* istanbul ignore next */
      (cov_1e4lm2ja96().b[81][1]++, 'PENDING');
    } else
    /* istanbul ignore next */
    {
      cov_1e4lm2ja96().b[80][1]++;
    }
    const integration =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[253]++, await this.prisma.integration.update({
      where: {
        id
      },
      data: updateData
    }));
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[254]++;
    return integration;
  }
  async deleteIntegration(id, organizationId) {
    /* istanbul ignore next */
    cov_1e4lm2ja96().f[39]++;
    // Verify integration belongs to organization
    const integration =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[255]++, await this.prisma.integration.findFirst({
      where: {
        id,
        organizationId
      }
    }));
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[256]++;
    if (!integration) {
      /* istanbul ignore next */
      cov_1e4lm2ja96().b[82][0]++;
      cov_1e4lm2ja96().s[257]++;
      throw new Error('Integration not found');
    } else
    /* istanbul ignore next */
    {
      cov_1e4lm2ja96().b[82][1]++;
    }
    cov_1e4lm2ja96().s[258]++;
    await this.prisma.integration.delete({
      where: {
        id
      }
    });
  }
  async testIntegration(id, organizationId) {
    /* istanbul ignore next */
    cov_1e4lm2ja96().f[40]++;
    const integration =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[259]++, await this.prisma.integration.findFirst({
      where: {
        id,
        organizationId
      }
    }));
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[260]++;
    if (!integration) {
      /* istanbul ignore next */
      cov_1e4lm2ja96().b[83][0]++;
      cov_1e4lm2ja96().s[261]++;
      throw new Error('Integration not found');
    } else
    /* istanbul ignore next */
    {
      cov_1e4lm2ja96().b[83][1]++;
    }
    // Test connection based on integration platform
    const testResult =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[262]++, await this.performIntegrationTest(integration));
    // Update last sync time if test is successful
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[263]++;
    if (testResult.success) {
      /* istanbul ignore next */
      cov_1e4lm2ja96().b[84][0]++;
      cov_1e4lm2ja96().s[264]++;
      await this.prisma.integration.update({
        where: {
          id
        },
        data: {
          lastSync: new Date(),
          syncStatus: 'SYNCING',
          isActive: true,
          lastError: null
        }
      });
    } else {
      /* istanbul ignore next */
      cov_1e4lm2ja96().b[84][1]++;
      cov_1e4lm2ja96().s[265]++;
      await this.prisma.integration.update({
        where: {
          id
        },
        data: {
          syncStatus: 'ERROR',
          lastError: testResult.error
        }
      });
    }
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[266]++;
    return testResult;
  }
  async sendEventToIntegrations(data) {
    /* istanbul ignore next */
    cov_1e4lm2ja96().f[41]++;
    const integrations =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[267]++, await this.prisma.integration.findMany({
      where: {
        organizationId: data.organizationId,
        enabled: true,
        status: 'connected',
        events: {
          has: data.eventType
        }
      }
    }));
    const results =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[268]++, []);
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[269]++;
    for (const integration of integrations) {
      /* istanbul ignore next */
      cov_1e4lm2ja96().s[270]++;
      try {
        const result =
        /* istanbul ignore next */
        (cov_1e4lm2ja96().s[271]++, await this.sendEventToIntegration(integration, data));
        /* istanbul ignore next */
        cov_1e4lm2ja96().s[272]++;
        results.push({
          integrationId: integration.id,
          integrationName: integration.name,
          success: true,
          result
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_1e4lm2ja96().s[273]++;
        results.push({
          integrationId: integration.id,
          integrationName: integration.name,
          success: false,
          error: error instanceof Error ?
          /* istanbul ignore next */
          (cov_1e4lm2ja96().b[85][0]++, error.message) :
          /* istanbul ignore next */
          (cov_1e4lm2ja96().b[85][1]++, 'Unknown error')
        });
      }
    }
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[274]++;
    return results;
  }
  async validateIntegrationConfig(platform, config) {
    /* istanbul ignore next */
    cov_1e4lm2ja96().f[42]++;
    cov_1e4lm2ja96().s[275]++;
    switch (platform) {
      case 'GOOGLE_ANALYTICS':
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[86][0]++;
        cov_1e4lm2ja96().s[276]++;
        if (
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[88][0]++, !config.measurementId) ||
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[88][1]++, !config.apiSecret)) {
          /* istanbul ignore next */
          cov_1e4lm2ja96().b[87][0]++;
          cov_1e4lm2ja96().s[277]++;
          throw new Error('Google Analytics requires measurementId and apiSecret');
        } else
        /* istanbul ignore next */
        {
          cov_1e4lm2ja96().b[87][1]++;
        }
        cov_1e4lm2ja96().s[278]++;
        break;
      case 'FACEBOOK_PIXEL':
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[86][1]++;
        cov_1e4lm2ja96().s[279]++;
        if (
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[90][0]++, !config.pixelId) ||
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[90][1]++, !config.accessToken)) {
          /* istanbul ignore next */
          cov_1e4lm2ja96().b[89][0]++;
          cov_1e4lm2ja96().s[280]++;
          throw new Error('Facebook Pixel requires pixelId and accessToken');
        } else
        /* istanbul ignore next */
        {
          cov_1e4lm2ja96().b[89][1]++;
        }
        cov_1e4lm2ja96().s[281]++;
        break;
      case 'GOOGLE_ADS':
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[86][2]++;
        cov_1e4lm2ja96().s[282]++;
        if (
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[92][0]++, !config.customerId) ||
        /* istanbul ignore next */
        (cov_1e4lm2ja96().b[92][1]++, !config.conversionId)) {
          /* istanbul ignore next */
          cov_1e4lm2ja96().b[91][0]++;
          cov_1e4lm2ja96().s[283]++;
          throw new Error('Google Ads requires customerId and conversionId');
        } else
        /* istanbul ignore next */
        {
          cov_1e4lm2ja96().b[91][1]++;
        }
        cov_1e4lm2ja96().s[284]++;
        break;
      case 'WEBHOOK':
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[86][3]++;
        cov_1e4lm2ja96().s[285]++;
        if (!config.url) {
          /* istanbul ignore next */
          cov_1e4lm2ja96().b[93][0]++;
          cov_1e4lm2ja96().s[286]++;
          throw new Error('Webhook requires url');
        } else
        /* istanbul ignore next */
        {
          cov_1e4lm2ja96().b[93][1]++;
        }
        cov_1e4lm2ja96().s[287]++;
        break;
      default:
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[86][4]++;
        cov_1e4lm2ja96().s[288]++;
        throw new Error(`Unknown integration platform: ${platform}`);
    }
  }
  async performIntegrationTest(integration) {
    /* istanbul ignore next */
    cov_1e4lm2ja96().f[43]++;
    cov_1e4lm2ja96().s[289]++;
    switch (integration.platform) {
      case 'GOOGLE_ANALYTICS':
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[94][0]++;
        cov_1e4lm2ja96().s[290]++;
        return await this.testGoogleAnalytics(integration.settings);
      case 'FACEBOOK_PIXEL':
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[94][1]++;
        cov_1e4lm2ja96().s[291]++;
        return await this.testFacebookPixel(integration.settings);
      case 'GOOGLE_ADS':
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[94][2]++;
        cov_1e4lm2ja96().s[292]++;
        return await this.testGoogleAds(integration.settings);
      case 'WEBHOOK':
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[94][3]++;
        cov_1e4lm2ja96().s[293]++;
        return await this.testWebhook(integration.settings);
      default:
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[94][4]++;
        cov_1e4lm2ja96().s[294]++;
        return {
          success: false,
          message: 'Unknown integration platform',
          error: 'Unsupported platform'
        };
    }
  }
  async testGoogleAnalytics(config) {
    /* istanbul ignore next */
    cov_1e4lm2ja96().f[44]++;
    cov_1e4lm2ja96().s[295]++;
    try {
      /* istanbul ignore next */
      cov_1e4lm2ja96().s[296]++;
      // Simulate Google Analytics API test
      // In real implementation, you would make an actual API call
      if (
      /* istanbul ignore next */
      (cov_1e4lm2ja96().b[96][0]++, !config.measurementId) ||
      /* istanbul ignore next */
      (cov_1e4lm2ja96().b[96][1]++, !config.apiSecret)) {
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[95][0]++;
        cov_1e4lm2ja96().s[297]++;
        return {
          success: false,
          message: 'Invalid configuration'
        };
      } else
      /* istanbul ignore next */
      {
        cov_1e4lm2ja96().b[95][1]++;
      }
      // Simulate API call delay
      cov_1e4lm2ja96().s[298]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_1e4lm2ja96().f[45]++;
        cov_1e4lm2ja96().s[299]++;
        return setTimeout(resolve, 1000);
      });
      /* istanbul ignore next */
      cov_1e4lm2ja96().s[300]++;
      return {
        success: true,
        message: 'Google Analytics connection successful'
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1e4lm2ja96().s[301]++;
      return {
        success: false,
        message: 'Failed to connect to Google Analytics'
      };
    }
  }
  async testFacebookPixel(config) {
    /* istanbul ignore next */
    cov_1e4lm2ja96().f[46]++;
    cov_1e4lm2ja96().s[302]++;
    try {
      /* istanbul ignore next */
      cov_1e4lm2ja96().s[303]++;
      // Simulate Facebook Pixel API test
      if (
      /* istanbul ignore next */
      (cov_1e4lm2ja96().b[98][0]++, !config.pixelId) ||
      /* istanbul ignore next */
      (cov_1e4lm2ja96().b[98][1]++, !config.accessToken)) {
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[97][0]++;
        cov_1e4lm2ja96().s[304]++;
        return {
          success: false,
          message: 'Invalid configuration'
        };
      } else
      /* istanbul ignore next */
      {
        cov_1e4lm2ja96().b[97][1]++;
      }
      cov_1e4lm2ja96().s[305]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_1e4lm2ja96().f[47]++;
        cov_1e4lm2ja96().s[306]++;
        return setTimeout(resolve, 1000);
      });
      /* istanbul ignore next */
      cov_1e4lm2ja96().s[307]++;
      return {
        success: true,
        message: 'Facebook Pixel connection successful'
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1e4lm2ja96().s[308]++;
      return {
        success: false,
        message: 'Failed to connect to Facebook Pixel'
      };
    }
  }
  async testGoogleAds(config) {
    /* istanbul ignore next */
    cov_1e4lm2ja96().f[48]++;
    cov_1e4lm2ja96().s[309]++;
    try {
      /* istanbul ignore next */
      cov_1e4lm2ja96().s[310]++;
      // Simulate Google Ads API test
      if (
      /* istanbul ignore next */
      (cov_1e4lm2ja96().b[100][0]++, !config.customerId) ||
      /* istanbul ignore next */
      (cov_1e4lm2ja96().b[100][1]++, !config.conversionId)) {
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[99][0]++;
        cov_1e4lm2ja96().s[311]++;
        return {
          success: false,
          message: 'Invalid configuration'
        };
      } else
      /* istanbul ignore next */
      {
        cov_1e4lm2ja96().b[99][1]++;
      }
      cov_1e4lm2ja96().s[312]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_1e4lm2ja96().f[49]++;
        cov_1e4lm2ja96().s[313]++;
        return setTimeout(resolve, 1000);
      });
      /* istanbul ignore next */
      cov_1e4lm2ja96().s[314]++;
      return {
        success: true,
        message: 'Google Ads connection successful'
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1e4lm2ja96().s[315]++;
      return {
        success: false,
        message: 'Failed to connect to Google Ads'
      };
    }
  }
  async testWebhook(config) {
    /* istanbul ignore next */
    cov_1e4lm2ja96().f[50]++;
    cov_1e4lm2ja96().s[316]++;
    try {
      // Test webhook by sending a test payload
      const testPayload =
      /* istanbul ignore next */
      (cov_1e4lm2ja96().s[317]++, {
        test: true,
        timestamp: new Date().toISOString(),
        message: 'Test webhook connection'
      });
      const response =
      /* istanbul ignore next */
      (cov_1e4lm2ja96().s[318]++, await fetch(config.url, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          ...config.headers
        },
        body: JSON.stringify(testPayload)
      }));
      /* istanbul ignore next */
      cov_1e4lm2ja96().s[319]++;
      if (response.ok) {
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[101][0]++;
        cov_1e4lm2ja96().s[320]++;
        return {
          success: true,
          message: 'Webhook connection successful'
        };
      } else {
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[101][1]++;
        cov_1e4lm2ja96().s[321]++;
        return {
          success: false,
          message: `Webhook returned status ${response.status}`
        };
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1e4lm2ja96().s[322]++;
      return {
        success: false,
        message: 'Failed to connect to webhook'
      };
    }
  }
  async sendEventToIntegration(integration, eventData) {
    /* istanbul ignore next */
    cov_1e4lm2ja96().f[51]++;
    cov_1e4lm2ja96().s[323]++;
    switch (integration.type) {
      case 'google_analytics':
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[102][0]++;
        cov_1e4lm2ja96().s[324]++;
        return await this.sendToGoogleAnalytics(integration.config, eventData);
      case 'facebook_pixel':
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[102][1]++;
        cov_1e4lm2ja96().s[325]++;
        return await this.sendToFacebookPixel(integration.config, eventData);
      case 'google_ads':
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[102][2]++;
        cov_1e4lm2ja96().s[326]++;
        return await this.sendToGoogleAds(integration.config, eventData);
      case 'webhook':
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[102][3]++;
        cov_1e4lm2ja96().s[327]++;
        return await this.sendToWebhook(integration.config, eventData);
      default:
        /* istanbul ignore next */
        cov_1e4lm2ja96().b[102][4]++;
        cov_1e4lm2ja96().s[328]++;
        throw new Error('Unknown integration type');
    }
  }
  async sendToGoogleAnalytics(config, eventData) {
    /* istanbul ignore next */
    cov_1e4lm2ja96().f[52]++;
    // Simulate sending event to Google Analytics
    const payload =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[329]++, {
      client_id:
      /* istanbul ignore next */
      (cov_1e4lm2ja96().b[103][0]++, eventData.clientId) ||
      /* istanbul ignore next */
      (cov_1e4lm2ja96().b[103][1]++, 'anonymous'),
      events: [{
        name: eventData.eventType,
        params: {
          ...eventData.eventData,
          utm_source: eventData.eventData.utm_source,
          utm_medium: eventData.eventData.utm_medium,
          utm_campaign: eventData.eventData.utm_campaign
        }
      }]
    });
    // In real implementation, send to GA4 Measurement Protocol
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[330]++;
    console.log('Sending to Google Analytics:', payload);
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[331]++;
    return {
      success: true,
      payload
    };
  }
  async sendToFacebookPixel(config, eventData) {
    /* istanbul ignore next */
    cov_1e4lm2ja96().f[53]++;
    // Simulate sending event to Facebook Pixel
    const payload =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[332]++, {
      data: [{
        event_name: eventData.eventType,
        event_time: Math.floor(Date.now() / 1000),
        custom_data: eventData.eventData,
        user_data: {
          client_ip_address: eventData.clientIp,
          client_user_agent: eventData.userAgent
        }
      }]
    });
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[333]++;
    console.log('Sending to Facebook Pixel:', payload);
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[334]++;
    return {
      success: true,
      payload
    };
  }
  async sendToGoogleAds(config, eventData) {
    /* istanbul ignore next */
    cov_1e4lm2ja96().f[54]++;
    // Simulate sending conversion to Google Ads
    const payload =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[335]++, {
      conversion_action: config.conversionId,
      conversion_value:
      /* istanbul ignore next */
      (cov_1e4lm2ja96().b[104][0]++, eventData.eventData.value) ||
      /* istanbul ignore next */
      (cov_1e4lm2ja96().b[104][1]++, 0),
      conversion_time: new Date().toISOString(),
      order_id: eventData.eventData.orderId
    });
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[336]++;
    console.log('Sending to Google Ads:', payload);
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[337]++;
    return {
      success: true,
      payload
    };
  }
  async sendToWebhook(config, eventData) {
    /* istanbul ignore next */
    cov_1e4lm2ja96().f[55]++;
    const payload =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[338]++, {
      event_type: eventData.eventType,
      event_data: eventData.eventData,
      utm_link_id: eventData.utmLinkId,
      timestamp: new Date().toISOString()
    });
    const response =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[339]++, await fetch(config.url, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        ...config.headers
      },
      body: JSON.stringify(payload)
    }));
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[340]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_1e4lm2ja96().b[105][0]++;
      cov_1e4lm2ja96().s[341]++;
      throw new Error(`Webhook failed with status ${response.status}`);
    } else
    /* istanbul ignore next */
    {
      cov_1e4lm2ja96().b[105][1]++;
    }
    cov_1e4lm2ja96().s[342]++;
    return {
      success: true,
      payload,
      response: await response.text()
    };
  }
  /**
   * Gerar ID de sessão
   */
  generateSessionId(ipAddress, userAgent) {
    /* istanbul ignore next */
    cov_1e4lm2ja96().f[56]++;
    const crypto =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[343]++, require('crypto'));
    const data =
    /* istanbul ignore next */
    (cov_1e4lm2ja96().s[344]++, `${
    /* istanbul ignore next */
    (cov_1e4lm2ja96().b[106][0]++, ipAddress) ||
    /* istanbul ignore next */
    (cov_1e4lm2ja96().b[106][1]++, 'unknown')}-${
    /* istanbul ignore next */
    (cov_1e4lm2ja96().b[107][0]++, userAgent) ||
    /* istanbul ignore next */
    (cov_1e4lm2ja96().b[107][1]++, 'unknown')}`);
    /* istanbul ignore next */
    cov_1e4lm2ja96().s[345]++;
    return crypto.createHash('md5').update(data).digest('hex');
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,