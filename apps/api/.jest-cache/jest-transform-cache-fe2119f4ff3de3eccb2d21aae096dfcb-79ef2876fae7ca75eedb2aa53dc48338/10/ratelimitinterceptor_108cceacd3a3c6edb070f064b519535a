badba653e942a895a9244d2a5f6de0bd
/* istanbul ignore next */
function cov_jy6q72bxc() {
  var path = "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\interceptors\\rate-limit.interceptor.ts";
  var hash = "175785c31dacd382c4777398bb8a9fb46e332679";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\interceptors\\rate-limit.interceptor.ts",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 17
        },
        end: {
          line: 6,
          column: 1
        }
      },
      "1": {
        start: {
          line: 2,
          column: 12
        },
        end: {
          line: 2,
          column: 28
        }
      },
      "2": {
        start: {
          line: 2,
          column: 34
        },
        end: {
          line: 2,
          column: 125
        }
      },
      "3": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 4,
          column: 150
        }
      },
      "4": {
        start: {
          line: 3,
          column: 79
        },
        end: {
          line: 3,
          column: 131
        }
      },
      "5": {
        start: {
          line: 4,
          column: 9
        },
        end: {
          line: 4,
          column: 150
        }
      },
      "6": {
        start: {
          line: 4,
          column: 22
        },
        end: {
          line: 4,
          column: 43
        }
      },
      "7": {
        start: {
          line: 4,
          column: 58
        },
        end: {
          line: 4,
          column: 150
        }
      },
      "8": {
        start: {
          line: 4,
          column: 81
        },
        end: {
          line: 4,
          column: 150
        }
      },
      "9": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 5,
          column: 66
        }
      },
      "10": {
        start: {
          line: 7,
          column: 17
        },
        end: {
          line: 9,
          column: 1
        }
      },
      "11": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 109
        }
      },
      "12": {
        start: {
          line: 8,
          column: 79
        },
        end: {
          line: 8,
          column: 109
        }
      },
      "13": {
        start: {
          line: 16,
          column: 25
        },
        end: {
          line: 31,
          column: 1
        }
      },
      "14": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 30,
          column: 6
        }
      },
      "15": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 29,
          column: 9
        }
      },
      "16": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 19,
          column: 78
        }
      },
      "17": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 22,
          column: 13
        }
      },
      "18": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 21,
          column: 94
        }
      },
      "19": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 25,
          column: 68
        }
      },
      "20": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 28,
          column: 13
        }
      },
      "21": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 84
        }
      },
      "22": {
        start: {
          line: 33,
          column: 29
        },
        end: {
          line: 42,
          column: 1
        }
      },
      "23": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 41,
          column: 6
        }
      },
      "24": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 40,
          column: 9
        }
      },
      "25": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 78
        }
      },
      "26": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 68
        }
      },
      "27": {
        start: {
          line: 44,
          column: 31
        },
        end: {
          line: 53,
          column: 1
        }
      },
      "28": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 52,
          column: 6
        }
      },
      "29": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 51,
          column: 9
        }
      },
      "30": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 82
        }
      },
      "31": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 72
        }
      },
      "32": {
        start: {
          line: 54,
          column: 27
        },
        end: {
          line: 186,
          column: 1
        }
      },
      "33": {
        start: {
          line: 57,
          column: 13
        },
        end: {
          line: 57,
          column: 52
        }
      },
      "34": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 35
        }
      },
      "35": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 49
        }
      },
      "36": {
        start: {
          line: 63,
          column: 24
        },
        end: {
          line: 63,
          column: 59
        }
      },
      "37": {
        start: {
          line: 64,
          column: 25
        },
        end: {
          line: 64,
          column: 61
        }
      },
      "38": {
        start: {
          line: 65,
          column: 24
        },
        end: {
          line: 65,
          column: 44
        }
      },
      "39": {
        start: {
          line: 66,
          column: 27
        },
        end: {
          line: 66,
          column: 45
        }
      },
      "40": {
        start: {
          line: 68,
          column: 30
        },
        end: {
          line: 68,
          column: 104
        }
      },
      "41": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 71,
          column: 9
        }
      },
      "42": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 33
        }
      },
      "43": {
        start: {
          line: 73,
          column: 31
        },
        end: {
          line: 73,
          column: 62
        }
      },
      "44": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 77,
          column: 9
        }
      },
      "45": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 33
        }
      },
      "46": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 114,
          column: 9
        }
      },
      "47": {
        start: {
          line: 80,
          column: 36
        },
        end: {
          line: 80,
          column: 112
        }
      },
      "48": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 84,
          column: 13
        }
      },
      "49": {
        start: {
          line: 82,
          column: 16
        },
        end: {
          line: 82,
          column: 101
        }
      },
      "50": {
        start: {
          line: 83,
          column: 16
        },
        end: {
          line: 83,
          column: 37
        }
      },
      "51": {
        start: {
          line: 86,
          column: 34
        },
        end: {
          line: 86,
          column: 149
        }
      },
      "52": {
        start: {
          line: 88,
          column: 40
        },
        end: {
          line: 88,
          column: 158
        }
      },
      "53": {
        start: {
          line: 90,
          column: 27
        },
        end: {
          line: 90,
          column: 121
        }
      },
      "54": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 55
        }
      },
      "55": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 104,
          column: 13
        }
      },
      "56": {
        start: {
          line: 94,
          column: 16
        },
        end: {
          line: 94,
          column: 114
        }
      },
      "57": {
        start: {
          line: 95,
          column: 16
        },
        end: {
          line: 103,
          column: 49
        }
      },
      "58": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 33
        }
      },
      "59": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 110,
          column: 13
        }
      },
      "60": {
        start: {
          line: 109,
          column: 16
        },
        end: {
          line: 109,
          column: 28
        }
      },
      "61": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 93
        }
      },
      "62": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 33
        }
      },
      "63": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 120,
          column: 9
        }
      },
      "64": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 47
        }
      },
      "65": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 124,
          column: 9
        }
      },
      "66": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 56
        }
      },
      "67": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 131,
          column: 9
        }
      },
      "68": {
        start: {
          line: 127,
          column: 30
        },
        end: {
          line: 127,
          column: 64
        }
      },
      "69": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 130,
          column: 13
        }
      },
      "70": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 129,
          column: 33
        }
      },
      "71": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 132,
          column: 20
        }
      },
      "72": {
        start: {
          line: 135,
          column: 23
        },
        end: {
          line: 135,
          column: 51
        }
      },
      "73": {
        start: {
          line: 136,
          column: 21
        },
        end: {
          line: 136,
          column: 55
        }
      },
      "74": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 140,
          column: 9
        }
      },
      "75": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 31
        }
      },
      "76": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 143,
          column: 9
        }
      },
      "77": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 142,
          column: 30
        }
      },
      "78": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 146,
          column: 9
        }
      },
      "79": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 30
        }
      },
      "80": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 149,
          column: 9
        }
      },
      "81": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 29
        }
      },
      "82": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 151,
          column: 21
        }
      },
      "83": {
        start: {
          line: 155,
          column: 19
        },
        end: {
          line: 155,
          column: 65
        }
      },
      "84": {
        start: {
          line: 156,
          column: 23
        },
        end: {
          line: 156,
          column: 39
        }
      },
      "85": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 157,
          column: 47
        }
      },
      "86": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 165,
          column: 11
        }
      },
      "87": {
        start: {
          line: 168,
          column: 27
        },
        end: {
          line: 168,
          column: 61
        }
      },
      "88": {
        start: {
          line: 169,
          column: 20
        },
        end: {
          line: 169,
          column: 56
        }
      },
      "89": {
        start: {
          line: 172,
          column: 23
        },
        end: {
          line: 173,
          column: 31
        }
      },
      "90": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 51
        }
      },
      "91": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 184,
          column: 9
        }
      },
      "92": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 183,
          column: 45
        }
      },
      "93": {
        start: {
          line: 187,
          column: 0
        },
        end: {
          line: 190,
          column: 25
        }
      },
      "94": {
        start: {
          line: 193,
          column: 21
        },
        end: {
          line: 215,
          column: 1
        }
      },
      "95": {
        start: {
          line: 195,
          column: 13
        },
        end: {
          line: 195,
          column: 46
        }
      },
      "96": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 197,
          column: 49
        }
      },
      "97": {
        start: {
          line: 200,
          column: 24
        },
        end: {
          line: 200,
          column: 59
        }
      },
      "98": {
        start: {
          line: 201,
          column: 31
        },
        end: {
          line: 201,
          column: 59
        }
      },
      "99": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 204,
          column: 9
        }
      },
      "100": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 203,
          column: 24
        }
      },
      "101": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 213,
          column: 9
        }
      },
      "102": {
        start: {
          line: 206,
          column: 27
        },
        end: {
          line: 206,
          column: 104
        }
      },
      "103": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 207,
          column: 34
        }
      },
      "104": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 210,
          column: 87
        }
      },
      "105": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 212,
          column: 24
        }
      },
      "106": {
        start: {
          line: 216,
          column: 0
        },
        end: {
          line: 219,
          column: 19
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 1,
            column: 46
          },
          end: {
            line: 1,
            column: 47
          }
        },
        loc: {
          start: {
            line: 1,
            column: 87
          },
          end: {
            line: 6,
            column: 1
          }
        },
        line: 1
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 47
          }
        },
        loc: {
          start: {
            line: 7,
            column: 62
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 7
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 25
          },
          end: {
            line: 16,
            column: 26
          }
        },
        loc: {
          start: {
            line: 16,
            column: 47
          },
          end: {
            line: 31,
            column: 1
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 17,
            column: 12
          }
        },
        loc: {
          start: {
            line: 17,
            column: 48
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 17
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 33,
            column: 29
          },
          end: {
            line: 33,
            column: 30
          }
        },
        loc: {
          start: {
            line: 33,
            column: 35
          },
          end: {
            line: 42,
            column: 1
          }
        },
        line: 33
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 34,
            column: 11
          },
          end: {
            line: 34,
            column: 12
          }
        },
        loc: {
          start: {
            line: 34,
            column: 48
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 34
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 44,
            column: 31
          },
          end: {
            line: 44,
            column: 32
          }
        },
        loc: {
          start: {
            line: 44,
            column: 43
          },
          end: {
            line: 53,
            column: 1
          }
        },
        line: 44
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 45,
            column: 11
          },
          end: {
            line: 45,
            column: 12
          }
        },
        loc: {
          start: {
            line: 45,
            column: 48
          },
          end: {
            line: 52,
            column: 5
          }
        },
        line: 45
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        loc: {
          start: {
            line: 58,
            column: 45
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 58
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        loc: {
          start: {
            line: 62,
            column: 35
          },
          end: {
            line: 115,
            column: 5
          }
        },
        line: 62
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 116,
            column: 4
          },
          end: {
            line: 116,
            column: 5
          }
        },
        loc: {
          start: {
            line: 116,
            column: 31
          },
          end: {
            line: 133,
            column: 5
          }
        },
        line: 116
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 134,
            column: 4
          },
          end: {
            line: 134,
            column: 5
          }
        },
        loc: {
          start: {
            line: 134,
            column: 37
          },
          end: {
            line: 152,
            column: 5
          }
        },
        line: 134
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 153,
            column: 4
          },
          end: {
            line: 153,
            column: 5
          }
        },
        loc: {
          start: {
            line: 153,
            column: 34
          },
          end: {
            line: 158,
            column: 5
          }
        },
        line: 153
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 159,
            column: 4
          },
          end: {
            line: 159,
            column: 5
          }
        },
        loc: {
          start: {
            line: 159,
            column: 42
          },
          end: {
            line: 166,
            column: 5
          }
        },
        line: 159
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 167,
            column: 4
          },
          end: {
            line: 167,
            column: 5
          }
        },
        loc: {
          start: {
            line: 167,
            column: 75
          },
          end: {
            line: 185,
            column: 5
          }
        },
        line: 167
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 196,
            column: 4
          },
          end: {
            line: 196,
            column: 5
          }
        },
        loc: {
          start: {
            line: 196,
            column: 34
          },
          end: {
            line: 198,
            column: 5
          }
        },
        line: 196
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 199,
            column: 4
          },
          end: {
            line: 199,
            column: 5
          }
        },
        loc: {
          start: {
            line: 199,
            column: 31
          },
          end: {
            line: 214,
            column: 5
          }
        },
        line: 199
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 1,
            column: 17
          },
          end: {
            line: 6,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1,
            column: 18
          },
          end: {
            line: 1,
            column: 22
          }
        }, {
          start: {
            line: 1,
            column: 26
          },
          end: {
            line: 1,
            column: 41
          }
        }, {
          start: {
            line: 1,
            column: 46
          },
          end: {
            line: 6,
            column: 1
          }
        }],
        line: 1
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 34
          },
          end: {
            line: 2,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 42
          },
          end: {
            line: 2,
            column: 48
          }
        }, {
          start: {
            line: 2,
            column: 51
          },
          end: {
            line: 2,
            column: 125
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 2,
            column: 51
          },
          end: {
            line: 2,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 67
          },
          end: {
            line: 2,
            column: 118
          }
        }, {
          start: {
            line: 2,
            column: 121
          },
          end: {
            line: 2,
            column: 125
          }
        }],
        line: 2
      },
      "3": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 4,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 4,
            column: 150
          }
        }, {
          start: {
            line: 4,
            column: 9
          },
          end: {
            line: 4,
            column: 150
          }
        }],
        line: 3
      },
      "4": {
        loc: {
          start: {
            line: 3,
            column: 8
          },
          end: {
            line: 3,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 8
          },
          end: {
            line: 3,
            column: 35
          }
        }, {
          start: {
            line: 3,
            column: 39
          },
          end: {
            line: 3,
            column: 77
          }
        }],
        line: 3
      },
      "5": {
        loc: {
          start: {
            line: 4,
            column: 58
          },
          end: {
            line: 4,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 58
          },
          end: {
            line: 4,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 4
      },
      "6": {
        loc: {
          start: {
            line: 4,
            column: 85
          },
          end: {
            line: 4,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 86
          },
          end: {
            line: 4,
            column: 143
          }
        }, {
          start: {
            line: 4,
            column: 148
          },
          end: {
            line: 4,
            column: 149
          }
        }],
        line: 4
      },
      "7": {
        loc: {
          start: {
            line: 4,
            column: 86
          },
          end: {
            line: 4,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 4,
            column: 94
          },
          end: {
            line: 4,
            column: 98
          }
        }, {
          start: {
            line: 4,
            column: 101
          },
          end: {
            line: 4,
            column: 143
          }
        }],
        line: 4
      },
      "8": {
        loc: {
          start: {
            line: 4,
            column: 101
          },
          end: {
            line: 4,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 4,
            column: 109
          },
          end: {
            line: 4,
            column: 126
          }
        }, {
          start: {
            line: 4,
            column: 129
          },
          end: {
            line: 4,
            column: 143
          }
        }],
        line: 4
      },
      "9": {
        loc: {
          start: {
            line: 5,
            column: 11
          },
          end: {
            line: 5,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 11
          },
          end: {
            line: 5,
            column: 16
          }
        }, {
          start: {
            line: 5,
            column: 20
          },
          end: {
            line: 5,
            column: 21
          }
        }, {
          start: {
            line: 5,
            column: 25
          },
          end: {
            line: 5,
            column: 62
          }
        }],
        line: 5
      },
      "10": {
        loc: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 9,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 7,
            column: 18
          },
          end: {
            line: 7,
            column: 22
          }
        }, {
          start: {
            line: 7,
            column: 26
          },
          end: {
            line: 7,
            column: 41
          }
        }, {
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 9,
            column: 1
          }
        }],
        line: 7
      },
      "11": {
        loc: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 109
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 109
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 8
      },
      "12": {
        loc: {
          start: {
            line: 8,
            column: 8
          },
          end: {
            line: 8,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 8
          },
          end: {
            line: 8,
            column: 35
          }
        }, {
          start: {
            line: 8,
            column: 39
          },
          end: {
            line: 8,
            column: 77
          }
        }],
        line: 8
      },
      "13": {
        loc: {
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        }, {
          start: {
            line: 24,
            column: 13
          },
          end: {
            line: 29,
            column: 9
          }
        }],
        line: 18
      },
      "14": {
        loc: {
          start: {
            line: 20,
            column: 12
          },
          end: {
            line: 22,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 12
          },
          end: {
            line: 22,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 20
      },
      "15": {
        loc: {
          start: {
            line: 26,
            column: 12
          },
          end: {
            line: 28,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 12
          },
          end: {
            line: 28,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "16": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 40,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 40,
            column: 9
          }
        }, {
          start: {
            line: 38,
            column: 13
          },
          end: {
            line: 40,
            column: 9
          }
        }],
        line: 35
      },
      "17": {
        loc: {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 51,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 51,
            column: 9
          }
        }, {
          start: {
            line: 49,
            column: 13
          },
          end: {
            line: 51,
            column: 9
          }
        }],
        line: 46
      },
      "18": {
        loc: {
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "19": {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "20": {
        loc: {
          start: {
            line: 81,
            column: 12
          },
          end: {
            line: 84,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 12
          },
          end: {
            line: 84,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "21": {
        loc: {
          start: {
            line: 86,
            column: 34
          },
          end: {
            line: 86,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 86,
            column: 34
          },
          end: {
            line: 86,
            column: 108
          }
        }, {
          start: {
            line: 86,
            column: 112
          },
          end: {
            line: 86,
            column: 149
          }
        }],
        line: 86
      },
      "22": {
        loc: {
          start: {
            line: 88,
            column: 40
          },
          end: {
            line: 88,
            column: 158
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 40
          },
          end: {
            line: 88,
            column: 120
          }
        }, {
          start: {
            line: 88,
            column: 124
          },
          end: {
            line: 88,
            column: 158
          }
        }],
        line: 88
      },
      "23": {
        loc: {
          start: {
            line: 93,
            column: 12
          },
          end: {
            line: 104,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 12
          },
          end: {
            line: 104,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "24": {
        loc: {
          start: {
            line: 108,
            column: 12
          },
          end: {
            line: 110,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 12
          },
          end: {
            line: 110,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "25": {
        loc: {
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "26": {
        loc: {
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "27": {
        loc: {
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "28": {
        loc: {
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 130,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 130,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "29": {
        loc: {
          start: {
            line: 128,
            column: 16
          },
          end: {
            line: 128,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 128,
            column: 16
          },
          end: {
            line: 128,
            column: 25
          }
        }, {
          start: {
            line: 128,
            column: 29
          },
          end: {
            line: 128,
            column: 48
          }
        }, {
          start: {
            line: 128,
            column: 52
          },
          end: {
            line: 128,
            column: 71
          }
        }],
        line: 128
      },
      "30": {
        loc: {
          start: {
            line: 136,
            column: 21
          },
          end: {
            line: 136,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 136,
            column: 21
          },
          end: {
            line: 136,
            column: 40
          }
        }, {
          start: {
            line: 136,
            column: 44
          },
          end: {
            line: 136,
            column: 55
          }
        }],
        line: 136
      },
      "31": {
        loc: {
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 140,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 140,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 138
      },
      "32": {
        loc: {
          start: {
            line: 141,
            column: 8
          },
          end: {
            line: 143,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 141,
            column: 8
          },
          end: {
            line: 143,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 141
      },
      "33": {
        loc: {
          start: {
            line: 141,
            column: 12
          },
          end: {
            line: 141,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 141,
            column: 12
          },
          end: {
            line: 141,
            column: 38
          }
        }, {
          start: {
            line: 141,
            column: 42
          },
          end: {
            line: 141,
            column: 68
          }
        }],
        line: 141
      },
      "34": {
        loc: {
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 146,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 146,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "35": {
        loc: {
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 149,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 149,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "36": {
        loc: {
          start: {
            line: 147,
            column: 12
          },
          end: {
            line: 147,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 147,
            column: 12
          },
          end: {
            line: 147,
            column: 36
          }
        }, {
          start: {
            line: 147,
            column: 40
          },
          end: {
            line: 147,
            column: 66
          }
        }],
        line: 147
      },
      "37": {
        loc: {
          start: {
            line: 155,
            column: 19
          },
          end: {
            line: 155,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 155,
            column: 19
          },
          end: {
            line: 155,
            column: 29
          }
        }, {
          start: {
            line: 155,
            column: 33
          },
          end: {
            line: 155,
            column: 65
          }
        }],
        line: 155
      },
      "38": {
        loc: {
          start: {
            line: 157,
            column: 15
          },
          end: {
            line: 157,
            column: 46
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 157,
            column: 24
          },
          end: {
            line: 157,
            column: 41
          }
        }, {
          start: {
            line: 157,
            column: 44
          },
          end: {
            line: 157,
            column: 46
          }
        }],
        line: 157
      },
      "39": {
        loc: {
          start: {
            line: 169,
            column: 30
          },
          end: {
            line: 169,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 169,
            column: 30
          },
          end: {
            line: 169,
            column: 41
          }
        }, {
          start: {
            line: 169,
            column: 45
          },
          end: {
            line: 169,
            column: 54
          }
        }],
        line: 169
      },
      "40": {
        loc: {
          start: {
            line: 175,
            column: 8
          },
          end: {
            line: 184,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 175,
            column: 8
          },
          end: {
            line: 184,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 175
      },
      "41": {
        loc: {
          start: {
            line: 189,
            column: 37
          },
          end: {
            line: 189,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 189,
            column: 114
          },
          end: {
            line: 189,
            column: 116
          }
        }, {
          start: {
            line: 189,
            column: 119
          },
          end: {
            line: 189,
            column: 125
          }
        }],
        line: 189
      },
      "42": {
        loc: {
          start: {
            line: 189,
            column: 50
          },
          end: {
            line: 189,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 189,
            column: 50
          },
          end: {
            line: 189,
            column: 82
          }
        }, {
          start: {
            line: 189,
            column: 86
          },
          end: {
            line: 189,
            column: 95
          }
        }],
        line: 189
      },
      "43": {
        loc: {
          start: {
            line: 189,
            column: 127
          },
          end: {
            line: 189,
            column: 241
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 189,
            column: 230
          },
          end: {
            line: 189,
            column: 232
          }
        }, {
          start: {
            line: 189,
            column: 235
          },
          end: {
            line: 189,
            column: 241
          }
        }],
        line: 189
      },
      "44": {
        loc: {
          start: {
            line: 189,
            column: 140
          },
          end: {
            line: 189,
            column: 211
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 189,
            column: 140
          },
          end: {
            line: 189,
            column: 185
          }
        }, {
          start: {
            line: 189,
            column: 189
          },
          end: {
            line: 189,
            column: 211
          }
        }],
        line: 189
      },
      "45": {
        loc: {
          start: {
            line: 202,
            column: 8
          },
          end: {
            line: 204,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 202,
            column: 8
          },
          end: {
            line: 204,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 202
      },
      "46": {
        loc: {
          start: {
            line: 218,
            column: 37
          },
          end: {
            line: 218,
            column: 151
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 218,
            column: 140
          },
          end: {
            line: 218,
            column: 142
          }
        }, {
          start: {
            line: 218,
            column: 145
          },
          end: {
            line: 218,
            column: 151
          }
        }],
        line: 218
      },
      "47": {
        loc: {
          start: {
            line: 218,
            column: 50
          },
          end: {
            line: 218,
            column: 121
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 218,
            column: 50
          },
          end: {
            line: 218,
            column: 95
          }
        }, {
          start: {
            line: 218,
            column: 99
          },
          end: {
            line: 218,
            column: 121
          }
        }],
        line: 218
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\interceptors\\rate-limit.interceptor.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\interceptors\\rate-limit.interceptor.ts"],
      sourcesContent: ["import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n  HttpException,\n  HttpStatus,\n  Logger,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { Reflector } from '@nestjs/core';\nimport { TenantRateLimitService } from '../services/tenant-rate-limit.service';\n\n// Decorator para definir tipo de rate limit\nexport const RateLimit = (type: string, identifier?: string) => {\n  return (target: any, propertyKey?: string, descriptor?: PropertyDescriptor) => {\n    if (descriptor) {\n      Reflect.defineMetadata('rate-limit-type', type, descriptor.value);\n      if (identifier) {\n        Reflect.defineMetadata('rate-limit-identifier', identifier, descriptor.value);\n      }\n    } else {\n      Reflect.defineMetadata('rate-limit-type', type, target);\n      if (identifier) {\n        Reflect.defineMetadata('rate-limit-identifier', identifier, target);\n      }\n    }\n  };\n};\n\n// Decorator para pular rate limiting\nexport const SkipRateLimit = () => {\n  return (target: any, propertyKey?: string, descriptor?: PropertyDescriptor) => {\n    if (descriptor) {\n      Reflect.defineMetadata('skip-rate-limit', true, descriptor.value);\n    } else {\n      Reflect.defineMetadata('skip-rate-limit', true, target);\n    }\n  };\n};\n\n// Decorator para rate limit customizado\nexport const CustomRateLimit = (config: {\n  requests: number;\n  windowMs: number;\n  type?: string;\n}) => {\n  return (target: any, propertyKey?: string, descriptor?: PropertyDescriptor) => {\n    if (descriptor) {\n      Reflect.defineMetadata('custom-rate-limit', config, descriptor.value);\n    } else {\n      Reflect.defineMetadata('custom-rate-limit', config, target);\n    }\n  };\n};\n\n@Injectable()\nexport class RateLimitInterceptor implements NestInterceptor {\n  private readonly logger = new Logger(RateLimitInterceptor.name);\n\n  constructor(\n    private readonly reflector: Reflector,\n    private readonly rateLimitService: TenantRateLimitService,\n  ) {}\n\n  async intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Promise<Observable<any>> {\n    const request = context.switchToHttp().getRequest();\n    const response = context.switchToHttp().getResponse();\n    const handler = context.getHandler();\n    const controller = context.getClass();\n\n    // Verificar se deve pular rate limiting\n    const skipRateLimit = this.reflector.getAllAndOverride<boolean>(\n      'skip-rate-limit',\n      [handler, controller],\n    );\n\n    if (skipRateLimit) {\n      return next.handle();\n    }\n\n    // Obter organiza\xE7\xE3o do usu\xE1rio ou header\n    const organizationId = this.getOrganizationId(request);\n    \n    if (!organizationId) {\n      // Se n\xE3o h\xE1 organiza\xE7\xE3o, pular rate limiting\n      return next.handle();\n    }\n\n    try {\n      // Verificar rate limit customizado\n      const customRateLimit = this.reflector.getAllAndOverride<any>(\n        'custom-rate-limit',\n        [handler, controller],\n      );\n\n      if (customRateLimit) {\n        await this.handleCustomRateLimit(\n          request,\n          response,\n          organizationId,\n          customRateLimit,\n        );\n        return next.handle();\n      }\n\n      // Obter tipo de rate limit\n      const rateLimitType = this.reflector.getAllAndOverride<string>(\n        'rate-limit-type',\n        [handler, controller],\n      ) || this.getDefaultRateLimitType(request);\n\n      // Obter identificador adicional\n      const rateLimitIdentifier = this.reflector.getAllAndOverride<string>(\n        'rate-limit-identifier',\n        [handler, controller],\n      ) || this.getDefaultIdentifier(request);\n\n      // Verificar rate limit\n      const result = await this.rateLimitService.checkRateLimit(\n        organizationId,\n        rateLimitType as any,\n        rateLimitIdentifier,\n      );\n\n      // Adicionar headers de rate limit\n      this.setRateLimitHeaders(response, result);\n\n      if (!result.allowed) {\n        this.logger.warn(\n          `Rate limit exceeded for organization ${organizationId}, type ${rateLimitType}`,\n        );\n        \n        throw new HttpException(\n          {\n            error: 'Rate limit exceeded',\n            message: `Too many ${rateLimitType} requests. Try again after ${new Date(result.resetTime).toISOString()}`,\n            retryAfter: Math.ceil((result.resetTime - Date.now()) / 1000),\n            type: rateLimitType,\n            limit: result.limit,\n            remaining: result.remaining,\n            resetTime: result.resetTime,\n          },\n          HttpStatus.TOO_MANY_REQUESTS,\n        );\n      }\n\n      return next.handle();\n    } catch (error) {\n      if (error instanceof HttpException) {\n        throw error;\n      }\n\n      this.logger.error(\n        `Rate limit interceptor error: ${error.message}`,\n        error.stack,\n      );\n      \n      // Em caso de erro, permitir a requisi\xE7\xE3o\n      return next.handle();\n    }\n  }\n\n  private getOrganizationId(request: any): string | null {\n    // Tentar obter do usu\xE1rio autenticado\n    if (request.user?.organizationId) {\n      return request.user.organizationId;\n    }\n\n    // Tentar obter do header\n    if (request.headers['x-organization-id']) {\n      return request.headers['x-organization-id'];\n    }\n\n    // Tentar obter do subdomain\n    if (request.headers.host) {\n      const subdomain = request.headers.host.split('.')[0];\n      if (subdomain && subdomain !== 'www' && subdomain !== 'api') {\n        return subdomain;\n      }\n    }\n\n    return null;\n  }\n\n  private getDefaultRateLimitType(request: any): string {\n    const method = request.method.toLowerCase();\n    const path = request.route?.path || request.url;\n\n    // Mapear rotas para tipos de rate limit\n    if (path.includes('/campaigns')) {\n      return 'campaigns';\n    }\n    \n    if (path.includes('/whatsapp') || path.includes('/messages')) {\n      return 'whatsapp';\n    }\n    \n    if (path.includes('/webhooks')) {\n      return 'webhooks';\n    }\n    \n    if (path.includes('/export') || path.includes('/download')) {\n      return 'exports';\n    }\n\n    // Default para API geral\n    return 'api';\n  }\n\n  private getDefaultIdentifier(request: any): string {\n    // Usar IP + User ID como identificador padr\xE3o\n    const ip = request.ip || request.connection.remoteAddress;\n    const userId = request.user?.id;\n    \n    return userId ? `${userId}:${ip}` : ip;\n  }\n\n  private setRateLimitHeaders(response: any, result: any): void {\n    response.set({\n      'X-RateLimit-Limit': result.limit.toString(),\n      'X-RateLimit-Remaining': result.remaining.toString(),\n      'X-RateLimit-Reset': new Date(result.resetTime).toISOString(),\n      'X-RateLimit-Reset-Timestamp': result.resetTime.toString(),\n    });\n  }\n\n  private async handleCustomRateLimit(\n    request: any,\n    response: any,\n    organizationId: string,\n    config: any,\n  ): Promise<void> {\n    const identifier = this.getDefaultIdentifier(request);\n    const key = `custom:${config.type || 'default'}`;\n    \n    // Implementar l\xF3gica de rate limit customizado\n    // Por simplicidade, usar o servi\xE7o padr\xE3o com configura\xE7\xE3o customizada\n    const result = await this.rateLimitService.checkRateLimit(\n      organizationId,\n      'api', // Usar tipo API como fallback\n      `${key}:${identifier}`,\n    );\n\n    this.setRateLimitHeaders(response, result);\n\n    if (!result.allowed) {\n      throw new HttpException(\n        {\n          error: 'Custom rate limit exceeded',\n          message: `Too many requests. Try again after ${new Date(result.resetTime).toISOString()}`,\n          retryAfter: Math.ceil((result.resetTime - Date.now()) / 1000),\n          limit: result.limit,\n          remaining: result.remaining,\n          resetTime: result.resetTime,\n        },\n        HttpStatus.TOO_MANY_REQUESTS,\n      );\n    }\n  }\n}\n\n// Guard para verificar rate limit antes da execu\xE7\xE3o\n@Injectable()\nexport class RateLimitGuard {\n  private readonly logger = new Logger(RateLimitGuard.name);\n\n  constructor(\n    private readonly rateLimitService: TenantRateLimitService,\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise<boolean> {\n    const request = context.switchToHttp().getRequest();\n    const organizationId = request.user?.organizationId;\n\n    if (!organizationId) {\n      return true; // Permitir se n\xE3o h\xE1 organiza\xE7\xE3o\n    }\n\n    try {\n      const result = await this.rateLimitService.checkRateLimit(\n        organizationId,\n        'api',\n        request.ip,\n      );\n\n      return result.allowed;\n    } catch (error) {\n      this.logger.error(\n        `Rate limit guard error: ${error.message}`,\n        error.stack,\n      );\n      \n      // Em caso de erro, permitir acesso\n      return true;\n    }\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "175785c31dacd382c4777398bb8a9fb46e332679"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_jy6q72bxc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_jy6q72bxc();
var __decorate =
/* istanbul ignore next */
(cov_jy6q72bxc().s[0]++,
/* istanbul ignore next */
(cov_jy6q72bxc().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_jy6q72bxc().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_jy6q72bxc().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_jy6q72bxc().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_jy6q72bxc().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_jy6q72bxc().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_jy6q72bxc().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_jy6q72bxc().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_jy6q72bxc().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_jy6q72bxc().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_jy6q72bxc().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_jy6q72bxc().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_jy6q72bxc().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_jy6q72bxc().b[3][0]++;
    cov_jy6q72bxc().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_jy6q72bxc().b[3][1]++;
    cov_jy6q72bxc().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_jy6q72bxc().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_jy6q72bxc().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_jy6q72bxc().b[5][0]++;
        cov_jy6q72bxc().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_jy6q72bxc().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_jy6q72bxc().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_jy6q72bxc().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_jy6q72bxc().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_jy6q72bxc().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_jy6q72bxc().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_jy6q72bxc().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_jy6q72bxc().s[9]++;
  return /* istanbul ignore next */(cov_jy6q72bxc().b[9][0]++, c > 3) &&
  /* istanbul ignore next */
  (cov_jy6q72bxc().b[9][1]++, r) &&
  /* istanbul ignore next */
  (cov_jy6q72bxc().b[9][2]++, Object.defineProperty(target, key, r)), r;
}));
var __metadata =
/* istanbul ignore next */
(cov_jy6q72bxc().s[10]++,
/* istanbul ignore next */
(cov_jy6q72bxc().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_jy6q72bxc().b[10][1]++, this.__metadata) ||
/* istanbul ignore next */
(cov_jy6q72bxc().b[10][2]++, function (k, v) {
  /* istanbul ignore next */
  cov_jy6q72bxc().f[1]++;
  cov_jy6q72bxc().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_jy6q72bxc().b[12][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_jy6q72bxc().b[12][1]++, typeof Reflect.metadata === "function")) {
    /* istanbul ignore next */
    cov_jy6q72bxc().b[11][0]++;
    cov_jy6q72bxc().s[12]++;
    return Reflect.metadata(k, v);
  } else
  /* istanbul ignore next */
  {
    cov_jy6q72bxc().b[11][1]++;
  }
}));
var RateLimitInterceptor_1, RateLimitGuard_1;
var _a, _b, _c;
import { Injectable, HttpException, HttpStatus, Logger } from '@nestjs/common';
import { Reflector } from '@nestjs/core';
import { TenantRateLimitService } from '../services/tenant-rate-limit.service';
// Decorator para definir tipo de rate limit
/* istanbul ignore next */
cov_jy6q72bxc().s[13]++;
export const RateLimit = (type, identifier) => {
  /* istanbul ignore next */
  cov_jy6q72bxc().f[2]++;
  cov_jy6q72bxc().s[14]++;
  return (target, propertyKey, descriptor) => {
    /* istanbul ignore next */
    cov_jy6q72bxc().f[3]++;
    cov_jy6q72bxc().s[15]++;
    if (descriptor) {
      /* istanbul ignore next */
      cov_jy6q72bxc().b[13][0]++;
      cov_jy6q72bxc().s[16]++;
      Reflect.defineMetadata('rate-limit-type', type, descriptor.value);
      /* istanbul ignore next */
      cov_jy6q72bxc().s[17]++;
      if (identifier) {
        /* istanbul ignore next */
        cov_jy6q72bxc().b[14][0]++;
        cov_jy6q72bxc().s[18]++;
        Reflect.defineMetadata('rate-limit-identifier', identifier, descriptor.value);
      } else
      /* istanbul ignore next */
      {
        cov_jy6q72bxc().b[14][1]++;
      }
    } else {
      /* istanbul ignore next */
      cov_jy6q72bxc().b[13][1]++;
      cov_jy6q72bxc().s[19]++;
      Reflect.defineMetadata('rate-limit-type', type, target);
      /* istanbul ignore next */
      cov_jy6q72bxc().s[20]++;
      if (identifier) {
        /* istanbul ignore next */
        cov_jy6q72bxc().b[15][0]++;
        cov_jy6q72bxc().s[21]++;
        Reflect.defineMetadata('rate-limit-identifier', identifier, target);
      } else
      /* istanbul ignore next */
      {
        cov_jy6q72bxc().b[15][1]++;
      }
    }
  };
};
// Decorator para pular rate limiting
/* istanbul ignore next */
cov_jy6q72bxc().s[22]++;
export const SkipRateLimit = () => {
  /* istanbul ignore next */
  cov_jy6q72bxc().f[4]++;
  cov_jy6q72bxc().s[23]++;
  return (target, propertyKey, descriptor) => {
    /* istanbul ignore next */
    cov_jy6q72bxc().f[5]++;
    cov_jy6q72bxc().s[24]++;
    if (descriptor) {
      /* istanbul ignore next */
      cov_jy6q72bxc().b[16][0]++;
      cov_jy6q72bxc().s[25]++;
      Reflect.defineMetadata('skip-rate-limit', true, descriptor.value);
    } else {
      /* istanbul ignore next */
      cov_jy6q72bxc().b[16][1]++;
      cov_jy6q72bxc().s[26]++;
      Reflect.defineMetadata('skip-rate-limit', true, target);
    }
  };
};
// Decorator para rate limit customizado
/* istanbul ignore next */
cov_jy6q72bxc().s[27]++;
export const CustomRateLimit = config => {
  /* istanbul ignore next */
  cov_jy6q72bxc().f[6]++;
  cov_jy6q72bxc().s[28]++;
  return (target, propertyKey, descriptor) => {
    /* istanbul ignore next */
    cov_jy6q72bxc().f[7]++;
    cov_jy6q72bxc().s[29]++;
    if (descriptor) {
      /* istanbul ignore next */
      cov_jy6q72bxc().b[17][0]++;
      cov_jy6q72bxc().s[30]++;
      Reflect.defineMetadata('custom-rate-limit', config, descriptor.value);
    } else {
      /* istanbul ignore next */
      cov_jy6q72bxc().b[17][1]++;
      cov_jy6q72bxc().s[31]++;
      Reflect.defineMetadata('custom-rate-limit', config, target);
    }
  };
};
let RateLimitInterceptor =
/* istanbul ignore next */
(cov_jy6q72bxc().s[32]++, RateLimitInterceptor_1 = class RateLimitInterceptor {
  reflector;
  rateLimitService;
  logger =
  /* istanbul ignore next */
  (cov_jy6q72bxc().s[33]++, new Logger(RateLimitInterceptor_1.name));
  constructor(reflector, rateLimitService) {
    /* istanbul ignore next */
    cov_jy6q72bxc().f[8]++;
    cov_jy6q72bxc().s[34]++;
    this.reflector = reflector;
    /* istanbul ignore next */
    cov_jy6q72bxc().s[35]++;
    this.rateLimitService = rateLimitService;
  }
  async intercept(context, next) {
    /* istanbul ignore next */
    cov_jy6q72bxc().f[9]++;
    const request =
    /* istanbul ignore next */
    (cov_jy6q72bxc().s[36]++, context.switchToHttp().getRequest());
    const response =
    /* istanbul ignore next */
    (cov_jy6q72bxc().s[37]++, context.switchToHttp().getResponse());
    const handler =
    /* istanbul ignore next */
    (cov_jy6q72bxc().s[38]++, context.getHandler());
    const controller =
    /* istanbul ignore next */
    (cov_jy6q72bxc().s[39]++, context.getClass());
    // Verificar se deve pular rate limiting
    const skipRateLimit =
    /* istanbul ignore next */
    (cov_jy6q72bxc().s[40]++, this.reflector.getAllAndOverride('skip-rate-limit', [handler, controller]));
    /* istanbul ignore next */
    cov_jy6q72bxc().s[41]++;
    if (skipRateLimit) {
      /* istanbul ignore next */
      cov_jy6q72bxc().b[18][0]++;
      cov_jy6q72bxc().s[42]++;
      return next.handle();
    } else
    /* istanbul ignore next */
    {
      cov_jy6q72bxc().b[18][1]++;
    }
    // Obter organização do usuário ou header
    const organizationId =
    /* istanbul ignore next */
    (cov_jy6q72bxc().s[43]++, this.getOrganizationId(request));
    /* istanbul ignore next */
    cov_jy6q72bxc().s[44]++;
    if (!organizationId) {
      /* istanbul ignore next */
      cov_jy6q72bxc().b[19][0]++;
      cov_jy6q72bxc().s[45]++;
      // Se não há organização, pular rate limiting
      return next.handle();
    } else
    /* istanbul ignore next */
    {
      cov_jy6q72bxc().b[19][1]++;
    }
    cov_jy6q72bxc().s[46]++;
    try {
      // Verificar rate limit customizado
      const customRateLimit =
      /* istanbul ignore next */
      (cov_jy6q72bxc().s[47]++, this.reflector.getAllAndOverride('custom-rate-limit', [handler, controller]));
      /* istanbul ignore next */
      cov_jy6q72bxc().s[48]++;
      if (customRateLimit) {
        /* istanbul ignore next */
        cov_jy6q72bxc().b[20][0]++;
        cov_jy6q72bxc().s[49]++;
        await this.handleCustomRateLimit(request, response, organizationId, customRateLimit);
        /* istanbul ignore next */
        cov_jy6q72bxc().s[50]++;
        return next.handle();
      } else
      /* istanbul ignore next */
      {
        cov_jy6q72bxc().b[20][1]++;
      }
      // Obter tipo de rate limit
      const rateLimitType =
      /* istanbul ignore next */
      (cov_jy6q72bxc().s[51]++,
      /* istanbul ignore next */
      (cov_jy6q72bxc().b[21][0]++, this.reflector.getAllAndOverride('rate-limit-type', [handler, controller])) ||
      /* istanbul ignore next */
      (cov_jy6q72bxc().b[21][1]++, this.getDefaultRateLimitType(request)));
      // Obter identificador adicional
      const rateLimitIdentifier =
      /* istanbul ignore next */
      (cov_jy6q72bxc().s[52]++,
      /* istanbul ignore next */
      (cov_jy6q72bxc().b[22][0]++, this.reflector.getAllAndOverride('rate-limit-identifier', [handler, controller])) ||
      /* istanbul ignore next */
      (cov_jy6q72bxc().b[22][1]++, this.getDefaultIdentifier(request)));
      // Verificar rate limit
      const result =
      /* istanbul ignore next */
      (cov_jy6q72bxc().s[53]++, await this.rateLimitService.checkRateLimit(organizationId, rateLimitType, rateLimitIdentifier));
      // Adicionar headers de rate limit
      /* istanbul ignore next */
      cov_jy6q72bxc().s[54]++;
      this.setRateLimitHeaders(response, result);
      /* istanbul ignore next */
      cov_jy6q72bxc().s[55]++;
      if (!result.allowed) {
        /* istanbul ignore next */
        cov_jy6q72bxc().b[23][0]++;
        cov_jy6q72bxc().s[56]++;
        this.logger.warn(`Rate limit exceeded for organization ${organizationId}, type ${rateLimitType}`);
        /* istanbul ignore next */
        cov_jy6q72bxc().s[57]++;
        throw new HttpException({
          error: 'Rate limit exceeded',
          message: `Too many ${rateLimitType} requests. Try again after ${new Date(result.resetTime).toISOString()}`,
          retryAfter: Math.ceil((result.resetTime - Date.now()) / 1000),
          type: rateLimitType,
          limit: result.limit,
          remaining: result.remaining,
          resetTime: result.resetTime
        }, HttpStatus.TOO_MANY_REQUESTS);
      } else
      /* istanbul ignore next */
      {
        cov_jy6q72bxc().b[23][1]++;
      }
      cov_jy6q72bxc().s[58]++;
      return next.handle();
    } catch (error) {
      /* istanbul ignore next */
      cov_jy6q72bxc().s[59]++;
      if (error instanceof HttpException) {
        /* istanbul ignore next */
        cov_jy6q72bxc().b[24][0]++;
        cov_jy6q72bxc().s[60]++;
        throw error;
      } else
      /* istanbul ignore next */
      {
        cov_jy6q72bxc().b[24][1]++;
      }
      cov_jy6q72bxc().s[61]++;
      this.logger.error(`Rate limit interceptor error: ${error.message}`, error.stack);
      // Em caso de erro, permitir a requisição
      /* istanbul ignore next */
      cov_jy6q72bxc().s[62]++;
      return next.handle();
    }
  }
  getOrganizationId(request) {
    /* istanbul ignore next */
    cov_jy6q72bxc().f[10]++;
    cov_jy6q72bxc().s[63]++;
    // Tentar obter do usuário autenticado
    if (request.user?.organizationId) {
      /* istanbul ignore next */
      cov_jy6q72bxc().b[25][0]++;
      cov_jy6q72bxc().s[64]++;
      return request.user.organizationId;
    } else
    /* istanbul ignore next */
    {
      cov_jy6q72bxc().b[25][1]++;
    }
    // Tentar obter do header
    cov_jy6q72bxc().s[65]++;
    if (request.headers['x-organization-id']) {
      /* istanbul ignore next */
      cov_jy6q72bxc().b[26][0]++;
      cov_jy6q72bxc().s[66]++;
      return request.headers['x-organization-id'];
    } else
    /* istanbul ignore next */
    {
      cov_jy6q72bxc().b[26][1]++;
    }
    // Tentar obter do subdomain
    cov_jy6q72bxc().s[67]++;
    if (request.headers.host) {
      /* istanbul ignore next */
      cov_jy6q72bxc().b[27][0]++;
      const subdomain =
      /* istanbul ignore next */
      (cov_jy6q72bxc().s[68]++, request.headers.host.split('.')[0]);
      /* istanbul ignore next */
      cov_jy6q72bxc().s[69]++;
      if (
      /* istanbul ignore next */
      (cov_jy6q72bxc().b[29][0]++, subdomain) &&
      /* istanbul ignore next */
      (cov_jy6q72bxc().b[29][1]++, subdomain !== 'www') &&
      /* istanbul ignore next */
      (cov_jy6q72bxc().b[29][2]++, subdomain !== 'api')) {
        /* istanbul ignore next */
        cov_jy6q72bxc().b[28][0]++;
        cov_jy6q72bxc().s[70]++;
        return subdomain;
      } else
      /* istanbul ignore next */
      {
        cov_jy6q72bxc().b[28][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_jy6q72bxc().b[27][1]++;
    }
    cov_jy6q72bxc().s[71]++;
    return null;
  }
  getDefaultRateLimitType(request) {
    /* istanbul ignore next */
    cov_jy6q72bxc().f[11]++;
    const method =
    /* istanbul ignore next */
    (cov_jy6q72bxc().s[72]++, request.method.toLowerCase());
    const path =
    /* istanbul ignore next */
    (cov_jy6q72bxc().s[73]++,
    /* istanbul ignore next */
    (cov_jy6q72bxc().b[30][0]++, request.route?.path) ||
    /* istanbul ignore next */
    (cov_jy6q72bxc().b[30][1]++, request.url));
    // Mapear rotas para tipos de rate limit
    /* istanbul ignore next */
    cov_jy6q72bxc().s[74]++;
    if (path.includes('/campaigns')) {
      /* istanbul ignore next */
      cov_jy6q72bxc().b[31][0]++;
      cov_jy6q72bxc().s[75]++;
      return 'campaigns';
    } else
    /* istanbul ignore next */
    {
      cov_jy6q72bxc().b[31][1]++;
    }
    cov_jy6q72bxc().s[76]++;
    if (
    /* istanbul ignore next */
    (cov_jy6q72bxc().b[33][0]++, path.includes('/whatsapp')) ||
    /* istanbul ignore next */
    (cov_jy6q72bxc().b[33][1]++, path.includes('/messages'))) {
      /* istanbul ignore next */
      cov_jy6q72bxc().b[32][0]++;
      cov_jy6q72bxc().s[77]++;
      return 'whatsapp';
    } else
    /* istanbul ignore next */
    {
      cov_jy6q72bxc().b[32][1]++;
    }
    cov_jy6q72bxc().s[78]++;
    if (path.includes('/webhooks')) {
      /* istanbul ignore next */
      cov_jy6q72bxc().b[34][0]++;
      cov_jy6q72bxc().s[79]++;
      return 'webhooks';
    } else
    /* istanbul ignore next */
    {
      cov_jy6q72bxc().b[34][1]++;
    }
    cov_jy6q72bxc().s[80]++;
    if (
    /* istanbul ignore next */
    (cov_jy6q72bxc().b[36][0]++, path.includes('/export')) ||
    /* istanbul ignore next */
    (cov_jy6q72bxc().b[36][1]++, path.includes('/download'))) {
      /* istanbul ignore next */
      cov_jy6q72bxc().b[35][0]++;
      cov_jy6q72bxc().s[81]++;
      return 'exports';
    } else
    /* istanbul ignore next */
    {
      cov_jy6q72bxc().b[35][1]++;
    }
    // Default para API geral
    cov_jy6q72bxc().s[82]++;
    return 'api';
  }
  getDefaultIdentifier(request) {
    /* istanbul ignore next */
    cov_jy6q72bxc().f[12]++;
    // Usar IP + User ID como identificador padrão
    const ip =
    /* istanbul ignore next */
    (cov_jy6q72bxc().s[83]++,
    /* istanbul ignore next */
    (cov_jy6q72bxc().b[37][0]++, request.ip) ||
    /* istanbul ignore next */
    (cov_jy6q72bxc().b[37][1]++, request.connection.remoteAddress));
    const userId =
    /* istanbul ignore next */
    (cov_jy6q72bxc().s[84]++, request.user?.id);
    /* istanbul ignore next */
    cov_jy6q72bxc().s[85]++;
    return userId ?
    /* istanbul ignore next */
    (cov_jy6q72bxc().b[38][0]++, `${userId}:${ip}`) :
    /* istanbul ignore next */
    (cov_jy6q72bxc().b[38][1]++, ip);
  }
  setRateLimitHeaders(response, result) {
    /* istanbul ignore next */
    cov_jy6q72bxc().f[13]++;
    cov_jy6q72bxc().s[86]++;
    response.set({
      'X-RateLimit-Limit': result.limit.toString(),
      'X-RateLimit-Remaining': result.remaining.toString(),
      'X-RateLimit-Reset': new Date(result.resetTime).toISOString(),
      'X-RateLimit-Reset-Timestamp': result.resetTime.toString()
    });
  }
  async handleCustomRateLimit(request, response, organizationId, config) {
    /* istanbul ignore next */
    cov_jy6q72bxc().f[14]++;
    const identifier =
    /* istanbul ignore next */
    (cov_jy6q72bxc().s[87]++, this.getDefaultIdentifier(request));
    const key =
    /* istanbul ignore next */
    (cov_jy6q72bxc().s[88]++, `custom:${
    /* istanbul ignore next */
    (cov_jy6q72bxc().b[39][0]++, config.type) ||
    /* istanbul ignore next */
    (cov_jy6q72bxc().b[39][1]++, 'default')}`);
    // Implementar lógica de rate limit customizado
    // Por simplicidade, usar o serviço padrão com configuração customizada
    const result =
    /* istanbul ignore next */
    (cov_jy6q72bxc().s[89]++, await this.rateLimitService.checkRateLimit(organizationId, 'api',
    // Usar tipo API como fallback
    `${key}:${identifier}`));
    /* istanbul ignore next */
    cov_jy6q72bxc().s[90]++;
    this.setRateLimitHeaders(response, result);
    /* istanbul ignore next */
    cov_jy6q72bxc().s[91]++;
    if (!result.allowed) {
      /* istanbul ignore next */
      cov_jy6q72bxc().b[40][0]++;
      cov_jy6q72bxc().s[92]++;
      throw new HttpException({
        error: 'Custom rate limit exceeded',
        message: `Too many requests. Try again after ${new Date(result.resetTime).toISOString()}`,
        retryAfter: Math.ceil((result.resetTime - Date.now()) / 1000),
        limit: result.limit,
        remaining: result.remaining,
        resetTime: result.resetTime
      }, HttpStatus.TOO_MANY_REQUESTS);
    } else
    /* istanbul ignore next */
    {
      cov_jy6q72bxc().b[40][1]++;
    }
  }
});
/* istanbul ignore next */
cov_jy6q72bxc().s[93]++;
RateLimitInterceptor = RateLimitInterceptor_1 = __decorate([Injectable(), __metadata("design:paramtypes", [typeof (_a =
/* istanbul ignore next */
(cov_jy6q72bxc().b[42][0]++, typeof Reflector !== "undefined") &&
/* istanbul ignore next */
(cov_jy6q72bxc().b[42][1]++, Reflector)) === "function" ?
/* istanbul ignore next */
(cov_jy6q72bxc().b[41][0]++, _a) :
/* istanbul ignore next */
(cov_jy6q72bxc().b[41][1]++, Object), typeof (_b =
/* istanbul ignore next */
(cov_jy6q72bxc().b[44][0]++, typeof TenantRateLimitService !== "undefined") &&
/* istanbul ignore next */
(cov_jy6q72bxc().b[44][1]++, TenantRateLimitService)) === "function" ?
/* istanbul ignore next */
(cov_jy6q72bxc().b[43][0]++, _b) :
/* istanbul ignore next */
(cov_jy6q72bxc().b[43][1]++, Object)])], RateLimitInterceptor);
export { RateLimitInterceptor };
// Guard para verificar rate limit antes da execução
let RateLimitGuard =
/* istanbul ignore next */
(cov_jy6q72bxc().s[94]++, RateLimitGuard_1 = class RateLimitGuard {
  rateLimitService;
  logger =
  /* istanbul ignore next */
  (cov_jy6q72bxc().s[95]++, new Logger(RateLimitGuard_1.name));
  constructor(rateLimitService) {
    /* istanbul ignore next */
    cov_jy6q72bxc().f[15]++;
    cov_jy6q72bxc().s[96]++;
    this.rateLimitService = rateLimitService;
  }
  async canActivate(context) {
    /* istanbul ignore next */
    cov_jy6q72bxc().f[16]++;
    const request =
    /* istanbul ignore next */
    (cov_jy6q72bxc().s[97]++, context.switchToHttp().getRequest());
    const organizationId =
    /* istanbul ignore next */
    (cov_jy6q72bxc().s[98]++, request.user?.organizationId);
    /* istanbul ignore next */
    cov_jy6q72bxc().s[99]++;
    if (!organizationId) {
      /* istanbul ignore next */
      cov_jy6q72bxc().b[45][0]++;
      cov_jy6q72bxc().s[100]++;
      return true; // Permitir se não há organização
    } else
    /* istanbul ignore next */
    {
      cov_jy6q72bxc().b[45][1]++;
    }
    cov_jy6q72bxc().s[101]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_jy6q72bxc().s[102]++, await this.rateLimitService.checkRateLimit(organizationId, 'api', request.ip));
      /* istanbul ignore next */
      cov_jy6q72bxc().s[103]++;
      return result.allowed;
    } catch (error) {
      /* istanbul ignore next */
      cov_jy6q72bxc().s[104]++;
      this.logger.error(`Rate limit guard error: ${error.message}`, error.stack);
      // Em caso de erro, permitir acesso
      /* istanbul ignore next */
      cov_jy6q72bxc().s[105]++;
      return true;
    }
  }
});
/* istanbul ignore next */
cov_jy6q72bxc().s[106]++;
RateLimitGuard = RateLimitGuard_1 = __decorate([Injectable(), __metadata("design:paramtypes", [typeof (_c =
/* istanbul ignore next */
(cov_jy6q72bxc().b[47][0]++, typeof TenantRateLimitService !== "undefined") &&
/* istanbul ignore next */
(cov_jy6q72bxc().b[47][1]++, TenantRateLimitService)) === "function" ?
/* istanbul ignore next */
(cov_jy6q72bxc().b[46][0]++, _c) :
/* istanbul ignore next */
(cov_jy6q72bxc().b[46][1]++, Object)])], RateLimitGuard);
export { RateLimitGuard };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,