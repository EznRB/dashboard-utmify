{"version":3,"names":["cov_11un9d1dx7","actualCoverage","pino_1","s","__importDefault","require","env_1","exports","logger","default","level","config","LOG_LEVEL","formatters","label","f","timestamp","stdTimeFunctions","isoTime","base","pid","process","hostname","b","env","HOSTNAME","service","version","npm_package_version","logLevels","fatal","error","warn","info","debug","trace","logError","message","context","name","stack","logRequest","request","method","url","ip","userAgent","headers","undefined","logResponse","response","statusCode","responseTime","logDatabase","operation","table","duration","database","logAuth","event","userId","email","success","auth","logSecurity","details","severity","security","logPerformance","metadata","performance","logWebhook","webhookId","webhook","logQueue","jobName","jobId","status","queue","createContextLogger","child"],"sources":["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\utils\\logger.ts"],"sourcesContent":["import pino from 'pino'\nimport { config } from '@/config/env'\n\n// Create logger instance\nexport const logger = pino({\n  level: config.LOG_LEVEL,\n  formatters: {\n    level: (label) => {\n      return { level: label }\n    },\n  },\n  timestamp: pino.stdTimeFunctions.isoTime,\n  base: {\n    pid: process.pid,\n    hostname: process.env.HOSTNAME || 'unknown',\n    service: 'utmify-api',\n    version: process.env.npm_package_version || '0.1.0',\n  },\n})\n\n// Log levels for different scenarios\nexport const logLevels = {\n  fatal: 60,\n  error: 50,\n  warn: 40,\n  info: 30,\n  debug: 20,\n  trace: 10,\n} as const\n\n// Helper functions for structured logging\nexport const logError = (error: Error, message?: string, context?: Record<string, any>) => {\n  logger.error({\n    error: {\n      name: error.name,\n      message: error.message,\n      stack: error.stack,\n    },\n    ...context,\n  }, message || error.message)\n}\n\nexport const logRequest = (request: {\n  method: string\n  url: string\n  headers?: Record<string, any>\n  ip?: string\n  userAgent?: string\n}, message?: string) => {\n  logger.info({\n    request: {\n      method: request.method,\n      url: request.url,\n      ip: request.ip,\n      userAgent: request.userAgent,\n      // Don't log sensitive headers\n      headers: request.headers ? {\n        'content-type': request.headers['content-type'],\n        'accept': request.headers['accept'],\n        'origin': request.headers['origin'],\n      } : undefined,\n    },\n  }, message || 'Request received')\n}\n\nexport const logResponse = (response: {\n  statusCode: number\n  responseTime?: number\n}, message?: string) => {\n  const level = response.statusCode >= 500 ? 'error' : \n               response.statusCode >= 400 ? 'warn' : 'info'\n  \n  logger[level]({\n    response: {\n      statusCode: response.statusCode,\n      responseTime: response.responseTime,\n    },\n  }, message || 'Request completed')\n}\n\nexport const logDatabase = (operation: string, table?: string, duration?: number, error?: Error) => {\n  if (error) {\n    logger.error({\n      database: {\n        operation,\n        table,\n        duration,\n        error: {\n          name: error.name,\n          message: error.message,\n        },\n      },\n    }, `Database operation failed: ${operation}`)\n  } else {\n    logger.debug({\n      database: {\n        operation,\n        table,\n        duration,\n      },\n    }, `Database operation: ${operation}`)\n  }\n}\n\nexport const logAuth = (event: string, userId?: string, email?: string, ip?: string, success: boolean = true) => {\n  const level = success ? 'info' : 'warn'\n  \n  logger[level]({\n    auth: {\n      event,\n      userId,\n      email,\n      ip,\n      success,\n    },\n  }, `Auth event: ${event}`)\n}\n\nexport const logSecurity = (event: string, details: Record<string, any>, severity: 'low' | 'medium' | 'high' = 'medium') => {\n  const level = severity === 'high' ? 'error' : severity === 'medium' ? 'warn' : 'info'\n  \n  logger[level]({\n    security: {\n      event,\n      severity,\n      ...details,\n    },\n  }, `Security event: ${event}`)\n}\n\nexport const logPerformance = (operation: string, duration: number, metadata?: Record<string, any>) => {\n  const level = duration > 5000 ? 'warn' : duration > 1000 ? 'info' : 'debug'\n  \n  logger[level]({\n    performance: {\n      operation,\n      duration,\n      ...metadata,\n    },\n  }, `Performance: ${operation} took ${duration}ms`)\n}\n\nexport const logWebhook = (event: string, webhookId: string, url: string, success: boolean, responseTime?: number, error?: Error) => {\n  const level = success ? 'info' : 'error'\n  \n  logger[level]({\n    webhook: {\n      event,\n      webhookId,\n      url,\n      success,\n      responseTime,\n      error: error ? {\n        name: error.name,\n        message: error.message,\n      } : undefined,\n    },\n  }, `Webhook ${success ? 'delivered' : 'failed'}: ${event}`)\n}\n\nexport const logQueue = (jobName: string, jobId: string, status: 'started' | 'completed' | 'failed', duration?: number, error?: Error) => {\n  const level = status === 'failed' ? 'error' : 'info'\n  \n  logger[level]({\n    queue: {\n      jobName,\n      jobId,\n      status,\n      duration,\n      error: error ? {\n        name: error.name,\n        message: error.message,\n      } : undefined,\n    },\n  }, `Queue job ${status}: ${jobName}`)\n}\n\n// Create child logger with context\nexport const createContextLogger = (context: Record<string, any>) => {\n  return logger.child(context)\n}\n\n// Export default logger\nexport default logger"],"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","ignoreList":[]}