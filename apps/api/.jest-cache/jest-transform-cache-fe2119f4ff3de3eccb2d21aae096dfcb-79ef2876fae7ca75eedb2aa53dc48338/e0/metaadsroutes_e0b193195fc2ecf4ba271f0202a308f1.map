{"version":3,"names":["cov_21zn87rdzk","actualCoverage","z","requireAuth","asyncHandler","AuthRequestSchema","s","object","redirect_uri","string","url","CallbackQuerySchema","code","optional","state","error","error_description","SyncRequestSchema","force","boolean","default","CampaignsQuerySchema","ad_account_id","min","metaAdsRoutes","app","f","post","schema","tags","summary","body","response","type","properties","success","data","authUrl","message","preHandler","request","reply","user","Buffer","from","JSON","stringify","userId","id","timestamp","Date","now","toString","process","env","META_APP_ID","encodeURIComponent","get","querystring","query","b","log","send","stateData","parse","info","count","mockAccounts","name","account_status","currency","timezone_name","business","length","mockCampaigns","status","objective","created_time","updated_time","start_time","daily_budget","account_id","insights","impressions","clicks","spend","ctr","cpc","conversions","cost_per_conversion","syncId","connected","lastSync","format","connectedAt","expiresAt","mockStatus","toISOString"],"sources":["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\routes\\meta-ads.routes.ts"],"sourcesContent":["import type { FastifyInstance } from 'fastify'\nimport { z } from 'zod'\nimport { requireAuth } from '../middleware/auth.middleware'\nimport { asyncHandler } from '../utils/errors'\n\n// Schemas for validation\nconst AuthRequestSchema = z.object({\n  redirect_uri: z.string().url('Invalid redirect URI'),\n})\n\nconst CallbackQuerySchema = z.object({\n  code: z.string().optional(),\n  state: z.string().optional(),\n  error: z.string().optional(),\n  error_description: z.string().optional(),\n})\n\nconst SyncRequestSchema = z.object({\n  force: z.boolean().optional().default(false),\n})\n\nconst CampaignsQuerySchema = z.object({\n  ad_account_id: z.string().min(1, 'Ad account ID is required'),\n})\n\nexport async function metaAdsRoutes(app: FastifyInstance) {\n  // POST /api/v1/integrations/meta/auth - Initiate OAuth flow\n  app.post('/auth', {\n    schema: {\n      tags: ['Meta Ads Integration'],\n      summary: 'Initiate Meta Ads OAuth flow',\n      body: AuthRequestSchema,\n      response: {\n        200: {\n          type: 'object',\n          properties: {\n            success: { type: 'boolean' },\n            data: {\n              type: 'object',\n              properties: {\n                authUrl: { type: 'string' },\n                state: { type: 'string' },\n                message: { type: 'string' },\n              },\n            },\n          },\n        },\n      },\n    },\n    preHandler: requireAuth,\n  }, asyncHandler(async (request, reply) => {\n    const user = request.user\n    const { redirect_uri } = request.body as z.infer<typeof AuthRequestSchema>\n\n    // Mock implementation - replace with actual Meta Ads service\n    const state = Buffer.from(JSON.stringify({ userId: user.id, timestamp: Date.now() })).toString('base64')\n    const authUrl = `https://www.facebook.com/v18.0/dialog/oauth?client_id=${process.env.META_APP_ID}&redirect_uri=${encodeURIComponent(redirect_uri)}&scope=ads_management,ads_read,business_management&response_type=code&state=${state}`\n\n    return {\n      success: true,\n      data: {\n        authUrl,\n        state,\n        message: 'Redirect user to this URL to complete authorization',\n      },\n    }\n  }))\n\n  // GET /api/v1/integrations/meta/callback - Handle OAuth callback\n  app.get('/callback', {\n    schema: {\n      tags: ['Meta Ads Integration'],\n      summary: 'Handle Meta Ads OAuth callback',\n      querystring: CallbackQuerySchema,\n      response: {\n        200: {\n          type: 'object',\n          properties: {\n            success: { type: 'boolean' },\n            message: { type: 'string' },\n          },\n        },\n      },\n    },\n  }, asyncHandler(async (request, reply) => {\n    const { code, state, error, error_description } = request.query as z.infer<typeof CallbackQuerySchema>\n\n    if (error) {\n      app.log.error('Meta Ads OAuth error:', { error, error_description })\n      return reply.code(400).send({\n        success: false,\n        error: error_description || error,\n      })\n    }\n\n    if (!code || !state) {\n      return reply.code(400).send({\n        success: false,\n        error: 'Missing authorization code or state',\n      })\n    }\n\n    try {\n      // Decode state to get user info\n      const stateData = JSON.parse(Buffer.from(state, 'base64').toString())\n      \n      // Mock implementation - replace with actual token exchange\n      app.log.info('Meta Ads OAuth callback received', { code, userId: stateData.userId })\n      \n      return {\n        success: true,\n        message: 'Meta Ads integration completed successfully',\n      }\n    } catch (error) {\n      app.log.error('Failed to process Meta Ads callback', error)\n      return reply.code(500).send({\n        success: false,\n        error: 'Failed to process authorization callback',\n      })\n    }\n  }))\n\n  // GET /api/v1/integrations/meta/accounts - Get ad accounts\n  app.get('/accounts', {\n    schema: {\n      tags: ['Meta Ads Integration'],\n      summary: 'Get user\\'s Meta ad accounts',\n      response: {\n        200: {\n          type: 'object',\n          properties: {\n            success: { type: 'boolean' },\n            data: { type: 'array' },\n            count: { type: 'number' },\n          },\n        },\n      },\n    },\n    preHandler: requireAuth,\n  }, asyncHandler(async (request, reply) => {\n    const user = request.user\n\n    // Mock data - replace with actual Meta Ads API call\n    const mockAccounts = [\n      {\n        id: 'act_123456789',\n        name: 'Minha Conta de Anúncios',\n        account_status: 1,\n        currency: 'BRL',\n        timezone_name: 'America/Sao_Paulo',\n        business: {\n          id: '123456789',\n          name: 'Minha Empresa',\n        },\n      },\n      {\n        id: 'act_987654321',\n        name: 'Conta Secundária',\n        account_status: 1,\n        currency: 'BRL',\n        timezone_name: 'America/Sao_Paulo',\n        business: {\n          id: '987654321',\n          name: 'Empresa Secundária',\n        },\n      },\n    ]\n\n    return {\n      success: true,\n      data: mockAccounts,\n      count: mockAccounts.length,\n    }\n  }))\n\n  // GET /api/v1/integrations/meta/campaigns - Get campaigns\n  app.get('/campaigns', {\n    schema: {\n      tags: ['Meta Ads Integration'],\n      summary: 'Get campaigns for an ad account',\n      querystring: CampaignsQuerySchema,\n      response: {\n        200: {\n          type: 'object',\n          properties: {\n            success: { type: 'boolean' },\n            data: { type: 'array' },\n            count: { type: 'number' },\n          },\n        },\n      },\n    },\n    preHandler: requireAuth,\n  }, asyncHandler(async (request, reply) => {\n    const user = request.user\n    const { ad_account_id } = request.query as z.infer<typeof CampaignsQuerySchema>\n\n    // Mock data - replace with actual Meta Ads API call\n    const mockCampaigns = [\n      {\n        id: '23847110158250637',\n        name: 'Campanha de Conversão - Black Friday',\n        status: 'ACTIVE',\n        objective: 'CONVERSIONS',\n        created_time: '2024-01-15T10:30:00+0000',\n        updated_time: '2024-01-20T14:22:00+0000',\n        start_time: '2024-01-15T10:30:00+0000',\n        daily_budget: '10000',\n        account_id: ad_account_id,\n        insights: {\n          impressions: '125430',\n          clicks: '3247',\n          spend: '89.47',\n          ctr: '2.59',\n          cpc: '0.28',\n          conversions: '47',\n          cost_per_conversion: '1.90',\n        },\n      },\n      {\n        id: '23847110158250638',\n        name: 'Campanha de Tráfego - Produtos Novos',\n        status: 'ACTIVE',\n        objective: 'LINK_CLICKS',\n        created_time: '2024-01-10T08:15:00+0000',\n        updated_time: '2024-01-20T16:45:00+0000',\n        start_time: '2024-01-10T08:15:00+0000',\n        daily_budget: '5000',\n        account_id: ad_account_id,\n        insights: {\n          impressions: '89234',\n          clicks: '2156',\n          spend: '45.23',\n          ctr: '2.42',\n          cpc: '0.21',\n          conversions: '23',\n          cost_per_conversion: '1.97',\n        },\n      },\n    ]\n\n    return {\n      success: true,\n      data: mockCampaigns,\n      count: mockCampaigns.length,\n    }\n  }))\n\n  // POST /api/v1/integrations/meta/sync - Trigger sync\n  app.post('/sync', {\n    schema: {\n      tags: ['Meta Ads Integration'],\n      summary: 'Trigger Meta Ads data synchronization',\n      body: SyncRequestSchema,\n      response: {\n        200: {\n          type: 'object',\n          properties: {\n            success: { type: 'boolean' },\n            message: { type: 'string' },\n            syncId: { type: 'string' },\n          },\n        },\n      },\n    },\n    preHandler: requireAuth,\n  }, asyncHandler(async (request, reply) => {\n    const user = request.user\n    const { force } = request.body as z.infer<typeof SyncRequestSchema>\n\n    // Mock sync implementation\n    const syncId = `sync_${Date.now()}_${user.id}`\n    \n    app.log.info('Meta Ads sync triggered', { userId: user.id, force, syncId })\n\n    return {\n      success: true,\n      message: force ? 'Synchronization completed' : 'Synchronization started in background',\n      syncId,\n    }\n  }))\n\n  // GET /api/v1/integrations/meta/status - Get integration status\n  app.get('/status', {\n    schema: {\n      tags: ['Meta Ads Integration'],\n      summary: 'Get Meta Ads integration status',\n      response: {\n        200: {\n          type: 'object',\n          properties: {\n            success: { type: 'boolean' },\n            data: {\n              type: 'object',\n              properties: {\n                connected: { type: 'boolean' },\n                lastSync: { type: 'string', format: 'date-time' },\n                connectedAt: { type: 'string', format: 'date-time' },\n                expiresAt: { type: 'string', format: 'date-time' },\n                status: { type: 'string' },\n              },\n            },\n          },\n        },\n      },\n    },\n    preHandler: requireAuth,\n  }, asyncHandler(async (request, reply) => {\n    const user = request.user\n\n    // Mock status - replace with actual database query\n    const mockStatus = {\n      connected: true,\n      lastSync: new Date(Date.now() - 15 * 60 * 1000).toISOString(), // 15 minutes ago\n      connectedAt: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString(), // 7 days ago\n      expiresAt: new Date(Date.now() + 60 * 24 * 60 * 60 * 1000).toISOString(), // 60 days from now\n      status: 'active',\n    }\n\n    return {\n      success: true,\n      data: mockStatus,\n    }\n  }))\n\n  // POST /api/v1/integrations/meta/disconnect - Disconnect integration\n  app.post('/disconnect', {\n    schema: {\n      tags: ['Meta Ads Integration'],\n      summary: 'Disconnect Meta Ads integration',\n      response: {\n        200: {\n          type: 'object',\n          properties: {\n            success: { type: 'boolean' },\n            message: { type: 'string' },\n          },\n        },\n      },\n    },\n    preHandler: requireAuth,\n  }, asyncHandler(async (request, reply) => {\n    const user = request.user\n\n    app.log.info('Meta Ads integration disconnected', { userId: user.id })\n\n    return {\n      success: true,\n      message: 'Meta Ads integration disconnected successfully',\n    }\n  }))\n}"],"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","ignoreList":[]}