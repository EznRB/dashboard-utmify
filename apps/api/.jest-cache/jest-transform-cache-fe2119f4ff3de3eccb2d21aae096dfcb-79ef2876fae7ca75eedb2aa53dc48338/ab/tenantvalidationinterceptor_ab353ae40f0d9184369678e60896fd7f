84a0d66c35d80aba9fcb50af042247a9
/* istanbul ignore next */
function cov_fxqw6b6lk() {
  var path = "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\interceptors\\tenant-validation.interceptor.ts";
  var hash = "f933ca702164856bc490684333ae1a4073372c87";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\interceptors\\tenant-validation.interceptor.ts",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 17
        },
        end: {
          line: 6,
          column: 1
        }
      },
      "1": {
        start: {
          line: 2,
          column: 12
        },
        end: {
          line: 2,
          column: 28
        }
      },
      "2": {
        start: {
          line: 2,
          column: 34
        },
        end: {
          line: 2,
          column: 125
        }
      },
      "3": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 4,
          column: 150
        }
      },
      "4": {
        start: {
          line: 3,
          column: 79
        },
        end: {
          line: 3,
          column: 131
        }
      },
      "5": {
        start: {
          line: 4,
          column: 9
        },
        end: {
          line: 4,
          column: 150
        }
      },
      "6": {
        start: {
          line: 4,
          column: 22
        },
        end: {
          line: 4,
          column: 43
        }
      },
      "7": {
        start: {
          line: 4,
          column: 58
        },
        end: {
          line: 4,
          column: 150
        }
      },
      "8": {
        start: {
          line: 4,
          column: 81
        },
        end: {
          line: 4,
          column: 150
        }
      },
      "9": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 5,
          column: 66
        }
      },
      "10": {
        start: {
          line: 7,
          column: 17
        },
        end: {
          line: 9,
          column: 1
        }
      },
      "11": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 109
        }
      },
      "12": {
        start: {
          line: 8,
          column: 79
        },
        end: {
          line: 8,
          column: 109
        }
      },
      "13": {
        start: {
          line: 16,
          column: 38
        },
        end: {
          line: 16,
          column: 60
        }
      },
      "14": {
        start: {
          line: 17,
          column: 36
        },
        end: {
          line: 20,
          column: 1
        }
      },
      "15": {
        start: {
          line: 18,
          column: 28
        },
        end: {
          line: 18,
          column: 53
        }
      },
      "16": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 53
        }
      },
      "17": {
        start: {
          line: 22,
          column: 34
        },
        end: {
          line: 22,
          column: 52
        }
      },
      "18": {
        start: {
          line: 23,
          column: 32
        },
        end: {
          line: 26,
          column: 1
        }
      },
      "19": {
        start: {
          line: 24,
          column: 28
        },
        end: {
          line: 24,
          column: 53
        }
      },
      "20": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 25,
          column: 49
        }
      },
      "21": {
        start: {
          line: 27,
          column: 34
        },
        end: {
          line: 77,
          column: 1
        }
      },
      "22": {
        start: {
          line: 29,
          column: 13
        },
        end: {
          line: 29,
          column: 59
        }
      },
      "23": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 35
        }
      },
      "24": {
        start: {
          line: 34,
          column: 24
        },
        end: {
          line: 34,
          column: 59
        }
      },
      "25": {
        start: {
          line: 35,
          column: 24
        },
        end: {
          line: 35,
          column: 44
        }
      },
      "26": {
        start: {
          line: 36,
          column: 27
        },
        end: {
          line: 36,
          column: 45
        }
      },
      "27": {
        start: {
          line: 38,
          column: 31
        },
        end: {
          line: 38,
          column: 110
        }
      },
      "28": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 41,
          column: 9
        }
      },
      "29": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 33
        }
      },
      "30": {
        start: {
          line: 43,
          column: 33
        },
        end: {
          line: 43,
          column: 108
        }
      },
      "31": {
        start: {
          line: 44,
          column: 23
        },
        end: {
          line: 44,
          column: 37
        }
      },
      "32": {
        start: {
          line: 45,
          column: 21
        },
        end: {
          line: 45,
          column: 33
        }
      },
      "33": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "34": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 73
        }
      },
      "35": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 82
        }
      },
      "36": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 54,
          column: 9
        }
      },
      "37": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 71
        }
      },
      "38": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 83
        }
      },
      "39": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "40": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 61,
          column: 13
        }
      },
      "41": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 59,
          column: 148
        }
      },
      "42": {
        start: {
          line: 60,
          column: 16
        },
        end: {
          line: 60,
          column: 103
        }
      },
      "43": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 68,
          column: 13
        }
      },
      "44": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 152
        }
      },
      "45": {
        start: {
          line: 67,
          column: 16
        },
        end: {
          line: 67,
          column: 112
        }
      },
      "46": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 105
        }
      },
      "47": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 75,
          column: 12
        }
      },
      "48": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 94
        }
      },
      "49": {
        start: {
          line: 78,
          column: 0
        },
        end: {
          line: 81,
          column: 32
        }
      },
      "50": {
        start: {
          line: 84,
          column: 22
        },
        end: {
          line: 107,
          column: 1
        }
      },
      "51": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 35
        }
      },
      "52": {
        start: {
          line: 90,
          column: 30
        },
        end: {
          line: 90,
          column: 115
        }
      },
      "53": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 93,
          column: 9
        }
      },
      "54": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 24
        }
      },
      "55": {
        start: {
          line: 94,
          column: 24
        },
        end: {
          line: 94,
          column: 59
        }
      },
      "56": {
        start: {
          line: 95,
          column: 21
        },
        end: {
          line: 95,
          column: 33
        }
      },
      "57": {
        start: {
          line: 96,
          column: 23
        },
        end: {
          line: 96,
          column: 37
        }
      },
      "58": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 99,
          column: 9
        }
      },
      "59": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 25
        }
      },
      "60": {
        start: {
          line: 101,
          column: 24
        },
        end: {
          line: 101,
          column: 72
        }
      },
      "61": {
        start: {
          line: 101,
          column: 53
        },
        end: {
          line: 101,
          column: 71
        }
      },
      "62": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 104,
          column: 9
        }
      },
      "63": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 106
        }
      },
      "64": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 105,
          column: 20
        }
      },
      "65": {
        start: {
          line: 108,
          column: 0
        },
        end: {
          line: 111,
          column: 20
        }
      },
      "66": {
        start: {
          line: 114,
          column: 21
        },
        end: {
          line: 117,
          column: 1
        }
      },
      "67": {
        start: {
          line: 115,
          column: 28
        },
        end: {
          line: 115,
          column: 53
        }
      },
      "68": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 116,
          column: 39
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 1,
            column: 46
          },
          end: {
            line: 1,
            column: 47
          }
        },
        loc: {
          start: {
            line: 1,
            column: 87
          },
          end: {
            line: 6,
            column: 1
          }
        },
        line: 1
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 47
          }
        },
        loc: {
          start: {
            line: 7,
            column: 62
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 7
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 36
          },
          end: {
            line: 17,
            column: 37
          }
        },
        loc: {
          start: {
            line: 17,
            column: 42
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 17
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 23,
            column: 32
          },
          end: {
            line: 23,
            column: 33
          }
        },
        loc: {
          start: {
            line: 23,
            column: 38
          },
          end: {
            line: 26,
            column: 1
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 27
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 29
          },
          end: {
            line: 76,
            column: 5
          }
        },
        line: 33
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 72,
            column: 38
          },
          end: {
            line: 72,
            column: 39
          }
        },
        loc: {
          start: {
            line: 72,
            column: 44
          },
          end: {
            line: 75,
            column: 9
          }
        },
        line: 72
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 86,
            column: 5
          }
        },
        loc: {
          start: {
            line: 86,
            column: 27
          },
          end: {
            line: 88,
            column: 5
          }
        },
        line: 86
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        },
        loc: {
          start: {
            line: 89,
            column: 25
          },
          end: {
            line: 106,
            column: 5
          }
        },
        line: 89
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 101,
            column: 43
          },
          end: {
            line: 101,
            column: 44
          }
        },
        loc: {
          start: {
            line: 101,
            column: 53
          },
          end: {
            line: 101,
            column: 71
          }
        },
        line: 101
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 114,
            column: 21
          },
          end: {
            line: 114,
            column: 22
          }
        },
        loc: {
          start: {
            line: 114,
            column: 35
          },
          end: {
            line: 117,
            column: 1
          }
        },
        line: 114
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 1,
            column: 17
          },
          end: {
            line: 6,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1,
            column: 18
          },
          end: {
            line: 1,
            column: 22
          }
        }, {
          start: {
            line: 1,
            column: 26
          },
          end: {
            line: 1,
            column: 41
          }
        }, {
          start: {
            line: 1,
            column: 46
          },
          end: {
            line: 6,
            column: 1
          }
        }],
        line: 1
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 34
          },
          end: {
            line: 2,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 42
          },
          end: {
            line: 2,
            column: 48
          }
        }, {
          start: {
            line: 2,
            column: 51
          },
          end: {
            line: 2,
            column: 125
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 2,
            column: 51
          },
          end: {
            line: 2,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 67
          },
          end: {
            line: 2,
            column: 118
          }
        }, {
          start: {
            line: 2,
            column: 121
          },
          end: {
            line: 2,
            column: 125
          }
        }],
        line: 2
      },
      "3": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 4,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 4,
            column: 150
          }
        }, {
          start: {
            line: 4,
            column: 9
          },
          end: {
            line: 4,
            column: 150
          }
        }],
        line: 3
      },
      "4": {
        loc: {
          start: {
            line: 3,
            column: 8
          },
          end: {
            line: 3,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 8
          },
          end: {
            line: 3,
            column: 35
          }
        }, {
          start: {
            line: 3,
            column: 39
          },
          end: {
            line: 3,
            column: 77
          }
        }],
        line: 3
      },
      "5": {
        loc: {
          start: {
            line: 4,
            column: 58
          },
          end: {
            line: 4,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 58
          },
          end: {
            line: 4,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 4
      },
      "6": {
        loc: {
          start: {
            line: 4,
            column: 85
          },
          end: {
            line: 4,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 86
          },
          end: {
            line: 4,
            column: 143
          }
        }, {
          start: {
            line: 4,
            column: 148
          },
          end: {
            line: 4,
            column: 149
          }
        }],
        line: 4
      },
      "7": {
        loc: {
          start: {
            line: 4,
            column: 86
          },
          end: {
            line: 4,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 4,
            column: 94
          },
          end: {
            line: 4,
            column: 98
          }
        }, {
          start: {
            line: 4,
            column: 101
          },
          end: {
            line: 4,
            column: 143
          }
        }],
        line: 4
      },
      "8": {
        loc: {
          start: {
            line: 4,
            column: 101
          },
          end: {
            line: 4,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 4,
            column: 109
          },
          end: {
            line: 4,
            column: 126
          }
        }, {
          start: {
            line: 4,
            column: 129
          },
          end: {
            line: 4,
            column: 143
          }
        }],
        line: 4
      },
      "9": {
        loc: {
          start: {
            line: 5,
            column: 11
          },
          end: {
            line: 5,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 11
          },
          end: {
            line: 5,
            column: 16
          }
        }, {
          start: {
            line: 5,
            column: 20
          },
          end: {
            line: 5,
            column: 21
          }
        }, {
          start: {
            line: 5,
            column: 25
          },
          end: {
            line: 5,
            column: 62
          }
        }],
        line: 5
      },
      "10": {
        loc: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 9,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 7,
            column: 18
          },
          end: {
            line: 7,
            column: 22
          }
        }, {
          start: {
            line: 7,
            column: 26
          },
          end: {
            line: 7,
            column: 41
          }
        }, {
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 9,
            column: 1
          }
        }],
        line: 7
      },
      "11": {
        loc: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 109
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 109
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 8
      },
      "12": {
        loc: {
          start: {
            line: 8,
            column: 8
          },
          end: {
            line: 8,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 8
          },
          end: {
            line: 8,
            column: 35
          }
        }, {
          start: {
            line: 8,
            column: 39
          },
          end: {
            line: 8,
            column: 77
          }
        }],
        line: 8
      },
      "13": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "14": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "15": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "16": {
        loc: {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        }, {
          start: {
            line: 63,
            column: 13
          },
          end: {
            line: 69,
            column: 9
          }
        }],
        line: 56
      },
      "17": {
        loc: {
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 61,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 61,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "18": {
        loc: {
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 68,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 68,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "19": {
        loc: {
          start: {
            line: 65,
            column: 16
          },
          end: {
            line: 65,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 16
          },
          end: {
            line: 65,
            column: 43
          }
        }, {
          start: {
            line: 65,
            column: 47
          },
          end: {
            line: 65,
            column: 80
          }
        }],
        line: 65
      },
      "20": {
        loc: {
          start: {
            line: 80,
            column: 37
          },
          end: {
            line: 80,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 80,
            column: 114
          },
          end: {
            line: 80,
            column: 116
          }
        }, {
          start: {
            line: 80,
            column: 119
          },
          end: {
            line: 80,
            column: 125
          }
        }],
        line: 80
      },
      "21": {
        loc: {
          start: {
            line: 80,
            column: 50
          },
          end: {
            line: 80,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 50
          },
          end: {
            line: 80,
            column: 82
          }
        }, {
          start: {
            line: 80,
            column: 86
          },
          end: {
            line: 80,
            column: 95
          }
        }],
        line: 80
      },
      "22": {
        loc: {
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "23": {
        loc: {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 99,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 99,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "24": {
        loc: {
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 97,
            column: 28
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 97,
            column: 17
          }
        }, {
          start: {
            line: 97,
            column: 21
          },
          end: {
            line: 97,
            column: 28
          }
        }],
        line: 97
      },
      "25": {
        loc: {
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "26": {
        loc: {
          start: {
            line: 110,
            column: 37
          },
          end: {
            line: 110,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 110,
            column: 114
          },
          end: {
            line: 110,
            column: 116
          }
        }, {
          start: {
            line: 110,
            column: 119
          },
          end: {
            line: 110,
            column: 125
          }
        }],
        line: 110
      },
      "27": {
        loc: {
          start: {
            line: 110,
            column: 50
          },
          end: {
            line: 110,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 50
          },
          end: {
            line: 110,
            column: 82
          }
        }, {
          start: {
            line: 110,
            column: 86
          },
          end: {
            line: 110,
            column: 95
          }
        }],
        line: 110
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\interceptors\\tenant-validation.interceptor.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\interceptors\\tenant-validation.interceptor.ts"],
      sourcesContent: ["import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n  ForbiddenException,\n  Logger,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Reflector } from '@nestjs/core';\nimport { Request } from 'express';\nimport { TenantInfo } from '../decorators/get-tenant.decorator';\nimport { UserRole } from '@prisma/client';\n\ninterface AuthUser {\n  id: string;\n  email: string;\n  organizationId: string;\n  role: UserRole;\n  name?: string;\n}\n\ninterface RequestWithTenant extends Request {\n  tenant?: TenantInfo;\n  user?: AuthUser;\n}\n\n// Decorator para marcar rotas que n\xE3o precisam de valida\xE7\xE3o de tenant\nexport const SKIP_TENANT_VALIDATION = 'skipTenantValidation';\nexport const SkipTenantValidation = () => {\n  const { SetMetadata } = require('@nestjs/common');\n  return SetMetadata(SKIP_TENANT_VALIDATION, true);\n};\n\n// Decorator para marcar rotas que permitem acesso cross-tenant (apenas para SUPER_ADMIN)\nexport const ALLOW_CROSS_TENANT = 'allowCrossTenant';\nexport const AllowCrossTenant = () => {\n  const { SetMetadata } = require('@nestjs/common');\n  return SetMetadata(ALLOW_CROSS_TENANT, true);\n};\n\n@Injectable()\nexport class TenantValidationInterceptor implements NestInterceptor {\n  private readonly logger = new Logger(TenantValidationInterceptor.name);\n\n  constructor(private reflector: Reflector) {}\n\n  intercept(context: ExecutionContext, next: CallHandler): Observable<any> {\n    const request = context.switchToHttp().getRequest<RequestWithTenant>();\n    const handler = context.getHandler();\n    const controller = context.getClass();\n\n    // Verificar se deve pular a valida\xE7\xE3o de tenant\n    const skipValidation = this.reflector.getAllAndOverride<boolean>(\n      SKIP_TENANT_VALIDATION,\n      [handler, controller],\n    );\n\n    if (skipValidation) {\n      return next.handle();\n    }\n\n    // Verificar se permite acesso cross-tenant\n    const allowCrossTenant = this.reflector.getAllAndOverride<boolean>(\n      ALLOW_CROSS_TENANT,\n      [handler, controller],\n    );\n\n    const tenant = request.tenant;\n    const user = request.user;\n\n    // Valida\xE7\xF5es b\xE1sicas\n    if (!tenant) {\n      this.logger.error('Tenant information not found in request');\n      throw new ForbiddenException('Informa\xE7\xF5es de tenant n\xE3o encontradas');\n    }\n\n    if (!user) {\n      this.logger.error('User information not found in request');\n      throw new ForbiddenException('Informa\xE7\xF5es de usu\xE1rio n\xE3o encontradas');\n    }\n\n    // Valida\xE7\xE3o de isolamento de tenant\n    if (!allowCrossTenant) {\n      // Verificar se o usu\xE1rio pertence ao tenant atual\n      if (user.organizationId !== tenant.id) {\n        this.logger.warn(\n          `Cross-tenant access attempt: User ${user.id} (org: ${user.organizationId}) trying to access tenant ${tenant.id}`,\n        );\n        throw new ForbiddenException(\n          'Acesso negado: usu\xE1rio n\xE3o pertence a esta organiza\xE7\xE3o',\n        );\n      }\n    } else {\n      // Para rotas que permitem cross-tenant, verificar se \xE9 SUPER_ADMIN\n      if (user.role !== 'SUPER_ADMIN' && user.organizationId !== tenant.id) {\n        this.logger.warn(\n          `Unauthorized cross-tenant access attempt: User ${user.id} (role: ${user.role}) trying to access tenant ${tenant.id}`,\n        );\n        throw new ForbiddenException(\n          'Acesso cross-tenant permitido apenas para super administradores',\n        );\n      }\n    }\n\n    // Log da valida\xE7\xE3o bem-sucedida\n    this.logger.debug(\n      `Tenant validation successful: User ${user.id} accessing tenant ${tenant.id}`,\n    );\n\n    return next.handle().pipe(\n      tap(() => {\n        // Log adicional ap\xF3s a execu\xE7\xE3o (opcional)\n        this.logger.debug(\n          `Request completed for user ${user.id} on tenant ${tenant.id}`,\n        );\n      }),\n    );\n  }\n}\n\n// Guard adicional para valida\xE7\xE3o de roles espec\xEDficas por tenant\n@Injectable()\nexport class TenantRoleGuard {\n  constructor(private reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const requiredRoles = this.reflector.getAllAndOverride<UserRole[]>(\n      'roles',\n      [context.getHandler(), context.getClass()],\n    );\n\n    if (!requiredRoles) {\n      return true;\n    }\n\n    const request = context.switchToHttp().getRequest<RequestWithTenant>();\n    const user = request.user;\n    const tenant = request.tenant;\n\n    if (!user || !tenant) {\n      return false;\n    }\n\n    // Verificar se o usu\xE1rio tem uma das roles necess\xE1rias\n    const hasRole = requiredRoles.some((role) => user.role === role);\n\n    if (!hasRole) {\n      throw new ForbiddenException(\n        `Acesso negado: role necess\xE1ria: ${requiredRoles.join(' ou ')}`,\n      );\n    }\n\n    return true;\n  }\n}\n\n// Decorator para definir roles necess\xE1rias\nexport const Roles = (...roles: UserRole[]) => {\n  const { SetMetadata } = require('@nestjs/common');\n  return SetMetadata('roles', roles);\n};"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f933ca702164856bc490684333ae1a4073372c87"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_fxqw6b6lk = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_fxqw6b6lk();
var __decorate =
/* istanbul ignore next */
(cov_fxqw6b6lk().s[0]++,
/* istanbul ignore next */
(cov_fxqw6b6lk().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_fxqw6b6lk().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_fxqw6b6lk().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_fxqw6b6lk().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_fxqw6b6lk().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_fxqw6b6lk().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_fxqw6b6lk().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_fxqw6b6lk().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_fxqw6b6lk().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_fxqw6b6lk().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_fxqw6b6lk().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_fxqw6b6lk().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_fxqw6b6lk().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_fxqw6b6lk().b[3][0]++;
    cov_fxqw6b6lk().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_fxqw6b6lk().b[3][1]++;
    cov_fxqw6b6lk().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_fxqw6b6lk().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_fxqw6b6lk().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_fxqw6b6lk().b[5][0]++;
        cov_fxqw6b6lk().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_fxqw6b6lk().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_fxqw6b6lk().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_fxqw6b6lk().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_fxqw6b6lk().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_fxqw6b6lk().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_fxqw6b6lk().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_fxqw6b6lk().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_fxqw6b6lk().s[9]++;
  return /* istanbul ignore next */(cov_fxqw6b6lk().b[9][0]++, c > 3) &&
  /* istanbul ignore next */
  (cov_fxqw6b6lk().b[9][1]++, r) &&
  /* istanbul ignore next */
  (cov_fxqw6b6lk().b[9][2]++, Object.defineProperty(target, key, r)), r;
}));
var __metadata =
/* istanbul ignore next */
(cov_fxqw6b6lk().s[10]++,
/* istanbul ignore next */
(cov_fxqw6b6lk().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_fxqw6b6lk().b[10][1]++, this.__metadata) ||
/* istanbul ignore next */
(cov_fxqw6b6lk().b[10][2]++, function (k, v) {
  /* istanbul ignore next */
  cov_fxqw6b6lk().f[1]++;
  cov_fxqw6b6lk().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_fxqw6b6lk().b[12][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_fxqw6b6lk().b[12][1]++, typeof Reflect.metadata === "function")) {
    /* istanbul ignore next */
    cov_fxqw6b6lk().b[11][0]++;
    cov_fxqw6b6lk().s[12]++;
    return Reflect.metadata(k, v);
  } else
  /* istanbul ignore next */
  {
    cov_fxqw6b6lk().b[11][1]++;
  }
}));
var TenantValidationInterceptor_1;
var _a, _b;
import { Injectable, ForbiddenException, Logger } from '@nestjs/common';
import { tap } from 'rxjs/operators';
import { Reflector } from '@nestjs/core';
// Decorator para marcar rotas que não precisam de validação de tenant
export const SKIP_TENANT_VALIDATION =
/* istanbul ignore next */
(cov_fxqw6b6lk().s[13]++, 'skipTenantValidation');
/* istanbul ignore next */
cov_fxqw6b6lk().s[14]++;
export const SkipTenantValidation = () => {
  /* istanbul ignore next */
  cov_fxqw6b6lk().f[2]++;
  const {
    SetMetadata
  } =
  /* istanbul ignore next */
  (cov_fxqw6b6lk().s[15]++, require('@nestjs/common'));
  /* istanbul ignore next */
  cov_fxqw6b6lk().s[16]++;
  return SetMetadata(SKIP_TENANT_VALIDATION, true);
};
// Decorator para marcar rotas que permitem acesso cross-tenant (apenas para SUPER_ADMIN)
export const ALLOW_CROSS_TENANT =
/* istanbul ignore next */
(cov_fxqw6b6lk().s[17]++, 'allowCrossTenant');
/* istanbul ignore next */
cov_fxqw6b6lk().s[18]++;
export const AllowCrossTenant = () => {
  /* istanbul ignore next */
  cov_fxqw6b6lk().f[3]++;
  const {
    SetMetadata
  } =
  /* istanbul ignore next */
  (cov_fxqw6b6lk().s[19]++, require('@nestjs/common'));
  /* istanbul ignore next */
  cov_fxqw6b6lk().s[20]++;
  return SetMetadata(ALLOW_CROSS_TENANT, true);
};
let TenantValidationInterceptor =
/* istanbul ignore next */
(cov_fxqw6b6lk().s[21]++, TenantValidationInterceptor_1 = class TenantValidationInterceptor {
  reflector;
  logger =
  /* istanbul ignore next */
  (cov_fxqw6b6lk().s[22]++, new Logger(TenantValidationInterceptor_1.name));
  constructor(reflector) {
    /* istanbul ignore next */
    cov_fxqw6b6lk().f[4]++;
    cov_fxqw6b6lk().s[23]++;
    this.reflector = reflector;
  }
  intercept(context, next) {
    /* istanbul ignore next */
    cov_fxqw6b6lk().f[5]++;
    const request =
    /* istanbul ignore next */
    (cov_fxqw6b6lk().s[24]++, context.switchToHttp().getRequest());
    const handler =
    /* istanbul ignore next */
    (cov_fxqw6b6lk().s[25]++, context.getHandler());
    const controller =
    /* istanbul ignore next */
    (cov_fxqw6b6lk().s[26]++, context.getClass());
    // Verificar se deve pular a validação de tenant
    const skipValidation =
    /* istanbul ignore next */
    (cov_fxqw6b6lk().s[27]++, this.reflector.getAllAndOverride(SKIP_TENANT_VALIDATION, [handler, controller]));
    /* istanbul ignore next */
    cov_fxqw6b6lk().s[28]++;
    if (skipValidation) {
      /* istanbul ignore next */
      cov_fxqw6b6lk().b[13][0]++;
      cov_fxqw6b6lk().s[29]++;
      return next.handle();
    } else
    /* istanbul ignore next */
    {
      cov_fxqw6b6lk().b[13][1]++;
    }
    // Verificar se permite acesso cross-tenant
    const allowCrossTenant =
    /* istanbul ignore next */
    (cov_fxqw6b6lk().s[30]++, this.reflector.getAllAndOverride(ALLOW_CROSS_TENANT, [handler, controller]));
    const tenant =
    /* istanbul ignore next */
    (cov_fxqw6b6lk().s[31]++, request.tenant);
    const user =
    /* istanbul ignore next */
    (cov_fxqw6b6lk().s[32]++, request.user);
    // Validações básicas
    /* istanbul ignore next */
    cov_fxqw6b6lk().s[33]++;
    if (!tenant) {
      /* istanbul ignore next */
      cov_fxqw6b6lk().b[14][0]++;
      cov_fxqw6b6lk().s[34]++;
      this.logger.error('Tenant information not found in request');
      /* istanbul ignore next */
      cov_fxqw6b6lk().s[35]++;
      throw new ForbiddenException('Informações de tenant não encontradas');
    } else
    /* istanbul ignore next */
    {
      cov_fxqw6b6lk().b[14][1]++;
    }
    cov_fxqw6b6lk().s[36]++;
    if (!user) {
      /* istanbul ignore next */
      cov_fxqw6b6lk().b[15][0]++;
      cov_fxqw6b6lk().s[37]++;
      this.logger.error('User information not found in request');
      /* istanbul ignore next */
      cov_fxqw6b6lk().s[38]++;
      throw new ForbiddenException('Informações de usuário não encontradas');
    } else
    /* istanbul ignore next */
    {
      cov_fxqw6b6lk().b[15][1]++;
    }
    // Validação de isolamento de tenant
    cov_fxqw6b6lk().s[39]++;
    if (!allowCrossTenant) {
      /* istanbul ignore next */
      cov_fxqw6b6lk().b[16][0]++;
      cov_fxqw6b6lk().s[40]++;
      // Verificar se o usuário pertence ao tenant atual
      if (user.organizationId !== tenant.id) {
        /* istanbul ignore next */
        cov_fxqw6b6lk().b[17][0]++;
        cov_fxqw6b6lk().s[41]++;
        this.logger.warn(`Cross-tenant access attempt: User ${user.id} (org: ${user.organizationId}) trying to access tenant ${tenant.id}`);
        /* istanbul ignore next */
        cov_fxqw6b6lk().s[42]++;
        throw new ForbiddenException('Acesso negado: usuário não pertence a esta organização');
      } else
      /* istanbul ignore next */
      {
        cov_fxqw6b6lk().b[17][1]++;
      }
    } else {
      /* istanbul ignore next */
      cov_fxqw6b6lk().b[16][1]++;
      cov_fxqw6b6lk().s[43]++;
      // Para rotas que permitem cross-tenant, verificar se é SUPER_ADMIN
      if (
      /* istanbul ignore next */
      (cov_fxqw6b6lk().b[19][0]++, user.role !== 'SUPER_ADMIN') &&
      /* istanbul ignore next */
      (cov_fxqw6b6lk().b[19][1]++, user.organizationId !== tenant.id)) {
        /* istanbul ignore next */
        cov_fxqw6b6lk().b[18][0]++;
        cov_fxqw6b6lk().s[44]++;
        this.logger.warn(`Unauthorized cross-tenant access attempt: User ${user.id} (role: ${user.role}) trying to access tenant ${tenant.id}`);
        /* istanbul ignore next */
        cov_fxqw6b6lk().s[45]++;
        throw new ForbiddenException('Acesso cross-tenant permitido apenas para super administradores');
      } else
      /* istanbul ignore next */
      {
        cov_fxqw6b6lk().b[18][1]++;
      }
    }
    // Log da validação bem-sucedida
    /* istanbul ignore next */
    cov_fxqw6b6lk().s[46]++;
    this.logger.debug(`Tenant validation successful: User ${user.id} accessing tenant ${tenant.id}`);
    /* istanbul ignore next */
    cov_fxqw6b6lk().s[47]++;
    return next.handle().pipe(tap(() => {
      /* istanbul ignore next */
      cov_fxqw6b6lk().f[6]++;
      cov_fxqw6b6lk().s[48]++;
      // Log adicional após a execução (opcional)
      this.logger.debug(`Request completed for user ${user.id} on tenant ${tenant.id}`);
    }));
  }
});
/* istanbul ignore next */
cov_fxqw6b6lk().s[49]++;
TenantValidationInterceptor = TenantValidationInterceptor_1 = __decorate([Injectable(), __metadata("design:paramtypes", [typeof (_a =
/* istanbul ignore next */
(cov_fxqw6b6lk().b[21][0]++, typeof Reflector !== "undefined") &&
/* istanbul ignore next */
(cov_fxqw6b6lk().b[21][1]++, Reflector)) === "function" ?
/* istanbul ignore next */
(cov_fxqw6b6lk().b[20][0]++, _a) :
/* istanbul ignore next */
(cov_fxqw6b6lk().b[20][1]++, Object)])], TenantValidationInterceptor);
export { TenantValidationInterceptor };
// Guard adicional para validação de roles específicas por tenant
/* istanbul ignore next */
cov_fxqw6b6lk().s[50]++;
let TenantRoleGuard = class TenantRoleGuard {
  reflector;
  constructor(reflector) {
    /* istanbul ignore next */
    cov_fxqw6b6lk().f[7]++;
    cov_fxqw6b6lk().s[51]++;
    this.reflector = reflector;
  }
  canActivate(context) {
    /* istanbul ignore next */
    cov_fxqw6b6lk().f[8]++;
    const requiredRoles =
    /* istanbul ignore next */
    (cov_fxqw6b6lk().s[52]++, this.reflector.getAllAndOverride('roles', [context.getHandler(), context.getClass()]));
    /* istanbul ignore next */
    cov_fxqw6b6lk().s[53]++;
    if (!requiredRoles) {
      /* istanbul ignore next */
      cov_fxqw6b6lk().b[22][0]++;
      cov_fxqw6b6lk().s[54]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_fxqw6b6lk().b[22][1]++;
    }
    const request =
    /* istanbul ignore next */
    (cov_fxqw6b6lk().s[55]++, context.switchToHttp().getRequest());
    const user =
    /* istanbul ignore next */
    (cov_fxqw6b6lk().s[56]++, request.user);
    const tenant =
    /* istanbul ignore next */
    (cov_fxqw6b6lk().s[57]++, request.tenant);
    /* istanbul ignore next */
    cov_fxqw6b6lk().s[58]++;
    if (
    /* istanbul ignore next */
    (cov_fxqw6b6lk().b[24][0]++, !user) ||
    /* istanbul ignore next */
    (cov_fxqw6b6lk().b[24][1]++, !tenant)) {
      /* istanbul ignore next */
      cov_fxqw6b6lk().b[23][0]++;
      cov_fxqw6b6lk().s[59]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_fxqw6b6lk().b[23][1]++;
    }
    // Verificar se o usuário tem uma das roles necessárias
    const hasRole =
    /* istanbul ignore next */
    (cov_fxqw6b6lk().s[60]++, requiredRoles.some(role => {
      /* istanbul ignore next */
      cov_fxqw6b6lk().f[9]++;
      cov_fxqw6b6lk().s[61]++;
      return user.role === role;
    }));
    /* istanbul ignore next */
    cov_fxqw6b6lk().s[62]++;
    if (!hasRole) {
      /* istanbul ignore next */
      cov_fxqw6b6lk().b[25][0]++;
      cov_fxqw6b6lk().s[63]++;
      throw new ForbiddenException(`Acesso negado: role necessária: ${requiredRoles.join(' ou ')}`);
    } else
    /* istanbul ignore next */
    {
      cov_fxqw6b6lk().b[25][1]++;
    }
    cov_fxqw6b6lk().s[64]++;
    return true;
  }
};
/* istanbul ignore next */
cov_fxqw6b6lk().s[65]++;
TenantRoleGuard = __decorate([Injectable(), __metadata("design:paramtypes", [typeof (_b =
/* istanbul ignore next */
(cov_fxqw6b6lk().b[27][0]++, typeof Reflector !== "undefined") &&
/* istanbul ignore next */
(cov_fxqw6b6lk().b[27][1]++, Reflector)) === "function" ?
/* istanbul ignore next */
(cov_fxqw6b6lk().b[26][0]++, _b) :
/* istanbul ignore next */
(cov_fxqw6b6lk().b[26][1]++, Object)])], TenantRoleGuard);
export { TenantRoleGuard };
// Decorator para definir roles necessárias
/* istanbul ignore next */
cov_fxqw6b6lk().s[66]++;
export const Roles = (...roles) => {
  /* istanbul ignore next */
  cov_fxqw6b6lk().f[10]++;
  const {
    SetMetadata
  } =
  /* istanbul ignore next */
  (cov_fxqw6b6lk().s[67]++, require('@nestjs/common'));
  /* istanbul ignore next */
  cov_fxqw6b6lk().s[68]++;
  return SetMetadata('roles', roles);
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,