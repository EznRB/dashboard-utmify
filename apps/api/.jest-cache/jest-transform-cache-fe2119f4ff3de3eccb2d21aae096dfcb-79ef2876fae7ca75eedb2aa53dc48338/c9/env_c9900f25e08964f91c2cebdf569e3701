1cb2a8456bc3510e9d316046754a2ace
/* istanbul ignore next */
function cov_1mfyrpqdbc() {
  var path = "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\config\\env.ts";
  var hash = "ac8f28fb4b84142090b6b2d59eb515718fbec97c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\config\\env.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 18
        },
        end: {
          line: 47,
          column: 2
        }
      },
      "1": {
        start: {
          line: 49,
          column: 17
        },
        end: {
          line: 64,
          column: 1
        }
      },
      "2": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "3": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 44
        }
      },
      "4": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 61,
          column: 9
        }
      },
      "5": {
        start: {
          line: 55,
          column: 32
        },
        end: {
          line: 57,
          column: 27
        }
      },
      "6": {
        start: {
          line: 56,
          column: 28
        },
        end: {
          line: 56,
          column: 67
        }
      },
      "7": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 62
        }
      },
      "8": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 39
        }
      },
      "9": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 28
        }
      },
      "10": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 20
        }
      },
      "11": {
        start: {
          line: 65,
          column: 22
        },
        end: {
          line: 65,
          column: 32
        }
      },
      "12": {
        start: {
          line: 67,
          column: 29
        },
        end: {
          line: 67,
          column: 62
        }
      },
      "13": {
        start: {
          line: 68,
          column: 28
        },
        end: {
          line: 68,
          column: 60
        }
      },
      "14": {
        start: {
          line: 69,
          column: 22
        },
        end: {
          line: 69,
          column: 48
        }
      },
      "15": {
        start: {
          line: 71,
          column: 24
        },
        end: {
          line: 86,
          column: 1
        }
      },
      "16": {
        start: {
          line: 88,
          column: 27
        },
        end: {
          line: 100,
          column: 1
        }
      },
      "17": {
        start: {
          line: 102,
          column: 25
        },
        end: {
          line: 110,
          column: 1
        }
      },
      "18": {
        start: {
          line: 112,
          column: 26
        },
        end: {
          line: 121,
          column: 8
        }
      },
      "19": {
        start: {
          line: 123,
          column: 26
        },
        end: {
          line: 128,
          column: 1
        }
      },
      "20": {
        start: {
          line: 124,
          column: 56
        },
        end: {
          line: 124,
          column: 69
        }
      },
      "21": {
        start: {
          line: 130,
          column: 31
        },
        end: {
          line: 138,
          column: 1
        }
      },
      "22": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 136,
          column: 41
        }
      },
      "23": {
        start: {
          line: 140,
          column: 28
        },
        end: {
          line: 151,
          column: 1
        }
      },
      "24": {
        start: {
          line: 153,
          column: 31
        },
        end: {
          line: 159,
          column: 8
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 49,
            column: 17
          },
          end: {
            line: 49,
            column: 18
          }
        },
        loc: {
          start: {
            line: 49,
            column: 23
          },
          end: {
            line: 64,
            column: 1
          }
        },
        line: 49
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 56,
            column: 21
          },
          end: {
            line: 56,
            column: 22
          }
        },
        loc: {
          start: {
            line: 56,
            column: 28
          },
          end: {
            line: 56,
            column: 67
          }
        },
        line: 56
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 124,
            column: 46
          },
          end: {
            line: 124,
            column: 47
          }
        },
        loc: {
          start: {
            line: 124,
            column: 56
          },
          end: {
            line: 124,
            column: 69
          }
        },
        line: 124
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 135,
            column: 18
          },
          end: {
            line: 135,
            column: 19
          }
        },
        loc: {
          start: {
            line: 135,
            column: 31
          },
          end: {
            line: 137,
            column: 5
          }
        },
        line: 135
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "1": {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 85,
            column: 5
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 74,
            column: 20
          }
        }, {
          start: {
            line: 74,
            column: 24
          },
          end: {
            line: 85,
            column: 5
          }
        }],
        line: 74
      },
      "2": {
        loc: {
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 99,
            column: 5
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 94,
            column: 20
          }
        }, {
          start: {
            line: 94,
            column: 24
          },
          end: {
            line: 99,
            column: 5
          }
        }],
        line: 94
      },
      "3": {
        loc: {
          start: {
            line: 112,
            column: 26
          },
          end: {
            line: 121,
            column: 8
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 112,
            column: 45
          },
          end: {
            line: 121,
            column: 1
          }
        }, {
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 121,
            column: 8
          }
        }],
        line: 112
      },
      "4": {
        loc: {
          start: {
            line: 114,
            column: 10
          },
          end: {
            line: 114,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 114,
            column: 10
          },
          end: {
            line: 114,
            column: 26
          }
        }, {
          start: {
            line: 114,
            column: 30
          },
          end: {
            line: 114,
            column: 33
          }
        }],
        line: 114
      },
      "5": {
        loc: {
          start: {
            line: 136,
            column: 15
          },
          end: {
            line: 136,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 136,
            column: 15
          },
          end: {
            line: 136,
            column: 25
          }
        }, {
          start: {
            line: 136,
            column: 29
          },
          end: {
            line: 136,
            column: 40
          }
        }],
        line: 136
      },
      "6": {
        loc: {
          start: {
            line: 153,
            column: 31
          },
          end: {
            line: 159,
            column: 8
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 153,
            column: 61
          },
          end: {
            line: 159,
            column: 1
          }
        }, {
          start: {
            line: 159,
            column: 4
          },
          end: {
            line: 159,
            column: 8
          }
        }],
        line: 153
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\config\\env.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\config\\env.ts"],
      sourcesContent: ["import { z } from 'zod'\n\n// Environment variables schema\nconst envSchema = z.object({\n  // Server\n  NODE_ENV: z.enum(['development', 'production', 'test']).default('development'),\n  PORT: z.coerce.number().default(3001),\n  HOST: z.string().default('0.0.0.0'),\n  LOG_LEVEL: z.enum(['fatal', 'error', 'warn', 'info', 'debug', 'trace']).default('info'),\n  \n  // Database\n  DATABASE_URL: z.string().min(1, 'DATABASE_URL is required'),\n  \n  // Redis\n  REDIS_URL: z.string().default('redis://localhost:6379'),\n  \n  // JWT\n  JWT_SECRET: z.string().min(32, 'JWT_SECRET must be at least 32 characters'),\n  JWT_REFRESH_SECRET: z.string().min(32, 'JWT_REFRESH_SECRET must be at least 32 characters'),\n  JWT_ACCESS_EXPIRES_IN: z.string().default('15m'),\n  JWT_REFRESH_EXPIRES_IN: z.string().default('7d'),\n  \n  // Email\n  SMTP_HOST: z.string().optional(),\n  SMTP_PORT: z.coerce.number().optional(),\n  SMTP_USER: z.string().optional(),\n  SMTP_PASS: z.string().optional(),\n  SMTP_FROM: z.string().email().optional(),\n  \n  // External APIs\n  GOOGLE_ADS_CLIENT_ID: z.string().optional(),\n  GOOGLE_ADS_CLIENT_SECRET: z.string().optional(),\n  GOOGLE_ADS_DEVELOPER_TOKEN: z.string().optional(),\n  GOOGLE_ADS_LOGIN_CUSTOMER_ID: z.string().optional(),\n  FACEBOOK_APP_ID: z.string().optional(),\n  FACEBOOK_APP_SECRET: z.string().optional(),\n  \n  // Rate Limiting\n  RATE_LIMIT_MAX: z.coerce.number().default(100),\n  RATE_LIMIT_WINDOW: z.coerce.number().default(60000), // 1 minute\n  \n  // CORS\n  CORS_ORIGIN: z.string().default('http://localhost:3000'),\n  \n  // File Upload\n  MAX_FILE_SIZE: z.coerce.number().default(5242880), // 5MB\n  UPLOAD_DIR: z.string().default('./uploads'),\n  \n  // Webhooks\n  WEBHOOK_SECRET: z.string().optional(),\n  \n  // Monitoring\n  SENTRY_DSN: z.string().optional(),\n  \n  // Feature Flags\n  ENABLE_SWAGGER: z.coerce.boolean().default(true),\n  ENABLE_METRICS: z.coerce.boolean().default(true),\n  ENABLE_RATE_LIMITING: z.coerce.boolean().default(true),\n})\n\n// Parse and validate environment variables\nconst parseEnv = () => {\n  try {\n    return envSchema.parse(process.env)\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      const missingVars = error.errors\n        .map(err => `${err.path.join('.')}: ${err.message}`)\n        .join('\\n')\n      \n      console.error('\u274C Invalid environment variables:')\n      console.error(missingVars)\n      process.exit(1)\n    }\n    throw error\n  }\n}\n\nexport const config = parseEnv()\n\n// Type for environment config\nexport type Config = typeof config\n\n// Helper to check if we're in development\nexport const isDevelopment = config.NODE_ENV === 'development'\nexport const isProduction = config.NODE_ENV === 'production'\nexport const isTest = config.NODE_ENV === 'test'\n\n// Database configuration\nexport const dbConfig = {\n  url: config.DATABASE_URL,\n  // Add connection pool settings for production\n  ...(isProduction && {\n    pool: {\n      min: 2,\n      max: 10,\n      acquireTimeoutMillis: 30000,\n      createTimeoutMillis: 30000,\n      destroyTimeoutMillis: 5000,\n      idleTimeoutMillis: 30000,\n      reapIntervalMillis: 1000,\n      createRetryIntervalMillis: 200,\n    },\n  }),\n}\n\n// Redis configuration\nexport const redisConfig = {\n  url: config.REDIS_URL,\n  retryDelayOnFailover: 100,\n  enableReadyCheck: false,\n  maxRetriesPerRequest: 3,\n  lazyConnect: true,\n  ...(isProduction && {\n    family: 4,\n    keepAlive: true,\n    connectTimeout: 10000,\n    commandTimeout: 5000,\n  }),\n}\n\n// JWT configuration\nexport const jwtConfig = {\n  secret: config.JWT_SECRET,\n  refreshSecret: config.JWT_REFRESH_SECRET,\n  accessExpiresIn: config.JWT_ACCESS_EXPIRES_IN,\n  refreshExpiresIn: config.JWT_REFRESH_EXPIRES_IN,\n  algorithm: 'HS256' as const,\n  issuer: 'utmify-api',\n  audience: 'utmify-app',\n}\n\n// SMTP configuration\nexport const smtpConfig = config.SMTP_HOST ? {\n  host: config.SMTP_HOST,\n  port: config.SMTP_PORT || 587,\n  secure: config.SMTP_PORT === 465,\n  auth: {\n    user: config.SMTP_USER!,\n    pass: config.SMTP_PASS!,\n  },\n  from: config.SMTP_FROM!,\n} : null\n\n// CORS configuration\nexport const corsConfig = {\n  origin: config.CORS_ORIGIN.split(',').map(origin => origin.trim()),\n  credentials: true,\n  methods: ['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS'],\n  allowedHeaders: ['Content-Type', 'Authorization', 'X-Requested-With'],\n}\n\n// Rate limiting configuration\nexport const rateLimitConfig = {\n  max: config.RATE_LIMIT_MAX,\n  timeWindow: config.RATE_LIMIT_WINDOW,\n  skipSuccessfulRequests: false,\n  skipOnError: true,\n  keyGenerator: (request: any) => {\n    return request.ip || 'anonymous'\n  },\n}\n\n// File upload configuration\nexport const uploadConfig = {\n  maxFileSize: config.MAX_FILE_SIZE,\n  uploadDir: config.UPLOAD_DIR,\n  allowedMimeTypes: [\n    'image/jpeg',\n    'image/png',\n    'image/webp',\n    'image/svg+xml',\n    'text/csv',\n    'application/json',\n  ],\n}\n\n// Google Ads API Configuration\nexport const googleAdsConfig = config.GOOGLE_ADS_CLIENT_ID ? {\n  clientId: config.GOOGLE_ADS_CLIENT_ID!,\n  clientSecret: config.GOOGLE_ADS_CLIENT_SECRET!,\n  developerToken: config.GOOGLE_ADS_DEVELOPER_TOKEN!,\n  loginCustomerId: config.GOOGLE_ADS_LOGIN_CUSTOMER_ID,\n  apiVersion: 'v15',\n} : null"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ac8f28fb4b84142090b6b2d59eb515718fbec97c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1mfyrpqdbc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1mfyrpqdbc();
import { z } from 'zod';
// Environment variables schema
const envSchema =
/* istanbul ignore next */
(cov_1mfyrpqdbc().s[0]++, z.object({
  // Server
  NODE_ENV: z.enum(['development', 'production', 'test']).default('development'),
  PORT: z.coerce.number().default(3001),
  HOST: z.string().default('0.0.0.0'),
  LOG_LEVEL: z.enum(['fatal', 'error', 'warn', 'info', 'debug', 'trace']).default('info'),
  // Database
  DATABASE_URL: z.string().min(1, 'DATABASE_URL is required'),
  // Redis
  REDIS_URL: z.string().default('redis://localhost:6379'),
  // JWT
  JWT_SECRET: z.string().min(32, 'JWT_SECRET must be at least 32 characters'),
  JWT_REFRESH_SECRET: z.string().min(32, 'JWT_REFRESH_SECRET must be at least 32 characters'),
  JWT_ACCESS_EXPIRES_IN: z.string().default('15m'),
  JWT_REFRESH_EXPIRES_IN: z.string().default('7d'),
  // Email
  SMTP_HOST: z.string().optional(),
  SMTP_PORT: z.coerce.number().optional(),
  SMTP_USER: z.string().optional(),
  SMTP_PASS: z.string().optional(),
  SMTP_FROM: z.string().email().optional(),
  // External APIs
  GOOGLE_ADS_CLIENT_ID: z.string().optional(),
  GOOGLE_ADS_CLIENT_SECRET: z.string().optional(),
  GOOGLE_ADS_DEVELOPER_TOKEN: z.string().optional(),
  GOOGLE_ADS_LOGIN_CUSTOMER_ID: z.string().optional(),
  FACEBOOK_APP_ID: z.string().optional(),
  FACEBOOK_APP_SECRET: z.string().optional(),
  // Rate Limiting
  RATE_LIMIT_MAX: z.coerce.number().default(100),
  RATE_LIMIT_WINDOW: z.coerce.number().default(60000),
  // 1 minute
  // CORS
  CORS_ORIGIN: z.string().default('http://localhost:3000'),
  // File Upload
  MAX_FILE_SIZE: z.coerce.number().default(5242880),
  // 5MB
  UPLOAD_DIR: z.string().default('./uploads'),
  // Webhooks
  WEBHOOK_SECRET: z.string().optional(),
  // Monitoring
  SENTRY_DSN: z.string().optional(),
  // Feature Flags
  ENABLE_SWAGGER: z.coerce.boolean().default(true),
  ENABLE_METRICS: z.coerce.boolean().default(true),
  ENABLE_RATE_LIMITING: z.coerce.boolean().default(true)
}));
// Parse and validate environment variables
/* istanbul ignore next */
cov_1mfyrpqdbc().s[1]++;
const parseEnv = () => {
  /* istanbul ignore next */
  cov_1mfyrpqdbc().f[0]++;
  cov_1mfyrpqdbc().s[2]++;
  try {
    /* istanbul ignore next */
    cov_1mfyrpqdbc().s[3]++;
    return envSchema.parse(process.env);
  } catch (error) {
    /* istanbul ignore next */
    cov_1mfyrpqdbc().s[4]++;
    if (error instanceof z.ZodError) {
      /* istanbul ignore next */
      cov_1mfyrpqdbc().b[0][0]++;
      const missingVars =
      /* istanbul ignore next */
      (cov_1mfyrpqdbc().s[5]++, error.errors.map(err => {
        /* istanbul ignore next */
        cov_1mfyrpqdbc().f[1]++;
        cov_1mfyrpqdbc().s[6]++;
        return `${err.path.join('.')}: ${err.message}`;
      }).join('\n'));
      /* istanbul ignore next */
      cov_1mfyrpqdbc().s[7]++;
      console.error('❌ Invalid environment variables:');
      /* istanbul ignore next */
      cov_1mfyrpqdbc().s[8]++;
      console.error(missingVars);
      /* istanbul ignore next */
      cov_1mfyrpqdbc().s[9]++;
      process.exit(1);
    } else
    /* istanbul ignore next */
    {
      cov_1mfyrpqdbc().b[0][1]++;
    }
    cov_1mfyrpqdbc().s[10]++;
    throw error;
  }
};
export const config =
/* istanbul ignore next */
(cov_1mfyrpqdbc().s[11]++, parseEnv());
// Helper to check if we're in development
export const isDevelopment =
/* istanbul ignore next */
(cov_1mfyrpqdbc().s[12]++, config.NODE_ENV === 'development');
export const isProduction =
/* istanbul ignore next */
(cov_1mfyrpqdbc().s[13]++, config.NODE_ENV === 'production');
export const isTest =
/* istanbul ignore next */
(cov_1mfyrpqdbc().s[14]++, config.NODE_ENV === 'test');
// Database configuration
export const dbConfig =
/* istanbul ignore next */
(cov_1mfyrpqdbc().s[15]++, {
  url: config.DATABASE_URL,
  // Add connection pool settings for production
  ...(
  /* istanbul ignore next */
  (cov_1mfyrpqdbc().b[1][0]++, isProduction) &&
  /* istanbul ignore next */
  (cov_1mfyrpqdbc().b[1][1]++, {
    pool: {
      min: 2,
      max: 10,
      acquireTimeoutMillis: 30000,
      createTimeoutMillis: 30000,
      destroyTimeoutMillis: 5000,
      idleTimeoutMillis: 30000,
      reapIntervalMillis: 1000,
      createRetryIntervalMillis: 200
    }
  }))
});
// Redis configuration
export const redisConfig =
/* istanbul ignore next */
(cov_1mfyrpqdbc().s[16]++, {
  url: config.REDIS_URL,
  retryDelayOnFailover: 100,
  enableReadyCheck: false,
  maxRetriesPerRequest: 3,
  lazyConnect: true,
  ...(
  /* istanbul ignore next */
  (cov_1mfyrpqdbc().b[2][0]++, isProduction) &&
  /* istanbul ignore next */
  (cov_1mfyrpqdbc().b[2][1]++, {
    family: 4,
    keepAlive: true,
    connectTimeout: 10000,
    commandTimeout: 5000
  }))
});
// JWT configuration
export const jwtConfig =
/* istanbul ignore next */
(cov_1mfyrpqdbc().s[17]++, {
  secret: config.JWT_SECRET,
  refreshSecret: config.JWT_REFRESH_SECRET,
  accessExpiresIn: config.JWT_ACCESS_EXPIRES_IN,
  refreshExpiresIn: config.JWT_REFRESH_EXPIRES_IN,
  algorithm: 'HS256',
  issuer: 'utmify-api',
  audience: 'utmify-app'
});
// SMTP configuration
export const smtpConfig =
/* istanbul ignore next */
(cov_1mfyrpqdbc().s[18]++, config.SMTP_HOST ?
/* istanbul ignore next */
(cov_1mfyrpqdbc().b[3][0]++, {
  host: config.SMTP_HOST,
  port:
  /* istanbul ignore next */
  (cov_1mfyrpqdbc().b[4][0]++, config.SMTP_PORT) ||
  /* istanbul ignore next */
  (cov_1mfyrpqdbc().b[4][1]++, 587),
  secure: config.SMTP_PORT === 465,
  auth: {
    user: config.SMTP_USER,
    pass: config.SMTP_PASS
  },
  from: config.SMTP_FROM
}) :
/* istanbul ignore next */
(cov_1mfyrpqdbc().b[3][1]++, null));
// CORS configuration
export const corsConfig =
/* istanbul ignore next */
(cov_1mfyrpqdbc().s[19]++, {
  origin: config.CORS_ORIGIN.split(',').map(origin => {
    /* istanbul ignore next */
    cov_1mfyrpqdbc().f[2]++;
    cov_1mfyrpqdbc().s[20]++;
    return origin.trim();
  }),
  credentials: true,
  methods: ['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS'],
  allowedHeaders: ['Content-Type', 'Authorization', 'X-Requested-With']
});
// Rate limiting configuration
export const rateLimitConfig =
/* istanbul ignore next */
(cov_1mfyrpqdbc().s[21]++, {
  max: config.RATE_LIMIT_MAX,
  timeWindow: config.RATE_LIMIT_WINDOW,
  skipSuccessfulRequests: false,
  skipOnError: true,
  keyGenerator: request => {
    /* istanbul ignore next */
    cov_1mfyrpqdbc().f[3]++;
    cov_1mfyrpqdbc().s[22]++;
    return /* istanbul ignore next */(cov_1mfyrpqdbc().b[5][0]++, request.ip) ||
    /* istanbul ignore next */
    (cov_1mfyrpqdbc().b[5][1]++, 'anonymous');
  }
});
// File upload configuration
export const uploadConfig =
/* istanbul ignore next */
(cov_1mfyrpqdbc().s[23]++, {
  maxFileSize: config.MAX_FILE_SIZE,
  uploadDir: config.UPLOAD_DIR,
  allowedMimeTypes: ['image/jpeg', 'image/png', 'image/webp', 'image/svg+xml', 'text/csv', 'application/json']
});
// Google Ads API Configuration
export const googleAdsConfig =
/* istanbul ignore next */
(cov_1mfyrpqdbc().s[24]++, config.GOOGLE_ADS_CLIENT_ID ?
/* istanbul ignore next */
(cov_1mfyrpqdbc().b[6][0]++, {
  clientId: config.GOOGLE_ADS_CLIENT_ID,
  clientSecret: config.GOOGLE_ADS_CLIENT_SECRET,
  developerToken: config.GOOGLE_ADS_DEVELOPER_TOKEN,
  loginCustomerId: config.GOOGLE_ADS_LOGIN_CUSTOMER_ID,
  apiVersion: 'v15'
}) :
/* istanbul ignore next */
(cov_1mfyrpqdbc().b[6][1]++, null));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,