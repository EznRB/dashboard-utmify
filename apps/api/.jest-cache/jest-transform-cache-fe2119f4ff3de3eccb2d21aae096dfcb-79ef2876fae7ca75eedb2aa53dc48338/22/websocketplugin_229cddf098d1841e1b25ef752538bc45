bc3bd5ec3524000727af56f423e9c7d6
/* istanbul ignore next */
function cov_5ky8ur652() {
  var path = "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\plugins\\websocket.plugin.ts";
  var hash = "d4df97df0c79e337fdba598f9bf92571dd8cd9cb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\plugins\\websocket.plugin.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 20
        },
        end: {
          line: 8,
          column: 29
        }
      },
      "1": {
        start: {
          line: 9,
          column: 16
        },
        end: {
          line: 9,
          column: 25
        }
      },
      "2": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 21
        }
      },
      "3": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 45
        }
      },
      "4": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 41
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 34
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 37,
          column: 11
        }
      },
      "7": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 20,
          column: 69
        }
      },
      "8": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 23,
          column: 15
        }
      },
      "9": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 64
        }
      },
      "10": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 29,
          column: 15
        }
      },
      "11": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 57
        }
      },
      "12": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 28,
          column: 19
        }
      },
      "13": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 32,
          column: 15
        }
      },
      "14": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 31,
          column: 56
        }
      },
      "15": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 36,
          column: 15
        }
      },
      "16": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 34,
          column: 94
        }
      },
      "17": {
        start: {
          line: 35,
          column: 16
        },
        end: {
          line: 35,
          column: 57
        }
      },
      "18": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 77,
          column: 9
        }
      },
      "19": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 48,
          column: 13
        }
      },
      "20": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 46,
          column: 19
        }
      },
      "21": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 47,
          column: 23
        }
      },
      "22": {
        start: {
          line: 50,
          column: 32
        },
        end: {
          line: 50,
          column: 33
        }
      },
      "23": {
        start: {
          line: 51,
          column: 29
        },
        end: {
          line: 51,
          column: 71
        }
      },
      "24": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 56,
          column: 15
        }
      },
      "25": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 52
        }
      },
      "26": {
        start: {
          line: 60,
          column: 31
        },
        end: {
          line: 62,
          column: 31
        }
      },
      "27": {
        start: {
          line: 61,
          column: 16
        },
        end: {
          line: 61,
          column: 56
        }
      },
      "28": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 54
        }
      },
      "29": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 68,
          column: 15
        }
      },
      "30": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 99
        }
      },
      "31": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 75
        }
      },
      "32": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 76,
          column: 15
        }
      },
      "33": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 125,
          column: 9
        }
      },
      "34": {
        start: {
          line: 81,
          column: 33
        },
        end: {
          line: 81,
          column: 65
        }
      },
      "35": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 84,
          column: 13
        }
      },
      "36": {
        start: {
          line: 83,
          column: 16
        },
        end: {
          line: 83,
          column: 23
        }
      },
      "37": {
        start: {
          line: 85,
          column: 27
        },
        end: {
          line: 85,
          column: 64
        }
      },
      "38": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 89,
          column: 13
        }
      },
      "39": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 87,
          column: 56
        }
      },
      "40": {
        start: {
          line: 88,
          column: 16
        },
        end: {
          line: 88,
          column: 23
        }
      },
      "41": {
        start: {
          line: 91,
          column: 29
        },
        end: {
          line: 91,
          column: 118
        }
      },
      "42": {
        start: {
          line: 92,
          column: 30
        },
        end: {
          line: 92,
          column: 67
        }
      },
      "43": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 104,
          column: 13
        }
      },
      "44": {
        start: {
          line: 95,
          column: 32
        },
        end: {
          line: 100,
          column: 17
        }
      },
      "45": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 101,
          column: 82
        }
      },
      "46": {
        start: {
          line: 103,
          column: 16
        },
        end: {
          line: 103,
          column: 71
        }
      },
      "47": {
        start: {
          line: 106,
          column: 36
        },
        end: {
          line: 106,
          column: 98
        }
      },
      "48": {
        start: {
          line: 108,
          column: 31
        },
        end: {
          line: 113,
          column: 13
        }
      },
      "49": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 54
        }
      },
      "50": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 92
        }
      },
      "51": {
        start: {
          line: 118,
          column: 27
        },
        end: {
          line: 118,
          column: 64
        }
      },
      "52": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 124,
          column: 13
        }
      },
      "53": {
        start: {
          line: 120,
          column: 16
        },
        end: {
          line: 123,
          column: 19
        }
      },
      "54": {
        start: {
          line: 128,
          column: 25
        },
        end: {
          line: 128,
          column: 27
        }
      },
      "55": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 133,
          column: 9
        }
      },
      "56": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 132,
          column: 13
        }
      },
      "57": {
        start: {
          line: 131,
          column: 16
        },
        end: {
          line: 131,
          column: 55
        }
      },
      "58": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 24
        }
      },
      "59": {
        start: {
          line: 138,
          column: 27
        },
        end: {
          line: 138,
          column: 55
        }
      },
      "60": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 142,
          column: 9
        }
      },
      "61": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 140,
          column: 38
        }
      },
      "62": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 44
        }
      },
      "63": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 144,
          column: 44
        }
      },
      "64": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 145,
          column: 68
        }
      },
      "65": {
        start: {
          line: 149,
          column: 32
        },
        end: {
          line: 157,
          column: 10
        }
      },
      "66": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 152,
          column: 13
        }
      },
      "67": {
        start: {
          line: 151,
          column: 16
        },
        end: {
          line: 151,
          column: 29
        }
      },
      "68": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 155,
          column: 13
        }
      },
      "69": {
        start: {
          line: 154,
          column: 16
        },
        end: {
          line: 154,
          column: 87
        }
      },
      "70": {
        start: {
          line: 154,
          column: 48
        },
        end: {
          line: 154,
          column: 85
        }
      },
      "71": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 156,
          column: 24
        }
      },
      "72": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 160,
          column: 9
        }
      },
      "73": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 159,
          column: 51
        }
      },
      "74": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 172,
          column: 10
        }
      },
      "75": {
        start: {
          line: 166,
          column: 87
        },
        end: {
          line: 171,
          column: 13
        }
      },
      "76": {
        start: {
          line: 175,
          column: 24
        },
        end: {
          line: 210,
          column: 1
        }
      },
      "77": {
        start: {
          line: 177,
          column: 23
        },
        end: {
          line: 177,
          column: 37
        }
      },
      "78": {
        start: {
          line: 179,
          column: 15
        },
        end: {
          line: 186,
          column: 6
        }
      },
      "79": {
        start: {
          line: 188,
          column: 27
        },
        end: {
          line: 188,
          column: 57
        }
      },
      "80": {
        start: {
          line: 189,
          column: 25
        },
        end: {
          line: 189,
          column: 43
        }
      },
      "81": {
        start: {
          line: 191,
          column: 29
        },
        end: {
          line: 191,
          column: 90
        }
      },
      "82": {
        start: {
          line: 193,
          column: 26
        },
        end: {
          line: 193,
          column: 72
        }
      },
      "83": {
        start: {
          line: 194,
          column: 4
        },
        end: {
          line: 196,
          column: 7
        }
      },
      "84": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 195,
          column: 75
        }
      },
      "85": {
        start: {
          line: 198,
          column: 4
        },
        end: {
          line: 198,
          column: 31
        }
      },
      "86": {
        start: {
          line: 199,
          column: 4
        },
        end: {
          line: 199,
          column: 59
        }
      },
      "87": {
        start: {
          line: 201,
          column: 4
        },
        end: {
          line: 203,
          column: 7
        }
      },
      "88": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 202,
          column: 65
        }
      },
      "89": {
        start: {
          line: 205,
          column: 4
        },
        end: {
          line: 209,
          column: 7
        }
      },
      "90": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 206,
          column: 19
        }
      },
      "91": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 207,
          column: 27
        }
      },
      "92": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 208,
          column: 47
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 50
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 25
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 33
          },
          end: {
            line: 19,
            column: 34
          }
        },
        loc: {
          start: {
            line: 19,
            column: 45
          },
          end: {
            line: 37,
            column: 9
          }
        },
        line: 19
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 43
          },
          end: {
            line: 21,
            column: 44
          }
        },
        loc: {
          start: {
            line: 21,
            column: 59
          },
          end: {
            line: 23,
            column: 13
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 24,
            column: 45
          },
          end: {
            line: 24,
            column: 46
          }
        },
        loc: {
          start: {
            line: 24,
            column: 51
          },
          end: {
            line: 29,
            column: 13
          }
        },
        line: 24
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 30,
            column: 45
          },
          end: {
            line: 30,
            column: 46
          }
        },
        loc: {
          start: {
            line: 30,
            column: 57
          },
          end: {
            line: 32,
            column: 13
          }
        },
        line: 30
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 33,
            column: 36
          },
          end: {
            line: 33,
            column: 37
          }
        },
        loc: {
          start: {
            line: 33,
            column: 48
          },
          end: {
            line: 36,
            column: 13
          }
        },
        line: 33
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        loc: {
          start: {
            line: 39,
            column: 47
          },
          end: {
            line: 78,
            column: 5
          }
        },
        line: 39
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 60,
            column: 43
          },
          end: {
            line: 60,
            column: 44
          }
        },
        loc: {
          start: {
            line: 60,
            column: 55
          },
          end: {
            line: 62,
            column: 13
          }
        },
        line: 60
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        loc: {
          start: {
            line: 79,
            column: 38
          },
          end: {
            line: 126,
            column: 5
          }
        },
        line: 79
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 127,
            column: 4
          },
          end: {
            line: 127,
            column: 5
          }
        },
        loc: {
          start: {
            line: 127,
            column: 58
          },
          end: {
            line: 135,
            column: 5
          }
        },
        line: 127
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 136,
            column: 4
          },
          end: {
            line: 136,
            column: 5
          }
        },
        loc: {
          start: {
            line: 136,
            column: 39
          },
          end: {
            line: 146,
            column: 5
          }
        },
        line: 136
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 148,
            column: 4
          },
          end: {
            line: 148,
            column: 5
          }
        },
        loc: {
          start: {
            line: 148,
            column: 54
          },
          end: {
            line: 161,
            column: 5
          }
        },
        line: 148
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 149,
            column: 80
          },
          end: {
            line: 149,
            column: 81
          }
        },
        loc: {
          start: {
            line: 149,
            column: 103
          },
          end: {
            line: 157,
            column: 9
          }
        },
        line: 149
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 154,
            column: 40
          },
          end: {
            line: 154,
            column: 41
          }
        },
        loc: {
          start: {
            line: 154,
            column: 48
          },
          end: {
            line: 154,
            column: 85
          }
        },
        line: 154
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 163,
            column: 4
          },
          end: {
            line: 163,
            column: 5
          }
        },
        loc: {
          start: {
            line: 163,
            column: 25
          },
          end: {
            line: 173,
            column: 5
          }
        },
        line: 163
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 166,
            column: 77
          },
          end: {
            line: 166,
            column: 78
          }
        },
        loc: {
          start: {
            line: 166,
            column: 87
          },
          end: {
            line: 171,
            column: 13
          }
        },
        line: 166
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 175,
            column: 24
          },
          end: {
            line: 175,
            column: 25
          }
        },
        loc: {
          start: {
            line: 175,
            column: 43
          },
          end: {
            line: 210,
            column: 1
          }
        },
        line: 175
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 194,
            column: 37
          },
          end: {
            line: 194,
            column: 38
          }
        },
        loc: {
          start: {
            line: 194,
            column: 43
          },
          end: {
            line: 196,
            column: 5
          }
        },
        line: 194
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 201,
            column: 31
          },
          end: {
            line: 201,
            column: 32
          }
        },
        loc: {
          start: {
            line: 201,
            column: 43
          },
          end: {
            line: 203,
            column: 5
          }
        },
        line: 201
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 205,
            column: 31
          },
          end: {
            line: 205,
            column: 32
          }
        },
        loc: {
          start: {
            line: 205,
            column: 43
          },
          end: {
            line: 209,
            column: 5
          }
        },
        line: 205
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 48,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 48,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "1": {
        loc: {
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 42,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 42,
            column: 28
          }
        }, {
          start: {
            line: 42,
            column: 32
          },
          end: {
            line: 42,
            column: 45
          }
        }, {
          start: {
            line: 42,
            column: 49
          },
          end: {
            line: 42,
            column: 74
          }
        }],
        line: 42
      },
      "2": {
        loc: {
          start: {
            line: 51,
            column: 38
          },
          end: {
            line: 51,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 38
          },
          end: {
            line: 51,
            column: 51
          }
        }, {
          start: {
            line: 51,
            column: 55
          },
          end: {
            line: 51,
            column: 57
          }
        }],
        line: 51
      },
      "3": {
        loc: {
          start: {
            line: 82,
            column: 12
          },
          end: {
            line: 84,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 12
          },
          end: {
            line: 84,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "4": {
        loc: {
          start: {
            line: 86,
            column: 12
          },
          end: {
            line: 89,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 12
          },
          end: {
            line: 89,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "5": {
        loc: {
          start: {
            line: 91,
            column: 72
          },
          end: {
            line: 91,
            column: 116
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 72
          },
          end: {
            line: 91,
            column: 107
          }
        }, {
          start: {
            line: 91,
            column: 111
          },
          end: {
            line: 91,
            column: 116
          }
        }],
        line: 91
      },
      "6": {
        loc: {
          start: {
            line: 93,
            column: 12
          },
          end: {
            line: 104,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 12
          },
          end: {
            line: 104,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "7": {
        loc: {
          start: {
            line: 119,
            column: 12
          },
          end: {
            line: 124,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 12
          },
          end: {
            line: 124,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "8": {
        loc: {
          start: {
            line: 130,
            column: 12
          },
          end: {
            line: 132,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 12
          },
          end: {
            line: 132,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "9": {
        loc: {
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 142,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 142,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "10": {
        loc: {
          start: {
            line: 150,
            column: 12
          },
          end: {
            line: 152,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 12
          },
          end: {
            line: 152,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "11": {
        loc: {
          start: {
            line: 153,
            column: 12
          },
          end: {
            line: 155,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 12
          },
          end: {
            line: 155,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 153
      },
      "12": {
        loc: {
          start: {
            line: 153,
            column: 16
          },
          end: {
            line: 153,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 153,
            column: 16
          },
          end: {
            line: 153,
            column: 27
          }
        }, {
          start: {
            line: 153,
            column: 31
          },
          end: {
            line: 153,
            column: 55
          }
        }],
        line: 153
      },
      "13": {
        loc: {
          start: {
            line: 170,
            column: 31
          },
          end: {
            line: 170,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 170,
            column: 31
          },
          end: {
            line: 170,
            column: 54
          }
        }, {
          start: {
            line: 170,
            column: 58
          },
          end: {
            line: 170,
            column: 59
          }
        }],
        line: 170
      },
      "14": {
        loc: {
          start: {
            line: 181,
            column: 20
          },
          end: {
            line: 181,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 181,
            column: 20
          },
          end: {
            line: 181,
            column: 44
          }
        }, {
          start: {
            line: 181,
            column: 48
          },
          end: {
            line: 181,
            column: 71
          }
        }],
        line: 181
      },
      "15": {
        loc: {
          start: {
            line: 193,
            column: 35
          },
          end: {
            line: 193,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 193,
            column: 35
          },
          end: {
            line: 193,
            column: 61
          }
        }, {
          start: {
            line: 193,
            column: 65
          },
          end: {
            line: 193,
            column: 71
          }
        }],
        line: 193
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\plugins\\websocket.plugin.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\plugins\\websocket.plugin.ts"],
      sourcesContent: ["import { FastifyInstance, FastifyPluginAsync } from 'fastify'\nimport { Server as SocketIOServer } from 'socket.io'\nimport { createServer } from 'http'\nimport { logger } from '../utils/logger'\nimport { MetricsService } from '../services/metrics.service'\nimport { CacheService } from '../services/cache.service'\n\ninterface MetricsSubscription {\n  userId: string\n  campaignIds?: string[]\n  metrics: string[]\n  interval: number // em segundos\n}\n\ninterface MetricsUpdate {\n  timestamp: string\n  metrics: Record<string, any>\n  userId: string\n  campaignIds?: string[]\n}\n\nclass MetricsWebSocketHandler {\n  private io: SocketIOServer\n  private subscriptions = new Map<string, MetricsSubscription>()\n  private intervals = new Map<string, NodeJS.Timeout>()\n  private metricsService: MetricsService\n  private cacheService: CacheService\n\n  constructor(\n    io: SocketIOServer,\n    metricsService: MetricsService,\n    cacheService: CacheService,\n  ) {\n    this.io = io\n    this.metricsService = metricsService\n    this.cacheService = cacheService\n    this.setupEventHandlers()\n  }\n\n  private setupEventHandlers() {\n    this.io.on('connection', (socket) => {\n      logger.info(`Cliente WebSocket conectado: ${socket.id}`)\n\n      socket.on('subscribe-metrics', async (data: MetricsSubscription) => {\n        await this.handleSubscribeMetrics(socket, data)\n      })\n\n      socket.on('unsubscribe-metrics', () => {\n        this.handleUnsubscribeMetrics(socket.id)\n        socket.emit('unsubscription-confirmed', {\n          message: 'Inscri\xE7\xE3o cancelada',\n        })\n      })\n\n      socket.on('get-current-metrics', async () => {\n        await this.sendMetricsUpdate(socket.id)\n      })\n\n      socket.on('disconnect', (reason) => {\n        logger.info(`Cliente WebSocket desconectado: ${socket.id}, raz\xE3o: ${reason}`)\n        this.handleUnsubscribeMetrics(socket.id)\n      })\n    })\n  }\n\n  private async handleSubscribeMetrics(socket: any, data: MetricsSubscription) {\n    try {\n      // Validar dados de entrada\n      if (!data.userId || !data.metrics || data.metrics.length === 0) {\n        socket.emit('error', {\n          message: 'Dados de inscri\xE7\xE3o inv\xE1lidos',\n          code: 'INVALID_SUBSCRIPTION_DATA',\n        })\n        return\n      }\n\n      // Limitar intervalo m\xEDnimo para evitar sobrecarga\n      const minInterval = 5 // 5 segundos\n      const interval = Math.max(data.interval || 30, minInterval)\n\n      // Armazenar inscri\xE7\xE3o\n      this.subscriptions.set(socket.id, {\n        ...data,\n        interval,\n      })\n\n      // Enviar dados iniciais\n      await this.sendMetricsUpdate(socket.id)\n\n      // Configurar intervalo de atualiza\xE7\xE3o\n      const intervalId = setInterval(async () => {\n        await this.sendMetricsUpdate(socket.id)\n      }, interval * 1000)\n\n      this.intervals.set(socket.id, intervalId)\n\n      socket.emit('subscription-confirmed', {\n        message: 'Inscri\xE7\xE3o confirmada',\n        interval,\n        metrics: data.metrics,\n      })\n\n      logger.info(\n        `Cliente ${socket.id} inscrito para m\xE9tricas: ${data.metrics.join(', ')}`,\n      )\n    } catch (error) {\n      logger.error(\n        `Erro ao inscrever cliente ${socket.id}:`,\n        error,\n      )\n      socket.emit('error', {\n        message: 'Erro interno do servidor',\n        code: 'SUBSCRIPTION_ERROR',\n      })\n    }\n  }\n\n  private async sendMetricsUpdate(clientId: string) {\n    try {\n      const subscription = this.subscriptions.get(clientId)\n      if (!subscription) {\n        return\n      }\n\n      const socket = this.io.sockets.sockets.get(clientId)\n      if (!socket) {\n        this.handleUnsubscribeMetrics(clientId)\n        return\n      }\n\n      // Buscar m\xE9tricas do cache primeiro\n      const cacheKey = `metrics:realtime:${subscription.userId}:${subscription.campaignIds?.join(',') || 'all'}`\n      let metricsData = await this.cacheService.get(cacheKey)\n\n      if (!metricsData) {\n        // Se n\xE3o estiver no cache, calcular m\xE9tricas\n        const filters = {\n          userId: subscription.userId,\n          campaignIds: subscription.campaignIds,\n          startDate: new Date(Date.now() - 24 * 60 * 60 * 1000), // \xFAltimas 24h\n          endDate: new Date(),\n        }\n\n        metricsData = await this.metricsService.calculateMetrics(filters)\n\n        // Armazenar no cache por 30 segundos\n        await this.cacheService.set(cacheKey, metricsData, 30)\n      }\n\n      // Filtrar apenas as m\xE9tricas solicitadas\n      const filteredMetrics = this.filterRequestedMetrics(\n        metricsData,\n        subscription.metrics,\n      )\n\n      // Adicionar timestamp\n      const updateData: MetricsUpdate = {\n        timestamp: new Date().toISOString(),\n        metrics: filteredMetrics,\n        userId: subscription.userId,\n        campaignIds: subscription.campaignIds,\n      }\n\n      socket.emit('metrics-update', updateData)\n    } catch (error) {\n      logger.error(\n        `Erro ao enviar atualiza\xE7\xE3o de m\xE9tricas para ${clientId}:`,\n        error,\n      )\n\n      const socket = this.io.sockets.sockets.get(clientId)\n      if (socket) {\n        socket.emit('error', {\n          message: 'Erro ao buscar m\xE9tricas',\n          code: 'METRICS_FETCH_ERROR',\n        })\n      }\n    }\n  }\n\n  private filterRequestedMetrics(metricsData: any, requestedMetrics: string[]) {\n    const filtered: any = {}\n\n    for (const metric of requestedMetrics) {\n      if (metricsData[metric] !== undefined) {\n        filtered[metric] = metricsData[metric]\n      }\n    }\n\n    return filtered\n  }\n\n  private handleUnsubscribeMetrics(clientId: string) {\n    // Limpar intervalo\n    const intervalId = this.intervals.get(clientId)\n    if (intervalId) {\n      clearInterval(intervalId)\n      this.intervals.delete(clientId)\n    }\n\n    // Remover inscri\xE7\xE3o\n    this.subscriptions.delete(clientId)\n\n    logger.info(`Cliente ${clientId} desinscrito das m\xE9tricas`)\n  }\n\n  // M\xE9todo para broadcast de atualiza\xE7\xF5es para todos os clientes\n  async broadcastMetricsUpdate(userId: string, campaignIds?: string[]) {\n    const relevantClients = Array.from(this.subscriptions.entries()).filter(\n      ([_, subscription]) => {\n        if (subscription.userId !== userId) {\n          return false\n        }\n\n        if (campaignIds && subscription.campaignIds) {\n          return campaignIds.some((id) =>\n            subscription.campaignIds!.includes(id),\n          )\n        }\n\n        return true\n      },\n    )\n\n    for (const [clientId] of relevantClients) {\n      await this.sendMetricsUpdate(clientId)\n    }\n  }\n\n  // M\xE9todo para obter estat\xEDsticas de conex\xF5es\n  getConnectionStats() {\n    return {\n      totalConnections: this.subscriptions.size,\n      activeSubscriptions: Array.from(this.subscriptions.values()).map(\n        (sub) => ({\n          userId: sub.userId,\n          metrics: sub.metrics,\n          interval: sub.interval,\n          campaignCount: sub.campaignIds?.length || 0,\n        }),\n      ),\n    }\n  }\n}\n\nconst websocketPlugin: FastifyPluginAsync = async (fastify: FastifyInstance) => {\n  // Criar servidor HTTP para Socket.IO\n  const httpServer = createServer()\n  \n  // Configurar Socket.IO\n  const io = new SocketIOServer(httpServer, {\n    cors: {\n      origin: process.env.FRONTEND_URL || 'http://localhost:3000',\n      credentials: true,\n    },\n    path: '/socket.io/',\n    transports: ['websocket', 'polling'],\n  })\n\n  // Inicializar servi\xE7os\n  const metricsService = new MetricsService(fastify.db)\n  const cacheService = new CacheService()\n\n  // Criar handler de WebSocket\n  const websocketHandler = new MetricsWebSocketHandler(\n    io,\n    metricsService,\n    cacheService,\n  )\n\n  // Iniciar servidor HTTP na porta diferente\n  const websocketPort = parseInt(process.env.WEBSOCKET_PORT || '3002')\n  \n  httpServer.listen(websocketPort, () => {\n    logger.info(`WebSocket server listening on port ${websocketPort}`)\n  })\n\n  // Adicionar refer\xEAncias ao Fastify instance\n  fastify.decorate('io', io)\n  fastify.decorate('websocketHandler', websocketHandler)\n\n  // Adicionar hook para broadcast quando m\xE9tricas s\xE3o atualizadas\n  fastify.addHook('onReady', async () => {\n    logger.info('WebSocket plugin initialized successfully')\n  })\n\n  // Cleanup na finaliza\xE7\xE3o\n  fastify.addHook('onClose', async () => {\n    io.close()\n    httpServer.close()\n    logger.info('WebSocket server closed')\n  })\n}\n\n// Extend Fastify types\ndeclare module 'fastify' {\n  interface FastifyInstance {\n    io: SocketIOServer\n    websocketHandler: MetricsWebSocketHandler\n  }\n}\n\nexport default websocketPlugin"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d4df97df0c79e337fdba598f9bf92571dd8cd9cb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_5ky8ur652 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_5ky8ur652();
import { Server as SocketIOServer } from 'socket.io';
import { createServer } from 'http';
import { logger } from '../utils/logger';
import { MetricsService } from '../services/metrics.service';
import { CacheService } from '../services/cache.service';
class MetricsWebSocketHandler {
  io;
  subscriptions =
  /* istanbul ignore next */
  (cov_5ky8ur652().s[0]++, new Map());
  intervals =
  /* istanbul ignore next */
  (cov_5ky8ur652().s[1]++, new Map());
  metricsService;
  cacheService;
  constructor(io, metricsService, cacheService) {
    /* istanbul ignore next */
    cov_5ky8ur652().f[0]++;
    cov_5ky8ur652().s[2]++;
    this.io = io;
    /* istanbul ignore next */
    cov_5ky8ur652().s[3]++;
    this.metricsService = metricsService;
    /* istanbul ignore next */
    cov_5ky8ur652().s[4]++;
    this.cacheService = cacheService;
    /* istanbul ignore next */
    cov_5ky8ur652().s[5]++;
    this.setupEventHandlers();
  }
  setupEventHandlers() {
    /* istanbul ignore next */
    cov_5ky8ur652().f[1]++;
    cov_5ky8ur652().s[6]++;
    this.io.on('connection', socket => {
      /* istanbul ignore next */
      cov_5ky8ur652().f[2]++;
      cov_5ky8ur652().s[7]++;
      logger.info(`Cliente WebSocket conectado: ${socket.id}`);
      /* istanbul ignore next */
      cov_5ky8ur652().s[8]++;
      socket.on('subscribe-metrics', async data => {
        /* istanbul ignore next */
        cov_5ky8ur652().f[3]++;
        cov_5ky8ur652().s[9]++;
        await this.handleSubscribeMetrics(socket, data);
      });
      /* istanbul ignore next */
      cov_5ky8ur652().s[10]++;
      socket.on('unsubscribe-metrics', () => {
        /* istanbul ignore next */
        cov_5ky8ur652().f[4]++;
        cov_5ky8ur652().s[11]++;
        this.handleUnsubscribeMetrics(socket.id);
        /* istanbul ignore next */
        cov_5ky8ur652().s[12]++;
        socket.emit('unsubscription-confirmed', {
          message: 'Inscrição cancelada'
        });
      });
      /* istanbul ignore next */
      cov_5ky8ur652().s[13]++;
      socket.on('get-current-metrics', async () => {
        /* istanbul ignore next */
        cov_5ky8ur652().f[5]++;
        cov_5ky8ur652().s[14]++;
        await this.sendMetricsUpdate(socket.id);
      });
      /* istanbul ignore next */
      cov_5ky8ur652().s[15]++;
      socket.on('disconnect', reason => {
        /* istanbul ignore next */
        cov_5ky8ur652().f[6]++;
        cov_5ky8ur652().s[16]++;
        logger.info(`Cliente WebSocket desconectado: ${socket.id}, razão: ${reason}`);
        /* istanbul ignore next */
        cov_5ky8ur652().s[17]++;
        this.handleUnsubscribeMetrics(socket.id);
      });
    });
  }
  async handleSubscribeMetrics(socket, data) {
    /* istanbul ignore next */
    cov_5ky8ur652().f[7]++;
    cov_5ky8ur652().s[18]++;
    try {
      /* istanbul ignore next */
      cov_5ky8ur652().s[19]++;
      // Validar dados de entrada
      if (
      /* istanbul ignore next */
      (cov_5ky8ur652().b[1][0]++, !data.userId) ||
      /* istanbul ignore next */
      (cov_5ky8ur652().b[1][1]++, !data.metrics) ||
      /* istanbul ignore next */
      (cov_5ky8ur652().b[1][2]++, data.metrics.length === 0)) {
        /* istanbul ignore next */
        cov_5ky8ur652().b[0][0]++;
        cov_5ky8ur652().s[20]++;
        socket.emit('error', {
          message: 'Dados de inscrição inválidos',
          code: 'INVALID_SUBSCRIPTION_DATA'
        });
        /* istanbul ignore next */
        cov_5ky8ur652().s[21]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_5ky8ur652().b[0][1]++;
      }
      // Limitar intervalo mínimo para evitar sobrecarga
      const minInterval =
      /* istanbul ignore next */
      (cov_5ky8ur652().s[22]++, 5); // 5 segundos
      const interval =
      /* istanbul ignore next */
      (cov_5ky8ur652().s[23]++, Math.max(
      /* istanbul ignore next */
      (cov_5ky8ur652().b[2][0]++, data.interval) ||
      /* istanbul ignore next */
      (cov_5ky8ur652().b[2][1]++, 30), minInterval));
      // Armazenar inscrição
      /* istanbul ignore next */
      cov_5ky8ur652().s[24]++;
      this.subscriptions.set(socket.id, {
        ...data,
        interval
      });
      // Enviar dados iniciais
      /* istanbul ignore next */
      cov_5ky8ur652().s[25]++;
      await this.sendMetricsUpdate(socket.id);
      // Configurar intervalo de atualização
      const intervalId =
      /* istanbul ignore next */
      (cov_5ky8ur652().s[26]++, setInterval(async () => {
        /* istanbul ignore next */
        cov_5ky8ur652().f[8]++;
        cov_5ky8ur652().s[27]++;
        await this.sendMetricsUpdate(socket.id);
      }, interval * 1000));
      /* istanbul ignore next */
      cov_5ky8ur652().s[28]++;
      this.intervals.set(socket.id, intervalId);
      /* istanbul ignore next */
      cov_5ky8ur652().s[29]++;
      socket.emit('subscription-confirmed', {
        message: 'Inscrição confirmada',
        interval,
        metrics: data.metrics
      });
      /* istanbul ignore next */
      cov_5ky8ur652().s[30]++;
      logger.info(`Cliente ${socket.id} inscrito para métricas: ${data.metrics.join(', ')}`);
    } catch (error) {
      /* istanbul ignore next */
      cov_5ky8ur652().s[31]++;
      logger.error(`Erro ao inscrever cliente ${socket.id}:`, error);
      /* istanbul ignore next */
      cov_5ky8ur652().s[32]++;
      socket.emit('error', {
        message: 'Erro interno do servidor',
        code: 'SUBSCRIPTION_ERROR'
      });
    }
  }
  async sendMetricsUpdate(clientId) {
    /* istanbul ignore next */
    cov_5ky8ur652().f[9]++;
    cov_5ky8ur652().s[33]++;
    try {
      const subscription =
      /* istanbul ignore next */
      (cov_5ky8ur652().s[34]++, this.subscriptions.get(clientId));
      /* istanbul ignore next */
      cov_5ky8ur652().s[35]++;
      if (!subscription) {
        /* istanbul ignore next */
        cov_5ky8ur652().b[3][0]++;
        cov_5ky8ur652().s[36]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_5ky8ur652().b[3][1]++;
      }
      const socket =
      /* istanbul ignore next */
      (cov_5ky8ur652().s[37]++, this.io.sockets.sockets.get(clientId));
      /* istanbul ignore next */
      cov_5ky8ur652().s[38]++;
      if (!socket) {
        /* istanbul ignore next */
        cov_5ky8ur652().b[4][0]++;
        cov_5ky8ur652().s[39]++;
        this.handleUnsubscribeMetrics(clientId);
        /* istanbul ignore next */
        cov_5ky8ur652().s[40]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_5ky8ur652().b[4][1]++;
      }
      // Buscar métricas do cache primeiro
      const cacheKey =
      /* istanbul ignore next */
      (cov_5ky8ur652().s[41]++, `metrics:realtime:${subscription.userId}:${
      /* istanbul ignore next */
      (cov_5ky8ur652().b[5][0]++, subscription.campaignIds?.join(',')) ||
      /* istanbul ignore next */
      (cov_5ky8ur652().b[5][1]++, 'all')}`);
      let metricsData =
      /* istanbul ignore next */
      (cov_5ky8ur652().s[42]++, await this.cacheService.get(cacheKey));
      /* istanbul ignore next */
      cov_5ky8ur652().s[43]++;
      if (!metricsData) {
        /* istanbul ignore next */
        cov_5ky8ur652().b[6][0]++;
        // Se não estiver no cache, calcular métricas
        const filters =
        /* istanbul ignore next */
        (cov_5ky8ur652().s[44]++, {
          userId: subscription.userId,
          campaignIds: subscription.campaignIds,
          startDate: new Date(Date.now() - 24 * 60 * 60 * 1000),
          // últimas 24h
          endDate: new Date()
        });
        /* istanbul ignore next */
        cov_5ky8ur652().s[45]++;
        metricsData = await this.metricsService.calculateMetrics(filters);
        // Armazenar no cache por 30 segundos
        /* istanbul ignore next */
        cov_5ky8ur652().s[46]++;
        await this.cacheService.set(cacheKey, metricsData, 30);
      } else
      /* istanbul ignore next */
      {
        cov_5ky8ur652().b[6][1]++;
      }
      // Filtrar apenas as métricas solicitadas
      const filteredMetrics =
      /* istanbul ignore next */
      (cov_5ky8ur652().s[47]++, this.filterRequestedMetrics(metricsData, subscription.metrics));
      // Adicionar timestamp
      const updateData =
      /* istanbul ignore next */
      (cov_5ky8ur652().s[48]++, {
        timestamp: new Date().toISOString(),
        metrics: filteredMetrics,
        userId: subscription.userId,
        campaignIds: subscription.campaignIds
      });
      /* istanbul ignore next */
      cov_5ky8ur652().s[49]++;
      socket.emit('metrics-update', updateData);
    } catch (error) {
      /* istanbul ignore next */
      cov_5ky8ur652().s[50]++;
      logger.error(`Erro ao enviar atualização de métricas para ${clientId}:`, error);
      const socket =
      /* istanbul ignore next */
      (cov_5ky8ur652().s[51]++, this.io.sockets.sockets.get(clientId));
      /* istanbul ignore next */
      cov_5ky8ur652().s[52]++;
      if (socket) {
        /* istanbul ignore next */
        cov_5ky8ur652().b[7][0]++;
        cov_5ky8ur652().s[53]++;
        socket.emit('error', {
          message: 'Erro ao buscar métricas',
          code: 'METRICS_FETCH_ERROR'
        });
      } else
      /* istanbul ignore next */
      {
        cov_5ky8ur652().b[7][1]++;
      }
    }
  }
  filterRequestedMetrics(metricsData, requestedMetrics) {
    /* istanbul ignore next */
    cov_5ky8ur652().f[10]++;
    const filtered =
    /* istanbul ignore next */
    (cov_5ky8ur652().s[54]++, {});
    /* istanbul ignore next */
    cov_5ky8ur652().s[55]++;
    for (const metric of requestedMetrics) {
      /* istanbul ignore next */
      cov_5ky8ur652().s[56]++;
      if (metricsData[metric] !== undefined) {
        /* istanbul ignore next */
        cov_5ky8ur652().b[8][0]++;
        cov_5ky8ur652().s[57]++;
        filtered[metric] = metricsData[metric];
      } else
      /* istanbul ignore next */
      {
        cov_5ky8ur652().b[8][1]++;
      }
    }
    /* istanbul ignore next */
    cov_5ky8ur652().s[58]++;
    return filtered;
  }
  handleUnsubscribeMetrics(clientId) {
    /* istanbul ignore next */
    cov_5ky8ur652().f[11]++;
    // Limpar intervalo
    const intervalId =
    /* istanbul ignore next */
    (cov_5ky8ur652().s[59]++, this.intervals.get(clientId));
    /* istanbul ignore next */
    cov_5ky8ur652().s[60]++;
    if (intervalId) {
      /* istanbul ignore next */
      cov_5ky8ur652().b[9][0]++;
      cov_5ky8ur652().s[61]++;
      clearInterval(intervalId);
      /* istanbul ignore next */
      cov_5ky8ur652().s[62]++;
      this.intervals.delete(clientId);
    } else
    /* istanbul ignore next */
    {
      cov_5ky8ur652().b[9][1]++;
    }
    // Remover inscrição
    cov_5ky8ur652().s[63]++;
    this.subscriptions.delete(clientId);
    /* istanbul ignore next */
    cov_5ky8ur652().s[64]++;
    logger.info(`Cliente ${clientId} desinscrito das métricas`);
  }
  // Método para broadcast de atualizações para todos os clientes
  async broadcastMetricsUpdate(userId, campaignIds) {
    /* istanbul ignore next */
    cov_5ky8ur652().f[12]++;
    const relevantClients =
    /* istanbul ignore next */
    (cov_5ky8ur652().s[65]++, Array.from(this.subscriptions.entries()).filter(([_, subscription]) => {
      /* istanbul ignore next */
      cov_5ky8ur652().f[13]++;
      cov_5ky8ur652().s[66]++;
      if (subscription.userId !== userId) {
        /* istanbul ignore next */
        cov_5ky8ur652().b[10][0]++;
        cov_5ky8ur652().s[67]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_5ky8ur652().b[10][1]++;
      }
      cov_5ky8ur652().s[68]++;
      if (
      /* istanbul ignore next */
      (cov_5ky8ur652().b[12][0]++, campaignIds) &&
      /* istanbul ignore next */
      (cov_5ky8ur652().b[12][1]++, subscription.campaignIds)) {
        /* istanbul ignore next */
        cov_5ky8ur652().b[11][0]++;
        cov_5ky8ur652().s[69]++;
        return campaignIds.some(id => {
          /* istanbul ignore next */
          cov_5ky8ur652().f[14]++;
          cov_5ky8ur652().s[70]++;
          return subscription.campaignIds.includes(id);
        });
      } else
      /* istanbul ignore next */
      {
        cov_5ky8ur652().b[11][1]++;
      }
      cov_5ky8ur652().s[71]++;
      return true;
    }));
    /* istanbul ignore next */
    cov_5ky8ur652().s[72]++;
    for (const [clientId] of relevantClients) {
      /* istanbul ignore next */
      cov_5ky8ur652().s[73]++;
      await this.sendMetricsUpdate(clientId);
    }
  }
  // Método para obter estatísticas de conexões
  getConnectionStats() {
    /* istanbul ignore next */
    cov_5ky8ur652().f[15]++;
    cov_5ky8ur652().s[74]++;
    return {
      totalConnections: this.subscriptions.size,
      activeSubscriptions: Array.from(this.subscriptions.values()).map(sub => {
        /* istanbul ignore next */
        cov_5ky8ur652().f[16]++;
        cov_5ky8ur652().s[75]++;
        return {
          userId: sub.userId,
          metrics: sub.metrics,
          interval: sub.interval,
          campaignCount:
          /* istanbul ignore next */
          (cov_5ky8ur652().b[13][0]++, sub.campaignIds?.length) ||
          /* istanbul ignore next */
          (cov_5ky8ur652().b[13][1]++, 0)
        };
      })
    };
  }
}
/* istanbul ignore next */
cov_5ky8ur652().s[76]++;
const websocketPlugin = async fastify => {
  /* istanbul ignore next */
  cov_5ky8ur652().f[17]++;
  // Criar servidor HTTP para Socket.IO
  const httpServer =
  /* istanbul ignore next */
  (cov_5ky8ur652().s[77]++, createServer());
  // Configurar Socket.IO
  const io =
  /* istanbul ignore next */
  (cov_5ky8ur652().s[78]++, new SocketIOServer(httpServer, {
    cors: {
      origin:
      /* istanbul ignore next */
      (cov_5ky8ur652().b[14][0]++, process.env.FRONTEND_URL) ||
      /* istanbul ignore next */
      (cov_5ky8ur652().b[14][1]++, 'http://localhost:3000'),
      credentials: true
    },
    path: '/socket.io/',
    transports: ['websocket', 'polling']
  }));
  // Inicializar serviços
  const metricsService =
  /* istanbul ignore next */
  (cov_5ky8ur652().s[79]++, new MetricsService(fastify.db));
  const cacheService =
  /* istanbul ignore next */
  (cov_5ky8ur652().s[80]++, new CacheService());
  // Criar handler de WebSocket
  const websocketHandler =
  /* istanbul ignore next */
  (cov_5ky8ur652().s[81]++, new MetricsWebSocketHandler(io, metricsService, cacheService));
  // Iniciar servidor HTTP na porta diferente
  const websocketPort =
  /* istanbul ignore next */
  (cov_5ky8ur652().s[82]++, parseInt(
  /* istanbul ignore next */
  (cov_5ky8ur652().b[15][0]++, process.env.WEBSOCKET_PORT) ||
  /* istanbul ignore next */
  (cov_5ky8ur652().b[15][1]++, '3002')));
  /* istanbul ignore next */
  cov_5ky8ur652().s[83]++;
  httpServer.listen(websocketPort, () => {
    /* istanbul ignore next */
    cov_5ky8ur652().f[18]++;
    cov_5ky8ur652().s[84]++;
    logger.info(`WebSocket server listening on port ${websocketPort}`);
  });
  // Adicionar referências ao Fastify instance
  /* istanbul ignore next */
  cov_5ky8ur652().s[85]++;
  fastify.decorate('io', io);
  /* istanbul ignore next */
  cov_5ky8ur652().s[86]++;
  fastify.decorate('websocketHandler', websocketHandler);
  // Adicionar hook para broadcast quando métricas são atualizadas
  /* istanbul ignore next */
  cov_5ky8ur652().s[87]++;
  fastify.addHook('onReady', async () => {
    /* istanbul ignore next */
    cov_5ky8ur652().f[19]++;
    cov_5ky8ur652().s[88]++;
    logger.info('WebSocket plugin initialized successfully');
  });
  // Cleanup na finalização
  /* istanbul ignore next */
  cov_5ky8ur652().s[89]++;
  fastify.addHook('onClose', async () => {
    /* istanbul ignore next */
    cov_5ky8ur652().f[20]++;
    cov_5ky8ur652().s[90]++;
    io.close();
    /* istanbul ignore next */
    cov_5ky8ur652().s[91]++;
    httpServer.close();
    /* istanbul ignore next */
    cov_5ky8ur652().s[92]++;
    logger.info('WebSocket server closed');
  });
};
export default websocketPlugin;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,