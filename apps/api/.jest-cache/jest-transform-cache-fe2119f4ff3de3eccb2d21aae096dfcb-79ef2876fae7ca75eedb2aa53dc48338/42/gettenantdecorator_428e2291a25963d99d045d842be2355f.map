{"version":3,"names":["cov_2pp20o27cr","actualCoverage","createParamDecorator","GetTenant","s","data","ctx","f","request","switchToHttp","getRequest","tenant","b","Error","GetTenantId","id","GetTenantSlug","slug"],"sources":["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\decorators\\get-tenant.decorator.ts"],"sourcesContent":["import { createParamDecorator, ExecutionContext } from '@nestjs/common';\n\nexport interface TenantInfo {\n  id: string;\n  slug: string;\n  name: string;\n  planType: string;\n  isActive: boolean;\n  schema?: string;\n}\n\nexport const GetTenant = createParamDecorator(\n  (data: unknown, ctx: ExecutionContext): TenantInfo => {\n    const request = ctx.switchToHttp().getRequest();\n    \n    if (!request.tenant) {\n      throw new Error('Tenant information not found in request. Make sure TenantMiddleware is properly configured.');\n    }\n    \n    return request.tenant;\n  },\n);\n\n/**\n * Decorator para obter apenas o ID do tenant\n */\nexport const GetTenantId = createParamDecorator(\n  (data: unknown, ctx: ExecutionContext): string => {\n    const request = ctx.switchToHttp().getRequest();\n    \n    if (!request.tenant?.id) {\n      throw new Error('Tenant ID not found in request. Make sure TenantMiddleware is properly configured.');\n    }\n    \n    return request.tenant.id;\n  },\n);\n\n/**\n * Decorator para obter o slug do tenant\n */\nexport const GetTenantSlug = createParamDecorator(\n  (data: unknown, ctx: ExecutionContext): string => {\n    const request = ctx.switchToHttp().getRequest();\n    \n    if (!request.tenant?.slug) {\n      throw new Error('Tenant slug not found in request. Make sure TenantMiddleware is properly configured.');\n    }\n    \n    return request.tenant.slug;\n  },\n);"],"mappings":"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","ignoreList":[]}