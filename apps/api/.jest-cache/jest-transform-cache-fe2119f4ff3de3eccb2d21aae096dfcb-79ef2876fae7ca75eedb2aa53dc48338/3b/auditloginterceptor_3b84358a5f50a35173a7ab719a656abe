f4b334ce2c55e245d1febd3007a6ddf4
/* istanbul ignore next */
function cov_pmjx20wre() {
  var path = "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\interceptors\\audit-log.interceptor.ts";
  var hash = "d4faebac26f8ad33f4d7913aa425b60d92b7d31b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\interceptors\\audit-log.interceptor.ts",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 17
        },
        end: {
          line: 6,
          column: 1
        }
      },
      "1": {
        start: {
          line: 2,
          column: 12
        },
        end: {
          line: 2,
          column: 28
        }
      },
      "2": {
        start: {
          line: 2,
          column: 34
        },
        end: {
          line: 2,
          column: 125
        }
      },
      "3": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 4,
          column: 150
        }
      },
      "4": {
        start: {
          line: 3,
          column: 79
        },
        end: {
          line: 3,
          column: 131
        }
      },
      "5": {
        start: {
          line: 4,
          column: 9
        },
        end: {
          line: 4,
          column: 150
        }
      },
      "6": {
        start: {
          line: 4,
          column: 22
        },
        end: {
          line: 4,
          column: 43
        }
      },
      "7": {
        start: {
          line: 4,
          column: 58
        },
        end: {
          line: 4,
          column: 150
        }
      },
      "8": {
        start: {
          line: 4,
          column: 81
        },
        end: {
          line: 4,
          column: 150
        }
      },
      "9": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 5,
          column: 66
        }
      },
      "10": {
        start: {
          line: 7,
          column: 17
        },
        end: {
          line: 9,
          column: 1
        }
      },
      "11": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 109
        }
      },
      "12": {
        start: {
          line: 8,
          column: 79
        },
        end: {
          line: 8,
          column: 109
        }
      },
      "13": {
        start: {
          line: 17,
          column: 24
        },
        end: {
          line: 26,
          column: 1
        }
      },
      "14": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 25,
          column: 6
        }
      },
      "15": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 24,
          column: 9
        }
      },
      "16": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 20,
          column: 83
        }
      },
      "17": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 73
        }
      },
      "18": {
        start: {
          line: 28,
          column: 28
        },
        end: {
          line: 37,
          column: 1
        }
      },
      "19": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 36,
          column: 6
        }
      },
      "20": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 35,
          column: 9
        }
      },
      "21": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 77
        }
      },
      "22": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 34,
          column: 67
        }
      },
      "23": {
        start: {
          line: 39,
          column: 33
        },
        end: {
          line: 48,
          column: 1
        }
      },
      "24": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 47,
          column: 6
        }
      },
      "25": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "26": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 85
        }
      },
      "27": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 75
        }
      },
      "28": {
        start: {
          line: 49,
          column: 26
        },
        end: {
          line: 237,
          column: 1
        }
      },
      "29": {
        start: {
          line: 52,
          column: 13
        },
        end: {
          line: 52,
          column: 51
        }
      },
      "30": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 35
        }
      },
      "31": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 47
        }
      },
      "32": {
        start: {
          line: 58,
          column: 24
        },
        end: {
          line: 58,
          column: 59
        }
      },
      "33": {
        start: {
          line: 59,
          column: 24
        },
        end: {
          line: 59,
          column: 44
        }
      },
      "34": {
        start: {
          line: 60,
          column: 27
        },
        end: {
          line: 60,
          column: 45
        }
      },
      "35": {
        start: {
          line: 61,
          column: 27
        },
        end: {
          line: 61,
          column: 39
        }
      },
      "36": {
        start: {
          line: 62,
          column: 31
        },
        end: {
          line: 62,
          column: 46
        }
      },
      "37": {
        start: {
          line: 64,
          column: 29
        },
        end: {
          line: 64,
          column: 102
        }
      },
      "38": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 67,
          column: 9
        }
      },
      "39": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 33
        }
      },
      "40": {
        start: {
          line: 69,
          column: 21
        },
        end: {
          line: 69,
          column: 33
        }
      },
      "41": {
        start: {
          line: 70,
          column: 31
        },
        end: {
          line: 70,
          column: 91
        }
      },
      "42": {
        start: {
          line: 71,
          column: 23
        },
        end: {
          line: 71,
          column: 46
        }
      },
      "43": {
        start: {
          line: 73,
          column: 33
        },
        end: {
          line: 73,
          column: 111
        }
      },
      "44": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "45": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 33
        }
      },
      "46": {
        start: {
          line: 78,
          column: 29
        },
        end: {
          line: 78,
          column: 105
        }
      },
      "47": {
        start: {
          line: 80,
          column: 23
        },
        end: {
          line: 80,
          column: 96
        }
      },
      "48": {
        start: {
          line: 81,
          column: 25
        },
        end: {
          line: 81,
          column: 95
        }
      },
      "49": {
        start: {
          line: 83,
          column: 28
        },
        end: {
          line: 83,
          column: 74
        }
      },
      "50": {
        start: {
          line: 84,
          column: 26
        },
        end: {
          line: 84,
          column: 36
        }
      },
      "51": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 127,
          column: 12
        }
      },
      "52": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 104,
          column: 15
        }
      },
      "53": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 125,
          column: 15
        }
      },
      "54": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 24
        }
      },
      "55": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 135,
          column: 9
        }
      },
      "56": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 60
        }
      },
      "57": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 134,
          column: 91
        }
      },
      "58": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 141,
          column: 9
        }
      },
      "59": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 140,
          column: 43
        }
      },
      "60": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 144,
          column: 9
        }
      },
      "61": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 143,
          column: 39
        }
      },
      "62": {
        start: {
          line: 146,
          column: 27
        },
        end: {
          line: 146,
          column: 55
        }
      },
      "63": {
        start: {
          line: 147,
          column: 36
        },
        end: {
          line: 147,
          column: 87
        }
      },
      "64": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 148,
          column: 54
        }
      },
      "65": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 154,
          column: 9
        }
      },
      "66": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 45
        }
      },
      "67": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 157,
          column: 9
        }
      },
      "68": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 156,
          column: 41
        }
      },
      "69": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 159,
          column: 56
        }
      },
      "70": {
        start: {
          line: 162,
          column: 21
        },
        end: {
          line: 162,
          column: 23
        }
      },
      "71": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 166,
          column: 9
        }
      },
      "72": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 41
        }
      },
      "73": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 170,
          column: 9
        }
      },
      "74": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 169,
          column: 39
        }
      },
      "75": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 174,
          column: 9
        }
      },
      "76": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 173,
          column: 70
        }
      },
      "77": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 175,
          column: 20
        }
      },
      "78": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 180,
          column: 9
        }
      },
      "79": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 179,
          column: 24
        }
      },
      "80": {
        start: {
          line: 181,
          column: 26
        },
        end: {
          line: 181,
          column: 37
        }
      },
      "81": {
        start: {
          line: 183,
          column: 32
        },
        end: {
          line: 192,
          column: 9
        }
      },
      "82": {
        start: {
          line: 193,
          column: 31
        },
        end: {
          line: 211,
          column: 9
        }
      },
      "83": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 196,
          column: 13
        }
      },
      "84": {
        start: {
          line: 195,
          column: 16
        },
        end: {
          line: 195,
          column: 47
        }
      },
      "85": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 209,
          column: 13
        }
      },
      "86": {
        start: {
          line: 198,
          column: 31
        },
        end: {
          line: 198,
          column: 33
        }
      },
      "87": {
        start: {
          line: 199,
          column: 16
        },
        end: {
          line: 207,
          column: 17
        }
      },
      "88": {
        start: {
          line: 200,
          column: 37
        },
        end: {
          line: 200,
          column: 54
        }
      },
      "89": {
        start: {
          line: 201,
          column: 20
        },
        end: {
          line: 206,
          column: 21
        }
      },
      "90": {
        start: {
          line: 201,
          column: 54
        },
        end: {
          line: 201,
          column: 78
        }
      },
      "91": {
        start: {
          line: 202,
          column: 24
        },
        end: {
          line: 202,
          column: 51
        }
      },
      "92": {
        start: {
          line: 205,
          column: 24
        },
        end: {
          line: 205,
          column: 60
        }
      },
      "93": {
        start: {
          line: 208,
          column: 16
        },
        end: {
          line: 208,
          column: 30
        }
      },
      "94": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 210,
          column: 23
        }
      },
      "95": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 212,
          column: 41
        }
      },
      "96": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 217,
          column: 9
        }
      },
      "97": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 28
        }
      },
      "98": {
        start: {
          line: 219,
          column: 28
        },
        end: {
          line: 219,
          column: 52
        }
      },
      "99": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 226,
          column: 9
        }
      },
      "100": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 225,
          column: 14
        }
      },
      "101": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 227,
          column: 24
        }
      },
      "102": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 235,
          column: 23
        }
      },
      "103": {
        start: {
          line: 238,
          column: 0
        },
        end: {
          line: 241,
          column: 24
        }
      },
      "104": {
        start: {
          line: 244,
          column: 31
        },
        end: {
          line: 288,
          column: 1
        }
      },
      "105": {
        start: {
          line: 246,
          column: 13
        },
        end: {
          line: 246,
          column: 56
        }
      },
      "106": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 248,
          column: 47
        }
      },
      "107": {
        start: {
          line: 251,
          column: 24
        },
        end: {
          line: 251,
          column: 59
        }
      },
      "108": {
        start: {
          line: 252,
          column: 21
        },
        end: {
          line: 252,
          column: 33
        }
      },
      "109": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 255,
          column: 9
        }
      },
      "110": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 254,
          column: 24
        }
      },
      "111": {
        start: {
          line: 257,
          column: 37
        },
        end: {
          line: 257,
          column: 78
        }
      },
      "112": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 266,
          column: 9
        }
      },
      "113": {
        start: {
          line: 259,
          column: 28
        },
        end: {
          line: 259,
          column: 48
        }
      },
      "114": {
        start: {
          line: 260,
          column: 31
        },
        end: {
          line: 260,
          column: 49
        }
      },
      "115": {
        start: {
          line: 261,
          column: 28
        },
        end: {
          line: 261,
          column: 189
        }
      },
      "116": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 265,
          column: 13
        }
      },
      "117": {
        start: {
          line: 263,
          column: 16
        },
        end: {
          line: 263,
          column: 157
        }
      },
      "118": {
        start: {
          line: 264,
          column: 16
        },
        end: {
          line: 264,
          column: 29
        }
      },
      "119": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 267,
          column: 20
        }
      },
      "120": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 273,
          column: 9
        }
      },
      "121": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 272,
          column: 49
        }
      },
      "122": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 277,
          column: 9
        }
      },
      "123": {
        start: {
          line: 276,
          column: 12
        },
        end: {
          line: 276,
          column: 48
        }
      },
      "124": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 281,
          column: 9
        }
      },
      "125": {
        start: {
          line: 280,
          column: 12
        },
        end: {
          line: 280,
          column: 47
        }
      },
      "126": {
        start: {
          line: 283,
          column: 8
        },
        end: {
          line: 285,
          column: 9
        }
      },
      "127": {
        start: {
          line: 284,
          column: 12
        },
        end: {
          line: 284,
          column: 63
        }
      },
      "128": {
        start: {
          line: 286,
          column: 8
        },
        end: {
          line: 286,
          column: 20
        }
      },
      "129": {
        start: {
          line: 289,
          column: 0
        },
        end: {
          line: 292,
          column: 29
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 1,
            column: 46
          },
          end: {
            line: 1,
            column: 47
          }
        },
        loc: {
          start: {
            line: 1,
            column: 87
          },
          end: {
            line: 6,
            column: 1
          }
        },
        line: 1
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 47
          }
        },
        loc: {
          start: {
            line: 7,
            column: 62
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 7
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 24
          },
          end: {
            line: 17,
            column: 25
          }
        },
        loc: {
          start: {
            line: 17,
            column: 37
          },
          end: {
            line: 26,
            column: 1
          }
        },
        line: 17
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 11
          },
          end: {
            line: 18,
            column: 12
          }
        },
        loc: {
          start: {
            line: 18,
            column: 48
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 28,
            column: 28
          },
          end: {
            line: 28,
            column: 29
          }
        },
        loc: {
          start: {
            line: 28,
            column: 34
          },
          end: {
            line: 37,
            column: 1
          }
        },
        line: 28
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 29,
            column: 11
          },
          end: {
            line: 29,
            column: 12
          }
        },
        loc: {
          start: {
            line: 29,
            column: 48
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 29
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 39,
            column: 33
          },
          end: {
            line: 39,
            column: 34
          }
        },
        loc: {
          start: {
            line: 39,
            column: 46
          },
          end: {
            line: 48,
            column: 1
          }
        },
        line: 39
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 40,
            column: 11
          },
          end: {
            line: 40,
            column: 12
          }
        },
        loc: {
          start: {
            line: 40,
            column: 48
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 40
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        loc: {
          start: {
            line: 53,
            column: 44
          },
          end: {
            line: 56,
            column: 5
          }
        },
        line: 53
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        loc: {
          start: {
            line: 57,
            column: 29
          },
          end: {
            line: 128,
            column: 5
          }
        },
        line: 57
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 85,
            column: 38
          },
          end: {
            line: 85,
            column: 39
          }
        },
        loc: {
          start: {
            line: 85,
            column: 52
          },
          end: {
            line: 105,
            column: 9
          }
        },
        line: 85
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 105,
            column: 23
          },
          end: {
            line: 105,
            column: 24
          }
        },
        loc: {
          start: {
            line: 105,
            column: 34
          },
          end: {
            line: 127,
            column: 9
          }
        },
        line: 105
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 129,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        },
        loc: {
          start: {
            line: 129,
            column: 31
          },
          end: {
            line: 136,
            column: 5
          }
        },
        line: 129
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 137,
            column: 4
          },
          end: {
            line: 137,
            column: 5
          }
        },
        loc: {
          start: {
            line: 137,
            column: 73
          },
          end: {
            line: 149,
            column: 5
          }
        },
        line: 137
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 150,
            column: 4
          },
          end: {
            line: 150,
            column: 5
          }
        },
        loc: {
          start: {
            line: 150,
            column: 70
          },
          end: {
            line: 160,
            column: 5
          }
        },
        line: 150
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 161,
            column: 4
          },
          end: {
            line: 161,
            column: 5
          }
        },
        loc: {
          start: {
            line: 161,
            column: 46
          },
          end: {
            line: 176,
            column: 5
          }
        },
        line: 161
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 177,
            column: 4
          },
          end: {
            line: 177,
            column: 5
          }
        },
        loc: {
          start: {
            line: 177,
            column: 30
          },
          end: {
            line: 213,
            column: 5
          }
        },
        line: 177
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 193,
            column: 31
          },
          end: {
            line: 193,
            column: 32
          }
        },
        loc: {
          start: {
            line: 193,
            column: 40
          },
          end: {
            line: 211,
            column: 9
          }
        },
        line: 193
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 201,
            column: 45
          },
          end: {
            line: 201,
            column: 46
          }
        },
        loc: {
          start: {
            line: 201,
            column: 54
          },
          end: {
            line: 201,
            column: 78
          }
        },
        line: 201
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 214,
            column: 4
          },
          end: {
            line: 214,
            column: 5
          }
        },
        loc: {
          start: {
            line: 214,
            column: 31
          },
          end: {
            line: 228,
            column: 5
          }
        },
        line: 214
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 229,
            column: 4
          },
          end: {
            line: 229,
            column: 5
          }
        },
        loc: {
          start: {
            line: 229,
            column: 25
          },
          end: {
            line: 236,
            column: 5
          }
        },
        line: 229
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 247,
            column: 4
          },
          end: {
            line: 247,
            column: 5
          }
        },
        loc: {
          start: {
            line: 247,
            column: 33
          },
          end: {
            line: 249,
            column: 5
          }
        },
        line: 247
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 250,
            column: 4
          },
          end: {
            line: 250,
            column: 5
          }
        },
        loc: {
          start: {
            line: 250,
            column: 31
          },
          end: {
            line: 268,
            column: 5
          }
        },
        line: 250
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 269,
            column: 4
          },
          end: {
            line: 269,
            column: 5
          }
        },
        loc: {
          start: {
            line: 269,
            column: 41
          },
          end: {
            line: 287,
            column: 5
          }
        },
        line: 269
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 1,
            column: 17
          },
          end: {
            line: 6,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1,
            column: 18
          },
          end: {
            line: 1,
            column: 22
          }
        }, {
          start: {
            line: 1,
            column: 26
          },
          end: {
            line: 1,
            column: 41
          }
        }, {
          start: {
            line: 1,
            column: 46
          },
          end: {
            line: 6,
            column: 1
          }
        }],
        line: 1
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 34
          },
          end: {
            line: 2,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 42
          },
          end: {
            line: 2,
            column: 48
          }
        }, {
          start: {
            line: 2,
            column: 51
          },
          end: {
            line: 2,
            column: 125
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 2,
            column: 51
          },
          end: {
            line: 2,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 67
          },
          end: {
            line: 2,
            column: 118
          }
        }, {
          start: {
            line: 2,
            column: 121
          },
          end: {
            line: 2,
            column: 125
          }
        }],
        line: 2
      },
      "3": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 4,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 4,
            column: 150
          }
        }, {
          start: {
            line: 4,
            column: 9
          },
          end: {
            line: 4,
            column: 150
          }
        }],
        line: 3
      },
      "4": {
        loc: {
          start: {
            line: 3,
            column: 8
          },
          end: {
            line: 3,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 8
          },
          end: {
            line: 3,
            column: 35
          }
        }, {
          start: {
            line: 3,
            column: 39
          },
          end: {
            line: 3,
            column: 77
          }
        }],
        line: 3
      },
      "5": {
        loc: {
          start: {
            line: 4,
            column: 58
          },
          end: {
            line: 4,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 58
          },
          end: {
            line: 4,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 4
      },
      "6": {
        loc: {
          start: {
            line: 4,
            column: 85
          },
          end: {
            line: 4,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 86
          },
          end: {
            line: 4,
            column: 143
          }
        }, {
          start: {
            line: 4,
            column: 148
          },
          end: {
            line: 4,
            column: 149
          }
        }],
        line: 4
      },
      "7": {
        loc: {
          start: {
            line: 4,
            column: 86
          },
          end: {
            line: 4,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 4,
            column: 94
          },
          end: {
            line: 4,
            column: 98
          }
        }, {
          start: {
            line: 4,
            column: 101
          },
          end: {
            line: 4,
            column: 143
          }
        }],
        line: 4
      },
      "8": {
        loc: {
          start: {
            line: 4,
            column: 101
          },
          end: {
            line: 4,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 4,
            column: 109
          },
          end: {
            line: 4,
            column: 126
          }
        }, {
          start: {
            line: 4,
            column: 129
          },
          end: {
            line: 4,
            column: 143
          }
        }],
        line: 4
      },
      "9": {
        loc: {
          start: {
            line: 5,
            column: 11
          },
          end: {
            line: 5,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 11
          },
          end: {
            line: 5,
            column: 16
          }
        }, {
          start: {
            line: 5,
            column: 20
          },
          end: {
            line: 5,
            column: 21
          }
        }, {
          start: {
            line: 5,
            column: 25
          },
          end: {
            line: 5,
            column: 62
          }
        }],
        line: 5
      },
      "10": {
        loc: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 9,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 7,
            column: 18
          },
          end: {
            line: 7,
            column: 22
          }
        }, {
          start: {
            line: 7,
            column: 26
          },
          end: {
            line: 7,
            column: 41
          }
        }, {
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 9,
            column: 1
          }
        }],
        line: 7
      },
      "11": {
        loc: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 109
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 109
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 8
      },
      "12": {
        loc: {
          start: {
            line: 8,
            column: 8
          },
          end: {
            line: 8,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 8
          },
          end: {
            line: 8,
            column: 35
          }
        }, {
          start: {
            line: 8,
            column: 39
          },
          end: {
            line: 8,
            column: 77
          }
        }],
        line: 8
      },
      "13": {
        loc: {
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 24,
            column: 9
          }
        }, {
          start: {
            line: 22,
            column: 13
          },
          end: {
            line: 24,
            column: 9
          }
        }],
        line: 19
      },
      "14": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 35,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 35,
            column: 9
          }
        }, {
          start: {
            line: 33,
            column: 13
          },
          end: {
            line: 35,
            column: 9
          }
        }],
        line: 30
      },
      "15": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        }, {
          start: {
            line: 44,
            column: 13
          },
          end: {
            line: 46,
            column: 9
          }
        }],
        line: 41
      },
      "16": {
        loc: {
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "17": {
        loc: {
          start: {
            line: 70,
            column: 31
          },
          end: {
            line: 70,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 31
          },
          end: {
            line: 70,
            column: 51
          }
        }, {
          start: {
            line: 70,
            column: 55
          },
          end: {
            line: 70,
            column: 91
          }
        }],
        line: 70
      },
      "18": {
        loc: {
          start: {
            line: 71,
            column: 23
          },
          end: {
            line: 71,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 23
          },
          end: {
            line: 71,
            column: 31
          }
        }, {
          start: {
            line: 71,
            column: 35
          },
          end: {
            line: 71,
            column: 46
          }
        }],
        line: 71
      },
      "19": {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "20": {
        loc: {
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 74,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 74,
            column: 27
          }
        }, {
          start: {
            line: 74,
            column: 31
          },
          end: {
            line: 74,
            column: 48
          }
        }],
        line: 74
      },
      "21": {
        loc: {
          start: {
            line: 88,
            column: 32
          },
          end: {
            line: 88,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 32
          },
          end: {
            line: 88,
            column: 46
          }
        }, {
          start: {
            line: 88,
            column: 50
          },
          end: {
            line: 88,
            column: 58
          }
        }],
        line: 88
      },
      "22": {
        loc: {
          start: {
            line: 98,
            column: 24
          },
          end: {
            line: 98,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 98,
            column: 56
          },
          end: {
            line: 98,
            column: 101
          }
        }, {
          start: {
            line: 98,
            column: 104
          },
          end: {
            line: 98,
            column: 106
          }
        }],
        line: 98
      },
      "23": {
        loc: {
          start: {
            line: 108,
            column: 32
          },
          end: {
            line: 108,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 108,
            column: 32
          },
          end: {
            line: 108,
            column: 46
          }
        }, {
          start: {
            line: 108,
            column: 50
          },
          end: {
            line: 108,
            column: 58
          }
        }],
        line: 108
      },
      "24": {
        loc: {
          start: {
            line: 124,
            column: 26
          },
          end: {
            line: 124,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 26
          },
          end: {
            line: 124,
            column: 48
          }
        }, {
          start: {
            line: 124,
            column: 52
          },
          end: {
            line: 124,
            column: 60
          }
        }],
        line: 124
      },
      "25": {
        loc: {
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 141,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 141,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "26": {
        loc: {
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 144,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 144,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "27": {
        loc: {
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 154,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 154,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "28": {
        loc: {
          start: {
            line: 155,
            column: 8
          },
          end: {
            line: 157,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 8
          },
          end: {
            line: 157,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 155
      },
      "29": {
        loc: {
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 166,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 166,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 164
      },
      "30": {
        loc: {
          start: {
            line: 164,
            column: 12
          },
          end: {
            line: 164,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 164,
            column: 12
          },
          end: {
            line: 164,
            column: 26
          }
        }, {
          start: {
            line: 164,
            column: 30
          },
          end: {
            line: 164,
            column: 68
          }
        }],
        line: 164
      },
      "31": {
        loc: {
          start: {
            line: 168,
            column: 8
          },
          end: {
            line: 170,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 8
          },
          end: {
            line: 170,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 168
      },
      "32": {
        loc: {
          start: {
            line: 168,
            column: 12
          },
          end: {
            line: 168,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 168,
            column: 12
          },
          end: {
            line: 168,
            column: 25
          }
        }, {
          start: {
            line: 168,
            column: 29
          },
          end: {
            line: 168,
            column: 66
          }
        }],
        line: 168
      },
      "33": {
        loc: {
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 174,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 174,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "34": {
        loc: {
          start: {
            line: 172,
            column: 12
          },
          end: {
            line: 172,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 172,
            column: 12
          },
          end: {
            line: 172,
            column: 40
          }
        }, {
          start: {
            line: 172,
            column: 44
          },
          end: {
            line: 172,
            column: 56
          }
        }],
        line: 172
      },
      "35": {
        loc: {
          start: {
            line: 178,
            column: 8
          },
          end: {
            line: 180,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 178,
            column: 8
          },
          end: {
            line: 180,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 178
      },
      "36": {
        loc: {
          start: {
            line: 178,
            column: 12
          },
          end: {
            line: 178,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 178,
            column: 12
          },
          end: {
            line: 178,
            column: 17
          }
        }, {
          start: {
            line: 178,
            column: 21
          },
          end: {
            line: 178,
            column: 45
          }
        }],
        line: 178
      },
      "37": {
        loc: {
          start: {
            line: 194,
            column: 12
          },
          end: {
            line: 196,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 12
          },
          end: {
            line: 196,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 194
      },
      "38": {
        loc: {
          start: {
            line: 197,
            column: 12
          },
          end: {
            line: 209,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 197,
            column: 12
          },
          end: {
            line: 209,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 197
      },
      "39": {
        loc: {
          start: {
            line: 197,
            column: 16
          },
          end: {
            line: 197,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 197,
            column: 16
          },
          end: {
            line: 197,
            column: 19
          }
        }, {
          start: {
            line: 197,
            column: 23
          },
          end: {
            line: 197,
            column: 46
          }
        }],
        line: 197
      },
      "40": {
        loc: {
          start: {
            line: 201,
            column: 20
          },
          end: {
            line: 206,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 201,
            column: 20
          },
          end: {
            line: 206,
            column: 21
          }
        }, {
          start: {
            line: 204,
            column: 25
          },
          end: {
            line: 206,
            column: 21
          }
        }],
        line: 201
      },
      "41": {
        loc: {
          start: {
            line: 215,
            column: 8
          },
          end: {
            line: 217,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 215,
            column: 8
          },
          end: {
            line: 217,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 215
      },
      "42": {
        loc: {
          start: {
            line: 215,
            column: 12
          },
          end: {
            line: 215,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 215,
            column: 12
          },
          end: {
            line: 215,
            column: 21
          }
        }, {
          start: {
            line: 215,
            column: 25
          },
          end: {
            line: 215,
            column: 53
          }
        }],
        line: 215
      },
      "43": {
        loc: {
          start: {
            line: 220,
            column: 8
          },
          end: {
            line: 226,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 220,
            column: 8
          },
          end: {
            line: 226,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 220
      },
      "44": {
        loc: {
          start: {
            line: 230,
            column: 16
          },
          end: {
            line: 235,
            column: 21
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 230,
            column: 16
          },
          end: {
            line: 230,
            column: 50
          }
        }, {
          start: {
            line: 231,
            column: 12
          },
          end: {
            line: 231,
            column: 40
          }
        }, {
          start: {
            line: 232,
            column: 12
          },
          end: {
            line: 232,
            column: 45
          }
        }, {
          start: {
            line: 233,
            column: 12
          },
          end: {
            line: 233,
            column: 41
          }
        }, {
          start: {
            line: 234,
            column: 12
          },
          end: {
            line: 234,
            column: 22
          }
        }, {
          start: {
            line: 235,
            column: 12
          },
          end: {
            line: 235,
            column: 21
          }
        }],
        line: 230
      },
      "45": {
        loc: {
          start: {
            line: 240,
            column: 37
          },
          end: {
            line: 240,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 240,
            column: 114
          },
          end: {
            line: 240,
            column: 116
          }
        }, {
          start: {
            line: 240,
            column: 119
          },
          end: {
            line: 240,
            column: 125
          }
        }],
        line: 240
      },
      "46": {
        loc: {
          start: {
            line: 240,
            column: 50
          },
          end: {
            line: 240,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 240,
            column: 50
          },
          end: {
            line: 240,
            column: 82
          }
        }, {
          start: {
            line: 240,
            column: 86
          },
          end: {
            line: 240,
            column: 95
          }
        }],
        line: 240
      },
      "47": {
        loc: {
          start: {
            line: 240,
            column: 127
          },
          end: {
            line: 240,
            column: 227
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 240,
            column: 216
          },
          end: {
            line: 240,
            column: 218
          }
        }, {
          start: {
            line: 240,
            column: 221
          },
          end: {
            line: 240,
            column: 227
          }
        }],
        line: 240
      },
      "48": {
        loc: {
          start: {
            line: 240,
            column: 140
          },
          end: {
            line: 240,
            column: 197
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 240,
            column: 140
          },
          end: {
            line: 240,
            column: 178
          }
        }, {
          start: {
            line: 240,
            column: 182
          },
          end: {
            line: 240,
            column: 197
          }
        }],
        line: 240
      },
      "49": {
        loc: {
          start: {
            line: 253,
            column: 8
          },
          end: {
            line: 255,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 253,
            column: 8
          },
          end: {
            line: 255,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 253
      },
      "50": {
        loc: {
          start: {
            line: 253,
            column: 12
          },
          end: {
            line: 253,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 253,
            column: 12
          },
          end: {
            line: 253,
            column: 17
          }
        }, {
          start: {
            line: 253,
            column: 21
          },
          end: {
            line: 253,
            column: 41
          }
        }],
        line: 253
      },
      "51": {
        loc: {
          start: {
            line: 258,
            column: 8
          },
          end: {
            line: 266,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 258,
            column: 8
          },
          end: {
            line: 266,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 258
      },
      "52": {
        loc: {
          start: {
            line: 258,
            column: 12
          },
          end: {
            line: 258,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 258,
            column: 12
          },
          end: {
            line: 258,
            column: 32
          }
        }, {
          start: {
            line: 258,
            column: 36
          },
          end: {
            line: 258,
            column: 80
          }
        }],
        line: 258
      },
      "53": {
        loc: {
          start: {
            line: 262,
            column: 12
          },
          end: {
            line: 265,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 262,
            column: 12
          },
          end: {
            line: 265,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 262
      },
      "54": {
        loc: {
          start: {
            line: 271,
            column: 8
          },
          end: {
            line: 273,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 271,
            column: 8
          },
          end: {
            line: 273,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 271
      },
      "55": {
        loc: {
          start: {
            line: 275,
            column: 8
          },
          end: {
            line: 277,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 275,
            column: 8
          },
          end: {
            line: 277,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 275
      },
      "56": {
        loc: {
          start: {
            line: 279,
            column: 8
          },
          end: {
            line: 281,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 279,
            column: 8
          },
          end: {
            line: 281,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 279
      },
      "57": {
        loc: {
          start: {
            line: 283,
            column: 8
          },
          end: {
            line: 285,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 283,
            column: 8
          },
          end: {
            line: 285,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 283
      },
      "58": {
        loc: {
          start: {
            line: 291,
            column: 37
          },
          end: {
            line: 291,
            column: 137
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 291,
            column: 126
          },
          end: {
            line: 291,
            column: 128
          }
        }, {
          start: {
            line: 291,
            column: 131
          },
          end: {
            line: 291,
            column: 137
          }
        }],
        line: 291
      },
      "59": {
        loc: {
          start: {
            line: 291,
            column: 50
          },
          end: {
            line: 291,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 291,
            column: 50
          },
          end: {
            line: 291,
            column: 88
          }
        }, {
          start: {
            line: 291,
            column: 92
          },
          end: {
            line: 291,
            column: 107
          }
        }],
        line: 291
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0, 0, 0, 0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\interceptors\\audit-log.interceptor.ts",
      mappings: ";;;;;;;;;;;AAAA,OAAO,EACL,UAAU,EAIV,MAAM,GACP,MAAM,gBAAgB,CAAC;AAExB,OAAO,EAAE,GAAG,EAAE,UAAU,EAAE,MAAM,gBAAgB,CAAC;AACjD,OAAO,EAAE,SAAS,EAAE,MAAM,cAAc,CAAC;AACzC,OAAO,EAAE,eAAe,EAAE,MAAM,+BAA+B,CAAC;AAEhE,wDAAwD;AACxD,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAC,OAOxB,EAAE,EAAE;IACH,OAAO,CAAC,MAAW,EAAE,WAAoB,EAAE,UAA+B,EAAE,EAAE;QAC5E,IAAI,UAAU,EAAE,CAAC;YACf,OAAO,CAAC,cAAc,CAAC,mBAAmB,EAAE,OAAO,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;QACzE,CAAC;aAAM,CAAC;YACN,OAAO,CAAC,cAAc,CAAC,mBAAmB,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;QAC/D,CAAC;IACH,CAAC,CAAC;AACJ,CAAC,CAAC;AAEF,iCAAiC;AACjC,MAAM,CAAC,MAAM,YAAY,GAAG,GAAG,EAAE;IAC/B,OAAO,CAAC,MAAW,EAAE,WAAoB,EAAE,UAA+B,EAAE,EAAE;QAC5E,IAAI,UAAU,EAAE,CAAC;YACf,OAAO,CAAC,cAAc,CAAC,gBAAgB,EAAE,IAAI,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;QACnE,CAAC;aAAM,CAAC;YACN,OAAO,CAAC,cAAc,CAAC,gBAAgB,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;QACzD,CAAC;IACH,CAAC,CAAC;AACJ,CAAC,CAAC;AAEF,mDAAmD;AACnD,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAAC,OAIjC,EAAE,EAAE;IACH,OAAO,CAAC,MAAW,EAAE,WAAoB,EAAE,UAA+B,EAAE,EAAE;QAC5E,IAAI,UAAU,EAAE,CAAC;YACf,OAAO,CAAC,cAAc,CAAC,qBAAqB,EAAE,OAAO,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;QAC3E,CAAC;aAAM,CAAC;YACN,OAAO,CAAC,cAAc,CAAC,qBAAqB,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;QACjE,CAAC;IACH,CAAC,CAAC;AACJ,CAAC,CAAC;AAGK,IAAM,mBAAmB,2BAAzB,MAAM,mBAAmB;IAIX;IACA;IAJF,MAAM,GAAG,IAAI,MAAM,CAAC,qBAAmB,CAAC,IAAI,CAAC,CAAC;IAE/D,YACmB,SAAoB,EACpB,eAAgC;QADhC,cAAS,GAAT,SAAS,CAAW;QACpB,oBAAe,GAAf,eAAe,CAAiB;IAChD,CAAC;IAEJ,SAAS,CAAC,OAAyB,EAAE,IAAiB;QACpD,MAAM,OAAO,GAAG,OAAO,CAAC,YAAY,EAAE,CAAC,UAAU,EAAE,CAAC;QACpD,MAAM,OAAO,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC;QACrC,MAAM,UAAU,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;QACtC,MAAM,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC;QAChC,MAAM,cAAc,GAAG,UAAU,CAAC,IAAI,CAAC;QAEvC,oCAAoC;QACpC,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,iBAAiB,CACnD,gBAAgB,EAChB,CAAC,OAAO,EAAE,UAAU,CAAC,CACtB,CAAC;QAEF,IAAI,YAAY,EAAE,CAAC;YACjB,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC;QACvB,CAAC;QAED,6CAA6C;QAC7C,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;QAC1B,MAAM,cAAc,GAAG,IAAI,EAAE,cAAc,IAAI,OAAO,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;QACpF,MAAM,MAAM,GAAG,IAAI,EAAE,EAAE,IAAI,WAAW,CAAC;QAEvC,uEAAuE;QACvE,MAAM,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,iBAAiB,CACvD,qBAAqB,EACrB,CAAC,OAAO,EAAE,UAAU,CAAC,CACtB,CAAC;QAEF,IAAI,CAAC,cAAc,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACzC,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC;QACvB,CAAC;QAED,4BAA4B;QAC5B,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,iBAAiB,CACnD,mBAAmB,EACnB,CAAC,OAAO,EAAE,UAAU,CAAC,CACtB,CAAC;QAEF,4BAA4B;QAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,UAAU,EAAE,YAAY,EAAE,gBAAgB,CAAC,CAAC;QACzF,MAAM,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,cAAc,EAAE,YAAY,EAAE,gBAAgB,CAAC,CAAC;QAExF,+BAA+B;QAC/B,MAAM,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;QACnE,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAE7B,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CACvB,GAAG,CAAC,CAAC,QAAQ,EAAE,EAAE;YACf,iBAAiB;YACjB,IAAI,CAAC,cAAc,CAAC;gBAClB,cAAc,EAAE,cAAc,IAAI,QAAQ;gBAC1C,MAAM;gBACN,MAAM;gBACN,QAAQ;gBACR,OAAO,EAAE,IAAI;gBACb,OAAO,EAAE;oBACP,MAAM,EAAE,OAAO,CAAC,MAAM;oBACtB,GAAG,EAAE,OAAO,CAAC,GAAG;oBAChB,QAAQ,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS;oBAChC,GAAG,WAAW;oBACd,GAAG,CAAC,YAAY,EAAE,eAAe,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;iBACxF;gBACD,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;gBACpC,SAAS,EAAE,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC;gBACxC,QAAQ,EAAE,YAAY,EAAE,QAAQ;gBAChC,QAAQ,EAAE,YAAY,EAAE,QAAQ;aACjC,CAAC,CAAC;QACL,CAAC,CAAC,EACF,UAAU,CAAC,CAAC,KAAK,EAAE,EAAE;YACnB,cAAc;YACd,IAAI,CAAC,cAAc,CAAC;gBAClB,cAAc,EAAE,cAAc,IAAI,QAAQ;gBAC1C,MAAM;gBACN,MAAM;gBACN,QAAQ;gBACR,OAAO,EAAE,KAAK;gBACd,YAAY,EAAE,KAAK,CAAC,OAAO;gBAC3B,OAAO,EAAE;oBACP,MAAM,EAAE,OAAO,CAAC,MAAM;oBACtB,GAAG,EAAE,OAAO,CAAC,GAAG;oBAChB,QAAQ,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS;oBAChC,UAAU,EAAE,KAAK,CAAC,KAAK;oBACvB,GAAG,WAAW;iBACf;gBACD,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;gBACpC,SAAS,EAAE,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC;gBACxC,QAAQ,EAAE,MAAM,EAAE,sCAAsC;gBACxD,QAAQ,EAAE,YAAY,EAAE,QAAQ,IAAI,QAAQ;aAC7C,CAAC,CAAC;YAEH,MAAM,KAAK,CAAC;QACd,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAEO,KAAK,CAAC,cAAc,CAAC,IAAS;QACpC,IAAI,CAAC;YACH,MAAM,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAClD,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,MAAM,CAAC,KAAK,CACf,+BAA+B,KAAK,CAAC,OAAO,EAAE,EAC9C,KAAK,CAAC,KAAK,CACZ,CAAC;QACJ,CAAC;IACH,CAAC;IAEO,eAAe,CACrB,OAAY,EACZ,UAAkB,EAClB,YAAkB,EAClB,gBAAsB;QAEtB,oCAAoC;QACpC,IAAI,gBAAgB,EAAE,MAAM,EAAE,CAAC;YAC7B,OAAO,gBAAgB,CAAC,MAAM,CAAC;QACjC,CAAC;QAED,IAAI,YAAY,EAAE,MAAM,EAAE,CAAC;YACzB,OAAO,YAAY,CAAC,MAAM,CAAC;QAC7B,CAAC;QAED,sCAAsC;QACtC,MAAM,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;QAChD,MAAM,mBAAmB,GAAG,UAAU,CAAC,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC;QAEhF,OAAO,GAAG,UAAU,IAAI,mBAAmB,EAAE,CAAC;IAChD,CAAC;IAEO,iBAAiB,CACvB,cAAsB,EACtB,YAAkB,EAClB,gBAAsB;QAEtB,uCAAuC;QACvC,IAAI,gBAAgB,EAAE,QAAQ,EAAE,CAAC;YAC/B,OAAO,gBAAgB,CAAC,QAAQ,CAAC;QACnC,CAAC;QAED,IAAI,YAAY,EAAE,QAAQ,EAAE,CAAC;YAC3B,OAAO,YAAY,CAAC,QAAQ,CAAC;QAC/B,CAAC;QAED,wCAAwC;QACxC,OAAO,cAAc,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;IAClD,CAAC;IAEO,kBAAkB,CAAC,OAAY,EAAE,YAAkB;QACzD,MAAM,IAAI,GAAwB,EAAE,CAAC;QAErC,4BAA4B;QAC5B,IAAI,OAAO,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC7D,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;QAC/B,CAAC;QAED,2BAA2B;QAC3B,IAAI,OAAO,CAAC,KAAK,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC3D,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAC7B,CAAC;QAED,6CAA6C;QAC7C,IAAI,YAAY,EAAE,cAAc,IAAI,OAAO,CAAC,IAAI,EAAE,CAAC;YACjD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC5D,CAAC;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAEO,mBAAmB,CAAC,IAAS;QACnC,IAAI,CAAC,IAAI,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE,CAAC;YACtC,OAAO,IAAI,CAAC;QACd,CAAC;QAED,MAAM,SAAS,GAAG,EAAE,GAAG,IAAI,EAAE,CAAC;QAE9B,2BAA2B;QAC3B,MAAM,eAAe,GAAG;YACtB,UAAU;YACV,OAAO;YACP,QAAQ;YACR,KAAK;YACL,eAAe;YACf,YAAY;YACZ,KAAK;YACL,KAAK;SACN,CAAC;QAEF,MAAM,cAAc,GAAG,CAAC,GAAQ,EAAO,EAAE;YACvC,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;gBACvB,OAAO,GAAG,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;YACjC,CAAC;YAED,IAAI,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE,CAAC;gBACnC,MAAM,MAAM,GAAQ,EAAE,CAAC;gBAEvB,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;oBAC/C,MAAM,QAAQ,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC;oBAEnC,IAAI,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;wBAC5D,MAAM,CAAC,GAAG,CAAC,GAAG,YAAY,CAAC;oBAC7B,CAAC;yBAAM,CAAC;wBACN,MAAM,CAAC,GAAG,CAAC,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC;oBACtC,CAAC;gBACH,CAAC;gBAED,OAAO,MAAM,CAAC;YAChB,CAAC;YAED,OAAO,GAAG,CAAC;QACb,CAAC,CAAC;QAEF,OAAO,cAAc,CAAC,SAAS,CAAC,CAAC;IACnC,CAAC;IAEO,gBAAgB,CAAC,QAAa;QACpC,IAAI,CAAC,QAAQ,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE,CAAC;YAC9C,OAAO,QAAQ,CAAC;QAClB,CAAC;QAED,qCAAqC;QACrC,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QAC7C,IAAI,WAAW,CAAC,MAAM,GAAG,IAAI,EAAE,CAAC;YAC9B,OAAO;gBACL,UAAU,EAAE,IAAI;gBAChB,KAAK,EAAE,WAAW,CAAC,MAAM;gBACzB,QAAQ,EAAE,WAAW,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,KAAK;aAChD,CAAC;QACJ,CAAC;QAED,OAAO,QAAQ,CAAC;IAClB,CAAC;IAEO,WAAW,CAAC,OAAY;QAC9B,OAAO,CACL,OAAO,CAAC,OAAO,CAAC,iBAAiB,CAAC;YAClC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC;YAC5B,OAAO,CAAC,UAAU,EAAE,aAAa;YACjC,OAAO,CAAC,MAAM,EAAE,aAAa;YAC7B,OAAO,CAAC,EAAE;YACV,SAAS,CACV,CAAC;IACJ,CAAC;CACF,CAAA;AAzPY,mBAAmB;IAD/B,UAAU,EAAE;yDAKmB,SAAS,oBAAT,SAAS,oDACH,eAAe,oBAAf,eAAe;GALxC,mBAAmB,CAyP/B;;AAED,iDAAiD;AAE1C,IAAM,wBAAwB,gCAA9B,MAAM,wBAAwB;IAIhB;IAHF,MAAM,GAAG,IAAI,MAAM,CAAC,0BAAwB,CAAC,IAAI,CAAC,CAAC;IAEpE,YACmB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;IAChD,CAAC;IAEJ,KAAK,CAAC,WAAW,CAAC,OAAyB;QACzC,MAAM,OAAO,GAAG,OAAO,CAAC,YAAY,EAAE,CAAC,UAAU,EAAE,CAAC;QACpD,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;QAE1B,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;YAClC,OAAO,IAAI,CAAC,CAAC,gDAAgD;QAC/D,CAAC;QAED,sEAAsE;QACtE,MAAM,oBAAoB,GAAG,IAAI,CAAC,2BAA2B,CAAC,OAAO,CAAC,CAAC;QAEvE,IAAI,oBAAoB,IAAI,oBAAoB,KAAK,IAAI,CAAC,cAAc,EAAE,CAAC;YACzE,MAAM,OAAO,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC;YACrC,MAAM,UAAU,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;YAEtC,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,yBAAyB,CAClE,IAAI,CAAC,EAAE,EACP,IAAI,CAAC,cAAc,EACnB,oBAAoB,EACpB,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,EACzC,OAAO,CAAC,IAAI,CACb,CAAC;YAEF,IAAI,CAAC,OAAO,EAAE,CAAC;gBACb,IAAI,CAAC,MAAM,CAAC,IAAI,CACd,qCAAqC,IAAI,CAAC,EAAE,aAAa,IAAI,CAAC,cAAc,wBAAwB,oBAAoB,EAAE,CAC3H,CAAC;gBACF,OAAO,KAAK,CAAC;YACf,CAAC;QACH,CAAC;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAEO,2BAA2B,CAAC,OAAY;QAC9C,8BAA8B;QAC9B,IAAI,OAAO,CAAC,MAAM,EAAE,cAAc,EAAE,CAAC;YACnC,OAAO,OAAO,CAAC,MAAM,CAAC,cAAc,CAAC;QACvC,CAAC;QAED,6BAA6B;QAC7B,IAAI,OAAO,CAAC,KAAK,EAAE,cAAc,EAAE,CAAC;YAClC,OAAO,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC;QACtC,CAAC;QAED,+BAA+B;QAC/B,IAAI,OAAO,CAAC,IAAI,EAAE,cAAc,EAAE,CAAC;YACjC,OAAO,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC;QACrC,CAAC;QAED,oBAAoB;QACpB,IAAI,OAAO,CAAC,OAAO,CAAC,0BAA0B,CAAC,EAAE,CAAC;YAChD,OAAO,OAAO,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC;QACrD,CAAC;QAED,OAAO,IAAI,CAAC;IACd,CAAC;CACF,CAAA;AAhEY,wBAAwB;IADpC,UAAU,EAAE;yDAKyB,eAAe,oBAAf,eAAe;GAJxC,wBAAwB,CAgEpC",
      names: [],
      sources: ["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\interceptors\\audit-log.interceptor.ts"],
      sourcesContent: ["import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n  Logger,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap, catchError } from 'rxjs/operators';\nimport { Reflector } from '@nestjs/core';\nimport { AuditLogService } from '../services/audit-log.service';\n\n// Decorator para marcar m\xE9todos que devem ser auditados\nexport const AuditLog = (options: {\n  action?: string;\n  resource?: string;\n  includeRequest?: boolean;\n  includeResponse?: boolean;\n  severity?: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\n  category?: 'AUTH' | 'DATA' | 'ADMIN' | 'SECURITY' | 'SYSTEM';\n}) => {\n  return (target: any, propertyKey?: string, descriptor?: PropertyDescriptor) => {\n    if (descriptor) {\n      Reflect.defineMetadata('audit-log-options', options, descriptor.value);\n    } else {\n      Reflect.defineMetadata('audit-log-options', options, target);\n    }\n  };\n};\n\n// Decorator para pular auditoria\nexport const SkipAuditLog = () => {\n  return (target: any, propertyKey?: string, descriptor?: PropertyDescriptor) => {\n    if (descriptor) {\n      Reflect.defineMetadata('skip-audit-log', true, descriptor.value);\n    } else {\n      Reflect.defineMetadata('skip-audit-log', true, target);\n    }\n  };\n};\n\n// Decorator para auditoria sens\xEDvel (sempre logar)\nexport const SensitiveAuditLog = (options: {\n  action: string;\n  resource: string;\n  reason?: string;\n}) => {\n  return (target: any, propertyKey?: string, descriptor?: PropertyDescriptor) => {\n    if (descriptor) {\n      Reflect.defineMetadata('sensitive-audit-log', options, descriptor.value);\n    } else {\n      Reflect.defineMetadata('sensitive-audit-log', options, target);\n    }\n  };\n};\n\n@Injectable()\nexport class AuditLogInterceptor implements NestInterceptor {\n  private readonly logger = new Logger(AuditLogInterceptor.name);\n\n  constructor(\n    private readonly reflector: Reflector,\n    private readonly auditLogService: AuditLogService,\n  ) {}\n\n  intercept(context: ExecutionContext, next: CallHandler): Observable<any> {\n    const request = context.switchToHttp().getRequest();\n    const handler = context.getHandler();\n    const controller = context.getClass();\n    const methodName = handler.name;\n    const controllerName = controller.name;\n\n    // Verificar se deve pular auditoria\n    const skipAuditLog = this.reflector.getAllAndOverride<boolean>(\n      'skip-audit-log',\n      [handler, controller],\n    );\n\n    if (skipAuditLog) {\n      return next.handle();\n    }\n\n    // Obter informa\xE7\xF5es do usu\xE1rio e organiza\xE7\xE3o\n    const user = request.user;\n    const organizationId = user?.organizationId || request.headers['x-organization-id'];\n    const userId = user?.id || 'ANONYMOUS';\n\n    // Se n\xE3o h\xE1 organiza\xE7\xE3o, pular auditoria (exceto para a\xE7\xF5es sens\xEDveis)\n    const sensitiveOptions = this.reflector.getAllAndOverride<any>(\n      'sensitive-audit-log',\n      [handler, controller],\n    );\n\n    if (!organizationId && !sensitiveOptions) {\n      return next.handle();\n    }\n\n    // Obter op\xE7\xF5es de auditoria\n    const auditOptions = this.reflector.getAllAndOverride<any>(\n      'audit-log-options',\n      [handler, controller],\n    );\n\n    // Determinar a\xE7\xE3o e recurso\n    const action = this.determineAction(request, methodName, auditOptions, sensitiveOptions);\n    const resource = this.determineResource(controllerName, auditOptions, sensitiveOptions);\n\n    // Capturar dados da requisi\xE7\xE3o\n    const requestData = this.captureRequestData(request, auditOptions);\n    const startTime = Date.now();\n\n    return next.handle().pipe(\n      tap((response) => {\n        // Log de sucesso\n        this.createAuditLog({\n          organizationId: organizationId || 'SYSTEM',\n          userId,\n          action,\n          resource,\n          success: true,\n          details: {\n            method: request.method,\n            url: request.url,\n            duration: Date.now() - startTime,\n            ...requestData,\n            ...(auditOptions?.includeResponse ? { response: this.sanitizeResponse(response) } : {}),\n          },\n          ipAddress: this.getClientIp(request),\n          userAgent: request.headers['user-agent'],\n          severity: auditOptions?.severity,\n          category: auditOptions?.category,\n        });\n      }),\n      catchError((error) => {\n        // Log de erro\n        this.createAuditLog({\n          organizationId: organizationId || 'SYSTEM',\n          userId,\n          action,\n          resource,\n          success: false,\n          errorMessage: error.message,\n          details: {\n            method: request.method,\n            url: request.url,\n            duration: Date.now() - startTime,\n            errorStack: error.stack,\n            ...requestData,\n          },\n          ipAddress: this.getClientIp(request),\n          userAgent: request.headers['user-agent'],\n          severity: 'HIGH', // Erros s\xE3o sempre de alta severidade\n          category: auditOptions?.category || 'SYSTEM',\n        });\n\n        throw error;\n      }),\n    );\n  }\n\n  private async createAuditLog(data: any): Promise<void> {\n    try {\n      await this.auditLogService.createAuditLog(data);\n    } catch (error) {\n      this.logger.error(\n        `Failed to create audit log: ${error.message}`,\n        error.stack,\n      );\n    }\n  }\n\n  private determineAction(\n    request: any,\n    methodName: string,\n    auditOptions?: any,\n    sensitiveOptions?: any,\n  ): string {\n    // Usar a\xE7\xE3o definida explicitamente\n    if (sensitiveOptions?.action) {\n      return sensitiveOptions.action;\n    }\n    \n    if (auditOptions?.action) {\n      return auditOptions.action;\n    }\n\n    // Mapear m\xE9todo HTTP + nome do m\xE9todo\n    const httpMethod = request.method.toUpperCase();\n    const formattedMethodName = methodName.replace(/([A-Z])/g, '_$1').toUpperCase();\n    \n    return `${httpMethod}_${formattedMethodName}`;\n  }\n\n  private determineResource(\n    controllerName: string,\n    auditOptions?: any,\n    sensitiveOptions?: any,\n  ): string {\n    // Usar recurso definido explicitamente\n    if (sensitiveOptions?.resource) {\n      return sensitiveOptions.resource;\n    }\n    \n    if (auditOptions?.resource) {\n      return auditOptions.resource;\n    }\n\n    // Extrair nome do recurso do controller\n    return controllerName.replace('Controller', '');\n  }\n\n  private captureRequestData(request: any, auditOptions?: any): Record<string, any> {\n    const data: Record<string, any> = {};\n\n    // Incluir par\xE2metros da URL\n    if (request.params && Object.keys(request.params).length > 0) {\n      data.params = request.params;\n    }\n\n    // Incluir query parameters\n    if (request.query && Object.keys(request.query).length > 0) {\n      data.query = request.query;\n    }\n\n    // Incluir body da requisi\xE7\xE3o (se solicitado)\n    if (auditOptions?.includeRequest && request.body) {\n      data.requestBody = this.sanitizeRequestBody(request.body);\n    }\n\n    return data;\n  }\n\n  private sanitizeRequestBody(body: any): any {\n    if (!body || typeof body !== 'object') {\n      return body;\n    }\n\n    const sanitized = { ...body };\n    \n    // Remover campos sens\xEDveis\n    const sensitiveFields = [\n      'password',\n      'token',\n      'secret',\n      'key',\n      'authorization',\n      'creditCard',\n      'ssn',\n      'cpf',\n    ];\n\n    const sanitizeObject = (obj: any): any => {\n      if (Array.isArray(obj)) {\n        return obj.map(sanitizeObject);\n      }\n      \n      if (obj && typeof obj === 'object') {\n        const result: any = {};\n        \n        for (const [key, value] of Object.entries(obj)) {\n          const lowerKey = key.toLowerCase();\n          \n          if (sensitiveFields.some(field => lowerKey.includes(field))) {\n            result[key] = '[REDACTED]';\n          } else {\n            result[key] = sanitizeObject(value);\n          }\n        }\n        \n        return result;\n      }\n      \n      return obj;\n    };\n\n    return sanitizeObject(sanitized);\n  }\n\n  private sanitizeResponse(response: any): any {\n    if (!response || typeof response !== 'object') {\n      return response;\n    }\n\n    // Limitar tamanho da resposta no log\n    const responseStr = JSON.stringify(response);\n    if (responseStr.length > 1000) {\n      return {\n        _truncated: true,\n        _size: responseStr.length,\n        _preview: responseStr.substring(0, 500) + '...',\n      };\n    }\n\n    return response;\n  }\n\n  private getClientIp(request: any): string {\n    return (\n      request.headers['x-forwarded-for'] ||\n      request.headers['x-real-ip'] ||\n      request.connection?.remoteAddress ||\n      request.socket?.remoteAddress ||\n      request.ip ||\n      'unknown'\n    );\n  }\n}\n\n// Guard para valida\xE7\xE3o de seguran\xE7a cross-tenant\n@Injectable()\nexport class CrossTenantSecurityGuard {\n  private readonly logger = new Logger(CrossTenantSecurityGuard.name);\n\n  constructor(\n    private readonly auditLogService: AuditLogService,\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise<boolean> {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n    \n    if (!user || !user.organizationId) {\n      return true; // Deixar outros guards lidarem com autentica\xE7\xE3o\n    }\n\n    // Verificar se h\xE1 tentativa de acesso a recursos de outra organiza\xE7\xE3o\n    const targetOrganizationId = this.extractTargetOrganizationId(request);\n    \n    if (targetOrganizationId && targetOrganizationId !== user.organizationId) {\n      const handler = context.getHandler();\n      const controller = context.getClass();\n      \n      const isValid = await this.auditLogService.validateCrossTenantAccess(\n        user.id,\n        user.organizationId,\n        targetOrganizationId,\n        controller.name.replace('Controller', ''),\n        handler.name,\n      );\n\n      if (!isValid) {\n        this.logger.warn(\n          `Cross-tenant access blocked: User ${user.id} from org ${user.organizationId} tried to access org ${targetOrganizationId}`,\n        );\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  private extractTargetOrganizationId(request: any): string | null {\n    // Verificar par\xE2metros da URL\n    if (request.params?.organizationId) {\n      return request.params.organizationId;\n    }\n\n    // Verificar query parameters\n    if (request.query?.organizationId) {\n      return request.query.organizationId;\n    }\n\n    // Verificar body da requisi\xE7\xE3o\n    if (request.body?.organizationId) {\n      return request.body.organizationId;\n    }\n\n    // Verificar headers\n    if (request.headers['x-target-organization-id']) {\n      return request.headers['x-target-organization-id'];\n    }\n\n    return null;\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d4faebac26f8ad33f4d7913aa425b60d92b7d31b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_pmjx20wre = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_pmjx20wre();
var __decorate =
/* istanbul ignore next */
(cov_pmjx20wre().s[0]++,
/* istanbul ignore next */
(cov_pmjx20wre().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_pmjx20wre().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_pmjx20wre().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_pmjx20wre().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_pmjx20wre().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_pmjx20wre().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_pmjx20wre().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_pmjx20wre().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_pmjx20wre().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_pmjx20wre().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_pmjx20wre().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_pmjx20wre().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_pmjx20wre().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_pmjx20wre().b[3][0]++;
    cov_pmjx20wre().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_pmjx20wre().b[3][1]++;
    cov_pmjx20wre().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_pmjx20wre().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_pmjx20wre().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_pmjx20wre().b[5][0]++;
        cov_pmjx20wre().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_pmjx20wre().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_pmjx20wre().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_pmjx20wre().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_pmjx20wre().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_pmjx20wre().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_pmjx20wre().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_pmjx20wre().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_pmjx20wre().s[9]++;
  return /* istanbul ignore next */(cov_pmjx20wre().b[9][0]++, c > 3) &&
  /* istanbul ignore next */
  (cov_pmjx20wre().b[9][1]++, r) &&
  /* istanbul ignore next */
  (cov_pmjx20wre().b[9][2]++, Object.defineProperty(target, key, r)), r;
}));
var __metadata =
/* istanbul ignore next */
(cov_pmjx20wre().s[10]++,
/* istanbul ignore next */
(cov_pmjx20wre().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_pmjx20wre().b[10][1]++, this.__metadata) ||
/* istanbul ignore next */
(cov_pmjx20wre().b[10][2]++, function (k, v) {
  /* istanbul ignore next */
  cov_pmjx20wre().f[1]++;
  cov_pmjx20wre().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_pmjx20wre().b[12][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_pmjx20wre().b[12][1]++, typeof Reflect.metadata === "function")) {
    /* istanbul ignore next */
    cov_pmjx20wre().b[11][0]++;
    cov_pmjx20wre().s[12]++;
    return Reflect.metadata(k, v);
  } else
  /* istanbul ignore next */
  {
    cov_pmjx20wre().b[11][1]++;
  }
}));
var AuditLogInterceptor_1, CrossTenantSecurityGuard_1;
var _a, _b, _c;
import { Injectable, Logger } from '@nestjs/common';
import { tap, catchError } from 'rxjs/operators';
import { Reflector } from '@nestjs/core';
import { AuditLogService } from '../services/audit-log.service';
// Decorator para marcar métodos que devem ser auditados
/* istanbul ignore next */
cov_pmjx20wre().s[13]++;
export const AuditLog = options => {
  /* istanbul ignore next */
  cov_pmjx20wre().f[2]++;
  cov_pmjx20wre().s[14]++;
  return (target, propertyKey, descriptor) => {
    /* istanbul ignore next */
    cov_pmjx20wre().f[3]++;
    cov_pmjx20wre().s[15]++;
    if (descriptor) {
      /* istanbul ignore next */
      cov_pmjx20wre().b[13][0]++;
      cov_pmjx20wre().s[16]++;
      Reflect.defineMetadata('audit-log-options', options, descriptor.value);
    } else {
      /* istanbul ignore next */
      cov_pmjx20wre().b[13][1]++;
      cov_pmjx20wre().s[17]++;
      Reflect.defineMetadata('audit-log-options', options, target);
    }
  };
};
// Decorator para pular auditoria
/* istanbul ignore next */
cov_pmjx20wre().s[18]++;
export const SkipAuditLog = () => {
  /* istanbul ignore next */
  cov_pmjx20wre().f[4]++;
  cov_pmjx20wre().s[19]++;
  return (target, propertyKey, descriptor) => {
    /* istanbul ignore next */
    cov_pmjx20wre().f[5]++;
    cov_pmjx20wre().s[20]++;
    if (descriptor) {
      /* istanbul ignore next */
      cov_pmjx20wre().b[14][0]++;
      cov_pmjx20wre().s[21]++;
      Reflect.defineMetadata('skip-audit-log', true, descriptor.value);
    } else {
      /* istanbul ignore next */
      cov_pmjx20wre().b[14][1]++;
      cov_pmjx20wre().s[22]++;
      Reflect.defineMetadata('skip-audit-log', true, target);
    }
  };
};
// Decorator para auditoria sensível (sempre logar)
/* istanbul ignore next */
cov_pmjx20wre().s[23]++;
export const SensitiveAuditLog = options => {
  /* istanbul ignore next */
  cov_pmjx20wre().f[6]++;
  cov_pmjx20wre().s[24]++;
  return (target, propertyKey, descriptor) => {
    /* istanbul ignore next */
    cov_pmjx20wre().f[7]++;
    cov_pmjx20wre().s[25]++;
    if (descriptor) {
      /* istanbul ignore next */
      cov_pmjx20wre().b[15][0]++;
      cov_pmjx20wre().s[26]++;
      Reflect.defineMetadata('sensitive-audit-log', options, descriptor.value);
    } else {
      /* istanbul ignore next */
      cov_pmjx20wre().b[15][1]++;
      cov_pmjx20wre().s[27]++;
      Reflect.defineMetadata('sensitive-audit-log', options, target);
    }
  };
};
let AuditLogInterceptor =
/* istanbul ignore next */
(cov_pmjx20wre().s[28]++, AuditLogInterceptor_1 = class AuditLogInterceptor {
  reflector;
  auditLogService;
  logger =
  /* istanbul ignore next */
  (cov_pmjx20wre().s[29]++, new Logger(AuditLogInterceptor_1.name));
  constructor(reflector, auditLogService) {
    /* istanbul ignore next */
    cov_pmjx20wre().f[8]++;
    cov_pmjx20wre().s[30]++;
    this.reflector = reflector;
    /* istanbul ignore next */
    cov_pmjx20wre().s[31]++;
    this.auditLogService = auditLogService;
  }
  intercept(context, next) {
    /* istanbul ignore next */
    cov_pmjx20wre().f[9]++;
    const request =
    /* istanbul ignore next */
    (cov_pmjx20wre().s[32]++, context.switchToHttp().getRequest());
    const handler =
    /* istanbul ignore next */
    (cov_pmjx20wre().s[33]++, context.getHandler());
    const controller =
    /* istanbul ignore next */
    (cov_pmjx20wre().s[34]++, context.getClass());
    const methodName =
    /* istanbul ignore next */
    (cov_pmjx20wre().s[35]++, handler.name);
    const controllerName =
    /* istanbul ignore next */
    (cov_pmjx20wre().s[36]++, controller.name);
    // Verificar se deve pular auditoria
    const skipAuditLog =
    /* istanbul ignore next */
    (cov_pmjx20wre().s[37]++, this.reflector.getAllAndOverride('skip-audit-log', [handler, controller]));
    /* istanbul ignore next */
    cov_pmjx20wre().s[38]++;
    if (skipAuditLog) {
      /* istanbul ignore next */
      cov_pmjx20wre().b[16][0]++;
      cov_pmjx20wre().s[39]++;
      return next.handle();
    } else
    /* istanbul ignore next */
    {
      cov_pmjx20wre().b[16][1]++;
    }
    // Obter informações do usuário e organização
    const user =
    /* istanbul ignore next */
    (cov_pmjx20wre().s[40]++, request.user);
    const organizationId =
    /* istanbul ignore next */
    (cov_pmjx20wre().s[41]++,
    /* istanbul ignore next */
    (cov_pmjx20wre().b[17][0]++, user?.organizationId) ||
    /* istanbul ignore next */
    (cov_pmjx20wre().b[17][1]++, request.headers['x-organization-id']));
    const userId =
    /* istanbul ignore next */
    (cov_pmjx20wre().s[42]++,
    /* istanbul ignore next */
    (cov_pmjx20wre().b[18][0]++, user?.id) ||
    /* istanbul ignore next */
    (cov_pmjx20wre().b[18][1]++, 'ANONYMOUS'));
    // Se não há organização, pular auditoria (exceto para ações sensíveis)
    const sensitiveOptions =
    /* istanbul ignore next */
    (cov_pmjx20wre().s[43]++, this.reflector.getAllAndOverride('sensitive-audit-log', [handler, controller]));
    /* istanbul ignore next */
    cov_pmjx20wre().s[44]++;
    if (
    /* istanbul ignore next */
    (cov_pmjx20wre().b[20][0]++, !organizationId) &&
    /* istanbul ignore next */
    (cov_pmjx20wre().b[20][1]++, !sensitiveOptions)) {
      /* istanbul ignore next */
      cov_pmjx20wre().b[19][0]++;
      cov_pmjx20wre().s[45]++;
      return next.handle();
    } else
    /* istanbul ignore next */
    {
      cov_pmjx20wre().b[19][1]++;
    }
    // Obter opções de auditoria
    const auditOptions =
    /* istanbul ignore next */
    (cov_pmjx20wre().s[46]++, this.reflector.getAllAndOverride('audit-log-options', [handler, controller]));
    // Determinar ação e recurso
    const action =
    /* istanbul ignore next */
    (cov_pmjx20wre().s[47]++, this.determineAction(request, methodName, auditOptions, sensitiveOptions));
    const resource =
    /* istanbul ignore next */
    (cov_pmjx20wre().s[48]++, this.determineResource(controllerName, auditOptions, sensitiveOptions));
    // Capturar dados da requisição
    const requestData =
    /* istanbul ignore next */
    (cov_pmjx20wre().s[49]++, this.captureRequestData(request, auditOptions));
    const startTime =
    /* istanbul ignore next */
    (cov_pmjx20wre().s[50]++, Date.now());
    /* istanbul ignore next */
    cov_pmjx20wre().s[51]++;
    return next.handle().pipe(tap(response => {
      /* istanbul ignore next */
      cov_pmjx20wre().f[10]++;
      cov_pmjx20wre().s[52]++;
      // Log de sucesso
      this.createAuditLog({
        organizationId:
        /* istanbul ignore next */
        (cov_pmjx20wre().b[21][0]++, organizationId) ||
        /* istanbul ignore next */
        (cov_pmjx20wre().b[21][1]++, 'SYSTEM'),
        userId,
        action,
        resource,
        success: true,
        details: {
          method: request.method,
          url: request.url,
          duration: Date.now() - startTime,
          ...requestData,
          ...(auditOptions?.includeResponse ?
          /* istanbul ignore next */
          (cov_pmjx20wre().b[22][0]++, {
            response: this.sanitizeResponse(response)
          }) :
          /* istanbul ignore next */
          (cov_pmjx20wre().b[22][1]++, {}))
        },
        ipAddress: this.getClientIp(request),
        userAgent: request.headers['user-agent'],
        severity: auditOptions?.severity,
        category: auditOptions?.category
      });
    }), catchError(error => {
      /* istanbul ignore next */
      cov_pmjx20wre().f[11]++;
      cov_pmjx20wre().s[53]++;
      // Log de erro
      this.createAuditLog({
        organizationId:
        /* istanbul ignore next */
        (cov_pmjx20wre().b[23][0]++, organizationId) ||
        /* istanbul ignore next */
        (cov_pmjx20wre().b[23][1]++, 'SYSTEM'),
        userId,
        action,
        resource,
        success: false,
        errorMessage: error.message,
        details: {
          method: request.method,
          url: request.url,
          duration: Date.now() - startTime,
          errorStack: error.stack,
          ...requestData
        },
        ipAddress: this.getClientIp(request),
        userAgent: request.headers['user-agent'],
        severity: 'HIGH',
        // Erros são sempre de alta severidade
        category:
        /* istanbul ignore next */
        (cov_pmjx20wre().b[24][0]++, auditOptions?.category) ||
        /* istanbul ignore next */
        (cov_pmjx20wre().b[24][1]++, 'SYSTEM')
      });
      /* istanbul ignore next */
      cov_pmjx20wre().s[54]++;
      throw error;
    }));
  }
  async createAuditLog(data) {
    /* istanbul ignore next */
    cov_pmjx20wre().f[12]++;
    cov_pmjx20wre().s[55]++;
    try {
      /* istanbul ignore next */
      cov_pmjx20wre().s[56]++;
      await this.auditLogService.createAuditLog(data);
    } catch (error) {
      /* istanbul ignore next */
      cov_pmjx20wre().s[57]++;
      this.logger.error(`Failed to create audit log: ${error.message}`, error.stack);
    }
  }
  determineAction(request, methodName, auditOptions, sensitiveOptions) {
    /* istanbul ignore next */
    cov_pmjx20wre().f[13]++;
    cov_pmjx20wre().s[58]++;
    // Usar ação definida explicitamente
    if (sensitiveOptions?.action) {
      /* istanbul ignore next */
      cov_pmjx20wre().b[25][0]++;
      cov_pmjx20wre().s[59]++;
      return sensitiveOptions.action;
    } else
    /* istanbul ignore next */
    {
      cov_pmjx20wre().b[25][1]++;
    }
    cov_pmjx20wre().s[60]++;
    if (auditOptions?.action) {
      /* istanbul ignore next */
      cov_pmjx20wre().b[26][0]++;
      cov_pmjx20wre().s[61]++;
      return auditOptions.action;
    } else
    /* istanbul ignore next */
    {
      cov_pmjx20wre().b[26][1]++;
    }
    // Mapear método HTTP + nome do método
    const httpMethod =
    /* istanbul ignore next */
    (cov_pmjx20wre().s[62]++, request.method.toUpperCase());
    const formattedMethodName =
    /* istanbul ignore next */
    (cov_pmjx20wre().s[63]++, methodName.replace(/([A-Z])/g, '_$1').toUpperCase());
    /* istanbul ignore next */
    cov_pmjx20wre().s[64]++;
    return `${httpMethod}_${formattedMethodName}`;
  }
  determineResource(controllerName, auditOptions, sensitiveOptions) {
    /* istanbul ignore next */
    cov_pmjx20wre().f[14]++;
    cov_pmjx20wre().s[65]++;
    // Usar recurso definido explicitamente
    if (sensitiveOptions?.resource) {
      /* istanbul ignore next */
      cov_pmjx20wre().b[27][0]++;
      cov_pmjx20wre().s[66]++;
      return sensitiveOptions.resource;
    } else
    /* istanbul ignore next */
    {
      cov_pmjx20wre().b[27][1]++;
    }
    cov_pmjx20wre().s[67]++;
    if (auditOptions?.resource) {
      /* istanbul ignore next */
      cov_pmjx20wre().b[28][0]++;
      cov_pmjx20wre().s[68]++;
      return auditOptions.resource;
    } else
    /* istanbul ignore next */
    {
      cov_pmjx20wre().b[28][1]++;
    }
    // Extrair nome do recurso do controller
    cov_pmjx20wre().s[69]++;
    return controllerName.replace('Controller', '');
  }
  captureRequestData(request, auditOptions) {
    /* istanbul ignore next */
    cov_pmjx20wre().f[15]++;
    const data =
    /* istanbul ignore next */
    (cov_pmjx20wre().s[70]++, {});
    // Incluir parâmetros da URL
    /* istanbul ignore next */
    cov_pmjx20wre().s[71]++;
    if (
    /* istanbul ignore next */
    (cov_pmjx20wre().b[30][0]++, request.params) &&
    /* istanbul ignore next */
    (cov_pmjx20wre().b[30][1]++, Object.keys(request.params).length > 0)) {
      /* istanbul ignore next */
      cov_pmjx20wre().b[29][0]++;
      cov_pmjx20wre().s[72]++;
      data.params = request.params;
    } else
    /* istanbul ignore next */
    {
      cov_pmjx20wre().b[29][1]++;
    }
    // Incluir query parameters
    cov_pmjx20wre().s[73]++;
    if (
    /* istanbul ignore next */
    (cov_pmjx20wre().b[32][0]++, request.query) &&
    /* istanbul ignore next */
    (cov_pmjx20wre().b[32][1]++, Object.keys(request.query).length > 0)) {
      /* istanbul ignore next */
      cov_pmjx20wre().b[31][0]++;
      cov_pmjx20wre().s[74]++;
      data.query = request.query;
    } else
    /* istanbul ignore next */
    {
      cov_pmjx20wre().b[31][1]++;
    }
    // Incluir body da requisição (se solicitado)
    cov_pmjx20wre().s[75]++;
    if (
    /* istanbul ignore next */
    (cov_pmjx20wre().b[34][0]++, auditOptions?.includeRequest) &&
    /* istanbul ignore next */
    (cov_pmjx20wre().b[34][1]++, request.body)) {
      /* istanbul ignore next */
      cov_pmjx20wre().b[33][0]++;
      cov_pmjx20wre().s[76]++;
      data.requestBody = this.sanitizeRequestBody(request.body);
    } else
    /* istanbul ignore next */
    {
      cov_pmjx20wre().b[33][1]++;
    }
    cov_pmjx20wre().s[77]++;
    return data;
  }
  sanitizeRequestBody(body) {
    /* istanbul ignore next */
    cov_pmjx20wre().f[16]++;
    cov_pmjx20wre().s[78]++;
    if (
    /* istanbul ignore next */
    (cov_pmjx20wre().b[36][0]++, !body) ||
    /* istanbul ignore next */
    (cov_pmjx20wre().b[36][1]++, typeof body !== 'object')) {
      /* istanbul ignore next */
      cov_pmjx20wre().b[35][0]++;
      cov_pmjx20wre().s[79]++;
      return body;
    } else
    /* istanbul ignore next */
    {
      cov_pmjx20wre().b[35][1]++;
    }
    const sanitized =
    /* istanbul ignore next */
    (cov_pmjx20wre().s[80]++, {
      ...body
    });
    // Remover campos sensíveis
    const sensitiveFields =
    /* istanbul ignore next */
    (cov_pmjx20wre().s[81]++, ['password', 'token', 'secret', 'key', 'authorization', 'creditCard', 'ssn', 'cpf']);
    /* istanbul ignore next */
    cov_pmjx20wre().s[82]++;
    const sanitizeObject = obj => {
      /* istanbul ignore next */
      cov_pmjx20wre().f[17]++;
      cov_pmjx20wre().s[83]++;
      if (Array.isArray(obj)) {
        /* istanbul ignore next */
        cov_pmjx20wre().b[37][0]++;
        cov_pmjx20wre().s[84]++;
        return obj.map(sanitizeObject);
      } else
      /* istanbul ignore next */
      {
        cov_pmjx20wre().b[37][1]++;
      }
      cov_pmjx20wre().s[85]++;
      if (
      /* istanbul ignore next */
      (cov_pmjx20wre().b[39][0]++, obj) &&
      /* istanbul ignore next */
      (cov_pmjx20wre().b[39][1]++, typeof obj === 'object')) {
        /* istanbul ignore next */
        cov_pmjx20wre().b[38][0]++;
        const result =
        /* istanbul ignore next */
        (cov_pmjx20wre().s[86]++, {});
        /* istanbul ignore next */
        cov_pmjx20wre().s[87]++;
        for (const [key, value] of Object.entries(obj)) {
          const lowerKey =
          /* istanbul ignore next */
          (cov_pmjx20wre().s[88]++, key.toLowerCase());
          /* istanbul ignore next */
          cov_pmjx20wre().s[89]++;
          if (sensitiveFields.some(field => {
            /* istanbul ignore next */
            cov_pmjx20wre().f[18]++;
            cov_pmjx20wre().s[90]++;
            return lowerKey.includes(field);
          })) {
            /* istanbul ignore next */
            cov_pmjx20wre().b[40][0]++;
            cov_pmjx20wre().s[91]++;
            result[key] = '[REDACTED]';
          } else {
            /* istanbul ignore next */
            cov_pmjx20wre().b[40][1]++;
            cov_pmjx20wre().s[92]++;
            result[key] = sanitizeObject(value);
          }
        }
        /* istanbul ignore next */
        cov_pmjx20wre().s[93]++;
        return result;
      } else
      /* istanbul ignore next */
      {
        cov_pmjx20wre().b[38][1]++;
      }
      cov_pmjx20wre().s[94]++;
      return obj;
    };
    /* istanbul ignore next */
    cov_pmjx20wre().s[95]++;
    return sanitizeObject(sanitized);
  }
  sanitizeResponse(response) {
    /* istanbul ignore next */
    cov_pmjx20wre().f[19]++;
    cov_pmjx20wre().s[96]++;
    if (
    /* istanbul ignore next */
    (cov_pmjx20wre().b[42][0]++, !response) ||
    /* istanbul ignore next */
    (cov_pmjx20wre().b[42][1]++, typeof response !== 'object')) {
      /* istanbul ignore next */
      cov_pmjx20wre().b[41][0]++;
      cov_pmjx20wre().s[97]++;
      return response;
    } else
    /* istanbul ignore next */
    {
      cov_pmjx20wre().b[41][1]++;
    }
    // Limitar tamanho da resposta no log
    const responseStr =
    /* istanbul ignore next */
    (cov_pmjx20wre().s[98]++, JSON.stringify(response));
    /* istanbul ignore next */
    cov_pmjx20wre().s[99]++;
    if (responseStr.length > 1000) {
      /* istanbul ignore next */
      cov_pmjx20wre().b[43][0]++;
      cov_pmjx20wre().s[100]++;
      return {
        _truncated: true,
        _size: responseStr.length,
        _preview: responseStr.substring(0, 500) + '...'
      };
    } else
    /* istanbul ignore next */
    {
      cov_pmjx20wre().b[43][1]++;
    }
    cov_pmjx20wre().s[101]++;
    return response;
  }
  getClientIp(request) {
    /* istanbul ignore next */
    cov_pmjx20wre().f[20]++;
    cov_pmjx20wre().s[102]++;
    return /* istanbul ignore next */(cov_pmjx20wre().b[44][0]++, request.headers['x-forwarded-for']) ||
    /* istanbul ignore next */
    (cov_pmjx20wre().b[44][1]++, request.headers['x-real-ip']) ||
    /* istanbul ignore next */
    (cov_pmjx20wre().b[44][2]++, request.connection?.remoteAddress) ||
    /* istanbul ignore next */
    (cov_pmjx20wre().b[44][3]++, request.socket?.remoteAddress) ||
    /* istanbul ignore next */
    (cov_pmjx20wre().b[44][4]++, request.ip) ||
    /* istanbul ignore next */
    (cov_pmjx20wre().b[44][5]++, 'unknown');
  }
});
/* istanbul ignore next */
cov_pmjx20wre().s[103]++;
AuditLogInterceptor = AuditLogInterceptor_1 = __decorate([Injectable(), __metadata("design:paramtypes", [typeof (_a =
/* istanbul ignore next */
(cov_pmjx20wre().b[46][0]++, typeof Reflector !== "undefined") &&
/* istanbul ignore next */
(cov_pmjx20wre().b[46][1]++, Reflector)) === "function" ?
/* istanbul ignore next */
(cov_pmjx20wre().b[45][0]++, _a) :
/* istanbul ignore next */
(cov_pmjx20wre().b[45][1]++, Object), typeof (_b =
/* istanbul ignore next */
(cov_pmjx20wre().b[48][0]++, typeof AuditLogService !== "undefined") &&
/* istanbul ignore next */
(cov_pmjx20wre().b[48][1]++, AuditLogService)) === "function" ?
/* istanbul ignore next */
(cov_pmjx20wre().b[47][0]++, _b) :
/* istanbul ignore next */
(cov_pmjx20wre().b[47][1]++, Object)])], AuditLogInterceptor);
export { AuditLogInterceptor };
// Guard para validação de segurança cross-tenant
let CrossTenantSecurityGuard =
/* istanbul ignore next */
(cov_pmjx20wre().s[104]++, CrossTenantSecurityGuard_1 = class CrossTenantSecurityGuard {
  auditLogService;
  logger =
  /* istanbul ignore next */
  (cov_pmjx20wre().s[105]++, new Logger(CrossTenantSecurityGuard_1.name));
  constructor(auditLogService) {
    /* istanbul ignore next */
    cov_pmjx20wre().f[21]++;
    cov_pmjx20wre().s[106]++;
    this.auditLogService = auditLogService;
  }
  async canActivate(context) {
    /* istanbul ignore next */
    cov_pmjx20wre().f[22]++;
    const request =
    /* istanbul ignore next */
    (cov_pmjx20wre().s[107]++, context.switchToHttp().getRequest());
    const user =
    /* istanbul ignore next */
    (cov_pmjx20wre().s[108]++, request.user);
    /* istanbul ignore next */
    cov_pmjx20wre().s[109]++;
    if (
    /* istanbul ignore next */
    (cov_pmjx20wre().b[50][0]++, !user) ||
    /* istanbul ignore next */
    (cov_pmjx20wre().b[50][1]++, !user.organizationId)) {
      /* istanbul ignore next */
      cov_pmjx20wre().b[49][0]++;
      cov_pmjx20wre().s[110]++;
      return true; // Deixar outros guards lidarem com autenticação
    } else
    /* istanbul ignore next */
    {
      cov_pmjx20wre().b[49][1]++;
    }
    // Verificar se há tentativa de acesso a recursos de outra organização
    const targetOrganizationId =
    /* istanbul ignore next */
    (cov_pmjx20wre().s[111]++, this.extractTargetOrganizationId(request));
    /* istanbul ignore next */
    cov_pmjx20wre().s[112]++;
    if (
    /* istanbul ignore next */
    (cov_pmjx20wre().b[52][0]++, targetOrganizationId) &&
    /* istanbul ignore next */
    (cov_pmjx20wre().b[52][1]++, targetOrganizationId !== user.organizationId)) {
      /* istanbul ignore next */
      cov_pmjx20wre().b[51][0]++;
      const handler =
      /* istanbul ignore next */
      (cov_pmjx20wre().s[113]++, context.getHandler());
      const controller =
      /* istanbul ignore next */
      (cov_pmjx20wre().s[114]++, context.getClass());
      const isValid =
      /* istanbul ignore next */
      (cov_pmjx20wre().s[115]++, await this.auditLogService.validateCrossTenantAccess(user.id, user.organizationId, targetOrganizationId, controller.name.replace('Controller', ''), handler.name));
      /* istanbul ignore next */
      cov_pmjx20wre().s[116]++;
      if (!isValid) {
        /* istanbul ignore next */
        cov_pmjx20wre().b[53][0]++;
        cov_pmjx20wre().s[117]++;
        this.logger.warn(`Cross-tenant access blocked: User ${user.id} from org ${user.organizationId} tried to access org ${targetOrganizationId}`);
        /* istanbul ignore next */
        cov_pmjx20wre().s[118]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_pmjx20wre().b[53][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_pmjx20wre().b[51][1]++;
    }
    cov_pmjx20wre().s[119]++;
    return true;
  }
  extractTargetOrganizationId(request) {
    /* istanbul ignore next */
    cov_pmjx20wre().f[23]++;
    cov_pmjx20wre().s[120]++;
    // Verificar parâmetros da URL
    if (request.params?.organizationId) {
      /* istanbul ignore next */
      cov_pmjx20wre().b[54][0]++;
      cov_pmjx20wre().s[121]++;
      return request.params.organizationId;
    } else
    /* istanbul ignore next */
    {
      cov_pmjx20wre().b[54][1]++;
    }
    // Verificar query parameters
    cov_pmjx20wre().s[122]++;
    if (request.query?.organizationId) {
      /* istanbul ignore next */
      cov_pmjx20wre().b[55][0]++;
      cov_pmjx20wre().s[123]++;
      return request.query.organizationId;
    } else
    /* istanbul ignore next */
    {
      cov_pmjx20wre().b[55][1]++;
    }
    // Verificar body da requisição
    cov_pmjx20wre().s[124]++;
    if (request.body?.organizationId) {
      /* istanbul ignore next */
      cov_pmjx20wre().b[56][0]++;
      cov_pmjx20wre().s[125]++;
      return request.body.organizationId;
    } else
    /* istanbul ignore next */
    {
      cov_pmjx20wre().b[56][1]++;
    }
    // Verificar headers
    cov_pmjx20wre().s[126]++;
    if (request.headers['x-target-organization-id']) {
      /* istanbul ignore next */
      cov_pmjx20wre().b[57][0]++;
      cov_pmjx20wre().s[127]++;
      return request.headers['x-target-organization-id'];
    } else
    /* istanbul ignore next */
    {
      cov_pmjx20wre().b[57][1]++;
    }
    cov_pmjx20wre().s[128]++;
    return null;
  }
});
/* istanbul ignore next */
cov_pmjx20wre().s[129]++;
CrossTenantSecurityGuard = CrossTenantSecurityGuard_1 = __decorate([Injectable(), __metadata("design:paramtypes", [typeof (_c =
/* istanbul ignore next */
(cov_pmjx20wre().b[59][0]++, typeof AuditLogService !== "undefined") &&
/* istanbul ignore next */
(cov_pmjx20wre().b[59][1]++, AuditLogService)) === "function" ?
/* istanbul ignore next */
(cov_pmjx20wre().b[58][0]++, _c) :
/* istanbul ignore next */
(cov_pmjx20wre().b[58][1]++, Object)])], CrossTenantSecurityGuard);
export { CrossTenantSecurityGuard };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,