c6d2cb4bf6516f85c4804d3b4cc3b92f
/* istanbul ignore next */
function cov_1e4g1tojr8() {
  var path = "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\services\\pdf.service.ts";
  var hash = "fb0fd8d88c186d1f6a1161d6d687a928c401127f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\services\\pdf.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 17
        },
        end: {
          line: 6,
          column: 1
        }
      },
      "1": {
        start: {
          line: 2,
          column: 12
        },
        end: {
          line: 2,
          column: 28
        }
      },
      "2": {
        start: {
          line: 2,
          column: 34
        },
        end: {
          line: 2,
          column: 125
        }
      },
      "3": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 4,
          column: 150
        }
      },
      "4": {
        start: {
          line: 3,
          column: 79
        },
        end: {
          line: 3,
          column: 131
        }
      },
      "5": {
        start: {
          line: 4,
          column: 9
        },
        end: {
          line: 4,
          column: 150
        }
      },
      "6": {
        start: {
          line: 4,
          column: 22
        },
        end: {
          line: 4,
          column: 43
        }
      },
      "7": {
        start: {
          line: 4,
          column: 58
        },
        end: {
          line: 4,
          column: 150
        }
      },
      "8": {
        start: {
          line: 4,
          column: 81
        },
        end: {
          line: 4,
          column: 150
        }
      },
      "9": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 5,
          column: 66
        }
      },
      "10": {
        start: {
          line: 13,
          column: 19
        },
        end: {
          line: 15,
          column: 1
        }
      },
      "11": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 62
        }
      },
      "12": {
        start: {
          line: 16,
          column: 21
        },
        end: {
          line: 28,
          column: 1
        }
      },
      "13": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 27,
          column: 5
        }
      },
      "14": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 22,
          column: 29
        }
      },
      "15": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 24,
          column: 50
        }
      },
      "16": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 64
        }
      },
      "17": {
        start: {
          line: 30,
          column: 27
        },
        end: {
          line: 59,
          column: 1
        }
      },
      "18": {
        start: {
          line: 31,
          column: 23
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "19": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 66
        }
      },
      "20": {
        start: {
          line: 34,
          column: 25
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "21": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 45,
          column: 9
        }
      },
      "22": {
        start: {
          line: 37,
          column: 16
        },
        end: {
          line: 40,
          column: 33
        }
      },
      "23": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 54
        }
      },
      "24": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 68
        }
      },
      "25": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 58,
          column: 4
        }
      },
      "26": {
        start: {
          line: 60,
          column: 17
        },
        end: {
          line: 116,
          column: 1
        }
      },
      "27": {
        start: {
          line: 61,
          column: 13
        },
        end: {
          line: 61,
          column: 42
        }
      },
      "28": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 80,
          column: 9
        }
      },
      "29": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 71
        }
      },
      "30": {
        start: {
          line: 66,
          column: 31
        },
        end: {
          line: 66,
          column: 57
        }
      },
      "31": {
        start: {
          line: 67,
          column: 30
        },
        end: {
          line: 67,
          column: 62
        }
      },
      "32": {
        start: {
          line: 69,
          column: 29
        },
        end: {
          line: 69,
          column: 68
        }
      },
      "33": {
        start: {
          line: 70,
          column: 28
        },
        end: {
          line: 70,
          column: 78
        }
      },
      "34": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 71
        }
      },
      "35": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 75,
          column: 14
        }
      },
      "36": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 88
        }
      },
      "37": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 24
        }
      },
      "38": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 69
        }
      },
      "39": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 54
        }
      },
      "40": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 49
        }
      },
      "41": {
        start: {
          line: 100,
          column: 22
        },
        end: {
          line: 100,
          column: 61
        }
      },
      "42": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 112,
          column: 11
        }
      },
      "43": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 66
        }
      },
      "44": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 111,
          column: 13
        }
      },
      "45": {
        start: {
          line: 104,
          column: 16
        },
        end: {
          line: 104,
          column: 60
        }
      },
      "46": {
        start: {
          line: 106,
          column: 17
        },
        end: {
          line: 111,
          column: 13
        }
      },
      "47": {
        start: {
          line: 107,
          column: 16
        },
        end: {
          line: 107,
          column: 89
        }
      },
      "48": {
        start: {
          line: 109,
          column: 17
        },
        end: {
          line: 111,
          column: 13
        }
      },
      "49": {
        start: {
          line: 110,
          column: 16
        },
        end: {
          line: 110,
          column: 89
        }
      },
      "50": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 83
        }
      },
      "51": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 114,
          column: 45
        }
      },
      "52": {
        start: {
          line: 117,
          column: 0
        },
        end: {
          line: 119,
          column: 15
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 1,
            column: 46
          },
          end: {
            line: 1,
            column: 47
          }
        },
        loc: {
          start: {
            line: 1,
            column: 87
          },
          end: {
            line: 6,
            column: 1
          }
        },
        line: 1
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 19
          },
          end: {
            line: 13,
            column: 20
          }
        },
        loc: {
          start: {
            line: 13,
            column: 29
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 21
          },
          end: {
            line: 16,
            column: 22
          }
        },
        loc: {
          start: {
            line: 16,
            column: 38
          },
          end: {
            line: 28,
            column: 1
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 30,
            column: 27
          },
          end: {
            line: 30,
            column: 28
          }
        },
        loc: {
          start: {
            line: 30,
            column: 39
          },
          end: {
            line: 59,
            column: 1
          }
        },
        line: 30
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 31,
            column: 23
          },
          end: {
            line: 31,
            column: 24
          }
        },
        loc: {
          start: {
            line: 31,
            column: 33
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 31
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 34,
            column: 25
          },
          end: {
            line: 34,
            column: 26
          }
        },
        loc: {
          start: {
            line: 34,
            column: 42
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 34
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        loc: {
          start: {
            line: 62,
            column: 36
          },
          end: {
            line: 81,
            column: 5
          }
        },
        line: 62
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 82,
            column: 5
          }
        },
        loc: {
          start: {
            line: 82,
            column: 47
          },
          end: {
            line: 90,
            column: 5
          }
        },
        line: 82
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 91,
            column: 5
          }
        },
        loc: {
          start: {
            line: 91,
            column: 51
          },
          end: {
            line: 96,
            column: 5
          }
        },
        line: 91
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 98,
            column: 4
          },
          end: {
            line: 98,
            column: 5
          }
        },
        loc: {
          start: {
            line: 98,
            column: 42
          },
          end: {
            line: 115,
            column: 5
          }
        },
        line: 98
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 101,
            column: 38
          },
          end: {
            line: 101,
            column: 39
          }
        },
        loc: {
          start: {
            line: 101,
            column: 58
          },
          end: {
            line: 112,
            column: 9
          }
        },
        line: 101
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 1,
            column: 17
          },
          end: {
            line: 6,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1,
            column: 18
          },
          end: {
            line: 1,
            column: 22
          }
        }, {
          start: {
            line: 1,
            column: 26
          },
          end: {
            line: 1,
            column: 41
          }
        }, {
          start: {
            line: 1,
            column: 46
          },
          end: {
            line: 6,
            column: 1
          }
        }],
        line: 1
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 34
          },
          end: {
            line: 2,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 42
          },
          end: {
            line: 2,
            column: 48
          }
        }, {
          start: {
            line: 2,
            column: 51
          },
          end: {
            line: 2,
            column: 125
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 2,
            column: 51
          },
          end: {
            line: 2,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 67
          },
          end: {
            line: 2,
            column: 118
          }
        }, {
          start: {
            line: 2,
            column: 121
          },
          end: {
            line: 2,
            column: 125
          }
        }],
        line: 2
      },
      "3": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 4,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 4,
            column: 150
          }
        }, {
          start: {
            line: 4,
            column: 9
          },
          end: {
            line: 4,
            column: 150
          }
        }],
        line: 3
      },
      "4": {
        loc: {
          start: {
            line: 3,
            column: 8
          },
          end: {
            line: 3,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 8
          },
          end: {
            line: 3,
            column: 35
          }
        }, {
          start: {
            line: 3,
            column: 39
          },
          end: {
            line: 3,
            column: 77
          }
        }],
        line: 3
      },
      "5": {
        loc: {
          start: {
            line: 4,
            column: 58
          },
          end: {
            line: 4,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 58
          },
          end: {
            line: 4,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 4
      },
      "6": {
        loc: {
          start: {
            line: 4,
            column: 85
          },
          end: {
            line: 4,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 86
          },
          end: {
            line: 4,
            column: 143
          }
        }, {
          start: {
            line: 4,
            column: 148
          },
          end: {
            line: 4,
            column: 149
          }
        }],
        line: 4
      },
      "7": {
        loc: {
          start: {
            line: 4,
            column: 86
          },
          end: {
            line: 4,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 4,
            column: 94
          },
          end: {
            line: 4,
            column: 98
          }
        }, {
          start: {
            line: 4,
            column: 101
          },
          end: {
            line: 4,
            column: 143
          }
        }],
        line: 4
      },
      "8": {
        loc: {
          start: {
            line: 4,
            column: 101
          },
          end: {
            line: 4,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 4,
            column: 109
          },
          end: {
            line: 4,
            column: 126
          }
        }, {
          start: {
            line: 4,
            column: 129
          },
          end: {
            line: 4,
            column: 143
          }
        }],
        line: 4
      },
      "9": {
        loc: {
          start: {
            line: 5,
            column: 11
          },
          end: {
            line: 5,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 11
          },
          end: {
            line: 5,
            column: 16
          }
        }, {
          start: {
            line: 5,
            column: 20
          },
          end: {
            line: 5,
            column: 21
          }
        }, {
          start: {
            line: 5,
            column: 25
          },
          end: {
            line: 5,
            column: 62
          }
        }],
        line: 5
      },
      "10": {
        loc: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 22,
            column: 29
          }
        }, {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 24,
            column: 50
          }
        }, {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 26,
            column: 64
          }
        }],
        line: 17
      },
      "11": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 40,
            column: 33
          }
        }, {
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 42,
            column: 54
          }
        }, {
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 44,
            column: 68
          }
        }],
        line: 35
      },
      "12": {
        loc: {
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 111,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 111,
            column: 13
          }
        }, {
          start: {
            line: 106,
            column: 17
          },
          end: {
            line: 111,
            column: 13
          }
        }],
        line: 103
      },
      "13": {
        loc: {
          start: {
            line: 106,
            column: 17
          },
          end: {
            line: 111,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 17
          },
          end: {
            line: 111,
            column: 13
          }
        }, {
          start: {
            line: 109,
            column: 17
          },
          end: {
            line: 111,
            column: 13
          }
        }],
        line: 106
      },
      "14": {
        loc: {
          start: {
            line: 106,
            column: 21
          },
          end: {
            line: 106,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 106,
            column: 21
          },
          end: {
            line: 106,
            column: 45
          }
        }, {
          start: {
            line: 106,
            column: 49
          },
          end: {
            line: 106,
            column: 79
          }
        }],
        line: 106
      },
      "15": {
        loc: {
          start: {
            line: 109,
            column: 17
          },
          end: {
            line: 111,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 17
          },
          end: {
            line: 111,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 109
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\services\\pdf.service.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\services\\pdf.service.ts"],
      sourcesContent: ["import { Injectable, Logger } from '@nestjs/common';\nimport { ChartType } from '@prisma/client';\nimport { format } from 'date-fns';\nimport { ptBR } from 'date-fns/locale';\n\ninterface ReportPDFProps {\n  report: {\n    id: string;\n    name: string;\n    type: string;\n    data: {\n      summary: Record<string, number>;\n      data: Record<string, any>[];\n      charts: {\n        type: ChartType;\n        title: string;\n        data: any[];\n      }[];\n      metadata: {\n        generatedAt: Date;\n        dateRange: { start: Date; end: Date };\n        totalRecords: number;\n        processingTime: number;\n      };\n    };\n    user: {\n      firstName: string;\n      lastName: string;\n    };\n    organization: {\n      name: string;\n    };\n  };\n}\n\n// PDF Styles\n// PDF generation utilities\nconst formatDate = (date: Date): string => {\n  return format(date, 'dd/MM/yyyy HH:mm', { locale: ptBR });\n};\n\nconst formatNumber = (value: number, type: string): string => {\n  switch (type) {\n    case 'currency':\n      return new Intl.NumberFormat('pt-BR', {\n        style: 'currency',\n        currency: 'BRL'\n      }).format(value);\n    case 'percentage':\n      return `${(value * 100).toFixed(2)}%`;\n    default:\n      return new Intl.NumberFormat('pt-BR').format(value);\n  }\n};\n\n// Simple PDF generation helper\nconst generatePDFContent = (report: any): string => {\n  const formatDate = (date: Date): string => {\n    return format(date, 'dd/MM/yyyy HH:mm', { locale: ptBR });\n  };\n\n  const formatNumber = (value: number, type: string): string => {\n    switch (type) {\n      case 'currency':\n        return new Intl.NumberFormat('pt-BR', {\n          style: 'currency',\n          currency: 'BRL'\n        }).format(value);\n      case 'percentage':\n        return `${(value * 100).toFixed(2)}%`;\n      default:\n        return new Intl.NumberFormat('pt-BR').format(value);\n    }\n  };\n\n  return `\n    PDF Report: ${report.name}\n    Organization: ${report.organization.name}\n    Generated by: ${report.user.firstName} ${report.user.lastName}\n    Date: ${formatDate(report.data.metadata.generatedAt)}\n    \n    Summary:\n    ${JSON.stringify(report.data.summary, null, 2)}\n    \n    Data Records: ${report.data.metadata.totalRecords}\n    Processing Time: ${report.data.metadata.processingTime}ms\n  `;\n};\n\n@Injectable()\nexport class PDFService {\n  private readonly logger = new Logger(PDFService.name);\n\n  async generateReportPDF(report: any): Promise<{ url: string; size: number }> {\n    try {\n      this.logger.log(`Generating PDF for report: ${report.id}`);\n      \n      // Generate PDF content as text (simplified approach)\n      const pdfContent = generatePDFContent(report);\n      const pdfBuffer = Buffer.from(pdfContent, 'utf-8');\n      \n      // Upload to storage (implement your storage logic)\n      const fileName = `report_${report.id}_${Date.now()}.txt`;\n      const fileUrl = await this.uploadPDFToStorage(fileName, pdfBuffer);\n      \n      this.logger.log(`PDF generated successfully: ${fileName}`);\n      \n      return {\n        url: fileUrl,\n        size: pdfBuffer.length\n      };\n    } catch (error) {\n      this.logger.error(`Failed to generate PDF for report ${report.id}:`, error);\n      throw error;\n    }\n  }\n\n  private async uploadPDFToStorage(fileName: string, buffer: Buffer): Promise<string> {\n    // Implement your file upload logic here\n    // This could be AWS S3, Google Cloud Storage, Azure Blob Storage, etc.\n    \n    // For now, return a placeholder URL\n    // In a real implementation, you would:\n    // 1. Upload the buffer to your storage service\n    // 2. Return the public URL of the uploaded file\n    \n    return `https://storage.example.com/reports/pdf/${fileName}`;\n  }\n\n  async generateChartImage(chartData: any, chartType: ChartType): Promise<Buffer> {\n    // This method would generate chart images for inclusion in PDFs\n    // You could use libraries like Chart.js with canvas or similar\n    // For now, return a placeholder\n    \n    return Buffer.from('placeholder-chart-image');\n  }\n\n  // Utility method to create custom PDF templates\n  async generateCustomPDF(\n    templateData: {\n      title: string;\n      sections: {\n        title: string;\n        content: string | any[];\n        type: 'text' | 'table' | 'chart';\n      }[];\n      metadata: Record<string, any>;\n    }\n  ): Promise<Buffer> {\n    this.logger.log('Generating custom PDF');\n    \n    let content = `Custom PDF: ${templateData.title}\\n\\n`;\n    \n    templateData.sections.forEach((section, index) => {\n      content += `Section ${index + 1}: ${section.title}\\n`;\n      if (section.type === 'text') {\n        content += `${String(section.content)}\\n\\n`;\n      } else if (section.type === 'table' && Array.isArray(section.content)) {\n        content += `Table data: ${JSON.stringify(section.content, null, 2)}\\n\\n`;\n      } else if (section.type === 'chart') {\n        content += `Chart data: ${JSON.stringify(section.content, null, 2)}\\n\\n`;\n      }\n    });\n    \n    content += `\\nMetadata: ${JSON.stringify(templateData.metadata, null, 2)}`;\n    \n    return Buffer.from(content, 'utf-8');\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fb0fd8d88c186d1f6a1161d6d687a928c401127f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1e4g1tojr8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1e4g1tojr8();
var __decorate =
/* istanbul ignore next */
(cov_1e4g1tojr8().s[0]++,
/* istanbul ignore next */
(cov_1e4g1tojr8().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1e4g1tojr8().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_1e4g1tojr8().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_1e4g1tojr8().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_1e4g1tojr8().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_1e4g1tojr8().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_1e4g1tojr8().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_1e4g1tojr8().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_1e4g1tojr8().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_1e4g1tojr8().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_1e4g1tojr8().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_1e4g1tojr8().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_1e4g1tojr8().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_1e4g1tojr8().b[3][0]++;
    cov_1e4g1tojr8().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_1e4g1tojr8().b[3][1]++;
    cov_1e4g1tojr8().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_1e4g1tojr8().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_1e4g1tojr8().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_1e4g1tojr8().b[5][0]++;
        cov_1e4g1tojr8().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_1e4g1tojr8().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_1e4g1tojr8().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_1e4g1tojr8().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_1e4g1tojr8().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_1e4g1tojr8().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_1e4g1tojr8().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_1e4g1tojr8().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_1e4g1tojr8().s[9]++;
  return /* istanbul ignore next */(cov_1e4g1tojr8().b[9][0]++, c > 3) &&
  /* istanbul ignore next */
  (cov_1e4g1tojr8().b[9][1]++, r) &&
  /* istanbul ignore next */
  (cov_1e4g1tojr8().b[9][2]++, Object.defineProperty(target, key, r)), r;
}));
var PDFService_1;
import { Injectable, Logger } from '@nestjs/common';
import { format } from 'date-fns';
import { ptBR } from 'date-fns/locale';
// PDF Styles
// PDF generation utilities
/* istanbul ignore next */
cov_1e4g1tojr8().s[10]++;
const formatDate = date => {
  /* istanbul ignore next */
  cov_1e4g1tojr8().f[1]++;
  cov_1e4g1tojr8().s[11]++;
  return format(date, 'dd/MM/yyyy HH:mm', {
    locale: ptBR
  });
};
/* istanbul ignore next */
cov_1e4g1tojr8().s[12]++;
const formatNumber = (value, type) => {
  /* istanbul ignore next */
  cov_1e4g1tojr8().f[2]++;
  cov_1e4g1tojr8().s[13]++;
  switch (type) {
    case 'currency':
      /* istanbul ignore next */
      cov_1e4g1tojr8().b[10][0]++;
      cov_1e4g1tojr8().s[14]++;
      return new Intl.NumberFormat('pt-BR', {
        style: 'currency',
        currency: 'BRL'
      }).format(value);
    case 'percentage':
      /* istanbul ignore next */
      cov_1e4g1tojr8().b[10][1]++;
      cov_1e4g1tojr8().s[15]++;
      return `${(value * 100).toFixed(2)}%`;
    default:
      /* istanbul ignore next */
      cov_1e4g1tojr8().b[10][2]++;
      cov_1e4g1tojr8().s[16]++;
      return new Intl.NumberFormat('pt-BR').format(value);
  }
};
// Simple PDF generation helper
/* istanbul ignore next */
cov_1e4g1tojr8().s[17]++;
const generatePDFContent = report => {
  /* istanbul ignore next */
  cov_1e4g1tojr8().f[3]++;
  cov_1e4g1tojr8().s[18]++;
  const formatDate = date => {
    /* istanbul ignore next */
    cov_1e4g1tojr8().f[4]++;
    cov_1e4g1tojr8().s[19]++;
    return format(date, 'dd/MM/yyyy HH:mm', {
      locale: ptBR
    });
  };
  /* istanbul ignore next */
  cov_1e4g1tojr8().s[20]++;
  const formatNumber = (value, type) => {
    /* istanbul ignore next */
    cov_1e4g1tojr8().f[5]++;
    cov_1e4g1tojr8().s[21]++;
    switch (type) {
      case 'currency':
        /* istanbul ignore next */
        cov_1e4g1tojr8().b[11][0]++;
        cov_1e4g1tojr8().s[22]++;
        return new Intl.NumberFormat('pt-BR', {
          style: 'currency',
          currency: 'BRL'
        }).format(value);
      case 'percentage':
        /* istanbul ignore next */
        cov_1e4g1tojr8().b[11][1]++;
        cov_1e4g1tojr8().s[23]++;
        return `${(value * 100).toFixed(2)}%`;
      default:
        /* istanbul ignore next */
        cov_1e4g1tojr8().b[11][2]++;
        cov_1e4g1tojr8().s[24]++;
        return new Intl.NumberFormat('pt-BR').format(value);
    }
  };
  /* istanbul ignore next */
  cov_1e4g1tojr8().s[25]++;
  return `
    PDF Report: ${report.name}
    Organization: ${report.organization.name}
    Generated by: ${report.user.firstName} ${report.user.lastName}
    Date: ${formatDate(report.data.metadata.generatedAt)}
    
    Summary:
    ${JSON.stringify(report.data.summary, null, 2)}
    
    Data Records: ${report.data.metadata.totalRecords}
    Processing Time: ${report.data.metadata.processingTime}ms
  `;
};
let PDFService =
/* istanbul ignore next */
(cov_1e4g1tojr8().s[26]++, PDFService_1 = class PDFService {
  logger =
  /* istanbul ignore next */
  (cov_1e4g1tojr8().s[27]++, new Logger(PDFService_1.name));
  async generateReportPDF(report) {
    /* istanbul ignore next */
    cov_1e4g1tojr8().f[6]++;
    cov_1e4g1tojr8().s[28]++;
    try {
      /* istanbul ignore next */
      cov_1e4g1tojr8().s[29]++;
      this.logger.log(`Generating PDF for report: ${report.id}`);
      // Generate PDF content as text (simplified approach)
      const pdfContent =
      /* istanbul ignore next */
      (cov_1e4g1tojr8().s[30]++, generatePDFContent(report));
      const pdfBuffer =
      /* istanbul ignore next */
      (cov_1e4g1tojr8().s[31]++, Buffer.from(pdfContent, 'utf-8'));
      // Upload to storage (implement your storage logic)
      const fileName =
      /* istanbul ignore next */
      (cov_1e4g1tojr8().s[32]++, `report_${report.id}_${Date.now()}.txt`);
      const fileUrl =
      /* istanbul ignore next */
      (cov_1e4g1tojr8().s[33]++, await this.uploadPDFToStorage(fileName, pdfBuffer));
      /* istanbul ignore next */
      cov_1e4g1tojr8().s[34]++;
      this.logger.log(`PDF generated successfully: ${fileName}`);
      /* istanbul ignore next */
      cov_1e4g1tojr8().s[35]++;
      return {
        url: fileUrl,
        size: pdfBuffer.length
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1e4g1tojr8().s[36]++;
      this.logger.error(`Failed to generate PDF for report ${report.id}:`, error);
      /* istanbul ignore next */
      cov_1e4g1tojr8().s[37]++;
      throw error;
    }
  }
  async uploadPDFToStorage(fileName, buffer) {
    /* istanbul ignore next */
    cov_1e4g1tojr8().f[7]++;
    cov_1e4g1tojr8().s[38]++;
    // Implement your file upload logic here
    // This could be AWS S3, Google Cloud Storage, Azure Blob Storage, etc.
    // For now, return a placeholder URL
    // In a real implementation, you would:
    // 1. Upload the buffer to your storage service
    // 2. Return the public URL of the uploaded file
    return `https://storage.example.com/reports/pdf/${fileName}`;
  }
  async generateChartImage(chartData, chartType) {
    /* istanbul ignore next */
    cov_1e4g1tojr8().f[8]++;
    cov_1e4g1tojr8().s[39]++;
    // This method would generate chart images for inclusion in PDFs
    // You could use libraries like Chart.js with canvas or similar
    // For now, return a placeholder
    return Buffer.from('placeholder-chart-image');
  }
  // Utility method to create custom PDF templates
  async generateCustomPDF(templateData) {
    /* istanbul ignore next */
    cov_1e4g1tojr8().f[9]++;
    cov_1e4g1tojr8().s[40]++;
    this.logger.log('Generating custom PDF');
    let content =
    /* istanbul ignore next */
    (cov_1e4g1tojr8().s[41]++, `Custom PDF: ${templateData.title}\n\n`);
    /* istanbul ignore next */
    cov_1e4g1tojr8().s[42]++;
    templateData.sections.forEach((section, index) => {
      /* istanbul ignore next */
      cov_1e4g1tojr8().f[10]++;
      cov_1e4g1tojr8().s[43]++;
      content += `Section ${index + 1}: ${section.title}\n`;
      /* istanbul ignore next */
      cov_1e4g1tojr8().s[44]++;
      if (section.type === 'text') {
        /* istanbul ignore next */
        cov_1e4g1tojr8().b[12][0]++;
        cov_1e4g1tojr8().s[45]++;
        content += `${String(section.content)}\n\n`;
      } else {
        /* istanbul ignore next */
        cov_1e4g1tojr8().b[12][1]++;
        cov_1e4g1tojr8().s[46]++;
        if (
        /* istanbul ignore next */
        (cov_1e4g1tojr8().b[14][0]++, section.type === 'table') &&
        /* istanbul ignore next */
        (cov_1e4g1tojr8().b[14][1]++, Array.isArray(section.content))) {
          /* istanbul ignore next */
          cov_1e4g1tojr8().b[13][0]++;
          cov_1e4g1tojr8().s[47]++;
          content += `Table data: ${JSON.stringify(section.content, null, 2)}\n\n`;
        } else {
          /* istanbul ignore next */
          cov_1e4g1tojr8().b[13][1]++;
          cov_1e4g1tojr8().s[48]++;
          if (section.type === 'chart') {
            /* istanbul ignore next */
            cov_1e4g1tojr8().b[15][0]++;
            cov_1e4g1tojr8().s[49]++;
            content += `Chart data: ${JSON.stringify(section.content, null, 2)}\n\n`;
          } else
          /* istanbul ignore next */
          {
            cov_1e4g1tojr8().b[15][1]++;
          }
        }
      }
    });
    /* istanbul ignore next */
    cov_1e4g1tojr8().s[50]++;
    content += `\nMetadata: ${JSON.stringify(templateData.metadata, null, 2)}`;
    /* istanbul ignore next */
    cov_1e4g1tojr8().s[51]++;
    return Buffer.from(content, 'utf-8');
  }
});
/* istanbul ignore next */
cov_1e4g1tojr8().s[52]++;
PDFService = PDFService_1 = __decorate([Injectable()], PDFService);
export { PDFService };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMWU0ZzF0b2pyOCIsImFjdHVhbENvdmVyYWdlIiwiSW5qZWN0YWJsZSIsIkxvZ2dlciIsImZvcm1hdCIsInB0QlIiLCJzIiwiZm9ybWF0RGF0ZSIsImRhdGUiLCJmIiwibG9jYWxlIiwiZm9ybWF0TnVtYmVyIiwidmFsdWUiLCJ0eXBlIiwiYiIsIkludGwiLCJOdW1iZXJGb3JtYXQiLCJzdHlsZSIsImN1cnJlbmN5IiwidG9GaXhlZCIsImdlbmVyYXRlUERGQ29udGVudCIsInJlcG9ydCIsIm5hbWUiLCJvcmdhbml6YXRpb24iLCJ1c2VyIiwiZmlyc3ROYW1lIiwibGFzdE5hbWUiLCJkYXRhIiwibWV0YWRhdGEiLCJnZW5lcmF0ZWRBdCIsIkpTT04iLCJzdHJpbmdpZnkiLCJzdW1tYXJ5IiwidG90YWxSZWNvcmRzIiwicHJvY2Vzc2luZ1RpbWUiLCJQREZTZXJ2aWNlIiwiUERGU2VydmljZV8xIiwibG9nZ2VyIiwiZ2VuZXJhdGVSZXBvcnRQREYiLCJsb2ciLCJpZCIsInBkZkNvbnRlbnQiLCJwZGZCdWZmZXIiLCJCdWZmZXIiLCJmcm9tIiwiZmlsZU5hbWUiLCJEYXRlIiwibm93IiwiZmlsZVVybCIsInVwbG9hZFBERlRvU3RvcmFnZSIsInVybCIsInNpemUiLCJsZW5ndGgiLCJlcnJvciIsImJ1ZmZlciIsImdlbmVyYXRlQ2hhcnRJbWFnZSIsImNoYXJ0RGF0YSIsImNoYXJ0VHlwZSIsImdlbmVyYXRlQ3VzdG9tUERGIiwidGVtcGxhdGVEYXRhIiwiY29udGVudCIsInRpdGxlIiwic2VjdGlvbnMiLCJmb3JFYWNoIiwic2VjdGlvbiIsImluZGV4IiwiU3RyaW5nIiwiQXJyYXkiLCJpc0FycmF5IiwiX19kZWNvcmF0ZSJdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcRW56byBNYXJjZWxvXFxEZXNrdG9wXFxQcm9qZXRvcyBFbXByZXNhXFxTYWFzIFV0bWlmeVxcdXRtaWZ5LWNsb25lXFxhcHBzXFxhcGlcXHNyY1xcc2VydmljZXNcXHBkZi5zZXJ2aWNlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUsIExvZ2dlciB9IGZyb20gJ0BuZXN0anMvY29tbW9uJztcbmltcG9ydCB7IENoYXJ0VHlwZSB9IGZyb20gJ0BwcmlzbWEvY2xpZW50JztcbmltcG9ydCB7IGZvcm1hdCB9IGZyb20gJ2RhdGUtZm5zJztcbmltcG9ydCB7IHB0QlIgfSBmcm9tICdkYXRlLWZucy9sb2NhbGUnO1xuXG5pbnRlcmZhY2UgUmVwb3J0UERGUHJvcHMge1xuICByZXBvcnQ6IHtcbiAgICBpZDogc3RyaW5nO1xuICAgIG5hbWU6IHN0cmluZztcbiAgICB0eXBlOiBzdHJpbmc7XG4gICAgZGF0YToge1xuICAgICAgc3VtbWFyeTogUmVjb3JkPHN0cmluZywgbnVtYmVyPjtcbiAgICAgIGRhdGE6IFJlY29yZDxzdHJpbmcsIGFueT5bXTtcbiAgICAgIGNoYXJ0czoge1xuICAgICAgICB0eXBlOiBDaGFydFR5cGU7XG4gICAgICAgIHRpdGxlOiBzdHJpbmc7XG4gICAgICAgIGRhdGE6IGFueVtdO1xuICAgICAgfVtdO1xuICAgICAgbWV0YWRhdGE6IHtcbiAgICAgICAgZ2VuZXJhdGVkQXQ6IERhdGU7XG4gICAgICAgIGRhdGVSYW5nZTogeyBzdGFydDogRGF0ZTsgZW5kOiBEYXRlIH07XG4gICAgICAgIHRvdGFsUmVjb3JkczogbnVtYmVyO1xuICAgICAgICBwcm9jZXNzaW5nVGltZTogbnVtYmVyO1xuICAgICAgfTtcbiAgICB9O1xuICAgIHVzZXI6IHtcbiAgICAgIGZpcnN0TmFtZTogc3RyaW5nO1xuICAgICAgbGFzdE5hbWU6IHN0cmluZztcbiAgICB9O1xuICAgIG9yZ2FuaXphdGlvbjoge1xuICAgICAgbmFtZTogc3RyaW5nO1xuICAgIH07XG4gIH07XG59XG5cbi8vIFBERiBTdHlsZXNcbi8vIFBERiBnZW5lcmF0aW9uIHV0aWxpdGllc1xuY29uc3QgZm9ybWF0RGF0ZSA9IChkYXRlOiBEYXRlKTogc3RyaW5nID0+IHtcbiAgcmV0dXJuIGZvcm1hdChkYXRlLCAnZGQvTU0veXl5eSBISDptbScsIHsgbG9jYWxlOiBwdEJSIH0pO1xufTtcblxuY29uc3QgZm9ybWF0TnVtYmVyID0gKHZhbHVlOiBudW1iZXIsIHR5cGU6IHN0cmluZyk6IHN0cmluZyA9PiB7XG4gIHN3aXRjaCAodHlwZSkge1xuICAgIGNhc2UgJ2N1cnJlbmN5JzpcbiAgICAgIHJldHVybiBuZXcgSW50bC5OdW1iZXJGb3JtYXQoJ3B0LUJSJywge1xuICAgICAgICBzdHlsZTogJ2N1cnJlbmN5JyxcbiAgICAgICAgY3VycmVuY3k6ICdCUkwnXG4gICAgICB9KS5mb3JtYXQodmFsdWUpO1xuICAgIGNhc2UgJ3BlcmNlbnRhZ2UnOlxuICAgICAgcmV0dXJuIGAkeyh2YWx1ZSAqIDEwMCkudG9GaXhlZCgyKX0lYDtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIG5ldyBJbnRsLk51bWJlckZvcm1hdCgncHQtQlInKS5mb3JtYXQodmFsdWUpO1xuICB9XG59O1xuXG4vLyBTaW1wbGUgUERGIGdlbmVyYXRpb24gaGVscGVyXG5jb25zdCBnZW5lcmF0ZVBERkNvbnRlbnQgPSAocmVwb3J0OiBhbnkpOiBzdHJpbmcgPT4ge1xuICBjb25zdCBmb3JtYXREYXRlID0gKGRhdGU6IERhdGUpOiBzdHJpbmcgPT4ge1xuICAgIHJldHVybiBmb3JtYXQoZGF0ZSwgJ2RkL01NL3l5eXkgSEg6bW0nLCB7IGxvY2FsZTogcHRCUiB9KTtcbiAgfTtcblxuICBjb25zdCBmb3JtYXROdW1iZXIgPSAodmFsdWU6IG51bWJlciwgdHlwZTogc3RyaW5nKTogc3RyaW5nID0+IHtcbiAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgIGNhc2UgJ2N1cnJlbmN5JzpcbiAgICAgICAgcmV0dXJuIG5ldyBJbnRsLk51bWJlckZvcm1hdCgncHQtQlInLCB7XG4gICAgICAgICAgc3R5bGU6ICdjdXJyZW5jeScsXG4gICAgICAgICAgY3VycmVuY3k6ICdCUkwnXG4gICAgICAgIH0pLmZvcm1hdCh2YWx1ZSk7XG4gICAgICBjYXNlICdwZXJjZW50YWdlJzpcbiAgICAgICAgcmV0dXJuIGAkeyh2YWx1ZSAqIDEwMCkudG9GaXhlZCgyKX0lYDtcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiBuZXcgSW50bC5OdW1iZXJGb3JtYXQoJ3B0LUJSJykuZm9ybWF0KHZhbHVlKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGBcbiAgICBQREYgUmVwb3J0OiAke3JlcG9ydC5uYW1lfVxuICAgIE9yZ2FuaXphdGlvbjogJHtyZXBvcnQub3JnYW5pemF0aW9uLm5hbWV9XG4gICAgR2VuZXJhdGVkIGJ5OiAke3JlcG9ydC51c2VyLmZpcnN0TmFtZX0gJHtyZXBvcnQudXNlci5sYXN0TmFtZX1cbiAgICBEYXRlOiAke2Zvcm1hdERhdGUocmVwb3J0LmRhdGEubWV0YWRhdGEuZ2VuZXJhdGVkQXQpfVxuICAgIFxuICAgIFN1bW1hcnk6XG4gICAgJHtKU09OLnN0cmluZ2lmeShyZXBvcnQuZGF0YS5zdW1tYXJ5LCBudWxsLCAyKX1cbiAgICBcbiAgICBEYXRhIFJlY29yZHM6ICR7cmVwb3J0LmRhdGEubWV0YWRhdGEudG90YWxSZWNvcmRzfVxuICAgIFByb2Nlc3NpbmcgVGltZTogJHtyZXBvcnQuZGF0YS5tZXRhZGF0YS5wcm9jZXNzaW5nVGltZX1tc1xuICBgO1xufTtcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFBERlNlcnZpY2Uge1xuICBwcml2YXRlIHJlYWRvbmx5IGxvZ2dlciA9IG5ldyBMb2dnZXIoUERGU2VydmljZS5uYW1lKTtcblxuICBhc3luYyBnZW5lcmF0ZVJlcG9ydFBERihyZXBvcnQ6IGFueSk6IFByb21pc2U8eyB1cmw6IHN0cmluZzsgc2l6ZTogbnVtYmVyIH0+IHtcbiAgICB0cnkge1xuICAgICAgdGhpcy5sb2dnZXIubG9nKGBHZW5lcmF0aW5nIFBERiBmb3IgcmVwb3J0OiAke3JlcG9ydC5pZH1gKTtcbiAgICAgIFxuICAgICAgLy8gR2VuZXJhdGUgUERGIGNvbnRlbnQgYXMgdGV4dCAoc2ltcGxpZmllZCBhcHByb2FjaClcbiAgICAgIGNvbnN0IHBkZkNvbnRlbnQgPSBnZW5lcmF0ZVBERkNvbnRlbnQocmVwb3J0KTtcbiAgICAgIGNvbnN0IHBkZkJ1ZmZlciA9IEJ1ZmZlci5mcm9tKHBkZkNvbnRlbnQsICd1dGYtOCcpO1xuICAgICAgXG4gICAgICAvLyBVcGxvYWQgdG8gc3RvcmFnZSAoaW1wbGVtZW50IHlvdXIgc3RvcmFnZSBsb2dpYylcbiAgICAgIGNvbnN0IGZpbGVOYW1lID0gYHJlcG9ydF8ke3JlcG9ydC5pZH1fJHtEYXRlLm5vdygpfS50eHRgO1xuICAgICAgY29uc3QgZmlsZVVybCA9IGF3YWl0IHRoaXMudXBsb2FkUERGVG9TdG9yYWdlKGZpbGVOYW1lLCBwZGZCdWZmZXIpO1xuICAgICAgXG4gICAgICB0aGlzLmxvZ2dlci5sb2coYFBERiBnZW5lcmF0ZWQgc3VjY2Vzc2Z1bGx5OiAke2ZpbGVOYW1lfWApO1xuICAgICAgXG4gICAgICByZXR1cm4ge1xuICAgICAgICB1cmw6IGZpbGVVcmwsXG4gICAgICAgIHNpemU6IHBkZkJ1ZmZlci5sZW5ndGhcbiAgICAgIH07XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHRoaXMubG9nZ2VyLmVycm9yKGBGYWlsZWQgdG8gZ2VuZXJhdGUgUERGIGZvciByZXBvcnQgJHtyZXBvcnQuaWR9OmAsIGVycm9yKTtcbiAgICAgIHRocm93IGVycm9yO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgYXN5bmMgdXBsb2FkUERGVG9TdG9yYWdlKGZpbGVOYW1lOiBzdHJpbmcsIGJ1ZmZlcjogQnVmZmVyKTogUHJvbWlzZTxzdHJpbmc+IHtcbiAgICAvLyBJbXBsZW1lbnQgeW91ciBmaWxlIHVwbG9hZCBsb2dpYyBoZXJlXG4gICAgLy8gVGhpcyBjb3VsZCBiZSBBV1MgUzMsIEdvb2dsZSBDbG91ZCBTdG9yYWdlLCBBenVyZSBCbG9iIFN0b3JhZ2UsIGV0Yy5cbiAgICBcbiAgICAvLyBGb3Igbm93LCByZXR1cm4gYSBwbGFjZWhvbGRlciBVUkxcbiAgICAvLyBJbiBhIHJlYWwgaW1wbGVtZW50YXRpb24sIHlvdSB3b3VsZDpcbiAgICAvLyAxLiBVcGxvYWQgdGhlIGJ1ZmZlciB0byB5b3VyIHN0b3JhZ2Ugc2VydmljZVxuICAgIC8vIDIuIFJldHVybiB0aGUgcHVibGljIFVSTCBvZiB0aGUgdXBsb2FkZWQgZmlsZVxuICAgIFxuICAgIHJldHVybiBgaHR0cHM6Ly9zdG9yYWdlLmV4YW1wbGUuY29tL3JlcG9ydHMvcGRmLyR7ZmlsZU5hbWV9YDtcbiAgfVxuXG4gIGFzeW5jIGdlbmVyYXRlQ2hhcnRJbWFnZShjaGFydERhdGE6IGFueSwgY2hhcnRUeXBlOiBDaGFydFR5cGUpOiBQcm9taXNlPEJ1ZmZlcj4ge1xuICAgIC8vIFRoaXMgbWV0aG9kIHdvdWxkIGdlbmVyYXRlIGNoYXJ0IGltYWdlcyBmb3IgaW5jbHVzaW9uIGluIFBERnNcbiAgICAvLyBZb3UgY291bGQgdXNlIGxpYnJhcmllcyBsaWtlIENoYXJ0LmpzIHdpdGggY2FudmFzIG9yIHNpbWlsYXJcbiAgICAvLyBGb3Igbm93LCByZXR1cm4gYSBwbGFjZWhvbGRlclxuICAgIFxuICAgIHJldHVybiBCdWZmZXIuZnJvbSgncGxhY2Vob2xkZXItY2hhcnQtaW1hZ2UnKTtcbiAgfVxuXG4gIC8vIFV0aWxpdHkgbWV0aG9kIHRvIGNyZWF0ZSBjdXN0b20gUERGIHRlbXBsYXRlc1xuICBhc3luYyBnZW5lcmF0ZUN1c3RvbVBERihcbiAgICB0ZW1wbGF0ZURhdGE6IHtcbiAgICAgIHRpdGxlOiBzdHJpbmc7XG4gICAgICBzZWN0aW9uczoge1xuICAgICAgICB0aXRsZTogc3RyaW5nO1xuICAgICAgICBjb250ZW50OiBzdHJpbmcgfCBhbnlbXTtcbiAgICAgICAgdHlwZTogJ3RleHQnIHwgJ3RhYmxlJyB8ICdjaGFydCc7XG4gICAgICB9W107XG4gICAgICBtZXRhZGF0YTogUmVjb3JkPHN0cmluZywgYW55PjtcbiAgICB9XG4gICk6IFByb21pc2U8QnVmZmVyPiB7XG4gICAgdGhpcy5sb2dnZXIubG9nKCdHZW5lcmF0aW5nIGN1c3RvbSBQREYnKTtcbiAgICBcbiAgICBsZXQgY29udGVudCA9IGBDdXN0b20gUERGOiAke3RlbXBsYXRlRGF0YS50aXRsZX1cXG5cXG5gO1xuICAgIFxuICAgIHRlbXBsYXRlRGF0YS5zZWN0aW9ucy5mb3JFYWNoKChzZWN0aW9uLCBpbmRleCkgPT4ge1xuICAgICAgY29udGVudCArPSBgU2VjdGlvbiAke2luZGV4ICsgMX06ICR7c2VjdGlvbi50aXRsZX1cXG5gO1xuICAgICAgaWYgKHNlY3Rpb24udHlwZSA9PT0gJ3RleHQnKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gYCR7U3RyaW5nKHNlY3Rpb24uY29udGVudCl9XFxuXFxuYDtcbiAgICAgIH0gZWxzZSBpZiAoc2VjdGlvbi50eXBlID09PSAndGFibGUnICYmIEFycmF5LmlzQXJyYXkoc2VjdGlvbi5jb250ZW50KSkge1xuICAgICAgICBjb250ZW50ICs9IGBUYWJsZSBkYXRhOiAke0pTT04uc3RyaW5naWZ5KHNlY3Rpb24uY29udGVudCwgbnVsbCwgMil9XFxuXFxuYDtcbiAgICAgIH0gZWxzZSBpZiAoc2VjdGlvbi50eXBlID09PSAnY2hhcnQnKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gYENoYXJ0IGRhdGE6ICR7SlNPTi5zdHJpbmdpZnkoc2VjdGlvbi5jb250ZW50LCBudWxsLCAyKX1cXG5cXG5gO1xuICAgICAgfVxuICAgIH0pO1xuICAgIFxuICAgIGNvbnRlbnQgKz0gYFxcbk1ldGFkYXRhOiAke0pTT04uc3RyaW5naWZ5KHRlbXBsYXRlRGF0YS5tZXRhZGF0YSwgbnVsbCwgMil9YDtcbiAgICBcbiAgICByZXR1cm4gQnVmZmVyLmZyb20oY29udGVudCwgJ3V0Zi04Jyk7XG4gIH1cbn0iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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