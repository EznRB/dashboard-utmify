{"version":3,"names":["cov_nb060j3vq","actualCoverage","addBreadcrumb","captureException","PRODUCTION_ORIGINS","s","STAGING_ORIGINS","DEVELOPMENT_ORIGINS","TRUSTED_THIRD_PARTY_ORIGINS","MOBILE_ORIGINS","CorsManager","config","allowedOrigins","originPatterns","isDevelopment","constructor","f","process","env","NODE_ENV","Set","setupAllowedOrigins","defaultConfig","origin","originChecker","bind","methods","allowedHeaders","exposedHeaders","credentials","maxAge","preflightContinue","optionsSuccessStatus","forEach","add","b","push","ENABLE_MOBILE_CORS","customOrigins","CORS_ALLOWED_ORIGINS","split","trim","request","userAgent","headers","isMobileApp","test","isServerToServer","has","pattern","category","message","data","ip","method","url","level","handlePreflight","reply","requestMethod","requestHeaders","code","send","error","header","join","toString","handleActualRequest","createMiddleware","addAllowedOrigin","removeAllowedOrigin","delete","getAllowedOrigins","Array","from","isOriginAllowed","ROUTE_SPECIFIC_CORS","concat","corsPlugin","fastify","options","routeSpecific","corsManager","addHook","routeConfig","Object","entries","routeCorsManager","routePattern","replace","regex","RegExp","decorate","get","requestOrigin","isAllowed","environment","routeSpecificConfigs","keys","validateCorsConfig","errors","validMethods","invalidMethods","filter","includes","length","undefined","valid"],"sources":["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\middleware\\cors.ts"],"sourcesContent":["import { FastifyInstance, FastifyRequest, FastifyReply } from 'fastify';\nimport { addBreadcrumb, captureException } from '@sentry/node';\n\n// CORS configuration interface\ninterface CorsConfig {\n  origin: boolean | string | string[] | RegExp | ((origin: string, request: FastifyRequest) => boolean);\n  methods?: string[];\n  allowedHeaders?: string[];\n  exposedHeaders?: string[];\n  credentials?: boolean;\n  maxAge?: number;\n  preflightContinue?: boolean;\n  optionsSuccessStatus?: number;\n}\n\n// Environment-specific configurations\nconst PRODUCTION_ORIGINS = [\n  'https://utmify.com',\n  'https://www.utmify.com',\n  'https://app.utmify.com',\n  'https://dashboard.utmify.com',\n  // Add your production domains here\n];\n\nconst STAGING_ORIGINS = [\n  'https://staging.utmify.com',\n  'https://staging-app.utmify.com',\n  'https://dev.utmify.com',\n  // Add your staging domains here\n];\n\nconst DEVELOPMENT_ORIGINS = [\n  'http://localhost:3000',\n  'http://localhost:3001',\n  'http://localhost:3030', // Grafana\n  'http://localhost:9090', // Prometheus\n  'http://127.0.0.1:3000',\n  'http://127.0.0.1:3001',\n  'http://0.0.0.0:3000',\n  'http://0.0.0.0:3001',\n  // Add more development origins as needed\n];\n\n// Trusted third-party origins (for webhooks, integrations, etc.)\nconst TRUSTED_THIRD_PARTY_ORIGINS = [\n  'https://hooks.stripe.com',\n  'https://api.github.com',\n  'https://discord.com',\n  'https://slack.com',\n  // Add trusted third-party services\n];\n\n// Mobile app origins (if you have mobile apps)\nconst MOBILE_ORIGINS = [\n  'capacitor://localhost',\n  'ionic://localhost',\n  'http://localhost',\n  'file://',\n];\n\nclass CorsManager {\n  private config: CorsConfig;\n  private allowedOrigins: Set<string>;\n  private originPatterns: RegExp[];\n  private isDevelopment: boolean;\n  \n  constructor(config?: Partial<CorsConfig>) {\n    this.isDevelopment = process.env.NODE_ENV === 'development';\n    this.allowedOrigins = new Set();\n    this.originPatterns = [];\n    \n    // Set up allowed origins based on environment\n    this.setupAllowedOrigins();\n    \n    // Default CORS configuration\n    const defaultConfig: CorsConfig = {\n      origin: this.originChecker.bind(this),\n      methods: ['GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'OPTIONS', 'HEAD'],\n      allowedHeaders: [\n        'Origin',\n        'X-Requested-With',\n        'Content-Type',\n        'Accept',\n        'Authorization',\n        'X-API-Key',\n        'X-Client-Version',\n        'X-Request-ID',\n        'X-Forwarded-For',\n        'X-Real-IP',\n        'User-Agent',\n        'Cache-Control',\n        'Pragma',\n      ],\n      exposedHeaders: [\n        'X-RateLimit-Limit',\n        'X-RateLimit-Remaining',\n        'X-RateLimit-Reset',\n        'X-Request-ID',\n        'X-Response-Time',\n        'X-API-Version',\n      ],\n      credentials: true,\n      maxAge: 86400, // 24 hours\n      preflightContinue: false,\n      optionsSuccessStatus: 204,\n    };\n    \n    this.config = { ...defaultConfig, ...config };\n  }\n  \n  private setupAllowedOrigins(): void {\n    // Always allow production origins\n    PRODUCTION_ORIGINS.forEach(origin => this.allowedOrigins.add(origin));\n    \n    // Add staging origins in non-production environments\n    if (process.env.NODE_ENV !== 'production') {\n      STAGING_ORIGINS.forEach(origin => this.allowedOrigins.add(origin));\n    }\n    \n    // Add development origins in development\n    if (this.isDevelopment) {\n      DEVELOPMENT_ORIGINS.forEach(origin => this.allowedOrigins.add(origin));\n      \n      // Add dynamic localhost patterns for development\n      this.originPatterns.push(\n        /^http:\\/\\/localhost:\\d+$/,\n        /^http:\\/\\/127\\.0\\.0\\.1:\\d+$/,\n        /^http:\\/\\/0\\.0\\.0\\.0:\\d+$/,\n      );\n    }\n    \n    // Add trusted third-party origins\n    TRUSTED_THIRD_PARTY_ORIGINS.forEach(origin => this.allowedOrigins.add(origin));\n    \n    // Add mobile origins if mobile support is enabled\n    if (process.env.ENABLE_MOBILE_CORS === 'true') {\n      MOBILE_ORIGINS.forEach(origin => this.allowedOrigins.add(origin));\n    }\n    \n    // Add custom origins from environment variables\n    const customOrigins = process.env.CORS_ALLOWED_ORIGINS;\n    if (customOrigins) {\n      customOrigins.split(',').forEach(origin => {\n        this.allowedOrigins.add(origin.trim());\n      });\n    }\n  }\n  \n  private originChecker(origin: string, request: FastifyRequest): boolean {\n    // Allow requests with no origin (e.g., mobile apps, Postman)\n    if (!origin) {\n      // In production, be more strict about requests without origin\n      if (process.env.NODE_ENV === 'production') {\n        // Check if it's a server-to-server request or mobile app\n        const userAgent = request.headers['user-agent'] || '';\n        const isMobileApp = /Mobile|Android|iOS|iPhone|iPad/.test(userAgent);\n        const isServerToServer = !userAgent || /curl|wget|axios|fetch|node|python|java|go|php/.test(userAgent);\n        \n        return isMobileApp || isServerToServer;\n      }\n      return true; // Allow in development\n    }\n    \n    // Check exact matches\n    if (this.allowedOrigins.has(origin)) {\n      return true;\n    }\n    \n    // Check pattern matches\n    for (const pattern of this.originPatterns) {\n      if (pattern.test(origin)) {\n        return true;\n      }\n    }\n    \n    // Log rejected origins for debugging\n    addBreadcrumb({\n      category: 'cors',\n      message: 'CORS origin rejected',\n      data: {\n        origin,\n        userAgent: request.headers['user-agent'],\n        ip: request.ip,\n        method: request.method,\n        url: request.url,\n      },\n      level: 'info',\n    });\n    \n    return false;\n  }\n  \n  // Handle preflight requests\n  private handlePreflight(request: FastifyRequest, reply: FastifyReply): void {\n    const origin = request.headers.origin as string;\n    const requestMethod = request.headers['access-control-request-method'] as string;\n    const requestHeaders = request.headers['access-control-request-headers'] as string;\n    \n    // Check if origin is allowed\n    if (!this.originChecker(origin, request)) {\n      reply.code(403).send({ error: 'CORS policy violation' });\n      return;\n    }\n    \n    // Set CORS headers\n    reply.header('Access-Control-Allow-Origin', origin || '*');\n    \n    if (this.config.credentials) {\n      reply.header('Access-Control-Allow-Credentials', 'true');\n    }\n    \n    if (this.config.methods) {\n      reply.header('Access-Control-Allow-Methods', this.config.methods.join(', '));\n    }\n    \n    if (this.config.allowedHeaders) {\n      reply.header('Access-Control-Allow-Headers', this.config.allowedHeaders.join(', '));\n    }\n    \n    if (this.config.maxAge) {\n      reply.header('Access-Control-Max-Age', this.config.maxAge.toString());\n    }\n    \n    // Log preflight request\n    addBreadcrumb({\n      category: 'cors',\n      message: 'CORS preflight request',\n      data: {\n        origin,\n        method: requestMethod,\n        headers: requestHeaders,\n        ip: request.ip,\n      },\n    });\n    \n    reply.code(this.config.optionsSuccessStatus || 204).send();\n  }\n  \n  // Handle actual requests\n  private handleActualRequest(request: FastifyRequest, reply: FastifyReply): void {\n    const origin = request.headers.origin as string;\n    \n    // Check if origin is allowed\n    if (origin && !this.originChecker(origin, request)) {\n      // Don't block the request, but don't set CORS headers\n      return;\n    }\n    \n    // Set CORS headers\n    if (origin) {\n      reply.header('Access-Control-Allow-Origin', origin);\n    } else if (this.isDevelopment) {\n      reply.header('Access-Control-Allow-Origin', '*');\n    }\n    \n    if (this.config.credentials && origin) {\n      reply.header('Access-Control-Allow-Credentials', 'true');\n    }\n    \n    if (this.config.exposedHeaders) {\n      reply.header('Access-Control-Expose-Headers', this.config.exposedHeaders.join(', '));\n    }\n  }\n  \n  // Create middleware function\n  createMiddleware() {\n    return async (request: FastifyRequest, reply: FastifyReply) => {\n      try {\n        if (request.method === 'OPTIONS') {\n          this.handlePreflight(request, reply);\n        } else {\n          this.handleActualRequest(request, reply);\n        }\n      } catch (error) {\n        captureException(error);\n        // Don't fail the request on CORS errors\n      }\n    };\n  }\n  \n  // Add origin to allowed list (useful for dynamic configuration)\n  addAllowedOrigin(origin: string): void {\n    this.allowedOrigins.add(origin);\n  }\n  \n  // Remove origin from allowed list\n  removeAllowedOrigin(origin: string): void {\n    this.allowedOrigins.delete(origin);\n  }\n  \n  // Get current allowed origins\n  getAllowedOrigins(): string[] {\n    return Array.from(this.allowedOrigins);\n  }\n  \n  // Check if origin is allowed\n  isOriginAllowed(origin: string, request?: FastifyRequest): boolean {\n    if (!request) {\n      // Create a mock request for checking\n      request = { headers: {}, ip: '127.0.0.1' } as FastifyRequest;\n    }\n    return this.originChecker(origin, request);\n  }\n}\n\n// Route-specific CORS configurations\nconst ROUTE_SPECIFIC_CORS = {\n  // Public API endpoints - more permissive\n  '/api/public/*': {\n    origin: true, // Allow all origins\n    credentials: false,\n  },\n  \n  // Analytics endpoints - allow tracking from any domain\n  '/api/analytics/*': {\n    origin: true,\n    credentials: false,\n    methods: ['GET', 'POST', 'OPTIONS'],\n  },\n  \n  // UTM redirect endpoints - very permissive\n  '/r/*': {\n    origin: true,\n    credentials: false,\n    methods: ['GET', 'HEAD', 'OPTIONS'],\n  },\n  \n  // Webhook endpoints - restrict to specific services\n  '/api/webhooks/*': {\n    origin: TRUSTED_THIRD_PARTY_ORIGINS,\n    credentials: false,\n    methods: ['POST', 'OPTIONS'],\n  },\n  \n  // Admin endpoints - very restrictive\n  '/api/admin/*': {\n    origin: PRODUCTION_ORIGINS.concat(STAGING_ORIGINS),\n    credentials: true,\n    methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\n  },\n};\n\n// Plugin to register CORS middleware\nexport async function corsPlugin(fastify: FastifyInstance, options: {\n  config?: Partial<CorsConfig>;\n  routeSpecific?: boolean;\n} = {}) {\n  const { config, routeSpecific = true } = options;\n  \n  const corsManager = new CorsManager(config);\n  \n  // Global CORS middleware\n  fastify.addHook('onRequest', corsManager.createMiddleware());\n  \n  // Route-specific CORS configurations\n  if (routeSpecific) {\n    for (const [pattern, routeConfig] of Object.entries(ROUTE_SPECIFIC_CORS)) {\n      const routeCorsManager = new CorsManager(routeConfig);\n      \n      fastify.addHook('onRequest', async (request, reply) => {\n        // Simple pattern matching (you might want to use a more sophisticated matcher)\n        const routePattern = pattern.replace('*', '.*');\n        const regex = new RegExp(`^${routePattern}$`);\n        \n        if (regex.test(request.url)) {\n          await routeCorsManager.createMiddleware()(request, reply);\n        }\n      });\n    }\n  }\n  \n  // Utility functions\n  fastify.decorate('addCorsOrigin', (origin: string) => {\n    corsManager.addAllowedOrigin(origin);\n  });\n  \n  fastify.decorate('removeCorsOrigin', (origin: string) => {\n    corsManager.removeAllowedOrigin(origin);\n  });\n  \n  fastify.decorate('getCorsOrigins', () => {\n    return corsManager.getAllowedOrigins();\n  });\n  \n  fastify.decorate('checkCorsOrigin', (origin: string, request?: FastifyRequest) => {\n    return corsManager.isOriginAllowed(origin, request);\n  });\n  \n  // CORS configuration endpoint (for debugging in development)\n  if (process.env.NODE_ENV === 'development') {\n    fastify.get('/api/debug/cors', async (request, reply) => {\n      return {\n        allowedOrigins: corsManager.getAllowedOrigins(),\n        requestOrigin: request.headers.origin,\n        isAllowed: corsManager.isOriginAllowed(request.headers.origin as string, request),\n        environment: process.env.NODE_ENV,\n        routeSpecificConfigs: Object.keys(ROUTE_SPECIFIC_CORS),\n      };\n    });\n  }\n}\n\n// Utility function to validate CORS configuration\nexport function validateCorsConfig(config: Partial<CorsConfig>): {\n  valid: boolean;\n  errors: string[];\n} {\n  const errors: string[] = [];\n  \n  // Validate methods\n  if (config.methods) {\n    const validMethods = ['GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'OPTIONS', 'HEAD'];\n    const invalidMethods = config.methods.filter(method => !validMethods.includes(method));\n    if (invalidMethods.length > 0) {\n      errors.push(`Invalid HTTP methods: ${invalidMethods.join(', ')}`);\n    }\n  }\n  \n  // Validate maxAge\n  if (config.maxAge !== undefined && (config.maxAge < 0 || config.maxAge > 86400)) {\n    errors.push('maxAge should be between 0 and 86400 seconds');\n  }\n  \n  // Validate optionsSuccessStatus\n  if (config.optionsSuccessStatus !== undefined && \n      (config.optionsSuccessStatus < 200 || config.optionsSuccessStatus >= 300)) {\n    errors.push('optionsSuccessStatus should be a 2xx status code');\n  }\n  \n  // Security warnings\n  if (process.env.NODE_ENV === 'production') {\n    if (config.origin === true) {\n      errors.push('Using origin: true in production is not recommended for security');\n    }\n    \n    if (config.credentials === true && config.origin === true) {\n      errors.push('Using credentials: true with origin: true is a security risk');\n    }\n  }\n  \n  return {\n    valid: errors.length === 0,\n    errors,\n  };\n}\n\n// Export configurations and classes\nexport { CorsManager, ROUTE_SPECIFIC_CORS };\nexport type { CorsConfig };\nexport default corsPlugin;"],"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","ignoreList":[]}