d019b3d63e9cbc69e531d232d4354a0d
/* istanbul ignore next */
function cov_nb060j3vq() {
  var path = "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\middleware\\cors.ts";
  var hash = "e0514f0f35de586c93cb1addb7c43a64926c32cf";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\middleware\\cors.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 27
        },
        end: {
          line: 9,
          column: 1
        }
      },
      "1": {
        start: {
          line: 10,
          column: 24
        },
        end: {
          line: 15,
          column: 1
        }
      },
      "2": {
        start: {
          line: 16,
          column: 28
        },
        end: {
          line: 26,
          column: 1
        }
      },
      "3": {
        start: {
          line: 28,
          column: 36
        },
        end: {
          line: 34,
          column: 1
        }
      },
      "4": {
        start: {
          line: 36,
          column: 23
        },
        end: {
          line: 41,
          column: 1
        }
      },
      "5": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 68
        }
      },
      "6": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 40
        }
      },
      "7": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 33
        }
      },
      "8": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 35
        }
      },
      "9": {
        start: {
          line: 54,
          column: 30
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "10": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 54
        }
      },
      "11": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 78
        }
      },
      "12": {
        start: {
          line: 89,
          column: 45
        },
        end: {
          line: 89,
          column: 76
        }
      },
      "13": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 93,
          column: 9
        }
      },
      "14": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 79
        }
      },
      "15": {
        start: {
          line: 92,
          column: 46
        },
        end: {
          line: 92,
          column: 77
        }
      },
      "16": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 99,
          column: 9
        }
      },
      "17": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 83
        }
      },
      "18": {
        start: {
          line: 96,
          column: 50
        },
        end: {
          line: 96,
          column: 81
        }
      },
      "19": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 125
        }
      },
      "20": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 101,
          column: 87
        }
      },
      "21": {
        start: {
          line: 101,
          column: 54
        },
        end: {
          line: 101,
          column: 85
        }
      },
      "22": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "23": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 78
        }
      },
      "24": {
        start: {
          line: 104,
          column: 45
        },
        end: {
          line: 104,
          column: 76
        }
      },
      "25": {
        start: {
          line: 107,
          column: 30
        },
        end: {
          line: 107,
          column: 62
        }
      },
      "26": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 112,
          column: 9
        }
      },
      "27": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 111,
          column: 15
        }
      },
      "28": {
        start: {
          line: 110,
          column: 16
        },
        end: {
          line: 110,
          column: 55
        }
      },
      "29": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 126,
          column: 9
        }
      },
      "30": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 124,
          column: 13
        }
      },
      "31": {
        start: {
          line: 120,
          column: 34
        },
        end: {
          line: 120,
          column: 69
        }
      },
      "32": {
        start: {
          line: 121,
          column: 36
        },
        end: {
          line: 121,
          column: 84
        }
      },
      "33": {
        start: {
          line: 122,
          column: 41
        },
        end: {
          line: 122,
          column: 118
        }
      },
      "34": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 123,
          column: 55
        }
      },
      "35": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 125,
          column: 24
        }
      },
      "36": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 130,
          column: 9
        }
      },
      "37": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 24
        }
      },
      "38": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 136,
          column: 9
        }
      },
      "39": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 135,
          column: 13
        }
      },
      "40": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 134,
          column: 28
        }
      },
      "41": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 149,
          column: 11
        }
      },
      "42": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 21
        }
      },
      "43": {
        start: {
          line: 154,
          column: 23
        },
        end: {
          line: 154,
          column: 45
        }
      },
      "44": {
        start: {
          line: 155,
          column: 30
        },
        end: {
          line: 155,
          column: 78
        }
      },
      "45": {
        start: {
          line: 156,
          column: 31
        },
        end: {
          line: 156,
          column: 80
        }
      },
      "46": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 161,
          column: 9
        }
      },
      "47": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 159,
          column: 69
        }
      },
      "48": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 160,
          column: 19
        }
      },
      "49": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 67
        }
      },
      "50": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 166,
          column: 9
        }
      },
      "51": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 69
        }
      },
      "52": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 169,
          column: 9
        }
      },
      "53": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 168,
          column: 89
        }
      },
      "54": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 172,
          column: 9
        }
      },
      "55": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 171,
          column: 96
        }
      },
      "56": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 175,
          column: 9
        }
      },
      "57": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 82
        }
      },
      "58": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 186,
          column: 11
        }
      },
      "59": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 187,
          column: 67
        }
      },
      "60": {
        start: {
          line: 191,
          column: 23
        },
        end: {
          line: 191,
          column: 45
        }
      },
      "61": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 196,
          column: 9
        }
      },
      "62": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 19
        }
      },
      "63": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 203,
          column: 9
        }
      },
      "64": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 199,
          column: 64
        }
      },
      "65": {
        start: {
          line: 201,
          column: 13
        },
        end: {
          line: 203,
          column: 9
        }
      },
      "66": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 202,
          column: 61
        }
      },
      "67": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 206,
          column: 9
        }
      },
      "68": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 205,
          column: 69
        }
      },
      "69": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 209,
          column: 9
        }
      },
      "70": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 208,
          column: 97
        }
      },
      "71": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 226,
          column: 10
        }
      },
      "72": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 225,
          column: 13
        }
      },
      "73": {
        start: {
          line: 215,
          column: 16
        },
        end: {
          line: 220,
          column: 17
        }
      },
      "74": {
        start: {
          line: 216,
          column: 20
        },
        end: {
          line: 216,
          column: 57
        }
      },
      "75": {
        start: {
          line: 219,
          column: 20
        },
        end: {
          line: 219,
          column: 61
        }
      },
      "76": {
        start: {
          line: 223,
          column: 16
        },
        end: {
          line: 223,
          column: 40
        }
      },
      "77": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 230,
          column: 40
        }
      },
      "78": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 234,
          column: 43
        }
      },
      "79": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 238,
          column: 47
        }
      },
      "80": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 245,
          column: 9
        }
      },
      "81": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 244,
          column: 55
        }
      },
      "82": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 246,
          column: 51
        }
      },
      "83": {
        start: {
          line: 250,
          column: 28
        },
        end: {
          line: 280,
          column: 1
        }
      },
      "84": {
        start: {
          line: 283,
          column: 45
        },
        end: {
          line: 283,
          column: 52
        }
      },
      "85": {
        start: {
          line: 284,
          column: 24
        },
        end: {
          line: 284,
          column: 47
        }
      },
      "86": {
        start: {
          line: 286,
          column: 4
        },
        end: {
          line: 286,
          column: 65
        }
      },
      "87": {
        start: {
          line: 288,
          column: 4
        },
        end: {
          line: 300,
          column: 5
        }
      },
      "88": {
        start: {
          line: 289,
          column: 8
        },
        end: {
          line: 299,
          column: 9
        }
      },
      "89": {
        start: {
          line: 290,
          column: 37
        },
        end: {
          line: 290,
          column: 65
        }
      },
      "90": {
        start: {
          line: 291,
          column: 12
        },
        end: {
          line: 298,
          column: 15
        }
      },
      "91": {
        start: {
          line: 293,
          column: 37
        },
        end: {
          line: 293,
          column: 63
        }
      },
      "92": {
        start: {
          line: 294,
          column: 30
        },
        end: {
          line: 294,
          column: 61
        }
      },
      "93": {
        start: {
          line: 295,
          column: 16
        },
        end: {
          line: 297,
          column: 17
        }
      },
      "94": {
        start: {
          line: 296,
          column: 20
        },
        end: {
          line: 296,
          column: 78
        }
      },
      "95": {
        start: {
          line: 302,
          column: 4
        },
        end: {
          line: 304,
          column: 7
        }
      },
      "96": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 303,
          column: 45
        }
      },
      "97": {
        start: {
          line: 305,
          column: 4
        },
        end: {
          line: 307,
          column: 7
        }
      },
      "98": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 306,
          column: 48
        }
      },
      "99": {
        start: {
          line: 308,
          column: 4
        },
        end: {
          line: 310,
          column: 7
        }
      },
      "100": {
        start: {
          line: 309,
          column: 8
        },
        end: {
          line: 309,
          column: 47
        }
      },
      "101": {
        start: {
          line: 311,
          column: 4
        },
        end: {
          line: 313,
          column: 7
        }
      },
      "102": {
        start: {
          line: 312,
          column: 8
        },
        end: {
          line: 312,
          column: 60
        }
      },
      "103": {
        start: {
          line: 315,
          column: 4
        },
        end: {
          line: 325,
          column: 5
        }
      },
      "104": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 324,
          column: 11
        }
      },
      "105": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 323,
          column: 14
        }
      },
      "106": {
        start: {
          line: 329,
          column: 19
        },
        end: {
          line: 329,
          column: 21
        }
      },
      "107": {
        start: {
          line: 331,
          column: 4
        },
        end: {
          line: 337,
          column: 5
        }
      },
      "108": {
        start: {
          line: 332,
          column: 29
        },
        end: {
          line: 332,
          column: 89
        }
      },
      "109": {
        start: {
          line: 333,
          column: 31
        },
        end: {
          line: 333,
          column: 94
        }
      },
      "110": {
        start: {
          line: 333,
          column: 63
        },
        end: {
          line: 333,
          column: 93
        }
      },
      "111": {
        start: {
          line: 334,
          column: 8
        },
        end: {
          line: 336,
          column: 9
        }
      },
      "112": {
        start: {
          line: 335,
          column: 12
        },
        end: {
          line: 335,
          column: 78
        }
      },
      "113": {
        start: {
          line: 339,
          column: 4
        },
        end: {
          line: 341,
          column: 5
        }
      },
      "114": {
        start: {
          line: 340,
          column: 8
        },
        end: {
          line: 340,
          column: 68
        }
      },
      "115": {
        start: {
          line: 343,
          column: 4
        },
        end: {
          line: 346,
          column: 5
        }
      },
      "116": {
        start: {
          line: 345,
          column: 8
        },
        end: {
          line: 345,
          column: 72
        }
      },
      "117": {
        start: {
          line: 348,
          column: 4
        },
        end: {
          line: 355,
          column: 5
        }
      },
      "118": {
        start: {
          line: 349,
          column: 8
        },
        end: {
          line: 351,
          column: 9
        }
      },
      "119": {
        start: {
          line: 350,
          column: 12
        },
        end: {
          line: 350,
          column: 92
        }
      },
      "120": {
        start: {
          line: 352,
          column: 8
        },
        end: {
          line: 354,
          column: 9
        }
      },
      "121": {
        start: {
          line: 353,
          column: 12
        },
        end: {
          line: 353,
          column: 88
        }
      },
      "122": {
        start: {
          line: 356,
          column: 4
        },
        end: {
          line: 359,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        loc: {
          start: {
            line: 47,
            column: 24
          },
          end: {
            line: 86,
            column: 5
          }
        },
        line: 47
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 87,
            column: 5
          }
        },
        loc: {
          start: {
            line: 87,
            column: 26
          },
          end: {
            line: 113,
            column: 5
          }
        },
        line: 87
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 89,
            column: 35
          },
          end: {
            line: 89,
            column: 36
          }
        },
        loc: {
          start: {
            line: 89,
            column: 45
          },
          end: {
            line: 89,
            column: 76
          }
        },
        line: 89
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 92,
            column: 36
          },
          end: {
            line: 92,
            column: 37
          }
        },
        loc: {
          start: {
            line: 92,
            column: 46
          },
          end: {
            line: 92,
            column: 77
          }
        },
        line: 92
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 96,
            column: 40
          },
          end: {
            line: 96,
            column: 41
          }
        },
        loc: {
          start: {
            line: 96,
            column: 50
          },
          end: {
            line: 96,
            column: 81
          }
        },
        line: 96
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 101,
            column: 44
          },
          end: {
            line: 101,
            column: 45
          }
        },
        loc: {
          start: {
            line: 101,
            column: 54
          },
          end: {
            line: 101,
            column: 85
          }
        },
        line: 101
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 104,
            column: 35
          },
          end: {
            line: 104,
            column: 36
          }
        },
        loc: {
          start: {
            line: 104,
            column: 45
          },
          end: {
            line: 104,
            column: 76
          }
        },
        line: 104
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 109,
            column: 45
          },
          end: {
            line: 109,
            column: 46
          }
        },
        loc: {
          start: {
            line: 109,
            column: 55
          },
          end: {
            line: 111,
            column: 13
          }
        },
        line: 109
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 114,
            column: 5
          }
        },
        loc: {
          start: {
            line: 114,
            column: 35
          },
          end: {
            line: 151,
            column: 5
          }
        },
        line: 114
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 153,
            column: 4
          },
          end: {
            line: 153,
            column: 5
          }
        },
        loc: {
          start: {
            line: 153,
            column: 36
          },
          end: {
            line: 188,
            column: 5
          }
        },
        line: 153
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 190,
            column: 4
          },
          end: {
            line: 190,
            column: 5
          }
        },
        loc: {
          start: {
            line: 190,
            column: 40
          },
          end: {
            line: 210,
            column: 5
          }
        },
        line: 190
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 212,
            column: 4
          },
          end: {
            line: 212,
            column: 5
          }
        },
        loc: {
          start: {
            line: 212,
            column: 23
          },
          end: {
            line: 227,
            column: 5
          }
        },
        line: 212
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 213,
            column: 15
          },
          end: {
            line: 213,
            column: 16
          }
        },
        loc: {
          start: {
            line: 213,
            column: 41
          },
          end: {
            line: 226,
            column: 9
          }
        },
        line: 213
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 229,
            column: 4
          },
          end: {
            line: 229,
            column: 5
          }
        },
        loc: {
          start: {
            line: 229,
            column: 29
          },
          end: {
            line: 231,
            column: 5
          }
        },
        line: 229
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 233,
            column: 4
          },
          end: {
            line: 233,
            column: 5
          }
        },
        loc: {
          start: {
            line: 233,
            column: 32
          },
          end: {
            line: 235,
            column: 5
          }
        },
        line: 233
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 237,
            column: 4
          },
          end: {
            line: 237,
            column: 5
          }
        },
        loc: {
          start: {
            line: 237,
            column: 24
          },
          end: {
            line: 239,
            column: 5
          }
        },
        line: 237
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 241,
            column: 4
          },
          end: {
            line: 241,
            column: 5
          }
        },
        loc: {
          start: {
            line: 241,
            column: 37
          },
          end: {
            line: 247,
            column: 5
          }
        },
        line: 241
      },
      "17": {
        name: "corsPlugin",
        decl: {
          start: {
            line: 282,
            column: 22
          },
          end: {
            line: 282,
            column: 32
          }
        },
        loc: {
          start: {
            line: 282,
            column: 56
          },
          end: {
            line: 326,
            column: 1
          }
        },
        line: 282
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 291,
            column: 41
          },
          end: {
            line: 291,
            column: 42
          }
        },
        loc: {
          start: {
            line: 291,
            column: 67
          },
          end: {
            line: 298,
            column: 13
          }
        },
        line: 291
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 302,
            column: 38
          },
          end: {
            line: 302,
            column: 39
          }
        },
        loc: {
          start: {
            line: 302,
            column: 50
          },
          end: {
            line: 304,
            column: 5
          }
        },
        line: 302
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 305,
            column: 41
          },
          end: {
            line: 305,
            column: 42
          }
        },
        loc: {
          start: {
            line: 305,
            column: 53
          },
          end: {
            line: 307,
            column: 5
          }
        },
        line: 305
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 308,
            column: 39
          },
          end: {
            line: 308,
            column: 40
          }
        },
        loc: {
          start: {
            line: 308,
            column: 45
          },
          end: {
            line: 310,
            column: 5
          }
        },
        line: 308
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 311,
            column: 40
          },
          end: {
            line: 311,
            column: 41
          }
        },
        loc: {
          start: {
            line: 311,
            column: 61
          },
          end: {
            line: 313,
            column: 5
          }
        },
        line: 311
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 316,
            column: 39
          },
          end: {
            line: 316,
            column: 40
          }
        },
        loc: {
          start: {
            line: 316,
            column: 65
          },
          end: {
            line: 324,
            column: 9
          }
        },
        line: 316
      },
      "24": {
        name: "validateCorsConfig",
        decl: {
          start: {
            line: 328,
            column: 16
          },
          end: {
            line: 328,
            column: 34
          }
        },
        loc: {
          start: {
            line: 328,
            column: 43
          },
          end: {
            line: 360,
            column: 1
          }
        },
        line: 328
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 333,
            column: 53
          },
          end: {
            line: 333,
            column: 54
          }
        },
        loc: {
          start: {
            line: 333,
            column: 63
          },
          end: {
            line: 333,
            column: 93
          }
        },
        line: 333
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "1": {
        loc: {
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 99,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 99,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "2": {
        loc: {
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "3": {
        loc: {
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "4": {
        loc: {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 126,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 126,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "5": {
        loc: {
          start: {
            line: 118,
            column: 12
          },
          end: {
            line: 124,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 12
          },
          end: {
            line: 124,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "6": {
        loc: {
          start: {
            line: 120,
            column: 34
          },
          end: {
            line: 120,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 34
          },
          end: {
            line: 120,
            column: 63
          }
        }, {
          start: {
            line: 120,
            column: 67
          },
          end: {
            line: 120,
            column: 69
          }
        }],
        line: 120
      },
      "7": {
        loc: {
          start: {
            line: 122,
            column: 41
          },
          end: {
            line: 122,
            column: 118
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 122,
            column: 41
          },
          end: {
            line: 122,
            column: 51
          }
        }, {
          start: {
            line: 122,
            column: 55
          },
          end: {
            line: 122,
            column: 118
          }
        }],
        line: 122
      },
      "8": {
        loc: {
          start: {
            line: 123,
            column: 23
          },
          end: {
            line: 123,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 123,
            column: 23
          },
          end: {
            line: 123,
            column: 34
          }
        }, {
          start: {
            line: 123,
            column: 38
          },
          end: {
            line: 123,
            column: 54
          }
        }],
        line: 123
      },
      "9": {
        loc: {
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "10": {
        loc: {
          start: {
            line: 133,
            column: 12
          },
          end: {
            line: 135,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 133,
            column: 12
          },
          end: {
            line: 135,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 133
      },
      "11": {
        loc: {
          start: {
            line: 158,
            column: 8
          },
          end: {
            line: 161,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 8
          },
          end: {
            line: 161,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 158
      },
      "12": {
        loc: {
          start: {
            line: 163,
            column: 52
          },
          end: {
            line: 163,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 163,
            column: 52
          },
          end: {
            line: 163,
            column: 58
          }
        }, {
          start: {
            line: 163,
            column: 62
          },
          end: {
            line: 163,
            column: 65
          }
        }],
        line: 163
      },
      "13": {
        loc: {
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 166,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 166,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 164
      },
      "14": {
        loc: {
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 169,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 169,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 167
      },
      "15": {
        loc: {
          start: {
            line: 170,
            column: 8
          },
          end: {
            line: 172,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 8
          },
          end: {
            line: 172,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 170
      },
      "16": {
        loc: {
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 175,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 175,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "17": {
        loc: {
          start: {
            line: 187,
            column: 19
          },
          end: {
            line: 187,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 187,
            column: 19
          },
          end: {
            line: 187,
            column: 51
          }
        }, {
          start: {
            line: 187,
            column: 55
          },
          end: {
            line: 187,
            column: 58
          }
        }],
        line: 187
      },
      "18": {
        loc: {
          start: {
            line: 193,
            column: 8
          },
          end: {
            line: 196,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 193,
            column: 8
          },
          end: {
            line: 196,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 193
      },
      "19": {
        loc: {
          start: {
            line: 193,
            column: 12
          },
          end: {
            line: 193,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 193,
            column: 12
          },
          end: {
            line: 193,
            column: 18
          }
        }, {
          start: {
            line: 193,
            column: 22
          },
          end: {
            line: 193,
            column: 58
          }
        }],
        line: 193
      },
      "20": {
        loc: {
          start: {
            line: 198,
            column: 8
          },
          end: {
            line: 203,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 198,
            column: 8
          },
          end: {
            line: 203,
            column: 9
          }
        }, {
          start: {
            line: 201,
            column: 13
          },
          end: {
            line: 203,
            column: 9
          }
        }],
        line: 198
      },
      "21": {
        loc: {
          start: {
            line: 201,
            column: 13
          },
          end: {
            line: 203,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 201,
            column: 13
          },
          end: {
            line: 203,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 201
      },
      "22": {
        loc: {
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 206,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 206,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 204
      },
      "23": {
        loc: {
          start: {
            line: 204,
            column: 12
          },
          end: {
            line: 204,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 204,
            column: 12
          },
          end: {
            line: 204,
            column: 35
          }
        }, {
          start: {
            line: 204,
            column: 39
          },
          end: {
            line: 204,
            column: 45
          }
        }],
        line: 204
      },
      "24": {
        loc: {
          start: {
            line: 207,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 207,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 207
      },
      "25": {
        loc: {
          start: {
            line: 215,
            column: 16
          },
          end: {
            line: 220,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 215,
            column: 16
          },
          end: {
            line: 220,
            column: 17
          }
        }, {
          start: {
            line: 218,
            column: 21
          },
          end: {
            line: 220,
            column: 17
          }
        }],
        line: 215
      },
      "26": {
        loc: {
          start: {
            line: 242,
            column: 8
          },
          end: {
            line: 245,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 242,
            column: 8
          },
          end: {
            line: 245,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 242
      },
      "27": {
        loc: {
          start: {
            line: 282,
            column: 42
          },
          end: {
            line: 282,
            column: 54
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 282,
            column: 52
          },
          end: {
            line: 282,
            column: 54
          }
        }],
        line: 282
      },
      "28": {
        loc: {
          start: {
            line: 283,
            column: 20
          },
          end: {
            line: 283,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 283,
            column: 36
          },
          end: {
            line: 283,
            column: 40
          }
        }],
        line: 283
      },
      "29": {
        loc: {
          start: {
            line: 288,
            column: 4
          },
          end: {
            line: 300,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 288,
            column: 4
          },
          end: {
            line: 300,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 288
      },
      "30": {
        loc: {
          start: {
            line: 295,
            column: 16
          },
          end: {
            line: 297,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 295,
            column: 16
          },
          end: {
            line: 297,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 295
      },
      "31": {
        loc: {
          start: {
            line: 315,
            column: 4
          },
          end: {
            line: 325,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 315,
            column: 4
          },
          end: {
            line: 325,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 315
      },
      "32": {
        loc: {
          start: {
            line: 331,
            column: 4
          },
          end: {
            line: 337,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 331,
            column: 4
          },
          end: {
            line: 337,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 331
      },
      "33": {
        loc: {
          start: {
            line: 334,
            column: 8
          },
          end: {
            line: 336,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 334,
            column: 8
          },
          end: {
            line: 336,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 334
      },
      "34": {
        loc: {
          start: {
            line: 339,
            column: 4
          },
          end: {
            line: 341,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 339,
            column: 4
          },
          end: {
            line: 341,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 339
      },
      "35": {
        loc: {
          start: {
            line: 339,
            column: 8
          },
          end: {
            line: 339,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 339,
            column: 8
          },
          end: {
            line: 339,
            column: 35
          }
        }, {
          start: {
            line: 339,
            column: 40
          },
          end: {
            line: 339,
            column: 57
          }
        }, {
          start: {
            line: 339,
            column: 61
          },
          end: {
            line: 339,
            column: 82
          }
        }],
        line: 339
      },
      "36": {
        loc: {
          start: {
            line: 343,
            column: 4
          },
          end: {
            line: 346,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 343,
            column: 4
          },
          end: {
            line: 346,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 343
      },
      "37": {
        loc: {
          start: {
            line: 343,
            column: 8
          },
          end: {
            line: 344,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 343,
            column: 8
          },
          end: {
            line: 343,
            column: 49
          }
        }, {
          start: {
            line: 344,
            column: 9
          },
          end: {
            line: 344,
            column: 42
          }
        }, {
          start: {
            line: 344,
            column: 46
          },
          end: {
            line: 344,
            column: 80
          }
        }],
        line: 343
      },
      "38": {
        loc: {
          start: {
            line: 348,
            column: 4
          },
          end: {
            line: 355,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 348,
            column: 4
          },
          end: {
            line: 355,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 348
      },
      "39": {
        loc: {
          start: {
            line: 349,
            column: 8
          },
          end: {
            line: 351,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 349,
            column: 8
          },
          end: {
            line: 351,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 349
      },
      "40": {
        loc: {
          start: {
            line: 352,
            column: 8
          },
          end: {
            line: 354,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 352,
            column: 8
          },
          end: {
            line: 354,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 352
      },
      "41": {
        loc: {
          start: {
            line: 352,
            column: 12
          },
          end: {
            line: 352,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 352,
            column: 12
          },
          end: {
            line: 352,
            column: 39
          }
        }, {
          start: {
            line: 352,
            column: 43
          },
          end: {
            line: 352,
            column: 65
          }
        }],
        line: 352
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0],
      "28": [0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0, 0],
      "36": [0, 0],
      "37": [0, 0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\middleware\\cors.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\middleware\\cors.ts"],
      sourcesContent: ["import { FastifyInstance, FastifyRequest, FastifyReply } from 'fastify';\nimport { addBreadcrumb, captureException } from '@sentry/node';\n\n// CORS configuration interface\ninterface CorsConfig {\n  origin: boolean | string | string[] | RegExp | ((origin: string, request: FastifyRequest) => boolean);\n  methods?: string[];\n  allowedHeaders?: string[];\n  exposedHeaders?: string[];\n  credentials?: boolean;\n  maxAge?: number;\n  preflightContinue?: boolean;\n  optionsSuccessStatus?: number;\n}\n\n// Environment-specific configurations\nconst PRODUCTION_ORIGINS = [\n  'https://utmify.com',\n  'https://www.utmify.com',\n  'https://app.utmify.com',\n  'https://dashboard.utmify.com',\n  // Add your production domains here\n];\n\nconst STAGING_ORIGINS = [\n  'https://staging.utmify.com',\n  'https://staging-app.utmify.com',\n  'https://dev.utmify.com',\n  // Add your staging domains here\n];\n\nconst DEVELOPMENT_ORIGINS = [\n  'http://localhost:3000',\n  'http://localhost:3001',\n  'http://localhost:3030', // Grafana\n  'http://localhost:9090', // Prometheus\n  'http://127.0.0.1:3000',\n  'http://127.0.0.1:3001',\n  'http://0.0.0.0:3000',\n  'http://0.0.0.0:3001',\n  // Add more development origins as needed\n];\n\n// Trusted third-party origins (for webhooks, integrations, etc.)\nconst TRUSTED_THIRD_PARTY_ORIGINS = [\n  'https://hooks.stripe.com',\n  'https://api.github.com',\n  'https://discord.com',\n  'https://slack.com',\n  // Add trusted third-party services\n];\n\n// Mobile app origins (if you have mobile apps)\nconst MOBILE_ORIGINS = [\n  'capacitor://localhost',\n  'ionic://localhost',\n  'http://localhost',\n  'file://',\n];\n\nclass CorsManager {\n  private config: CorsConfig;\n  private allowedOrigins: Set<string>;\n  private originPatterns: RegExp[];\n  private isDevelopment: boolean;\n  \n  constructor(config?: Partial<CorsConfig>) {\n    this.isDevelopment = process.env.NODE_ENV === 'development';\n    this.allowedOrigins = new Set();\n    this.originPatterns = [];\n    \n    // Set up allowed origins based on environment\n    this.setupAllowedOrigins();\n    \n    // Default CORS configuration\n    const defaultConfig: CorsConfig = {\n      origin: this.originChecker.bind(this),\n      methods: ['GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'OPTIONS', 'HEAD'],\n      allowedHeaders: [\n        'Origin',\n        'X-Requested-With',\n        'Content-Type',\n        'Accept',\n        'Authorization',\n        'X-API-Key',\n        'X-Client-Version',\n        'X-Request-ID',\n        'X-Forwarded-For',\n        'X-Real-IP',\n        'User-Agent',\n        'Cache-Control',\n        'Pragma',\n      ],\n      exposedHeaders: [\n        'X-RateLimit-Limit',\n        'X-RateLimit-Remaining',\n        'X-RateLimit-Reset',\n        'X-Request-ID',\n        'X-Response-Time',\n        'X-API-Version',\n      ],\n      credentials: true,\n      maxAge: 86400, // 24 hours\n      preflightContinue: false,\n      optionsSuccessStatus: 204,\n    };\n    \n    this.config = { ...defaultConfig, ...config };\n  }\n  \n  private setupAllowedOrigins(): void {\n    // Always allow production origins\n    PRODUCTION_ORIGINS.forEach(origin => this.allowedOrigins.add(origin));\n    \n    // Add staging origins in non-production environments\n    if (process.env.NODE_ENV !== 'production') {\n      STAGING_ORIGINS.forEach(origin => this.allowedOrigins.add(origin));\n    }\n    \n    // Add development origins in development\n    if (this.isDevelopment) {\n      DEVELOPMENT_ORIGINS.forEach(origin => this.allowedOrigins.add(origin));\n      \n      // Add dynamic localhost patterns for development\n      this.originPatterns.push(\n        /^http:\\/\\/localhost:\\d+$/,\n        /^http:\\/\\/127\\.0\\.0\\.1:\\d+$/,\n        /^http:\\/\\/0\\.0\\.0\\.0:\\d+$/,\n      );\n    }\n    \n    // Add trusted third-party origins\n    TRUSTED_THIRD_PARTY_ORIGINS.forEach(origin => this.allowedOrigins.add(origin));\n    \n    // Add mobile origins if mobile support is enabled\n    if (process.env.ENABLE_MOBILE_CORS === 'true') {\n      MOBILE_ORIGINS.forEach(origin => this.allowedOrigins.add(origin));\n    }\n    \n    // Add custom origins from environment variables\n    const customOrigins = process.env.CORS_ALLOWED_ORIGINS;\n    if (customOrigins) {\n      customOrigins.split(',').forEach(origin => {\n        this.allowedOrigins.add(origin.trim());\n      });\n    }\n  }\n  \n  private originChecker(origin: string, request: FastifyRequest): boolean {\n    // Allow requests with no origin (e.g., mobile apps, Postman)\n    if (!origin) {\n      // In production, be more strict about requests without origin\n      if (process.env.NODE_ENV === 'production') {\n        // Check if it's a server-to-server request or mobile app\n        const userAgent = request.headers['user-agent'] || '';\n        const isMobileApp = /Mobile|Android|iOS|iPhone|iPad/.test(userAgent);\n        const isServerToServer = !userAgent || /curl|wget|axios|fetch|node|python|java|go|php/.test(userAgent);\n        \n        return isMobileApp || isServerToServer;\n      }\n      return true; // Allow in development\n    }\n    \n    // Check exact matches\n    if (this.allowedOrigins.has(origin)) {\n      return true;\n    }\n    \n    // Check pattern matches\n    for (const pattern of this.originPatterns) {\n      if (pattern.test(origin)) {\n        return true;\n      }\n    }\n    \n    // Log rejected origins for debugging\n    addBreadcrumb({\n      category: 'cors',\n      message: 'CORS origin rejected',\n      data: {\n        origin,\n        userAgent: request.headers['user-agent'],\n        ip: request.ip,\n        method: request.method,\n        url: request.url,\n      },\n      level: 'info',\n    });\n    \n    return false;\n  }\n  \n  // Handle preflight requests\n  private handlePreflight(request: FastifyRequest, reply: FastifyReply): void {\n    const origin = request.headers.origin as string;\n    const requestMethod = request.headers['access-control-request-method'] as string;\n    const requestHeaders = request.headers['access-control-request-headers'] as string;\n    \n    // Check if origin is allowed\n    if (!this.originChecker(origin, request)) {\n      reply.code(403).send({ error: 'CORS policy violation' });\n      return;\n    }\n    \n    // Set CORS headers\n    reply.header('Access-Control-Allow-Origin', origin || '*');\n    \n    if (this.config.credentials) {\n      reply.header('Access-Control-Allow-Credentials', 'true');\n    }\n    \n    if (this.config.methods) {\n      reply.header('Access-Control-Allow-Methods', this.config.methods.join(', '));\n    }\n    \n    if (this.config.allowedHeaders) {\n      reply.header('Access-Control-Allow-Headers', this.config.allowedHeaders.join(', '));\n    }\n    \n    if (this.config.maxAge) {\n      reply.header('Access-Control-Max-Age', this.config.maxAge.toString());\n    }\n    \n    // Log preflight request\n    addBreadcrumb({\n      category: 'cors',\n      message: 'CORS preflight request',\n      data: {\n        origin,\n        method: requestMethod,\n        headers: requestHeaders,\n        ip: request.ip,\n      },\n    });\n    \n    reply.code(this.config.optionsSuccessStatus || 204).send();\n  }\n  \n  // Handle actual requests\n  private handleActualRequest(request: FastifyRequest, reply: FastifyReply): void {\n    const origin = request.headers.origin as string;\n    \n    // Check if origin is allowed\n    if (origin && !this.originChecker(origin, request)) {\n      // Don't block the request, but don't set CORS headers\n      return;\n    }\n    \n    // Set CORS headers\n    if (origin) {\n      reply.header('Access-Control-Allow-Origin', origin);\n    } else if (this.isDevelopment) {\n      reply.header('Access-Control-Allow-Origin', '*');\n    }\n    \n    if (this.config.credentials && origin) {\n      reply.header('Access-Control-Allow-Credentials', 'true');\n    }\n    \n    if (this.config.exposedHeaders) {\n      reply.header('Access-Control-Expose-Headers', this.config.exposedHeaders.join(', '));\n    }\n  }\n  \n  // Create middleware function\n  createMiddleware() {\n    return async (request: FastifyRequest, reply: FastifyReply) => {\n      try {\n        if (request.method === 'OPTIONS') {\n          this.handlePreflight(request, reply);\n        } else {\n          this.handleActualRequest(request, reply);\n        }\n      } catch (error) {\n        captureException(error);\n        // Don't fail the request on CORS errors\n      }\n    };\n  }\n  \n  // Add origin to allowed list (useful for dynamic configuration)\n  addAllowedOrigin(origin: string): void {\n    this.allowedOrigins.add(origin);\n  }\n  \n  // Remove origin from allowed list\n  removeAllowedOrigin(origin: string): void {\n    this.allowedOrigins.delete(origin);\n  }\n  \n  // Get current allowed origins\n  getAllowedOrigins(): string[] {\n    return Array.from(this.allowedOrigins);\n  }\n  \n  // Check if origin is allowed\n  isOriginAllowed(origin: string, request?: FastifyRequest): boolean {\n    if (!request) {\n      // Create a mock request for checking\n      request = { headers: {}, ip: '127.0.0.1' } as FastifyRequest;\n    }\n    return this.originChecker(origin, request);\n  }\n}\n\n// Route-specific CORS configurations\nconst ROUTE_SPECIFIC_CORS = {\n  // Public API endpoints - more permissive\n  '/api/public/*': {\n    origin: true, // Allow all origins\n    credentials: false,\n  },\n  \n  // Analytics endpoints - allow tracking from any domain\n  '/api/analytics/*': {\n    origin: true,\n    credentials: false,\n    methods: ['GET', 'POST', 'OPTIONS'],\n  },\n  \n  // UTM redirect endpoints - very permissive\n  '/r/*': {\n    origin: true,\n    credentials: false,\n    methods: ['GET', 'HEAD', 'OPTIONS'],\n  },\n  \n  // Webhook endpoints - restrict to specific services\n  '/api/webhooks/*': {\n    origin: TRUSTED_THIRD_PARTY_ORIGINS,\n    credentials: false,\n    methods: ['POST', 'OPTIONS'],\n  },\n  \n  // Admin endpoints - very restrictive\n  '/api/admin/*': {\n    origin: PRODUCTION_ORIGINS.concat(STAGING_ORIGINS),\n    credentials: true,\n    methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\n  },\n};\n\n// Plugin to register CORS middleware\nexport async function corsPlugin(fastify: FastifyInstance, options: {\n  config?: Partial<CorsConfig>;\n  routeSpecific?: boolean;\n} = {}) {\n  const { config, routeSpecific = true } = options;\n  \n  const corsManager = new CorsManager(config);\n  \n  // Global CORS middleware\n  fastify.addHook('onRequest', corsManager.createMiddleware());\n  \n  // Route-specific CORS configurations\n  if (routeSpecific) {\n    for (const [pattern, routeConfig] of Object.entries(ROUTE_SPECIFIC_CORS)) {\n      const routeCorsManager = new CorsManager(routeConfig);\n      \n      fastify.addHook('onRequest', async (request, reply) => {\n        // Simple pattern matching (you might want to use a more sophisticated matcher)\n        const routePattern = pattern.replace('*', '.*');\n        const regex = new RegExp(`^${routePattern}$`);\n        \n        if (regex.test(request.url)) {\n          await routeCorsManager.createMiddleware()(request, reply);\n        }\n      });\n    }\n  }\n  \n  // Utility functions\n  fastify.decorate('addCorsOrigin', (origin: string) => {\n    corsManager.addAllowedOrigin(origin);\n  });\n  \n  fastify.decorate('removeCorsOrigin', (origin: string) => {\n    corsManager.removeAllowedOrigin(origin);\n  });\n  \n  fastify.decorate('getCorsOrigins', () => {\n    return corsManager.getAllowedOrigins();\n  });\n  \n  fastify.decorate('checkCorsOrigin', (origin: string, request?: FastifyRequest) => {\n    return corsManager.isOriginAllowed(origin, request);\n  });\n  \n  // CORS configuration endpoint (for debugging in development)\n  if (process.env.NODE_ENV === 'development') {\n    fastify.get('/api/debug/cors', async (request, reply) => {\n      return {\n        allowedOrigins: corsManager.getAllowedOrigins(),\n        requestOrigin: request.headers.origin,\n        isAllowed: corsManager.isOriginAllowed(request.headers.origin as string, request),\n        environment: process.env.NODE_ENV,\n        routeSpecificConfigs: Object.keys(ROUTE_SPECIFIC_CORS),\n      };\n    });\n  }\n}\n\n// Utility function to validate CORS configuration\nexport function validateCorsConfig(config: Partial<CorsConfig>): {\n  valid: boolean;\n  errors: string[];\n} {\n  const errors: string[] = [];\n  \n  // Validate methods\n  if (config.methods) {\n    const validMethods = ['GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'OPTIONS', 'HEAD'];\n    const invalidMethods = config.methods.filter(method => !validMethods.includes(method));\n    if (invalidMethods.length > 0) {\n      errors.push(`Invalid HTTP methods: ${invalidMethods.join(', ')}`);\n    }\n  }\n  \n  // Validate maxAge\n  if (config.maxAge !== undefined && (config.maxAge < 0 || config.maxAge > 86400)) {\n    errors.push('maxAge should be between 0 and 86400 seconds');\n  }\n  \n  // Validate optionsSuccessStatus\n  if (config.optionsSuccessStatus !== undefined && \n      (config.optionsSuccessStatus < 200 || config.optionsSuccessStatus >= 300)) {\n    errors.push('optionsSuccessStatus should be a 2xx status code');\n  }\n  \n  // Security warnings\n  if (process.env.NODE_ENV === 'production') {\n    if (config.origin === true) {\n      errors.push('Using origin: true in production is not recommended for security');\n    }\n    \n    if (config.credentials === true && config.origin === true) {\n      errors.push('Using credentials: true with origin: true is a security risk');\n    }\n  }\n  \n  return {\n    valid: errors.length === 0,\n    errors,\n  };\n}\n\n// Export configurations and classes\nexport { CorsManager, ROUTE_SPECIFIC_CORS };\nexport type { CorsConfig };\nexport default corsPlugin;"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e0514f0f35de586c93cb1addb7c43a64926c32cf"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_nb060j3vq = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_nb060j3vq();
import { addBreadcrumb, captureException } from '@sentry/node';
// Environment-specific configurations
const PRODUCTION_ORIGINS =
/* istanbul ignore next */
(cov_nb060j3vq().s[0]++, ['https://utmify.com', 'https://www.utmify.com', 'https://app.utmify.com', 'https://dashboard.utmify.com'
// Add your production domains here
]);
const STAGING_ORIGINS =
/* istanbul ignore next */
(cov_nb060j3vq().s[1]++, ['https://staging.utmify.com', 'https://staging-app.utmify.com', 'https://dev.utmify.com'
// Add your staging domains here
]);
const DEVELOPMENT_ORIGINS =
/* istanbul ignore next */
(cov_nb060j3vq().s[2]++, ['http://localhost:3000', 'http://localhost:3001', 'http://localhost:3030',
// Grafana
'http://localhost:9090',
// Prometheus
'http://127.0.0.1:3000', 'http://127.0.0.1:3001', 'http://0.0.0.0:3000', 'http://0.0.0.0:3001'
// Add more development origins as needed
]);
// Trusted third-party origins (for webhooks, integrations, etc.)
const TRUSTED_THIRD_PARTY_ORIGINS =
/* istanbul ignore next */
(cov_nb060j3vq().s[3]++, ['https://hooks.stripe.com', 'https://api.github.com', 'https://discord.com', 'https://slack.com'
// Add trusted third-party services
]);
// Mobile app origins (if you have mobile apps)
const MOBILE_ORIGINS =
/* istanbul ignore next */
(cov_nb060j3vq().s[4]++, ['capacitor://localhost', 'ionic://localhost', 'http://localhost', 'file://']);
class CorsManager {
  config;
  allowedOrigins;
  originPatterns;
  isDevelopment;
  constructor(config) {
    /* istanbul ignore next */
    cov_nb060j3vq().f[0]++;
    cov_nb060j3vq().s[5]++;
    this.isDevelopment = process.env.NODE_ENV === 'development';
    /* istanbul ignore next */
    cov_nb060j3vq().s[6]++;
    this.allowedOrigins = new Set();
    /* istanbul ignore next */
    cov_nb060j3vq().s[7]++;
    this.originPatterns = [];
    // Set up allowed origins based on environment
    /* istanbul ignore next */
    cov_nb060j3vq().s[8]++;
    this.setupAllowedOrigins();
    // Default CORS configuration
    const defaultConfig =
    /* istanbul ignore next */
    (cov_nb060j3vq().s[9]++, {
      origin: this.originChecker.bind(this),
      methods: ['GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'OPTIONS', 'HEAD'],
      allowedHeaders: ['Origin', 'X-Requested-With', 'Content-Type', 'Accept', 'Authorization', 'X-API-Key', 'X-Client-Version', 'X-Request-ID', 'X-Forwarded-For', 'X-Real-IP', 'User-Agent', 'Cache-Control', 'Pragma'],
      exposedHeaders: ['X-RateLimit-Limit', 'X-RateLimit-Remaining', 'X-RateLimit-Reset', 'X-Request-ID', 'X-Response-Time', 'X-API-Version'],
      credentials: true,
      maxAge: 86400,
      // 24 hours
      preflightContinue: false,
      optionsSuccessStatus: 204
    });
    /* istanbul ignore next */
    cov_nb060j3vq().s[10]++;
    this.config = {
      ...defaultConfig,
      ...config
    };
  }
  setupAllowedOrigins() {
    /* istanbul ignore next */
    cov_nb060j3vq().f[1]++;
    cov_nb060j3vq().s[11]++;
    // Always allow production origins
    PRODUCTION_ORIGINS.forEach(origin => {
      /* istanbul ignore next */
      cov_nb060j3vq().f[2]++;
      cov_nb060j3vq().s[12]++;
      return this.allowedOrigins.add(origin);
    });
    // Add staging origins in non-production environments
    /* istanbul ignore next */
    cov_nb060j3vq().s[13]++;
    if (process.env.NODE_ENV !== 'production') {
      /* istanbul ignore next */
      cov_nb060j3vq().b[0][0]++;
      cov_nb060j3vq().s[14]++;
      STAGING_ORIGINS.forEach(origin => {
        /* istanbul ignore next */
        cov_nb060j3vq().f[3]++;
        cov_nb060j3vq().s[15]++;
        return this.allowedOrigins.add(origin);
      });
    } else
    /* istanbul ignore next */
    {
      cov_nb060j3vq().b[0][1]++;
    }
    // Add development origins in development
    cov_nb060j3vq().s[16]++;
    if (this.isDevelopment) {
      /* istanbul ignore next */
      cov_nb060j3vq().b[1][0]++;
      cov_nb060j3vq().s[17]++;
      DEVELOPMENT_ORIGINS.forEach(origin => {
        /* istanbul ignore next */
        cov_nb060j3vq().f[4]++;
        cov_nb060j3vq().s[18]++;
        return this.allowedOrigins.add(origin);
      });
      // Add dynamic localhost patterns for development
      /* istanbul ignore next */
      cov_nb060j3vq().s[19]++;
      this.originPatterns.push(/^http:\/\/localhost:\d+$/, /^http:\/\/127\.0\.0\.1:\d+$/, /^http:\/\/0\.0\.0\.0:\d+$/);
    } else
    /* istanbul ignore next */
    {
      cov_nb060j3vq().b[1][1]++;
    }
    // Add trusted third-party origins
    cov_nb060j3vq().s[20]++;
    TRUSTED_THIRD_PARTY_ORIGINS.forEach(origin => {
      /* istanbul ignore next */
      cov_nb060j3vq().f[5]++;
      cov_nb060j3vq().s[21]++;
      return this.allowedOrigins.add(origin);
    });
    // Add mobile origins if mobile support is enabled
    /* istanbul ignore next */
    cov_nb060j3vq().s[22]++;
    if (process.env.ENABLE_MOBILE_CORS === 'true') {
      /* istanbul ignore next */
      cov_nb060j3vq().b[2][0]++;
      cov_nb060j3vq().s[23]++;
      MOBILE_ORIGINS.forEach(origin => {
        /* istanbul ignore next */
        cov_nb060j3vq().f[6]++;
        cov_nb060j3vq().s[24]++;
        return this.allowedOrigins.add(origin);
      });
    } else
    /* istanbul ignore next */
    {
      cov_nb060j3vq().b[2][1]++;
    }
    // Add custom origins from environment variables
    const customOrigins =
    /* istanbul ignore next */
    (cov_nb060j3vq().s[25]++, process.env.CORS_ALLOWED_ORIGINS);
    /* istanbul ignore next */
    cov_nb060j3vq().s[26]++;
    if (customOrigins) {
      /* istanbul ignore next */
      cov_nb060j3vq().b[3][0]++;
      cov_nb060j3vq().s[27]++;
      customOrigins.split(',').forEach(origin => {
        /* istanbul ignore next */
        cov_nb060j3vq().f[7]++;
        cov_nb060j3vq().s[28]++;
        this.allowedOrigins.add(origin.trim());
      });
    } else
    /* istanbul ignore next */
    {
      cov_nb060j3vq().b[3][1]++;
    }
  }
  originChecker(origin, request) {
    /* istanbul ignore next */
    cov_nb060j3vq().f[8]++;
    cov_nb060j3vq().s[29]++;
    // Allow requests with no origin (e.g., mobile apps, Postman)
    if (!origin) {
      /* istanbul ignore next */
      cov_nb060j3vq().b[4][0]++;
      cov_nb060j3vq().s[30]++;
      // In production, be more strict about requests without origin
      if (process.env.NODE_ENV === 'production') {
        /* istanbul ignore next */
        cov_nb060j3vq().b[5][0]++;
        // Check if it's a server-to-server request or mobile app
        const userAgent =
        /* istanbul ignore next */
        (cov_nb060j3vq().s[31]++,
        /* istanbul ignore next */
        (cov_nb060j3vq().b[6][0]++, request.headers['user-agent']) ||
        /* istanbul ignore next */
        (cov_nb060j3vq().b[6][1]++, ''));
        const isMobileApp =
        /* istanbul ignore next */
        (cov_nb060j3vq().s[32]++, /Mobile|Android|iOS|iPhone|iPad/.test(userAgent));
        const isServerToServer =
        /* istanbul ignore next */
        (cov_nb060j3vq().s[33]++,
        /* istanbul ignore next */
        (cov_nb060j3vq().b[7][0]++, !userAgent) ||
        /* istanbul ignore next */
        (cov_nb060j3vq().b[7][1]++, /curl|wget|axios|fetch|node|python|java|go|php/.test(userAgent)));
        /* istanbul ignore next */
        cov_nb060j3vq().s[34]++;
        return /* istanbul ignore next */(cov_nb060j3vq().b[8][0]++, isMobileApp) ||
        /* istanbul ignore next */
        (cov_nb060j3vq().b[8][1]++, isServerToServer);
      } else
      /* istanbul ignore next */
      {
        cov_nb060j3vq().b[5][1]++;
      }
      cov_nb060j3vq().s[35]++;
      return true; // Allow in development
    } else
    /* istanbul ignore next */
    {
      cov_nb060j3vq().b[4][1]++;
    }
    // Check exact matches
    cov_nb060j3vq().s[36]++;
    if (this.allowedOrigins.has(origin)) {
      /* istanbul ignore next */
      cov_nb060j3vq().b[9][0]++;
      cov_nb060j3vq().s[37]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_nb060j3vq().b[9][1]++;
    }
    // Check pattern matches
    cov_nb060j3vq().s[38]++;
    for (const pattern of this.originPatterns) {
      /* istanbul ignore next */
      cov_nb060j3vq().s[39]++;
      if (pattern.test(origin)) {
        /* istanbul ignore next */
        cov_nb060j3vq().b[10][0]++;
        cov_nb060j3vq().s[40]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_nb060j3vq().b[10][1]++;
      }
    }
    // Log rejected origins for debugging
    /* istanbul ignore next */
    cov_nb060j3vq().s[41]++;
    addBreadcrumb({
      category: 'cors',
      message: 'CORS origin rejected',
      data: {
        origin,
        userAgent: request.headers['user-agent'],
        ip: request.ip,
        method: request.method,
        url: request.url
      },
      level: 'info'
    });
    /* istanbul ignore next */
    cov_nb060j3vq().s[42]++;
    return false;
  }
  // Handle preflight requests
  handlePreflight(request, reply) {
    /* istanbul ignore next */
    cov_nb060j3vq().f[9]++;
    const origin =
    /* istanbul ignore next */
    (cov_nb060j3vq().s[43]++, request.headers.origin);
    const requestMethod =
    /* istanbul ignore next */
    (cov_nb060j3vq().s[44]++, request.headers['access-control-request-method']);
    const requestHeaders =
    /* istanbul ignore next */
    (cov_nb060j3vq().s[45]++, request.headers['access-control-request-headers']);
    // Check if origin is allowed
    /* istanbul ignore next */
    cov_nb060j3vq().s[46]++;
    if (!this.originChecker(origin, request)) {
      /* istanbul ignore next */
      cov_nb060j3vq().b[11][0]++;
      cov_nb060j3vq().s[47]++;
      reply.code(403).send({
        error: 'CORS policy violation'
      });
      /* istanbul ignore next */
      cov_nb060j3vq().s[48]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_nb060j3vq().b[11][1]++;
    }
    // Set CORS headers
    cov_nb060j3vq().s[49]++;
    reply.header('Access-Control-Allow-Origin',
    /* istanbul ignore next */
    (cov_nb060j3vq().b[12][0]++, origin) ||
    /* istanbul ignore next */
    (cov_nb060j3vq().b[12][1]++, '*'));
    /* istanbul ignore next */
    cov_nb060j3vq().s[50]++;
    if (this.config.credentials) {
      /* istanbul ignore next */
      cov_nb060j3vq().b[13][0]++;
      cov_nb060j3vq().s[51]++;
      reply.header('Access-Control-Allow-Credentials', 'true');
    } else
    /* istanbul ignore next */
    {
      cov_nb060j3vq().b[13][1]++;
    }
    cov_nb060j3vq().s[52]++;
    if (this.config.methods) {
      /* istanbul ignore next */
      cov_nb060j3vq().b[14][0]++;
      cov_nb060j3vq().s[53]++;
      reply.header('Access-Control-Allow-Methods', this.config.methods.join(', '));
    } else
    /* istanbul ignore next */
    {
      cov_nb060j3vq().b[14][1]++;
    }
    cov_nb060j3vq().s[54]++;
    if (this.config.allowedHeaders) {
      /* istanbul ignore next */
      cov_nb060j3vq().b[15][0]++;
      cov_nb060j3vq().s[55]++;
      reply.header('Access-Control-Allow-Headers', this.config.allowedHeaders.join(', '));
    } else
    /* istanbul ignore next */
    {
      cov_nb060j3vq().b[15][1]++;
    }
    cov_nb060j3vq().s[56]++;
    if (this.config.maxAge) {
      /* istanbul ignore next */
      cov_nb060j3vq().b[16][0]++;
      cov_nb060j3vq().s[57]++;
      reply.header('Access-Control-Max-Age', this.config.maxAge.toString());
    } else
    /* istanbul ignore next */
    {
      cov_nb060j3vq().b[16][1]++;
    }
    // Log preflight request
    cov_nb060j3vq().s[58]++;
    addBreadcrumb({
      category: 'cors',
      message: 'CORS preflight request',
      data: {
        origin,
        method: requestMethod,
        headers: requestHeaders,
        ip: request.ip
      }
    });
    /* istanbul ignore next */
    cov_nb060j3vq().s[59]++;
    reply.code(
    /* istanbul ignore next */
    (cov_nb060j3vq().b[17][0]++, this.config.optionsSuccessStatus) ||
    /* istanbul ignore next */
    (cov_nb060j3vq().b[17][1]++, 204)).send();
  }
  // Handle actual requests
  handleActualRequest(request, reply) {
    /* istanbul ignore next */
    cov_nb060j3vq().f[10]++;
    const origin =
    /* istanbul ignore next */
    (cov_nb060j3vq().s[60]++, request.headers.origin);
    // Check if origin is allowed
    /* istanbul ignore next */
    cov_nb060j3vq().s[61]++;
    if (
    /* istanbul ignore next */
    (cov_nb060j3vq().b[19][0]++, origin) &&
    /* istanbul ignore next */
    (cov_nb060j3vq().b[19][1]++, !this.originChecker(origin, request))) {
      /* istanbul ignore next */
      cov_nb060j3vq().b[18][0]++;
      cov_nb060j3vq().s[62]++;
      // Don't block the request, but don't set CORS headers
      return;
    } else
    /* istanbul ignore next */
    {
      cov_nb060j3vq().b[18][1]++;
    }
    // Set CORS headers
    cov_nb060j3vq().s[63]++;
    if (origin) {
      /* istanbul ignore next */
      cov_nb060j3vq().b[20][0]++;
      cov_nb060j3vq().s[64]++;
      reply.header('Access-Control-Allow-Origin', origin);
    } else {
      /* istanbul ignore next */
      cov_nb060j3vq().b[20][1]++;
      cov_nb060j3vq().s[65]++;
      if (this.isDevelopment) {
        /* istanbul ignore next */
        cov_nb060j3vq().b[21][0]++;
        cov_nb060j3vq().s[66]++;
        reply.header('Access-Control-Allow-Origin', '*');
      } else
      /* istanbul ignore next */
      {
        cov_nb060j3vq().b[21][1]++;
      }
    }
    /* istanbul ignore next */
    cov_nb060j3vq().s[67]++;
    if (
    /* istanbul ignore next */
    (cov_nb060j3vq().b[23][0]++, this.config.credentials) &&
    /* istanbul ignore next */
    (cov_nb060j3vq().b[23][1]++, origin)) {
      /* istanbul ignore next */
      cov_nb060j3vq().b[22][0]++;
      cov_nb060j3vq().s[68]++;
      reply.header('Access-Control-Allow-Credentials', 'true');
    } else
    /* istanbul ignore next */
    {
      cov_nb060j3vq().b[22][1]++;
    }
    cov_nb060j3vq().s[69]++;
    if (this.config.exposedHeaders) {
      /* istanbul ignore next */
      cov_nb060j3vq().b[24][0]++;
      cov_nb060j3vq().s[70]++;
      reply.header('Access-Control-Expose-Headers', this.config.exposedHeaders.join(', '));
    } else
    /* istanbul ignore next */
    {
      cov_nb060j3vq().b[24][1]++;
    }
  }
  // Create middleware function
  createMiddleware() {
    /* istanbul ignore next */
    cov_nb060j3vq().f[11]++;
    cov_nb060j3vq().s[71]++;
    return async (request, reply) => {
      /* istanbul ignore next */
      cov_nb060j3vq().f[12]++;
      cov_nb060j3vq().s[72]++;
      try {
        /* istanbul ignore next */
        cov_nb060j3vq().s[73]++;
        if (request.method === 'OPTIONS') {
          /* istanbul ignore next */
          cov_nb060j3vq().b[25][0]++;
          cov_nb060j3vq().s[74]++;
          this.handlePreflight(request, reply);
        } else {
          /* istanbul ignore next */
          cov_nb060j3vq().b[25][1]++;
          cov_nb060j3vq().s[75]++;
          this.handleActualRequest(request, reply);
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_nb060j3vq().s[76]++;
        captureException(error);
        // Don't fail the request on CORS errors
      }
    };
  }
  // Add origin to allowed list (useful for dynamic configuration)
  addAllowedOrigin(origin) {
    /* istanbul ignore next */
    cov_nb060j3vq().f[13]++;
    cov_nb060j3vq().s[77]++;
    this.allowedOrigins.add(origin);
  }
  // Remove origin from allowed list
  removeAllowedOrigin(origin) {
    /* istanbul ignore next */
    cov_nb060j3vq().f[14]++;
    cov_nb060j3vq().s[78]++;
    this.allowedOrigins.delete(origin);
  }
  // Get current allowed origins
  getAllowedOrigins() {
    /* istanbul ignore next */
    cov_nb060j3vq().f[15]++;
    cov_nb060j3vq().s[79]++;
    return Array.from(this.allowedOrigins);
  }
  // Check if origin is allowed
  isOriginAllowed(origin, request) {
    /* istanbul ignore next */
    cov_nb060j3vq().f[16]++;
    cov_nb060j3vq().s[80]++;
    if (!request) {
      /* istanbul ignore next */
      cov_nb060j3vq().b[26][0]++;
      cov_nb060j3vq().s[81]++;
      // Create a mock request for checking
      request = {
        headers: {},
        ip: '127.0.0.1'
      };
    } else
    /* istanbul ignore next */
    {
      cov_nb060j3vq().b[26][1]++;
    }
    cov_nb060j3vq().s[82]++;
    return this.originChecker(origin, request);
  }
}
// Route-specific CORS configurations
const ROUTE_SPECIFIC_CORS =
/* istanbul ignore next */
(cov_nb060j3vq().s[83]++, {
  // Public API endpoints - more permissive
  '/api/public/*': {
    origin: true,
    // Allow all origins
    credentials: false
  },
  // Analytics endpoints - allow tracking from any domain
  '/api/analytics/*': {
    origin: true,
    credentials: false,
    methods: ['GET', 'POST', 'OPTIONS']
  },
  // UTM redirect endpoints - very permissive
  '/r/*': {
    origin: true,
    credentials: false,
    methods: ['GET', 'HEAD', 'OPTIONS']
  },
  // Webhook endpoints - restrict to specific services
  '/api/webhooks/*': {
    origin: TRUSTED_THIRD_PARTY_ORIGINS,
    credentials: false,
    methods: ['POST', 'OPTIONS']
  },
  // Admin endpoints - very restrictive
  '/api/admin/*': {
    origin: PRODUCTION_ORIGINS.concat(STAGING_ORIGINS),
    credentials: true,
    methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS']
  }
});
// Plugin to register CORS middleware
export async function corsPlugin(fastify, options =
/* istanbul ignore next */
(cov_nb060j3vq().b[27][0]++, {})) {
  /* istanbul ignore next */
  cov_nb060j3vq().f[17]++;
  const {
    config,
    routeSpecific =
    /* istanbul ignore next */
    (cov_nb060j3vq().b[28][0]++, true)
  } =
  /* istanbul ignore next */
  (cov_nb060j3vq().s[84]++, options);
  const corsManager =
  /* istanbul ignore next */
  (cov_nb060j3vq().s[85]++, new CorsManager(config));
  // Global CORS middleware
  /* istanbul ignore next */
  cov_nb060j3vq().s[86]++;
  fastify.addHook('onRequest', corsManager.createMiddleware());
  // Route-specific CORS configurations
  /* istanbul ignore next */
  cov_nb060j3vq().s[87]++;
  if (routeSpecific) {
    /* istanbul ignore next */
    cov_nb060j3vq().b[29][0]++;
    cov_nb060j3vq().s[88]++;
    for (const [pattern, routeConfig] of Object.entries(ROUTE_SPECIFIC_CORS)) {
      const routeCorsManager =
      /* istanbul ignore next */
      (cov_nb060j3vq().s[89]++, new CorsManager(routeConfig));
      /* istanbul ignore next */
      cov_nb060j3vq().s[90]++;
      fastify.addHook('onRequest', async (request, reply) => {
        /* istanbul ignore next */
        cov_nb060j3vq().f[18]++;
        // Simple pattern matching (you might want to use a more sophisticated matcher)
        const routePattern =
        /* istanbul ignore next */
        (cov_nb060j3vq().s[91]++, pattern.replace('*', '.*'));
        const regex =
        /* istanbul ignore next */
        (cov_nb060j3vq().s[92]++, new RegExp(`^${routePattern}$`));
        /* istanbul ignore next */
        cov_nb060j3vq().s[93]++;
        if (regex.test(request.url)) {
          /* istanbul ignore next */
          cov_nb060j3vq().b[30][0]++;
          cov_nb060j3vq().s[94]++;
          await routeCorsManager.createMiddleware()(request, reply);
        } else
        /* istanbul ignore next */
        {
          cov_nb060j3vq().b[30][1]++;
        }
      });
    }
  } else
  /* istanbul ignore next */
  {
    cov_nb060j3vq().b[29][1]++;
  }
  // Utility functions
  cov_nb060j3vq().s[95]++;
  fastify.decorate('addCorsOrigin', origin => {
    /* istanbul ignore next */
    cov_nb060j3vq().f[19]++;
    cov_nb060j3vq().s[96]++;
    corsManager.addAllowedOrigin(origin);
  });
  /* istanbul ignore next */
  cov_nb060j3vq().s[97]++;
  fastify.decorate('removeCorsOrigin', origin => {
    /* istanbul ignore next */
    cov_nb060j3vq().f[20]++;
    cov_nb060j3vq().s[98]++;
    corsManager.removeAllowedOrigin(origin);
  });
  /* istanbul ignore next */
  cov_nb060j3vq().s[99]++;
  fastify.decorate('getCorsOrigins', () => {
    /* istanbul ignore next */
    cov_nb060j3vq().f[21]++;
    cov_nb060j3vq().s[100]++;
    return corsManager.getAllowedOrigins();
  });
  /* istanbul ignore next */
  cov_nb060j3vq().s[101]++;
  fastify.decorate('checkCorsOrigin', (origin, request) => {
    /* istanbul ignore next */
    cov_nb060j3vq().f[22]++;
    cov_nb060j3vq().s[102]++;
    return corsManager.isOriginAllowed(origin, request);
  });
  // CORS configuration endpoint (for debugging in development)
  /* istanbul ignore next */
  cov_nb060j3vq().s[103]++;
  if (process.env.NODE_ENV === 'development') {
    /* istanbul ignore next */
    cov_nb060j3vq().b[31][0]++;
    cov_nb060j3vq().s[104]++;
    fastify.get('/api/debug/cors', async (request, reply) => {
      /* istanbul ignore next */
      cov_nb060j3vq().f[23]++;
      cov_nb060j3vq().s[105]++;
      return {
        allowedOrigins: corsManager.getAllowedOrigins(),
        requestOrigin: request.headers.origin,
        isAllowed: corsManager.isOriginAllowed(request.headers.origin, request),
        environment: process.env.NODE_ENV,
        routeSpecificConfigs: Object.keys(ROUTE_SPECIFIC_CORS)
      };
    });
  } else
  /* istanbul ignore next */
  {
    cov_nb060j3vq().b[31][1]++;
  }
}
// Utility function to validate CORS configuration
export function validateCorsConfig(config) {
  /* istanbul ignore next */
  cov_nb060j3vq().f[24]++;
  const errors =
  /* istanbul ignore next */
  (cov_nb060j3vq().s[106]++, []);
  // Validate methods
  /* istanbul ignore next */
  cov_nb060j3vq().s[107]++;
  if (config.methods) {
    /* istanbul ignore next */
    cov_nb060j3vq().b[32][0]++;
    const validMethods =
    /* istanbul ignore next */
    (cov_nb060j3vq().s[108]++, ['GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'OPTIONS', 'HEAD']);
    const invalidMethods =
    /* istanbul ignore next */
    (cov_nb060j3vq().s[109]++, config.methods.filter(method => {
      /* istanbul ignore next */
      cov_nb060j3vq().f[25]++;
      cov_nb060j3vq().s[110]++;
      return !validMethods.includes(method);
    }));
    /* istanbul ignore next */
    cov_nb060j3vq().s[111]++;
    if (invalidMethods.length > 0) {
      /* istanbul ignore next */
      cov_nb060j3vq().b[33][0]++;
      cov_nb060j3vq().s[112]++;
      errors.push(`Invalid HTTP methods: ${invalidMethods.join(', ')}`);
    } else
    /* istanbul ignore next */
    {
      cov_nb060j3vq().b[33][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_nb060j3vq().b[32][1]++;
  }
  // Validate maxAge
  cov_nb060j3vq().s[113]++;
  if (
  /* istanbul ignore next */
  (cov_nb060j3vq().b[35][0]++, config.maxAge !== undefined) && (
  /* istanbul ignore next */
  (cov_nb060j3vq().b[35][1]++, config.maxAge < 0) ||
  /* istanbul ignore next */
  (cov_nb060j3vq().b[35][2]++, config.maxAge > 86400))) {
    /* istanbul ignore next */
    cov_nb060j3vq().b[34][0]++;
    cov_nb060j3vq().s[114]++;
    errors.push('maxAge should be between 0 and 86400 seconds');
  } else
  /* istanbul ignore next */
  {
    cov_nb060j3vq().b[34][1]++;
  }
  // Validate optionsSuccessStatus
  cov_nb060j3vq().s[115]++;
  if (
  /* istanbul ignore next */
  (cov_nb060j3vq().b[37][0]++, config.optionsSuccessStatus !== undefined) && (
  /* istanbul ignore next */
  (cov_nb060j3vq().b[37][1]++, config.optionsSuccessStatus < 200) ||
  /* istanbul ignore next */
  (cov_nb060j3vq().b[37][2]++, config.optionsSuccessStatus >= 300))) {
    /* istanbul ignore next */
    cov_nb060j3vq().b[36][0]++;
    cov_nb060j3vq().s[116]++;
    errors.push('optionsSuccessStatus should be a 2xx status code');
  } else
  /* istanbul ignore next */
  {
    cov_nb060j3vq().b[36][1]++;
  }
  // Security warnings
  cov_nb060j3vq().s[117]++;
  if (process.env.NODE_ENV === 'production') {
    /* istanbul ignore next */
    cov_nb060j3vq().b[38][0]++;
    cov_nb060j3vq().s[118]++;
    if (config.origin === true) {
      /* istanbul ignore next */
      cov_nb060j3vq().b[39][0]++;
      cov_nb060j3vq().s[119]++;
      errors.push('Using origin: true in production is not recommended for security');
    } else
    /* istanbul ignore next */
    {
      cov_nb060j3vq().b[39][1]++;
    }
    cov_nb060j3vq().s[120]++;
    if (
    /* istanbul ignore next */
    (cov_nb060j3vq().b[41][0]++, config.credentials === true) &&
    /* istanbul ignore next */
    (cov_nb060j3vq().b[41][1]++, config.origin === true)) {
      /* istanbul ignore next */
      cov_nb060j3vq().b[40][0]++;
      cov_nb060j3vq().s[121]++;
      errors.push('Using credentials: true with origin: true is a security risk');
    } else
    /* istanbul ignore next */
    {
      cov_nb060j3vq().b[40][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_nb060j3vq().b[38][1]++;
  }
  cov_nb060j3vq().s[122]++;
  return {
    valid: errors.length === 0,
    errors
  };
}
// Export configurations and classes
export { CorsManager, ROUTE_SPECIFIC_CORS };
export default corsPlugin;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,