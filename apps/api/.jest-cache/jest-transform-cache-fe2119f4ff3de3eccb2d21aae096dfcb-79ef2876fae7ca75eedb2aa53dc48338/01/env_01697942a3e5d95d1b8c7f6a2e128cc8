a261049335f6bdefbc602847f335f9a0
"use strict";

/* istanbul ignore next */
function cov_1mfyrpqdbc() {
  var path = "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\config\\env.ts";
  var hash = "f32578a32e751bb0b68592d8f2b1553606cf8918";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\config\\env.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 266
        }
      },
      "2": {
        start: {
          line: 4,
          column: 14
        },
        end: {
          line: 4,
          column: 28
        }
      },
      "3": {
        start: {
          line: 5,
          column: 17
        },
        end: {
          line: 5,
          column: 34
        }
      },
      "4": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 23
        }
      },
      "5": {
        start: {
          line: 9,
          column: 18
        },
        end: {
          line: 53,
          column: 2
        }
      },
      "6": {
        start: {
          line: 55,
          column: 17
        },
        end: {
          line: 70,
          column: 1
        }
      },
      "7": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 69,
          column: 5
        }
      },
      "8": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 44
        }
      },
      "9": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 67,
          column: 9
        }
      },
      "10": {
        start: {
          line: 61,
          column: 32
        },
        end: {
          line: 63,
          column: 27
        }
      },
      "11": {
        start: {
          line: 62,
          column: 28
        },
        end: {
          line: 62,
          column: 67
        }
      },
      "12": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 62
        }
      },
      "13": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 39
        }
      },
      "14": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 28
        }
      },
      "15": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 20
        }
      },
      "16": {
        start: {
          line: 71,
          column: 0
        },
        end: {
          line: 71,
          column: 28
        }
      },
      "17": {
        start: {
          line: 73,
          column: 0
        },
        end: {
          line: 73,
          column: 66
        }
      },
      "18": {
        start: {
          line: 74,
          column: 0
        },
        end: {
          line: 74,
          column: 64
        }
      },
      "19": {
        start: {
          line: 75,
          column: 0
        },
        end: {
          line: 75,
          column: 52
        }
      },
      "20": {
        start: {
          line: 77,
          column: 0
        },
        end: {
          line: 92,
          column: 2
        }
      },
      "21": {
        start: {
          line: 94,
          column: 0
        },
        end: {
          line: 106,
          column: 2
        }
      },
      "22": {
        start: {
          line: 108,
          column: 0
        },
        end: {
          line: 116,
          column: 2
        }
      },
      "23": {
        start: {
          line: 118,
          column: 0
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "24": {
        start: {
          line: 129,
          column: 0
        },
        end: {
          line: 134,
          column: 2
        }
      },
      "25": {
        start: {
          line: 130,
          column: 64
        },
        end: {
          line: 130,
          column: 77
        }
      },
      "26": {
        start: {
          line: 136,
          column: 0
        },
        end: {
          line: 144,
          column: 2
        }
      },
      "27": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 142,
          column: 41
        }
      },
      "28": {
        start: {
          line: 146,
          column: 0
        },
        end: {
          line: 157,
          column: 2
        }
      },
      "29": {
        start: {
          line: 159,
          column: 0
        },
        end: {
          line: 165,
          column: 9
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 55,
            column: 17
          },
          end: {
            line: 55,
            column: 18
          }
        },
        loc: {
          start: {
            line: 55,
            column: 23
          },
          end: {
            line: 70,
            column: 1
          }
        },
        line: 55
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 62,
            column: 21
          },
          end: {
            line: 62,
            column: 22
          }
        },
        loc: {
          start: {
            line: 62,
            column: 28
          },
          end: {
            line: 62,
            column: 67
          }
        },
        line: 62
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 130,
            column: 54
          },
          end: {
            line: 130,
            column: 55
          }
        },
        loc: {
          start: {
            line: 130,
            column: 64
          },
          end: {
            line: 130,
            column: 77
          }
        },
        line: 130
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 141,
            column: 18
          },
          end: {
            line: 141,
            column: 19
          }
        },
        loc: {
          start: {
            line: 141,
            column: 31
          },
          end: {
            line: 143,
            column: 5
          }
        },
        line: 141
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "1": {
        loc: {
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 91,
            column: 5
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 80,
            column: 28
          }
        }, {
          start: {
            line: 80,
            column: 32
          },
          end: {
            line: 91,
            column: 5
          }
        }],
        line: 80
      },
      "2": {
        loc: {
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 105,
            column: 5
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 100,
            column: 28
          }
        }, {
          start: {
            line: 100,
            column: 32
          },
          end: {
            line: 105,
            column: 5
          }
        }],
        line: 100
      },
      "3": {
        loc: {
          start: {
            line: 118,
            column: 21
          },
          end: {
            line: 127,
            column: 8
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 118,
            column: 48
          },
          end: {
            line: 127,
            column: 1
          }
        }, {
          start: {
            line: 127,
            column: 4
          },
          end: {
            line: 127,
            column: 8
          }
        }],
        line: 118
      },
      "4": {
        loc: {
          start: {
            line: 120,
            column: 10
          },
          end: {
            line: 120,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 10
          },
          end: {
            line: 120,
            column: 34
          }
        }, {
          start: {
            line: 120,
            column: 38
          },
          end: {
            line: 120,
            column: 41
          }
        }],
        line: 120
      },
      "5": {
        loc: {
          start: {
            line: 142,
            column: 15
          },
          end: {
            line: 142,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 142,
            column: 15
          },
          end: {
            line: 142,
            column: 25
          }
        }, {
          start: {
            line: 142,
            column: 29
          },
          end: {
            line: 142,
            column: 40
          }
        }],
        line: 142
      },
      "6": {
        loc: {
          start: {
            line: 159,
            column: 26
          },
          end: {
            line: 165,
            column: 8
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 159,
            column: 64
          },
          end: {
            line: 165,
            column: 1
          }
        }, {
          start: {
            line: 165,
            column: 4
          },
          end: {
            line: 165,
            column: 8
          }
        }],
        line: 159
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\config\\env.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\config\\env.ts"],
      sourcesContent: ["import { z } from 'zod'\nimport { config as dotenvConfig } from 'dotenv'\n\n// Load environment variables from .env file\ndotenvConfig()\n\n// Environment variables schema\nconst envSchema = z.object({\n  // Server\n  NODE_ENV: z.enum(['development', 'production', 'test']).default('development'),\n  PORT: z.coerce.number().default(3001),\n  HOST: z.string().default('0.0.0.0'),\n  LOG_LEVEL: z.enum(['fatal', 'error', 'warn', 'info', 'debug', 'trace']).default('info'),\n  \n  // Database\n  DATABASE_URL: z.string().min(1, 'DATABASE_URL is required'),\n  \n  // Redis\n  REDIS_URL: z.string().default('redis://localhost:6379'),\n  \n  // JWT\n  JWT_SECRET: z.string().min(32, 'JWT_SECRET must be at least 32 characters'),\n  JWT_REFRESH_SECRET: z.string().min(32, 'JWT_REFRESH_SECRET must be at least 32 characters'),\n  JWT_ACCESS_EXPIRES_IN: z.string().default('15m'),\n  JWT_REFRESH_EXPIRES_IN: z.string().default('7d'),\n  \n  // Email\n  SMTP_HOST: z.string().optional(),\n  SMTP_PORT: z.coerce.number().optional(),\n  SMTP_USER: z.string().optional(),\n  SMTP_PASS: z.string().optional(),\n  SMTP_FROM: z.string().email().optional(),\n  \n  // External APIs\n  GOOGLE_ADS_CLIENT_ID: z.string().optional(),\n  GOOGLE_ADS_CLIENT_SECRET: z.string().optional(),\n  GOOGLE_ADS_DEVELOPER_TOKEN: z.string().optional(),\n  GOOGLE_ADS_LOGIN_CUSTOMER_ID: z.string().optional(),\n  FACEBOOK_APP_ID: z.string().optional(),\n  FACEBOOK_APP_SECRET: z.string().optional(),\n  \n  // Rate Limiting\n  RATE_LIMIT_MAX: z.coerce.number().default(100),\n  RATE_LIMIT_WINDOW: z.coerce.number().default(60000), // 1 minute\n  \n  // CORS\n  CORS_ORIGIN: z.string().default('http://localhost:3000'),\n  \n  // File Upload\n  MAX_FILE_SIZE: z.coerce.number().default(5242880), // 5MB\n  UPLOAD_DIR: z.string().default('./uploads'),\n  \n  // Webhooks\n  WEBHOOK_SECRET: z.string().optional(),\n  \n  // Monitoring\n  SENTRY_DSN: z.string().optional(),\n  \n  // Feature Flags\n  ENABLE_SWAGGER: z.coerce.boolean().default(true),\n  ENABLE_METRICS: z.coerce.boolean().default(true),\n  ENABLE_RATE_LIMITING: z.coerce.boolean().default(true),\n})\n\n// Parse and validate environment variables\nconst parseEnv = () => {\n  try {\n    return envSchema.parse(process.env)\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      const missingVars = error.errors\n        .map(err => `${err.path.join('.')}: ${err.message}`)\n        .join('\\n')\n      \n      console.error('\u274C Invalid environment variables:')\n      console.error(missingVars)\n      process.exit(1)\n    }\n    throw error\n  }\n}\n\nexport const config = parseEnv()\n\n// Type for environment config\nexport type Config = typeof config\n\n// Helper to check if we're in development\nexport const isDevelopment = config.NODE_ENV === 'development'\nexport const isProduction = config.NODE_ENV === 'production'\nexport const isTest = config.NODE_ENV === 'test'\n\n// Database configuration\nexport const dbConfig = {\n  url: config.DATABASE_URL,\n  // Add connection pool settings for production\n  ...(isProduction && {\n    pool: {\n      min: 2,\n      max: 10,\n      acquireTimeoutMillis: 30000,\n      createTimeoutMillis: 30000,\n      destroyTimeoutMillis: 5000,\n      idleTimeoutMillis: 30000,\n      reapIntervalMillis: 1000,\n      createRetryIntervalMillis: 200,\n    },\n  }),\n}\n\n// Redis configuration\nexport const redisConfig = {\n  url: config.REDIS_URL,\n  retryDelayOnFailover: 100,\n  enableReadyCheck: false,\n  maxRetriesPerRequest: 3,\n  lazyConnect: true,\n  ...(isProduction && {\n    family: 4,\n    keepAlive: true,\n    connectTimeout: 10000,\n    commandTimeout: 5000,\n  }),\n}\n\n// JWT configuration\nexport const jwtConfig = {\n  secret: config.JWT_SECRET,\n  refreshSecret: config.JWT_REFRESH_SECRET,\n  accessExpiresIn: config.JWT_ACCESS_EXPIRES_IN,\n  refreshExpiresIn: config.JWT_REFRESH_EXPIRES_IN,\n  algorithm: 'HS256' as const,\n  issuer: 'utmify-api',\n  audience: 'utmify-app',\n}\n\n// SMTP configuration\nexport const smtpConfig = config.SMTP_HOST ? {\n  host: config.SMTP_HOST,\n  port: config.SMTP_PORT || 587,\n  secure: config.SMTP_PORT === 465,\n  auth: {\n    user: config.SMTP_USER!,\n    pass: config.SMTP_PASS!,\n  },\n  from: config.SMTP_FROM!,\n} : null\n\n// CORS configuration\nexport const corsConfig = {\n  origin: config.CORS_ORIGIN.split(',').map(origin => origin.trim()),\n  credentials: true,\n  methods: ['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS'],\n  allowedHeaders: ['Content-Type', 'Authorization', 'X-Requested-With'],\n}\n\n// Rate limiting configuration\nexport const rateLimitConfig = {\n  max: config.RATE_LIMIT_MAX,\n  timeWindow: config.RATE_LIMIT_WINDOW,\n  skipSuccessfulRequests: false,\n  skipOnError: true,\n  keyGenerator: (request: any) => {\n    return request.ip || 'anonymous'\n  },\n}\n\n// File upload configuration\nexport const uploadConfig = {\n  maxFileSize: config.MAX_FILE_SIZE,\n  uploadDir: config.UPLOAD_DIR,\n  allowedMimeTypes: [\n    'image/jpeg',\n    'image/png',\n    'image/webp',\n    'image/svg+xml',\n    'text/csv',\n    'application/json',\n  ],\n}\n\n// Google Ads API Configuration\nexport const googleAdsConfig = config.GOOGLE_ADS_CLIENT_ID ? {\n  clientId: config.GOOGLE_ADS_CLIENT_ID!,\n  clientSecret: config.GOOGLE_ADS_CLIENT_SECRET!,\n  developerToken: config.GOOGLE_ADS_DEVELOPER_TOKEN!,\n  loginCustomerId: config.GOOGLE_ADS_LOGIN_CUSTOMER_ID,\n  apiVersion: 'v15',\n} : null"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f32578a32e751bb0b68592d8f2b1553606cf8918"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1mfyrpqdbc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1mfyrpqdbc();
cov_1mfyrpqdbc().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1mfyrpqdbc().s[1]++;
exports.googleAdsConfig = exports.uploadConfig = exports.rateLimitConfig = exports.corsConfig = exports.smtpConfig = exports.jwtConfig = exports.redisConfig = exports.dbConfig = exports.isTest = exports.isProduction = exports.isDevelopment = exports.config = void 0;
const zod_1 =
/* istanbul ignore next */
(cov_1mfyrpqdbc().s[2]++, require("zod"));
const dotenv_1 =
/* istanbul ignore next */
(cov_1mfyrpqdbc().s[3]++, require("dotenv"));
// Load environment variables from .env file
/* istanbul ignore next */
cov_1mfyrpqdbc().s[4]++;
(0, dotenv_1.config)();
// Environment variables schema
const envSchema =
/* istanbul ignore next */
(cov_1mfyrpqdbc().s[5]++, zod_1.z.object({
  // Server
  NODE_ENV: zod_1.z.enum(['development', 'production', 'test']).default('development'),
  PORT: zod_1.z.coerce.number().default(3001),
  HOST: zod_1.z.string().default('0.0.0.0'),
  LOG_LEVEL: zod_1.z.enum(['fatal', 'error', 'warn', 'info', 'debug', 'trace']).default('info'),
  // Database
  DATABASE_URL: zod_1.z.string().min(1, 'DATABASE_URL is required'),
  // Redis
  REDIS_URL: zod_1.z.string().default('redis://localhost:6379'),
  // JWT
  JWT_SECRET: zod_1.z.string().min(32, 'JWT_SECRET must be at least 32 characters'),
  JWT_REFRESH_SECRET: zod_1.z.string().min(32, 'JWT_REFRESH_SECRET must be at least 32 characters'),
  JWT_ACCESS_EXPIRES_IN: zod_1.z.string().default('15m'),
  JWT_REFRESH_EXPIRES_IN: zod_1.z.string().default('7d'),
  // Email
  SMTP_HOST: zod_1.z.string().optional(),
  SMTP_PORT: zod_1.z.coerce.number().optional(),
  SMTP_USER: zod_1.z.string().optional(),
  SMTP_PASS: zod_1.z.string().optional(),
  SMTP_FROM: zod_1.z.string().email().optional(),
  // External APIs
  GOOGLE_ADS_CLIENT_ID: zod_1.z.string().optional(),
  GOOGLE_ADS_CLIENT_SECRET: zod_1.z.string().optional(),
  GOOGLE_ADS_DEVELOPER_TOKEN: zod_1.z.string().optional(),
  GOOGLE_ADS_LOGIN_CUSTOMER_ID: zod_1.z.string().optional(),
  FACEBOOK_APP_ID: zod_1.z.string().optional(),
  FACEBOOK_APP_SECRET: zod_1.z.string().optional(),
  // Rate Limiting
  RATE_LIMIT_MAX: zod_1.z.coerce.number().default(100),
  RATE_LIMIT_WINDOW: zod_1.z.coerce.number().default(60000),
  // 1 minute
  // CORS
  CORS_ORIGIN: zod_1.z.string().default('http://localhost:3000'),
  // File Upload
  MAX_FILE_SIZE: zod_1.z.coerce.number().default(5242880),
  // 5MB
  UPLOAD_DIR: zod_1.z.string().default('./uploads'),
  // Webhooks
  WEBHOOK_SECRET: zod_1.z.string().optional(),
  // Monitoring
  SENTRY_DSN: zod_1.z.string().optional(),
  // Feature Flags
  ENABLE_SWAGGER: zod_1.z.coerce.boolean().default(true),
  ENABLE_METRICS: zod_1.z.coerce.boolean().default(true),
  ENABLE_RATE_LIMITING: zod_1.z.coerce.boolean().default(true)
}));
// Parse and validate environment variables
/* istanbul ignore next */
cov_1mfyrpqdbc().s[6]++;
const parseEnv = () => {
  /* istanbul ignore next */
  cov_1mfyrpqdbc().f[0]++;
  cov_1mfyrpqdbc().s[7]++;
  try {
    /* istanbul ignore next */
    cov_1mfyrpqdbc().s[8]++;
    return envSchema.parse(process.env);
  } catch (error) {
    /* istanbul ignore next */
    cov_1mfyrpqdbc().s[9]++;
    if (error instanceof zod_1.z.ZodError) {
      /* istanbul ignore next */
      cov_1mfyrpqdbc().b[0][0]++;
      const missingVars =
      /* istanbul ignore next */
      (cov_1mfyrpqdbc().s[10]++, error.errors.map(err => {
        /* istanbul ignore next */
        cov_1mfyrpqdbc().f[1]++;
        cov_1mfyrpqdbc().s[11]++;
        return `${err.path.join('.')}: ${err.message}`;
      }).join('\n'));
      /* istanbul ignore next */
      cov_1mfyrpqdbc().s[12]++;
      console.error('❌ Invalid environment variables:');
      /* istanbul ignore next */
      cov_1mfyrpqdbc().s[13]++;
      console.error(missingVars);
      /* istanbul ignore next */
      cov_1mfyrpqdbc().s[14]++;
      process.exit(1);
    } else
    /* istanbul ignore next */
    {
      cov_1mfyrpqdbc().b[0][1]++;
    }
    cov_1mfyrpqdbc().s[15]++;
    throw error;
  }
};
/* istanbul ignore next */
cov_1mfyrpqdbc().s[16]++;
exports.config = parseEnv();
// Helper to check if we're in development
/* istanbul ignore next */
cov_1mfyrpqdbc().s[17]++;
exports.isDevelopment = exports.config.NODE_ENV === 'development';
/* istanbul ignore next */
cov_1mfyrpqdbc().s[18]++;
exports.isProduction = exports.config.NODE_ENV === 'production';
/* istanbul ignore next */
cov_1mfyrpqdbc().s[19]++;
exports.isTest = exports.config.NODE_ENV === 'test';
// Database configuration
/* istanbul ignore next */
cov_1mfyrpqdbc().s[20]++;
exports.dbConfig = {
  url: exports.config.DATABASE_URL,
  // Add connection pool settings for production
  ...(
  /* istanbul ignore next */
  (cov_1mfyrpqdbc().b[1][0]++, exports.isProduction) &&
  /* istanbul ignore next */
  (cov_1mfyrpqdbc().b[1][1]++, {
    pool: {
      min: 2,
      max: 10,
      acquireTimeoutMillis: 30000,
      createTimeoutMillis: 30000,
      destroyTimeoutMillis: 5000,
      idleTimeoutMillis: 30000,
      reapIntervalMillis: 1000,
      createRetryIntervalMillis: 200
    }
  }))
};
// Redis configuration
/* istanbul ignore next */
cov_1mfyrpqdbc().s[21]++;
exports.redisConfig = {
  url: exports.config.REDIS_URL,
  retryDelayOnFailover: 100,
  enableReadyCheck: false,
  maxRetriesPerRequest: 3,
  lazyConnect: true,
  ...(
  /* istanbul ignore next */
  (cov_1mfyrpqdbc().b[2][0]++, exports.isProduction) &&
  /* istanbul ignore next */
  (cov_1mfyrpqdbc().b[2][1]++, {
    family: 4,
    keepAlive: true,
    connectTimeout: 10000,
    commandTimeout: 5000
  }))
};
// JWT configuration
/* istanbul ignore next */
cov_1mfyrpqdbc().s[22]++;
exports.jwtConfig = {
  secret: exports.config.JWT_SECRET,
  refreshSecret: exports.config.JWT_REFRESH_SECRET,
  accessExpiresIn: exports.config.JWT_ACCESS_EXPIRES_IN,
  refreshExpiresIn: exports.config.JWT_REFRESH_EXPIRES_IN,
  algorithm: 'HS256',
  issuer: 'utmify-api',
  audience: 'utmify-app'
};
// SMTP configuration
/* istanbul ignore next */
cov_1mfyrpqdbc().s[23]++;
exports.smtpConfig = exports.config.SMTP_HOST ?
/* istanbul ignore next */
(cov_1mfyrpqdbc().b[3][0]++, {
  host: exports.config.SMTP_HOST,
  port:
  /* istanbul ignore next */
  (cov_1mfyrpqdbc().b[4][0]++, exports.config.SMTP_PORT) ||
  /* istanbul ignore next */
  (cov_1mfyrpqdbc().b[4][1]++, 587),
  secure: exports.config.SMTP_PORT === 465,
  auth: {
    user: exports.config.SMTP_USER,
    pass: exports.config.SMTP_PASS
  },
  from: exports.config.SMTP_FROM
}) :
/* istanbul ignore next */
(cov_1mfyrpqdbc().b[3][1]++, null);
// CORS configuration
/* istanbul ignore next */
cov_1mfyrpqdbc().s[24]++;
exports.corsConfig = {
  origin: exports.config.CORS_ORIGIN.split(',').map(origin => {
    /* istanbul ignore next */
    cov_1mfyrpqdbc().f[2]++;
    cov_1mfyrpqdbc().s[25]++;
    return origin.trim();
  }),
  credentials: true,
  methods: ['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS'],
  allowedHeaders: ['Content-Type', 'Authorization', 'X-Requested-With']
};
// Rate limiting configuration
/* istanbul ignore next */
cov_1mfyrpqdbc().s[26]++;
exports.rateLimitConfig = {
  max: exports.config.RATE_LIMIT_MAX,
  timeWindow: exports.config.RATE_LIMIT_WINDOW,
  skipSuccessfulRequests: false,
  skipOnError: true,
  keyGenerator: request => {
    /* istanbul ignore next */
    cov_1mfyrpqdbc().f[3]++;
    cov_1mfyrpqdbc().s[27]++;
    return /* istanbul ignore next */(cov_1mfyrpqdbc().b[5][0]++, request.ip) ||
    /* istanbul ignore next */
    (cov_1mfyrpqdbc().b[5][1]++, 'anonymous');
  }
};
// File upload configuration
/* istanbul ignore next */
cov_1mfyrpqdbc().s[28]++;
exports.uploadConfig = {
  maxFileSize: exports.config.MAX_FILE_SIZE,
  uploadDir: exports.config.UPLOAD_DIR,
  allowedMimeTypes: ['image/jpeg', 'image/png', 'image/webp', 'image/svg+xml', 'text/csv', 'application/json']
};
// Google Ads API Configuration
/* istanbul ignore next */
cov_1mfyrpqdbc().s[29]++;
exports.googleAdsConfig = exports.config.GOOGLE_ADS_CLIENT_ID ?
/* istanbul ignore next */
(cov_1mfyrpqdbc().b[6][0]++, {
  clientId: exports.config.GOOGLE_ADS_CLIENT_ID,
  clientSecret: exports.config.GOOGLE_ADS_CLIENT_SECRET,
  developerToken: exports.config.GOOGLE_ADS_DEVELOPER_TOKEN,
  loginCustomerId: exports.config.GOOGLE_ADS_LOGIN_CUSTOMER_ID,
  apiVersion: 'v15'
}) :
/* istanbul ignore next */
(cov_1mfyrpqdbc().b[6][1]++, null);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,