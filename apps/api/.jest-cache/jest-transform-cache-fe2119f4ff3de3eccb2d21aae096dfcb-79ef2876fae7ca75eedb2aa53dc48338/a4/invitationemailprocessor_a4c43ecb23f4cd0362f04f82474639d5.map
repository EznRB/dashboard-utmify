{"version":3,"names":["cov_2kyzxq1w2d","actualCoverage","Processor","Process","Injectable","Logger","Job","PrismaService","TenantDatabaseService","UserRole","InvitationEmailProcessor","s","InvitationEmailProcessor_1","prisma","tenantDatabaseService","logger","name","constructor","f","handleSendInvitation","job","data","log","email","emailContent","generateInvitationEmailContent","simulateEmailSend","to","subject","organizationName","html","logEmailSent","type","recipient","invitationId","status","error","message","stack","handleResendInvitation","generateResendInvitationEmailContent","handleInvitationAccepted","inviterEmail","generateInvitationAcceptedEmailContent","acceptedUserName","acceptUrl","process","env","FRONTEND_URL","token","rejectUrl","roleTranslations","OWNER","ADMIN","USER","inviterName","role","customMessage","b","Date","expiresAt","toLocaleDateString","day","month","year","hour","minute","getFullYear","acceptedUserEmail","emailData","Promise","resolve","setTimeout","debug","logData","__decorate","_c","Object","_d","_e","_f","_g","_h","_a","_b"],"sources":["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\processors\\invitation-email.processor.ts"],"sourcesContent":["import { Processor, Process } from '@nestjs/bull';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { Job } from 'bull';\nimport { PrismaService } from '../services/prisma.service';\nimport { TenantDatabaseService } from '../services/tenant-database.service';\nimport { UserRole } from '@prisma/client';\n\ninterface InvitationEmailJobData {\n  invitationId: string;\n  email: string;\n  organizationName: string;\n  inviterName: string;\n  role: UserRole;\n  token: string;\n  customMessage?: string;\n  expiresAt: Date;\n}\n\ninterface ResendInvitationJobData {\n  invitationId: string;\n  email: string;\n  organizationName: string;\n  inviterName: string;\n  role: UserRole;\n  token: string;\n  expiresAt: Date;\n}\n\ninterface InvitationAcceptedJobData {\n  inviterEmail: string;\n  inviterName?: string;\n  acceptedUserName: string;\n  acceptedUserEmail: string;\n  organizationName: string;\n}\n\n@Injectable()\n@Processor('email')\nexport class InvitationEmailProcessor {\n  private readonly logger = new Logger(InvitationEmailProcessor.name);\n\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly tenantDatabaseService: TenantDatabaseService,\n  ) {}\n\n  @Process('send-invitation')\n  async handleSendInvitation(job: Job<InvitationEmailJobData>): Promise<void> {\n    const { data } = job;\n    \n    try {\n      this.logger.log(`Processing invitation email for ${data.email}`);\n\n      // Aqui você integraria com seu provedor de email (SendGrid, AWS SES, etc.)\n      // Por enquanto, vamos simular o envio\n      const emailContent = this.generateInvitationEmailContent(data);\n      \n      // Simular envio de email\n      await this.simulateEmailSend({\n        to: data.email,\n        subject: `Convite para ${data.organizationName}`,\n        html: emailContent,\n      });\n\n      // Registrar log de email enviado\n      await this.logEmailSent({\n        type: 'invitation',\n        recipient: data.email,\n        invitationId: data.invitationId,\n        status: 'sent',\n      });\n\n      this.logger.log(`Invitation email sent successfully to ${data.email}`);\n    } catch (error) {\n      this.logger.error(\n        `Failed to send invitation email to ${data.email}: ${error.message}`,\n        error.stack,\n      );\n      \n      // Registrar log de erro\n      await this.logEmailSent({\n        type: 'invitation',\n        recipient: data.email,\n        invitationId: data.invitationId,\n        status: 'failed',\n        error: error.message,\n      });\n      \n      throw error;\n    }\n  }\n\n  @Process('resend-invitation')\n  async handleResendInvitation(job: Job<ResendInvitationJobData>): Promise<void> {\n    const { data } = job;\n    \n    try {\n      this.logger.log(`Processing resend invitation email for ${data.email}`);\n\n      const emailContent = this.generateResendInvitationEmailContent(data);\n      \n      await this.simulateEmailSend({\n        to: data.email,\n        subject: `Lembrete: Convite para ${data.organizationName}`,\n        html: emailContent,\n      });\n\n      await this.logEmailSent({\n        type: 'invitation-resend',\n        recipient: data.email,\n        invitationId: data.invitationId,\n        status: 'sent',\n      });\n\n      this.logger.log(`Resend invitation email sent successfully to ${data.email}`);\n    } catch (error) {\n      this.logger.error(\n        `Failed to resend invitation email to ${data.email}: ${error.message}`,\n        error.stack,\n      );\n      \n      await this.logEmailSent({\n        type: 'invitation-resend',\n        recipient: data.email,\n        invitationId: data.invitationId,\n        status: 'failed',\n        error: error.message,\n      });\n      \n      throw error;\n    }\n  }\n\n  @Process('invitation-accepted')\n  async handleInvitationAccepted(job: Job<InvitationAcceptedJobData>): Promise<void> {\n    const { data } = job;\n    \n    try {\n      this.logger.log(`Processing invitation accepted notification for ${data.inviterEmail}`);\n\n      const emailContent = this.generateInvitationAcceptedEmailContent(data);\n      \n      await this.simulateEmailSend({\n        to: data.inviterEmail,\n        subject: `${data.acceptedUserName} aceitou seu convite para ${data.organizationName}`,\n        html: emailContent,\n      });\n\n      await this.logEmailSent({\n        type: 'invitation-accepted',\n        recipient: data.inviterEmail,\n        status: 'sent',\n      });\n\n      this.logger.log(`Invitation accepted notification sent to ${data.inviterEmail}`);\n    } catch (error) {\n      this.logger.error(\n        `Failed to send invitation accepted notification to ${data.inviterEmail}: ${error.message}`,\n        error.stack,\n      );\n      \n      await this.logEmailSent({\n        type: 'invitation-accepted',\n        recipient: data.inviterEmail,\n        status: 'failed',\n        error: error.message,\n      });\n      \n      throw error;\n    }\n  }\n\n  private generateInvitationEmailContent(data: InvitationEmailJobData): string {\n    const acceptUrl = `${process.env.FRONTEND_URL}/accept-invitation?token=${data.token}`;\n    const rejectUrl = `${process.env.FRONTEND_URL}/reject-invitation?token=${data.token}`;\n    \n    const roleTranslations = {\n      [UserRole.OWNER]: 'Proprietário',\n      [UserRole.ADMIN]: 'Administrador',\n      [UserRole.USER]: 'Usuário',\n    };\n\n    return `\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <meta charset=\"utf-8\">\n        <title>Convite para ${data.organizationName}</title>\n        <style>\n          body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n          .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n          .header { background: #007bff; color: white; padding: 20px; text-align: center; }\n          .content { padding: 20px; background: #f9f9f9; }\n          .button { display: inline-block; padding: 12px 24px; margin: 10px 5px; text-decoration: none; border-radius: 5px; font-weight: bold; }\n          .accept { background: #28a745; color: white; }\n          .reject { background: #dc3545; color: white; }\n          .footer { padding: 20px; text-align: center; font-size: 12px; color: #666; }\n          .expires { background: #fff3cd; border: 1px solid #ffeaa7; padding: 10px; border-radius: 5px; margin: 15px 0; }\n        </style>\n      </head>\n      <body>\n        <div class=\"container\">\n          <div class=\"header\">\n            <h1>Convite para ${data.organizationName}</h1>\n          </div>\n          \n          <div class=\"content\">\n            <p>Olá!</p>\n            \n            <p><strong>${data.inviterName}</strong> convidou você para fazer parte da organização <strong>${data.organizationName}</strong> como <strong>${roleTranslations[data.role]}</strong>.</p>\n            \n            ${data.customMessage ? `\n              <div style=\"background: #e9ecef; padding: 15px; border-radius: 5px; margin: 15px 0;\">\n                <p><strong>Mensagem personalizada:</strong></p>\n                <p style=\"font-style: italic;\">${data.customMessage}</p>\n              </div>\n            ` : ''}\n            \n            <div class=\"expires\">\n              <strong>⏰ Este convite expira em:</strong> ${new Date(data.expiresAt).toLocaleDateString('pt-BR', {\n                day: '2-digit',\n                month: '2-digit',\n                year: 'numeric',\n                hour: '2-digit',\n                minute: '2-digit'\n              })}\n            </div>\n            \n            <p>Para aceitar este convite, clique no botão abaixo:</p>\n            \n            <div style=\"text-align: center; margin: 30px 0;\">\n              <a href=\"${acceptUrl}\" class=\"button accept\">Aceitar Convite</a>\n              <a href=\"${rejectUrl}\" class=\"button reject\">Rejeitar Convite</a>\n            </div>\n            \n            <p><small>Se os botões não funcionarem, copie e cole este link no seu navegador:</small></p>\n            <p><small><a href=\"${acceptUrl}\">${acceptUrl}</a></small></p>\n          </div>\n          \n          <div class=\"footer\">\n            <p>Este email foi enviado automaticamente. Se você não esperava este convite, pode ignorá-lo com segurança.</p>\n            <p>© ${new Date().getFullYear()} ${data.organizationName}. Todos os direitos reservados.</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `;\n  }\n\n  private generateResendInvitationEmailContent(data: ResendInvitationJobData): string {\n    const acceptUrl = `${process.env.FRONTEND_URL}/accept-invitation?token=${data.token}`;\n    const rejectUrl = `${process.env.FRONTEND_URL}/reject-invitation?token=${data.token}`;\n    \n    const roleTranslations = {\n      [UserRole.OWNER]: 'Proprietário',\n      [UserRole.ADMIN]: 'Administrador',\n      [UserRole.USER]: 'Usuário',\n    };\n\n    return `\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <meta charset=\"utf-8\">\n        <title>Lembrete: Convite para ${data.organizationName}</title>\n        <style>\n          body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n          .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n          .header { background: #ffc107; color: #212529; padding: 20px; text-align: center; }\n          .content { padding: 20px; background: #f9f9f9; }\n          .button { display: inline-block; padding: 12px 24px; margin: 10px 5px; text-decoration: none; border-radius: 5px; font-weight: bold; }\n          .accept { background: #28a745; color: white; }\n          .reject { background: #dc3545; color: white; }\n          .footer { padding: 20px; text-align: center; font-size: 12px; color: #666; }\n          .expires { background: #fff3cd; border: 1px solid #ffeaa7; padding: 10px; border-radius: 5px; margin: 15px 0; }\n        </style>\n      </head>\n      <body>\n        <div class=\"container\">\n          <div class=\"header\">\n            <h1>🔔 Lembrete: Convite Pendente</h1>\n            <h2>${data.organizationName}</h2>\n          </div>\n          \n          <div class=\"content\">\n            <p>Olá!</p>\n            \n            <p>Este é um lembrete sobre o convite que <strong>${data.inviterName}</strong> enviou para você fazer parte da organização <strong>${data.organizationName}</strong> como <strong>${roleTranslations[data.role]}</strong>.</p>\n            \n            <div class=\"expires\">\n              <strong>⏰ Este convite expira em:</strong> ${new Date(data.expiresAt).toLocaleDateString('pt-BR', {\n                day: '2-digit',\n                month: '2-digit',\n                year: 'numeric',\n                hour: '2-digit',\n                minute: '2-digit'\n              })}\n            </div>\n            \n            <p>Não perca esta oportunidade! Clique em um dos botões abaixo para responder:</p>\n            \n            <div style=\"text-align: center; margin: 30px 0;\">\n              <a href=\"${acceptUrl}\" class=\"button accept\">Aceitar Convite</a>\n              <a href=\"${rejectUrl}\" class=\"button reject\">Rejeitar Convite</a>\n            </div>\n            \n            <p><small>Se os botões não funcionarem, copie e cole este link no seu navegador:</small></p>\n            <p><small><a href=\"${acceptUrl}\">${acceptUrl}</a></small></p>\n          </div>\n          \n          <div class=\"footer\">\n            <p>Este é um lembrete automático. Se você não esperava este convite, pode ignorá-lo com segurança.</p>\n            <p>© ${new Date().getFullYear()} ${data.organizationName}. Todos os direitos reservados.</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `;\n  }\n\n  private generateInvitationAcceptedEmailContent(data: InvitationAcceptedJobData): string {\n    return `\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <meta charset=\"utf-8\">\n        <title>Convite Aceito - ${data.organizationName}</title>\n        <style>\n          body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n          .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n          .header { background: #28a745; color: white; padding: 20px; text-align: center; }\n          .content { padding: 20px; background: #f9f9f9; }\n          .footer { padding: 20px; text-align: center; font-size: 12px; color: #666; }\n          .success { background: #d4edda; border: 1px solid #c3e6cb; padding: 15px; border-radius: 5px; margin: 15px 0; }\n        </style>\n      </head>\n      <body>\n        <div class=\"container\">\n          <div class=\"header\">\n            <h1>🎉 Convite Aceito!</h1>\n          </div>\n          \n          <div class=\"content\">\n            <p>Olá ${data.inviterName || 'Administrador'}!</p>\n            \n            <div class=\"success\">\n              <p><strong>Ótimas notícias!</strong> ${data.acceptedUserName} (${data.acceptedUserEmail}) aceitou seu convite para fazer parte da organização <strong>${data.organizationName}</strong>.</p>\n            </div>\n            \n            <p>O novo membro já tem acesso à plataforma e pode começar a colaborar com a equipe.</p>\n            \n            <p>Você pode gerenciar os membros da sua organização através do painel administrativo.</p>\n          </div>\n          \n          <div class=\"footer\">\n            <p>Este email foi enviado automaticamente quando um convite foi aceito.</p>\n            <p>© ${new Date().getFullYear()} ${data.organizationName}. Todos os direitos reservados.</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `;\n  }\n\n  private async simulateEmailSend(emailData: {\n    to: string;\n    subject: string;\n    html: string;\n  }): Promise<void> {\n    // Simular delay de envio de email\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    \n    // Em produção, aqui você faria a integração real com o provedor de email\n    // Exemplo com SendGrid:\n    // const msg = {\n    //   to: emailData.to,\n    //   from: process.env.FROM_EMAIL,\n    //   subject: emailData.subject,\n    //   html: emailData.html,\n    // };\n    // await sgMail.send(msg);\n    \n    this.logger.debug(`Email simulated: ${emailData.subject} -> ${emailData.to}`);\n  }\n\n  private async logEmailSent(logData: {\n    type: string;\n    recipient: string;\n    invitationId?: string;\n    status: 'sent' | 'failed';\n    error?: string;\n  }): Promise<void> {\n    try {\n      // Registrar log no banco de dados\n      // Em um cenário real, você poderia ter uma tabela de logs de email\n      this.logger.log(\n        `Email log: ${logData.type} to ${logData.recipient} - ${logData.status}${logData.error ? ` (${logData.error})` : ''}`,\n      );\n    } catch (error) {\n      this.logger.error(`Failed to log email: ${error.message}`);\n    }\n  }\n}"],"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","ignoreList":[]}