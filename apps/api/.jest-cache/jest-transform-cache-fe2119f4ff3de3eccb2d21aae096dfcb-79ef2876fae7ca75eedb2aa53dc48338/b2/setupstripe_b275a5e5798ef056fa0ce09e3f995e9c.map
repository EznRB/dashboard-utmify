{"version":3,"names":["cov_18htr1hu5w","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","PrismaClient","Stripe","STRIPE_SECRET_KEY","process","env","defaultPlans","price","currency","interval","maxIntegrations","maxUsers","maxApiCalls","features","trialDays","setupStripe","prisma","stripe","apiVersion","console","log","planConfig","product","products","create","description","join","metadata","planType","prices","id","unit_amount","toLowerCase","recurring","plan","upsert","where","update","stripeProductId","stripePriceId","isActive","error","PlanType","FREE","exit","$disconnect","on","require","main","module","catch"],"sources":["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\scripts\\setup-stripe.ts"],"sourcesContent":["#!/usr/bin/env node\n\n/**\n * Script para configurar o Stripe com planos, cupons e webhooks\n * Execute com: npm run setup:stripe\n */\n\nimport { PrismaClient } from '@prisma/client';\nimport Stripe from 'stripe';\n\n// Configurações do ambiente\nconst STRIPE_SECRET_KEY = process.env.STRIPE_SECRET_KEY || 'sk_test_...';\n\n// Tipos de plano disponíveis no schema\ntype PlanType = 'STARTER' | 'PROFESSIONAL' | 'ENTERPRISE';\n\ninterface PlanConfig {\n  name: string;\n  type: PlanType;\n  price: number; // in cents\n  currency: string;\n  interval: 'month' | 'year';\n  maxIntegrations: number | null;\n  maxUsers: number | null;\n  maxApiCalls: number | null;\n  features: string[];\n  trialDays: number;\n}\n\nconst defaultPlans: PlanConfig[] = [\n  {\n    name: 'Starter',\n    type: 'STARTER',\n    price: 9700, // R$ 97.00\n    currency: 'BRL',\n    interval: 'month',\n    maxIntegrations: 3,\n    maxUsers: 5,\n    maxApiCalls: 10000,\n    features: [\n      '3 integrações',\n      '5 usuários',\n      '10.000 chamadas de API/mês',\n      'Suporte prioritário',\n      'Relatórios avançados',\n    ],\n    trialDays: 7,\n  },\n  {\n    name: 'Professional',\n    type: 'PROFESSIONAL',\n    price: 29700, // R$ 297.00\n    currency: 'BRL',\n    interval: 'month',\n    maxIntegrations: null, // unlimited\n    maxUsers: null, // unlimited\n    maxApiCalls: null, // unlimited\n    features: [\n      'Integrações ilimitadas',\n      'Usuários ilimitados',\n      'Chamadas de API ilimitadas',\n      'Suporte 24/7',\n      'Relatórios personalizados',\n      'API avançada',\n      'Webhooks',\n    ],\n    trialDays: 7,\n  },\n  {\n    name: 'Enterprise',\n    type: 'ENTERPRISE',\n    price: 0, // Custom pricing\n    currency: 'BRL',\n    interval: 'month',\n    maxIntegrations: null,\n    maxUsers: null,\n    maxApiCalls: null,\n    features: [\n      'Tudo do Professional',\n      'Implementação dedicada',\n      'SLA garantido',\n      'Treinamento personalizado',\n      'Integração customizada',\n    ],\n    trialDays: 14,\n  },\n];\n\nasync function setupStripe() {\n  const prisma = new PrismaClient();\n  const stripe = new Stripe(STRIPE_SECRET_KEY, {\n    apiVersion: '2023-10-16',\n  });\n\n  try {\n    console.log('🚀 Iniciando configuração do Stripe...');\n\n    // 1. Criar produtos e preços no Stripe\n    console.log('📋 Criando produtos no Stripe...');\n    \n    for (const planConfig of defaultPlans) {\n      if (planConfig.price === 0) continue; // Skip free plan\n      \n      try {\n        // Criar produto no Stripe\n        const product = await stripe.products.create({\n          name: planConfig.name,\n          description: `Plano ${planConfig.name} - ${planConfig.features.join(', ')}`,\n          metadata: {\n            planType: planConfig.type,\n          },\n        });\n\n        // Criar preço no Stripe\n        const price = await stripe.prices.create({\n          product: product.id,\n          unit_amount: planConfig.price,\n          currency: planConfig.currency.toLowerCase(),\n          recurring: {\n            interval: planConfig.interval,\n          },\n          metadata: {\n            planType: planConfig.type,\n          },\n        });\n\n        // Salvar no banco de dados\n        await prisma.plan.upsert({\n          where: { type: planConfig.type },\n          update: {\n            name: planConfig.name,\n            price: planConfig.price,\n            currency: planConfig.currency,\n            interval: planConfig.interval,\n            maxIntegrations: planConfig.maxIntegrations,\n            maxUsers: planConfig.maxUsers,\n            maxApiCalls: planConfig.maxApiCalls,\n            features: planConfig.features,\n            trialDays: planConfig.trialDays,\n            stripeProductId: product.id,\n            stripePriceId: price.id,\n            isActive: true,\n          },\n          create: {\n            name: planConfig.name,\n            type: planConfig.type,\n            price: planConfig.price,\n            currency: planConfig.currency,\n            interval: planConfig.interval,\n            maxIntegrations: planConfig.maxIntegrations,\n            maxUsers: planConfig.maxUsers,\n            maxApiCalls: planConfig.maxApiCalls,\n            features: planConfig.features,\n            trialDays: planConfig.trialDays,\n            stripeProductId: product.id,\n            stripePriceId: price.id,\n            isActive: true,\n          },\n        });\n\n        console.log(`✅ Plano ${planConfig.name} criado com sucesso`);\n      } catch (error) {\n        console.error(`❌ Erro ao criar plano ${planConfig.name}:`, error);\n      }\n    }\n\n    // Criar plano gratuito\n    await prisma.plan.upsert({\n      where: { type: PlanType.FREE },\n      update: {\n        name: 'Free',\n        price: 0,\n        currency: 'BRL',\n        interval: 'month',\n        maxIntegrations: 1,\n        maxUsers: 1,\n        maxApiCalls: 1000,\n        features: ['1 integração', '1 usuário', '1.000 chamadas de API/mês', 'Suporte por email'],\n        trialDays: 0,\n        isActive: true,\n      },\n      create: {\n        name: 'Free',\n        type: PlanType.FREE,\n        price: 0,\n        currency: 'BRL',\n        interval: 'month',\n        maxIntegrations: 1,\n        maxUsers: 1,\n        maxApiCalls: 1000,\n        features: ['1 integração', '1 usuário', '1.000 chamadas de API/mês', 'Suporte por email'],\n        trialDays: 0,\n        isActive: true,\n      },\n    });\n\n    console.log('🎉 Configuração do Stripe concluída com sucesso!');\n    console.log('');\n    console.log('📝 Próximos passos:');\n    console.log('1. Configure as variáveis de ambiente:');\n    console.log('   - STRIPE_SECRET_KEY');\n    console.log('   - STRIPE_PUBLISHABLE_KEY');\n    console.log('   - STRIPE_WEBHOOK_SECRET');\n    console.log('2. Configure os webhooks no Stripe Dashboard');\n    console.log('3. Teste a integração com checkout');\n    \n  } catch (error) {\n    console.error('❌ Erro na configuração do Stripe:', error);\n    process.exit(1);\n  } finally {\n    await prisma.$disconnect();\n  }\n}\n\n// Handle graceful shutdown\nprocess.on('SIGINT', async () => {\n  console.log('Received SIGINT, shutting down gracefully...');\n  process.exit(0);\n});\n\nprocess.on('SIGTERM', async () => {\n  console.log('Received SIGTERM, shutting down gracefully...');\n  process.exit(0);\n});\n\n// Run the setup\nif (require.main === module) {\n  setupStripe().catch((error) => {\n    console.error('Unhandled error:', error);\n    process.exit(1);\n  });\n}\n\nexport { setupStripe };"],"mappings":";AAEA;;;;AAAA;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC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","ignoreList":[]}