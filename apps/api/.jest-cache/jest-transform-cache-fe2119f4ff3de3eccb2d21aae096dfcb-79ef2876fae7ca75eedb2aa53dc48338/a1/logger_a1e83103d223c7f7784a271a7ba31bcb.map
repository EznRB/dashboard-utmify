{"version":3,"names":["cov_11un9d1dx7","actualCoverage","pino","config","logger","s","level","LOG_LEVEL","transport","NODE_ENV","b","target","options","colorize","translateTime","ignore","messageFormat","undefined","formatters","label","f","timestamp","stdTimeFunctions","isoTime","base","pid","process","hostname","env","HOSTNAME","service","version","npm_package_version","logLevels","fatal","error","warn","info","debug","trace","logError","message","context","name","stack","logRequest","request","method","url","ip","userAgent","headers","logResponse","response","statusCode","responseTime","logDatabase","operation","table","duration","database","logAuth","event","userId","email","success","auth","logSecurity","details","severity","security","logPerformance","metadata","performance","logWebhook","webhookId","webhook","logQueue","jobName","jobId","status","queue","createContextLogger","child"],"sources":["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\utils\\logger.ts"],"sourcesContent":["import pino from 'pino'\nimport { config } from '@/config/env'\n\n// Create logger instance\nexport const logger = pino({\n  level: config.LOG_LEVEL,\n  transport: config.NODE_ENV === 'development' ? {\n    target: 'pino-pretty',\n    options: {\n      colorize: true,\n      translateTime: 'HH:MM:ss Z',\n      ignore: 'pid,hostname',\n      messageFormat: '{levelLabel} - {msg}',\n    },\n  } : undefined,\n  formatters: {\n    level: (label) => {\n      return { level: label }\n    },\n  },\n  timestamp: pino.stdTimeFunctions.isoTime,\n  base: {\n    pid: process.pid,\n    hostname: process.env.HOSTNAME || 'unknown',\n    service: 'utmify-api',\n    version: process.env.npm_package_version || '0.1.0',\n  },\n})\n\n// Log levels for different scenarios\nexport const logLevels = {\n  fatal: 60,\n  error: 50,\n  warn: 40,\n  info: 30,\n  debug: 20,\n  trace: 10,\n} as const\n\n// Helper functions for structured logging\nexport const logError = (error: Error, message?: string, context?: Record<string, any>) => {\n  logger.error({\n    error: {\n      name: error.name,\n      message: error.message,\n      stack: error.stack,\n    },\n    ...context,\n  }, message || error.message)\n}\n\nexport const logRequest = (request: {\n  method: string\n  url: string\n  headers?: Record<string, any>\n  ip?: string\n  userAgent?: string\n}, message?: string) => {\n  logger.info({\n    request: {\n      method: request.method,\n      url: request.url,\n      ip: request.ip,\n      userAgent: request.userAgent,\n      // Don't log sensitive headers\n      headers: request.headers ? {\n        'content-type': request.headers['content-type'],\n        'accept': request.headers['accept'],\n        'origin': request.headers['origin'],\n      } : undefined,\n    },\n  }, message || 'Request received')\n}\n\nexport const logResponse = (response: {\n  statusCode: number\n  responseTime?: number\n}, message?: string) => {\n  const level = response.statusCode >= 500 ? 'error' : \n               response.statusCode >= 400 ? 'warn' : 'info'\n  \n  logger[level]({\n    response: {\n      statusCode: response.statusCode,\n      responseTime: response.responseTime,\n    },\n  }, message || 'Request completed')\n}\n\nexport const logDatabase = (operation: string, table?: string, duration?: number, error?: Error) => {\n  if (error) {\n    logger.error({\n      database: {\n        operation,\n        table,\n        duration,\n        error: {\n          name: error.name,\n          message: error.message,\n        },\n      },\n    }, `Database operation failed: ${operation}`)\n  } else {\n    logger.debug({\n      database: {\n        operation,\n        table,\n        duration,\n      },\n    }, `Database operation: ${operation}`)\n  }\n}\n\nexport const logAuth = (event: string, userId?: string, email?: string, ip?: string, success: boolean = true) => {\n  const level = success ? 'info' : 'warn'\n  \n  logger[level]({\n    auth: {\n      event,\n      userId,\n      email,\n      ip,\n      success,\n    },\n  }, `Auth event: ${event}`)\n}\n\nexport const logSecurity = (event: string, details: Record<string, any>, severity: 'low' | 'medium' | 'high' = 'medium') => {\n  const level = severity === 'high' ? 'error' : severity === 'medium' ? 'warn' : 'info'\n  \n  logger[level]({\n    security: {\n      event,\n      severity,\n      ...details,\n    },\n  }, `Security event: ${event}`)\n}\n\nexport const logPerformance = (operation: string, duration: number, metadata?: Record<string, any>) => {\n  const level = duration > 5000 ? 'warn' : duration > 1000 ? 'info' : 'debug'\n  \n  logger[level]({\n    performance: {\n      operation,\n      duration,\n      ...metadata,\n    },\n  }, `Performance: ${operation} took ${duration}ms`)\n}\n\nexport const logWebhook = (event: string, webhookId: string, url: string, success: boolean, responseTime?: number, error?: Error) => {\n  const level = success ? 'info' : 'error'\n  \n  logger[level]({\n    webhook: {\n      event,\n      webhookId,\n      url,\n      success,\n      responseTime,\n      error: error ? {\n        name: error.name,\n        message: error.message,\n      } : undefined,\n    },\n  }, `Webhook ${success ? 'delivered' : 'failed'}: ${event}`)\n}\n\nexport const logQueue = (jobName: string, jobId: string, status: 'started' | 'completed' | 'failed', duration?: number, error?: Error) => {\n  const level = status === 'failed' ? 'error' : 'info'\n  \n  logger[level]({\n    queue: {\n      jobName,\n      jobId,\n      status,\n      duration,\n      error: error ? {\n        name: error.name,\n        message: error.message,\n      } : undefined,\n    },\n  }, `Queue job ${status}: ${jobName}`)\n}\n\n// Create child logger with context\nexport const createContextLogger = (context: Record<string, any>) => {\n  return logger.child(context)\n}\n\n// Export default logger\nexport default logger"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","ignoreList":[]}