{"version":3,"names":["cov_swekhqc09","actualCoverage","Stripe","PrismaClient","StripeService","stripe","prisma","constructor","f","s","process","env","STRIPE_SECRET_KEY","apiVersion","b","createCheckoutSession","params","organizationId","planId","successUrl","cancelUrl","couponCode","plan","findUnique","where","id","isActive","Error","organization","include","subscription","status","customerId","stripeCustomerId","customer","customers","create","email","name","metadata","sessionParams","payment_method_types","line_items","price","stripePriceId","quantity","mode","success_url","cancel_url","subscription_data","trial_period_days","trialDays","coupon","code","isCouponValid","discounts","stripeCouponId","session","checkout","sessions","sessionId","url","createCustomer","getSubscription","subscriptionId","subscriptions","retrieve","cancelSubscription","cancelAtPeriodEnd","update","cancel_at_period_end","cancel","upgradeSubscription","newPriceId","items","data","proration_behavior","createPortalSession","returnUrl","billingPortal","return_url","getInvoices","limit","invoices","list","createUsageRecord","subscriptionItemId","timestamp","subscriptionItems","Math","floor","Date","now","action","attachPaymentMethod","paymentMethodId","paymentMethods","attach","invoice_settings","default_payment_method","getPaymentMethods","type","createCoupon","stripeCoupon","coupons","percent_off","percentOff","amount_off","amountOff","currency","duration","duration_in_months","durationInMonths","max_redemptions","maxRedemptions","validFrom","validUntil","timesRedeemed","constructWebhookEvent","payload","signature","webhooks","constructEvent","STRIPE_WEBHOOK_SECRET"],"sources":["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\services\\stripe.service.ts"],"sourcesContent":["import Stripe from 'stripe';\nimport { PrismaClient, PlanType, SubscriptionStatus } from '@utmify/database';\n\nexport interface CreateCheckoutSessionParams {\n  organizationId: string;\n  planId: string;\n  successUrl: string;\n  cancelUrl: string;\n  couponCode?: string;\n}\n\nexport interface CreateCustomerParams {\n  email: string;\n  name: string;\n  organizationId: string;\n}\n\nexport class StripeService {\n  private stripe: Stripe;\n  private prisma: PrismaClient;\n\n  constructor(prisma?: PrismaClient) {\n    this.stripe = new Stripe(process.env.STRIPE_SECRET_KEY!, {\n      apiVersion: '2023-10-16',\n    });\n    this.prisma = prisma || new PrismaClient();\n  }\n\n  async createCheckoutSession(params: CreateCheckoutSessionParams) {\n    const { organizationId, planId, successUrl, cancelUrl, couponCode } = params;\n\n    // Get plan details\n    const plan = await this.prisma.plan.findUnique({\n      where: { id: planId },\n    });\n\n    if (!plan || !plan.isActive) {\n      throw new Error('Plano não encontrado ou inativo');\n    }\n\n    // Get organization\n    const organization = await this.prisma.organization.findUnique({\n      where: { id: organizationId },\n      include: { subscription: true },\n    });\n\n    if (!organization) {\n      throw new Error('Organização não encontrada');\n    }\n\n    // Check if organization already has an active subscription\n    if (organization.subscription && organization.subscription.status === 'ACTIVE') {\n      throw new Error('Organização já possui uma assinatura ativa');\n    }\n\n    let customerId = organization.subscription?.stripeCustomerId;\n\n    // Create or get Stripe customer\n    if (!customerId) {\n      const customer = await this.stripe.customers.create({\n        email: organization.name + '@utmify.com', // You might want to use a real email\n        name: organization.name,\n        metadata: {\n          organizationId: organizationId,\n        },\n      });\n      customerId = customer.id;\n    }\n\n    const sessionParams: Stripe.Checkout.SessionCreateParams = {\n      customer: customerId,\n      payment_method_types: ['card'],\n      line_items: [\n        {\n          price: plan.stripePriceId!,\n          quantity: 1,\n        },\n      ],\n      mode: 'subscription',\n      success_url: successUrl,\n      cancel_url: cancelUrl,\n      subscription_data: {\n        trial_period_days: plan.trialDays,\n        metadata: {\n          organizationId: organizationId,\n          planId: planId,\n        },\n      },\n      metadata: {\n        organizationId: organizationId,\n        planId: planId,\n      },\n    };\n\n    // Apply coupon if provided\n    if (couponCode) {\n      const coupon = await this.prisma.coupon.findUnique({\n        where: { code: couponCode, isActive: true },\n      });\n\n      if (coupon && this.isCouponValid(coupon)) {\n        sessionParams.discounts = [{\n          coupon: coupon.stripeCouponId!,\n        }];\n      }\n    }\n\n    const session = await this.stripe.checkout.sessions.create(sessionParams);\n\n    return {\n      sessionId: session.id,\n      url: session.url,\n    };\n  }\n\n  async createCustomer(params: CreateCustomerParams) {\n    const { email, name, organizationId } = params;\n\n    const customer = await this.stripe.customers.create({\n      email,\n      name,\n      metadata: {\n        organizationId,\n      },\n    });\n\n    return customer;\n  }\n\n  async getSubscription(subscriptionId: string) {\n    return await this.stripe.subscriptions.retrieve(subscriptionId);\n  }\n\n  async cancelSubscription(subscriptionId: string, cancelAtPeriodEnd = true) {\n    if (cancelAtPeriodEnd) {\n      return await this.stripe.subscriptions.update(subscriptionId, {\n        cancel_at_period_end: true,\n      });\n    } else {\n      return await this.stripe.subscriptions.cancel(subscriptionId);\n    }\n  }\n\n  async upgradeSubscription(subscriptionId: string, newPriceId: string) {\n    const subscription = await this.stripe.subscriptions.retrieve(subscriptionId);\n    \n    return await this.stripe.subscriptions.update(subscriptionId, {\n      items: [{\n        id: subscription.items.data[0].id,\n        price: newPriceId,\n      }],\n      proration_behavior: 'create_prorations',\n    });\n  }\n\n  async createPortalSession(customerId: string, returnUrl: string) {\n    return await this.stripe.billingPortal.sessions.create({\n      customer: customerId,\n      return_url: returnUrl,\n    });\n  }\n\n  async getInvoices(customerId: string, limit = 10) {\n    return await this.stripe.invoices.list({\n      customer: customerId,\n      limit,\n    });\n  }\n\n  async createUsageRecord(subscriptionItemId: string, quantity: number, timestamp?: number) {\n    return await this.stripe.subscriptionItems.createUsageRecord(\n      subscriptionItemId,\n      {\n        quantity,\n        timestamp: timestamp || Math.floor(Date.now() / 1000),\n        action: 'increment',\n      }\n    );\n  }\n\n  async attachPaymentMethod(customerId: string, paymentMethodId: string) {\n    await this.stripe.paymentMethods.attach(paymentMethodId, {\n      customer: customerId,\n    });\n\n    return await this.stripe.customers.update(customerId, {\n      invoice_settings: {\n        default_payment_method: paymentMethodId,\n      },\n    });\n  }\n\n  async getPaymentMethods(customerId: string) {\n    return await this.stripe.paymentMethods.list({\n      customer: customerId,\n      type: 'card',\n    });\n  }\n\n  async createCoupon(params: {\n    code: string;\n    name?: string;\n    percentOff?: number;\n    amountOff?: number;\n    currency?: string;\n    duration: 'once' | 'repeating' | 'forever';\n    durationInMonths?: number;\n    maxRedemptions?: number;\n  }) {\n    const stripeCoupon = await this.stripe.coupons.create({\n      id: params.code,\n      name: params.name,\n      percent_off: params.percentOff,\n      amount_off: params.amountOff,\n      currency: params.currency,\n      duration: params.duration,\n      duration_in_months: params.durationInMonths,\n      max_redemptions: params.maxRedemptions,\n    });\n\n    // Save to database\n    await this.prisma.coupon.create({\n      data: {\n        stripeCouponId: stripeCoupon.id,\n        code: params.code,\n        name: params.name,\n        percentOff: params.percentOff,\n        amountOff: params.amountOff,\n        currency: params.currency,\n        duration: params.duration,\n        durationInMonths: params.durationInMonths,\n        maxRedemptions: params.maxRedemptions,\n      },\n    });\n\n    return stripeCoupon;\n  }\n\n  private isCouponValid(coupon: any): boolean {\n    const now = new Date();\n    \n    if (coupon.validFrom && new Date(coupon.validFrom) > now) {\n      return false;\n    }\n    \n    if (coupon.validUntil && new Date(coupon.validUntil) < now) {\n      return false;\n    }\n    \n    if (coupon.maxRedemptions && coupon.timesRedeemed >= coupon.maxRedemptions) {\n      return false;\n    }\n    \n    return true;\n  }\n\n  async constructWebhookEvent(payload: string | Buffer, signature: string) {\n    return this.stripe.webhooks.constructEvent(\n      payload,\n      signature,\n      process.env.STRIPE_WEBHOOK_SECRET!\n    );\n  }\n}"],"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","ignoreList":[]}