7d2fdad0c9b543ff1dc99d76ba21b974
/* istanbul ignore next */
function cov_swekhqc09() {
  var path = "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\services\\stripe.service.ts";
  var hash = "ad7504d1b0c12f41c567faa4563efb4db3e3a68d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\services\\stripe.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 8
        },
        end: {
          line: 9,
          column: 11
        }
      },
      "1": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 51
        }
      },
      "2": {
        start: {
          line: 13,
          column: 78
        },
        end: {
          line: 13,
          column: 84
        }
      },
      "3": {
        start: {
          line: 15,
          column: 21
        },
        end: {
          line: 17,
          column: 10
        }
      },
      "4": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 20,
          column: 9
        }
      },
      "5": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 19,
          column: 63
        }
      },
      "6": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 25,
          column: 10
        }
      },
      "7": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 28,
          column: 9
        }
      },
      "8": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 58
        }
      },
      "9": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 32,
          column: 9
        }
      },
      "10": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 74
        }
      },
      "11": {
        start: {
          line: 33,
          column: 25
        },
        end: {
          line: 33,
          column: 68
        }
      },
      "12": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 44,
          column: 9
        }
      },
      "13": {
        start: {
          line: 36,
          column: 29
        },
        end: {
          line: 42,
          column: 14
        }
      },
      "14": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 43,
          column: 37
        }
      },
      "15": {
        start: {
          line: 45,
          column: 30
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "16": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 79,
          column: 9
        }
      },
      "17": {
        start: {
          line: 71,
          column: 27
        },
        end: {
          line: 73,
          column: 14
        }
      },
      "18": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 78,
          column: 13
        }
      },
      "19": {
        start: {
          line: 75,
          column: 16
        },
        end: {
          line: 77,
          column: 23
        }
      },
      "20": {
        start: {
          line: 80,
          column: 24
        },
        end: {
          line: 80,
          column: 81
        }
      },
      "21": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 84,
          column: 10
        }
      },
      "22": {
        start: {
          line: 87,
          column: 48
        },
        end: {
          line: 87,
          column: 54
        }
      },
      "23": {
        start: {
          line: 88,
          column: 25
        },
        end: {
          line: 94,
          column: 10
        }
      },
      "24": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 24
        }
      },
      "25": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 98,
          column: 72
        }
      },
      "26": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 108,
          column: 9
        }
      },
      "27": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 104,
          column: 15
        }
      },
      "28": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 74
        }
      },
      "29": {
        start: {
          line: 111,
          column: 29
        },
        end: {
          line: 111,
          column: 85
        }
      },
      "30": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 118,
          column: 11
        }
      },
      "31": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 124,
          column: 11
        }
      },
      "32": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 130,
          column: 11
        }
      },
      "33": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 137,
          column: 11
        }
      },
      "34": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 142,
          column: 11
        }
      },
      "35": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 147,
          column: 11
        }
      },
      "36": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 153,
          column: 11
        }
      },
      "37": {
        start: {
          line: 156,
          column: 29
        },
        end: {
          line: 165,
          column: 10
        }
      },
      "38": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 179,
          column: 11
        }
      },
      "39": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 180,
          column: 28
        }
      },
      "40": {
        start: {
          line: 183,
          column: 20
        },
        end: {
          line: 183,
          column: 30
        }
      },
      "41": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 186,
          column: 9
        }
      },
      "42": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 185,
          column: 25
        }
      },
      "43": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 189,
          column: 9
        }
      },
      "44": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 188,
          column: 25
        }
      },
      "45": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 192,
          column: 9
        }
      },
      "46": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 191,
          column: 25
        }
      },
      "47": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 193,
          column: 20
        }
      },
      "48": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 196,
          column: 106
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 4
          },
          end: {
            line: 6,
            column: 5
          }
        },
        loc: {
          start: {
            line: 6,
            column: 24
          },
          end: {
            line: 11,
            column: 5
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 40
          },
          end: {
            line: 85,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 86,
            column: 5
          }
        },
        loc: {
          start: {
            line: 86,
            column: 33
          },
          end: {
            line: 96,
            column: 5
          }
        },
        line: 86
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        },
        loc: {
          start: {
            line: 97,
            column: 42
          },
          end: {
            line: 99,
            column: 5
          }
        },
        line: 97
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 100,
            column: 4
          },
          end: {
            line: 100,
            column: 5
          }
        },
        loc: {
          start: {
            line: 100,
            column: 71
          },
          end: {
            line: 109,
            column: 5
          }
        },
        line: 100
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 110,
            column: 5
          }
        },
        loc: {
          start: {
            line: 110,
            column: 58
          },
          end: {
            line: 119,
            column: 5
          }
        },
        line: 110
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 120,
            column: 4
          },
          end: {
            line: 120,
            column: 5
          }
        },
        loc: {
          start: {
            line: 120,
            column: 53
          },
          end: {
            line: 125,
            column: 5
          }
        },
        line: 120
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 126,
            column: 4
          },
          end: {
            line: 126,
            column: 5
          }
        },
        loc: {
          start: {
            line: 126,
            column: 46
          },
          end: {
            line: 131,
            column: 5
          }
        },
        line: 126
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 132,
            column: 4
          },
          end: {
            line: 132,
            column: 5
          }
        },
        loc: {
          start: {
            line: 132,
            column: 69
          },
          end: {
            line: 138,
            column: 5
          }
        },
        line: 132
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 139,
            column: 4
          },
          end: {
            line: 139,
            column: 5
          }
        },
        loc: {
          start: {
            line: 139,
            column: 59
          },
          end: {
            line: 148,
            column: 5
          }
        },
        line: 139
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 149,
            column: 4
          },
          end: {
            line: 149,
            column: 5
          }
        },
        loc: {
          start: {
            line: 149,
            column: 40
          },
          end: {
            line: 154,
            column: 5
          }
        },
        line: 149
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 155,
            column: 4
          },
          end: {
            line: 155,
            column: 5
          }
        },
        loc: {
          start: {
            line: 155,
            column: 31
          },
          end: {
            line: 181,
            column: 5
          }
        },
        line: 155
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 182,
            column: 4
          },
          end: {
            line: 182,
            column: 5
          }
        },
        loc: {
          start: {
            line: 182,
            column: 26
          },
          end: {
            line: 194,
            column: 5
          }
        },
        line: 182
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 195,
            column: 4
          },
          end: {
            line: 195,
            column: 5
          }
        },
        loc: {
          start: {
            line: 195,
            column: 52
          },
          end: {
            line: 197,
            column: 5
          }
        },
        line: 195
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 10,
            column: 22
          },
          end: {
            line: 10,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 10,
            column: 22
          },
          end: {
            line: 10,
            column: 28
          }
        }, {
          start: {
            line: 10,
            column: 32
          },
          end: {
            line: 10,
            column: 50
          }
        }],
        line: 10
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 20,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 20,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 18,
            column: 12
          },
          end: {
            line: 18,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 12
          },
          end: {
            line: 18,
            column: 17
          }
        }, {
          start: {
            line: 18,
            column: 21
          },
          end: {
            line: 18,
            column: 35
          }
        }],
        line: 18
      },
      "3": {
        loc: {
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "4": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 32,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 32,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "5": {
        loc: {
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 30,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 30,
            column: 37
          }
        }, {
          start: {
            line: 30,
            column: 41
          },
          end: {
            line: 30,
            column: 86
          }
        }],
        line: 30
      },
      "6": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "7": {
        loc: {
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "8": {
        loc: {
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 78,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 78,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "9": {
        loc: {
          start: {
            line: 74,
            column: 16
          },
          end: {
            line: 74,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 16
          },
          end: {
            line: 74,
            column: 22
          }
        }, {
          start: {
            line: 74,
            column: 26
          },
          end: {
            line: 74,
            column: 52
          }
        }],
        line: 74
      },
      "10": {
        loc: {
          start: {
            line: 100,
            column: 45
          },
          end: {
            line: 100,
            column: 69
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 100,
            column: 65
          },
          end: {
            line: 100,
            column: 69
          }
        }],
        line: 100
      },
      "11": {
        loc: {
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        }, {
          start: {
            line: 106,
            column: 13
          },
          end: {
            line: 108,
            column: 9
          }
        }],
        line: 101
      },
      "12": {
        loc: {
          start: {
            line: 126,
            column: 34
          },
          end: {
            line: 126,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 126,
            column: 42
          },
          end: {
            line: 126,
            column: 44
          }
        }],
        line: 126
      },
      "13": {
        loc: {
          start: {
            line: 135,
            column: 23
          },
          end: {
            line: 135,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 135,
            column: 23
          },
          end: {
            line: 135,
            column: 32
          }
        }, {
          start: {
            line: 135,
            column: 36
          },
          end: {
            line: 135,
            column: 65
          }
        }],
        line: 135
      },
      "14": {
        loc: {
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 184
      },
      "15": {
        loc: {
          start: {
            line: 184,
            column: 12
          },
          end: {
            line: 184,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 184,
            column: 12
          },
          end: {
            line: 184,
            column: 28
          }
        }, {
          start: {
            line: 184,
            column: 32
          },
          end: {
            line: 184,
            column: 64
          }
        }],
        line: 184
      },
      "16": {
        loc: {
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 189,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 189,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 187
      },
      "17": {
        loc: {
          start: {
            line: 187,
            column: 12
          },
          end: {
            line: 187,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 187,
            column: 12
          },
          end: {
            line: 187,
            column: 29
          }
        }, {
          start: {
            line: 187,
            column: 33
          },
          end: {
            line: 187,
            column: 66
          }
        }],
        line: 187
      },
      "18": {
        loc: {
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 192,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 192,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "19": {
        loc: {
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 190,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 190,
            column: 33
          }
        }, {
          start: {
            line: 190,
            column: 37
          },
          end: {
            line: 190,
            column: 82
          }
        }],
        line: 190
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0],
      "11": [0, 0],
      "12": [0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\services\\stripe.service.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\services\\stripe.service.ts"],
      sourcesContent: ["import Stripe from 'stripe';\nimport { PrismaClient, PlanType, SubscriptionStatus } from '@utmify/database';\n\nexport interface CreateCheckoutSessionParams {\n  organizationId: string;\n  planId: string;\n  successUrl: string;\n  cancelUrl: string;\n  couponCode?: string;\n}\n\nexport interface CreateCustomerParams {\n  email: string;\n  name: string;\n  organizationId: string;\n}\n\nexport class StripeService {\n  private stripe: Stripe;\n  private prisma: PrismaClient;\n\n  constructor(prisma?: PrismaClient) {\n    this.stripe = new Stripe(process.env.STRIPE_SECRET_KEY!, {\n      apiVersion: '2023-10-16',\n    });\n    this.prisma = prisma || new PrismaClient();\n  }\n\n  async createCheckoutSession(params: CreateCheckoutSessionParams) {\n    const { organizationId, planId, successUrl, cancelUrl, couponCode } = params;\n\n    // Get plan details\n    const plan = await this.prisma.plan.findUnique({\n      where: { id: planId },\n    });\n\n    if (!plan || !plan.isActive) {\n      throw new Error('Plano n\xE3o encontrado ou inativo');\n    }\n\n    // Get organization\n    const organization = await this.prisma.organization.findUnique({\n      where: { id: organizationId },\n      include: { subscription: true },\n    });\n\n    if (!organization) {\n      throw new Error('Organiza\xE7\xE3o n\xE3o encontrada');\n    }\n\n    // Check if organization already has an active subscription\n    if (organization.subscription && organization.subscription.status === 'ACTIVE') {\n      throw new Error('Organiza\xE7\xE3o j\xE1 possui uma assinatura ativa');\n    }\n\n    let customerId = organization.subscription?.stripeCustomerId;\n\n    // Create or get Stripe customer\n    if (!customerId) {\n      const customer = await this.stripe.customers.create({\n        email: organization.name + '@utmify.com', // You might want to use a real email\n        name: organization.name,\n        metadata: {\n          organizationId: organizationId,\n        },\n      });\n      customerId = customer.id;\n    }\n\n    const sessionParams: Stripe.Checkout.SessionCreateParams = {\n      customer: customerId,\n      payment_method_types: ['card'],\n      line_items: [\n        {\n          price: plan.stripePriceId!,\n          quantity: 1,\n        },\n      ],\n      mode: 'subscription',\n      success_url: successUrl,\n      cancel_url: cancelUrl,\n      subscription_data: {\n        trial_period_days: plan.trialDays,\n        metadata: {\n          organizationId: organizationId,\n          planId: planId,\n        },\n      },\n      metadata: {\n        organizationId: organizationId,\n        planId: planId,\n      },\n    };\n\n    // Apply coupon if provided\n    if (couponCode) {\n      const coupon = await this.prisma.coupon.findUnique({\n        where: { code: couponCode, isActive: true },\n      });\n\n      if (coupon && this.isCouponValid(coupon)) {\n        sessionParams.discounts = [{\n          coupon: coupon.stripeCouponId!,\n        }];\n      }\n    }\n\n    const session = await this.stripe.checkout.sessions.create(sessionParams);\n\n    return {\n      sessionId: session.id,\n      url: session.url,\n    };\n  }\n\n  async createCustomer(params: CreateCustomerParams) {\n    const { email, name, organizationId } = params;\n\n    const customer = await this.stripe.customers.create({\n      email,\n      name,\n      metadata: {\n        organizationId,\n      },\n    });\n\n    return customer;\n  }\n\n  async getSubscription(subscriptionId: string) {\n    return await this.stripe.subscriptions.retrieve(subscriptionId);\n  }\n\n  async cancelSubscription(subscriptionId: string, cancelAtPeriodEnd = true) {\n    if (cancelAtPeriodEnd) {\n      return await this.stripe.subscriptions.update(subscriptionId, {\n        cancel_at_period_end: true,\n      });\n    } else {\n      return await this.stripe.subscriptions.cancel(subscriptionId);\n    }\n  }\n\n  async upgradeSubscription(subscriptionId: string, newPriceId: string) {\n    const subscription = await this.stripe.subscriptions.retrieve(subscriptionId);\n    \n    return await this.stripe.subscriptions.update(subscriptionId, {\n      items: [{\n        id: subscription.items.data[0].id,\n        price: newPriceId,\n      }],\n      proration_behavior: 'create_prorations',\n    });\n  }\n\n  async createPortalSession(customerId: string, returnUrl: string) {\n    return await this.stripe.billingPortal.sessions.create({\n      customer: customerId,\n      return_url: returnUrl,\n    });\n  }\n\n  async getInvoices(customerId: string, limit = 10) {\n    return await this.stripe.invoices.list({\n      customer: customerId,\n      limit,\n    });\n  }\n\n  async createUsageRecord(subscriptionItemId: string, quantity: number, timestamp?: number) {\n    return await this.stripe.subscriptionItems.createUsageRecord(\n      subscriptionItemId,\n      {\n        quantity,\n        timestamp: timestamp || Math.floor(Date.now() / 1000),\n        action: 'increment',\n      }\n    );\n  }\n\n  async attachPaymentMethod(customerId: string, paymentMethodId: string) {\n    await this.stripe.paymentMethods.attach(paymentMethodId, {\n      customer: customerId,\n    });\n\n    return await this.stripe.customers.update(customerId, {\n      invoice_settings: {\n        default_payment_method: paymentMethodId,\n      },\n    });\n  }\n\n  async getPaymentMethods(customerId: string) {\n    return await this.stripe.paymentMethods.list({\n      customer: customerId,\n      type: 'card',\n    });\n  }\n\n  async createCoupon(params: {\n    code: string;\n    name?: string;\n    percentOff?: number;\n    amountOff?: number;\n    currency?: string;\n    duration: 'once' | 'repeating' | 'forever';\n    durationInMonths?: number;\n    maxRedemptions?: number;\n  }) {\n    const stripeCoupon = await this.stripe.coupons.create({\n      id: params.code,\n      name: params.name,\n      percent_off: params.percentOff,\n      amount_off: params.amountOff,\n      currency: params.currency,\n      duration: params.duration,\n      duration_in_months: params.durationInMonths,\n      max_redemptions: params.maxRedemptions,\n    });\n\n    // Save to database\n    await this.prisma.coupon.create({\n      data: {\n        stripeCouponId: stripeCoupon.id,\n        code: params.code,\n        name: params.name,\n        percentOff: params.percentOff,\n        amountOff: params.amountOff,\n        currency: params.currency,\n        duration: params.duration,\n        durationInMonths: params.durationInMonths,\n        maxRedemptions: params.maxRedemptions,\n      },\n    });\n\n    return stripeCoupon;\n  }\n\n  private isCouponValid(coupon: any): boolean {\n    const now = new Date();\n    \n    if (coupon.validFrom && new Date(coupon.validFrom) > now) {\n      return false;\n    }\n    \n    if (coupon.validUntil && new Date(coupon.validUntil) < now) {\n      return false;\n    }\n    \n    if (coupon.maxRedemptions && coupon.timesRedeemed >= coupon.maxRedemptions) {\n      return false;\n    }\n    \n    return true;\n  }\n\n  async constructWebhookEvent(payload: string | Buffer, signature: string) {\n    return this.stripe.webhooks.constructEvent(\n      payload,\n      signature,\n      process.env.STRIPE_WEBHOOK_SECRET!\n    );\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ad7504d1b0c12f41c567faa4563efb4db3e3a68d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_swekhqc09 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_swekhqc09();
import Stripe from 'stripe';
import { PrismaClient } from '@utmify/database';
export class StripeService {
  stripe;
  prisma;
  constructor(prisma) {
    /* istanbul ignore next */
    cov_swekhqc09().f[0]++;
    cov_swekhqc09().s[0]++;
    this.stripe = new Stripe(process.env.STRIPE_SECRET_KEY, {
      apiVersion: '2023-10-16'
    });
    /* istanbul ignore next */
    cov_swekhqc09().s[1]++;
    this.prisma =
    /* istanbul ignore next */
    (cov_swekhqc09().b[0][0]++, prisma) ||
    /* istanbul ignore next */
    (cov_swekhqc09().b[0][1]++, new PrismaClient());
  }
  async createCheckoutSession(params) {
    /* istanbul ignore next */
    cov_swekhqc09().f[1]++;
    const {
      organizationId,
      planId,
      successUrl,
      cancelUrl,
      couponCode
    } =
    /* istanbul ignore next */
    (cov_swekhqc09().s[2]++, params);
    // Get plan details
    const plan =
    /* istanbul ignore next */
    (cov_swekhqc09().s[3]++, await this.prisma.plan.findUnique({
      where: {
        id: planId
      }
    }));
    /* istanbul ignore next */
    cov_swekhqc09().s[4]++;
    if (
    /* istanbul ignore next */
    (cov_swekhqc09().b[2][0]++, !plan) ||
    /* istanbul ignore next */
    (cov_swekhqc09().b[2][1]++, !plan.isActive)) {
      /* istanbul ignore next */
      cov_swekhqc09().b[1][0]++;
      cov_swekhqc09().s[5]++;
      throw new Error('Plano não encontrado ou inativo');
    } else
    /* istanbul ignore next */
    {
      cov_swekhqc09().b[1][1]++;
    }
    // Get organization
    const organization =
    /* istanbul ignore next */
    (cov_swekhqc09().s[6]++, await this.prisma.organization.findUnique({
      where: {
        id: organizationId
      },
      include: {
        subscription: true
      }
    }));
    /* istanbul ignore next */
    cov_swekhqc09().s[7]++;
    if (!organization) {
      /* istanbul ignore next */
      cov_swekhqc09().b[3][0]++;
      cov_swekhqc09().s[8]++;
      throw new Error('Organização não encontrada');
    } else
    /* istanbul ignore next */
    {
      cov_swekhqc09().b[3][1]++;
    }
    // Check if organization already has an active subscription
    cov_swekhqc09().s[9]++;
    if (
    /* istanbul ignore next */
    (cov_swekhqc09().b[5][0]++, organization.subscription) &&
    /* istanbul ignore next */
    (cov_swekhqc09().b[5][1]++, organization.subscription.status === 'ACTIVE')) {
      /* istanbul ignore next */
      cov_swekhqc09().b[4][0]++;
      cov_swekhqc09().s[10]++;
      throw new Error('Organização já possui uma assinatura ativa');
    } else
    /* istanbul ignore next */
    {
      cov_swekhqc09().b[4][1]++;
    }
    let customerId =
    /* istanbul ignore next */
    (cov_swekhqc09().s[11]++, organization.subscription?.stripeCustomerId);
    // Create or get Stripe customer
    /* istanbul ignore next */
    cov_swekhqc09().s[12]++;
    if (!customerId) {
      /* istanbul ignore next */
      cov_swekhqc09().b[6][0]++;
      const customer =
      /* istanbul ignore next */
      (cov_swekhqc09().s[13]++, await this.stripe.customers.create({
        email: organization.name + '@utmify.com',
        // You might want to use a real email
        name: organization.name,
        metadata: {
          organizationId: organizationId
        }
      }));
      /* istanbul ignore next */
      cov_swekhqc09().s[14]++;
      customerId = customer.id;
    } else
    /* istanbul ignore next */
    {
      cov_swekhqc09().b[6][1]++;
    }
    const sessionParams =
    /* istanbul ignore next */
    (cov_swekhqc09().s[15]++, {
      customer: customerId,
      payment_method_types: ['card'],
      line_items: [{
        price: plan.stripePriceId,
        quantity: 1
      }],
      mode: 'subscription',
      success_url: successUrl,
      cancel_url: cancelUrl,
      subscription_data: {
        trial_period_days: plan.trialDays,
        metadata: {
          organizationId: organizationId,
          planId: planId
        }
      },
      metadata: {
        organizationId: organizationId,
        planId: planId
      }
    });
    // Apply coupon if provided
    /* istanbul ignore next */
    cov_swekhqc09().s[16]++;
    if (couponCode) {
      /* istanbul ignore next */
      cov_swekhqc09().b[7][0]++;
      const coupon =
      /* istanbul ignore next */
      (cov_swekhqc09().s[17]++, await this.prisma.coupon.findUnique({
        where: {
          code: couponCode,
          isActive: true
        }
      }));
      /* istanbul ignore next */
      cov_swekhqc09().s[18]++;
      if (
      /* istanbul ignore next */
      (cov_swekhqc09().b[9][0]++, coupon) &&
      /* istanbul ignore next */
      (cov_swekhqc09().b[9][1]++, this.isCouponValid(coupon))) {
        /* istanbul ignore next */
        cov_swekhqc09().b[8][0]++;
        cov_swekhqc09().s[19]++;
        sessionParams.discounts = [{
          coupon: coupon.stripeCouponId
        }];
      } else
      /* istanbul ignore next */
      {
        cov_swekhqc09().b[8][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_swekhqc09().b[7][1]++;
    }
    const session =
    /* istanbul ignore next */
    (cov_swekhqc09().s[20]++, await this.stripe.checkout.sessions.create(sessionParams));
    /* istanbul ignore next */
    cov_swekhqc09().s[21]++;
    return {
      sessionId: session.id,
      url: session.url
    };
  }
  async createCustomer(params) {
    /* istanbul ignore next */
    cov_swekhqc09().f[2]++;
    const {
      email,
      name,
      organizationId
    } =
    /* istanbul ignore next */
    (cov_swekhqc09().s[22]++, params);
    const customer =
    /* istanbul ignore next */
    (cov_swekhqc09().s[23]++, await this.stripe.customers.create({
      email,
      name,
      metadata: {
        organizationId
      }
    }));
    /* istanbul ignore next */
    cov_swekhqc09().s[24]++;
    return customer;
  }
  async getSubscription(subscriptionId) {
    /* istanbul ignore next */
    cov_swekhqc09().f[3]++;
    cov_swekhqc09().s[25]++;
    return await this.stripe.subscriptions.retrieve(subscriptionId);
  }
  async cancelSubscription(subscriptionId, cancelAtPeriodEnd =
  /* istanbul ignore next */
  (cov_swekhqc09().b[10][0]++, true)) {
    /* istanbul ignore next */
    cov_swekhqc09().f[4]++;
    cov_swekhqc09().s[26]++;
    if (cancelAtPeriodEnd) {
      /* istanbul ignore next */
      cov_swekhqc09().b[11][0]++;
      cov_swekhqc09().s[27]++;
      return await this.stripe.subscriptions.update(subscriptionId, {
        cancel_at_period_end: true
      });
    } else {
      /* istanbul ignore next */
      cov_swekhqc09().b[11][1]++;
      cov_swekhqc09().s[28]++;
      return await this.stripe.subscriptions.cancel(subscriptionId);
    }
  }
  async upgradeSubscription(subscriptionId, newPriceId) {
    /* istanbul ignore next */
    cov_swekhqc09().f[5]++;
    const subscription =
    /* istanbul ignore next */
    (cov_swekhqc09().s[29]++, await this.stripe.subscriptions.retrieve(subscriptionId));
    /* istanbul ignore next */
    cov_swekhqc09().s[30]++;
    return await this.stripe.subscriptions.update(subscriptionId, {
      items: [{
        id: subscription.items.data[0].id,
        price: newPriceId
      }],
      proration_behavior: 'create_prorations'
    });
  }
  async createPortalSession(customerId, returnUrl) {
    /* istanbul ignore next */
    cov_swekhqc09().f[6]++;
    cov_swekhqc09().s[31]++;
    return await this.stripe.billingPortal.sessions.create({
      customer: customerId,
      return_url: returnUrl
    });
  }
  async getInvoices(customerId, limit =
  /* istanbul ignore next */
  (cov_swekhqc09().b[12][0]++, 10)) {
    /* istanbul ignore next */
    cov_swekhqc09().f[7]++;
    cov_swekhqc09().s[32]++;
    return await this.stripe.invoices.list({
      customer: customerId,
      limit
    });
  }
  async createUsageRecord(subscriptionItemId, quantity, timestamp) {
    /* istanbul ignore next */
    cov_swekhqc09().f[8]++;
    cov_swekhqc09().s[33]++;
    return await this.stripe.subscriptionItems.createUsageRecord(subscriptionItemId, {
      quantity,
      timestamp:
      /* istanbul ignore next */
      (cov_swekhqc09().b[13][0]++, timestamp) ||
      /* istanbul ignore next */
      (cov_swekhqc09().b[13][1]++, Math.floor(Date.now() / 1000)),
      action: 'increment'
    });
  }
  async attachPaymentMethod(customerId, paymentMethodId) {
    /* istanbul ignore next */
    cov_swekhqc09().f[9]++;
    cov_swekhqc09().s[34]++;
    await this.stripe.paymentMethods.attach(paymentMethodId, {
      customer: customerId
    });
    /* istanbul ignore next */
    cov_swekhqc09().s[35]++;
    return await this.stripe.customers.update(customerId, {
      invoice_settings: {
        default_payment_method: paymentMethodId
      }
    });
  }
  async getPaymentMethods(customerId) {
    /* istanbul ignore next */
    cov_swekhqc09().f[10]++;
    cov_swekhqc09().s[36]++;
    return await this.stripe.paymentMethods.list({
      customer: customerId,
      type: 'card'
    });
  }
  async createCoupon(params) {
    /* istanbul ignore next */
    cov_swekhqc09().f[11]++;
    const stripeCoupon =
    /* istanbul ignore next */
    (cov_swekhqc09().s[37]++, await this.stripe.coupons.create({
      id: params.code,
      name: params.name,
      percent_off: params.percentOff,
      amount_off: params.amountOff,
      currency: params.currency,
      duration: params.duration,
      duration_in_months: params.durationInMonths,
      max_redemptions: params.maxRedemptions
    }));
    // Save to database
    /* istanbul ignore next */
    cov_swekhqc09().s[38]++;
    await this.prisma.coupon.create({
      data: {
        stripeCouponId: stripeCoupon.id,
        code: params.code,
        name: params.name,
        percentOff: params.percentOff,
        amountOff: params.amountOff,
        currency: params.currency,
        duration: params.duration,
        durationInMonths: params.durationInMonths,
        maxRedemptions: params.maxRedemptions
      }
    });
    /* istanbul ignore next */
    cov_swekhqc09().s[39]++;
    return stripeCoupon;
  }
  isCouponValid(coupon) {
    /* istanbul ignore next */
    cov_swekhqc09().f[12]++;
    const now =
    /* istanbul ignore next */
    (cov_swekhqc09().s[40]++, new Date());
    /* istanbul ignore next */
    cov_swekhqc09().s[41]++;
    if (
    /* istanbul ignore next */
    (cov_swekhqc09().b[15][0]++, coupon.validFrom) &&
    /* istanbul ignore next */
    (cov_swekhqc09().b[15][1]++, new Date(coupon.validFrom) > now)) {
      /* istanbul ignore next */
      cov_swekhqc09().b[14][0]++;
      cov_swekhqc09().s[42]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_swekhqc09().b[14][1]++;
    }
    cov_swekhqc09().s[43]++;
    if (
    /* istanbul ignore next */
    (cov_swekhqc09().b[17][0]++, coupon.validUntil) &&
    /* istanbul ignore next */
    (cov_swekhqc09().b[17][1]++, new Date(coupon.validUntil) < now)) {
      /* istanbul ignore next */
      cov_swekhqc09().b[16][0]++;
      cov_swekhqc09().s[44]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_swekhqc09().b[16][1]++;
    }
    cov_swekhqc09().s[45]++;
    if (
    /* istanbul ignore next */
    (cov_swekhqc09().b[19][0]++, coupon.maxRedemptions) &&
    /* istanbul ignore next */
    (cov_swekhqc09().b[19][1]++, coupon.timesRedeemed >= coupon.maxRedemptions)) {
      /* istanbul ignore next */
      cov_swekhqc09().b[18][0]++;
      cov_swekhqc09().s[46]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_swekhqc09().b[18][1]++;
    }
    cov_swekhqc09().s[47]++;
    return true;
  }
  async constructWebhookEvent(payload, signature) {
    /* istanbul ignore next */
    cov_swekhqc09().f[13]++;
    cov_swekhqc09().s[48]++;
    return this.stripe.webhooks.constructEvent(payload, signature, process.env.STRIPE_WEBHOOK_SECRET);
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3Zfc3dla2hxYzA5IiwiYWN0dWFsQ292ZXJhZ2UiLCJTdHJpcGUiLCJQcmlzbWFDbGllbnQiLCJTdHJpcGVTZXJ2aWNlIiwic3RyaXBlIiwicHJpc21hIiwiY29uc3RydWN0b3IiLCJmIiwicyIsInByb2Nlc3MiLCJlbnYiLCJTVFJJUEVfU0VDUkVUX0tFWSIsImFwaVZlcnNpb24iLCJiIiwiY3JlYXRlQ2hlY2tvdXRTZXNzaW9uIiwicGFyYW1zIiwib3JnYW5pemF0aW9uSWQiLCJwbGFuSWQiLCJzdWNjZXNzVXJsIiwiY2FuY2VsVXJsIiwiY291cG9uQ29kZSIsInBsYW4iLCJmaW5kVW5pcXVlIiwid2hlcmUiLCJpZCIsImlzQWN0aXZlIiwiRXJyb3IiLCJvcmdhbml6YXRpb24iLCJpbmNsdWRlIiwic3Vic2NyaXB0aW9uIiwic3RhdHVzIiwiY3VzdG9tZXJJZCIsInN0cmlwZUN1c3RvbWVySWQiLCJjdXN0b21lciIsImN1c3RvbWVycyIsImNyZWF0ZSIsImVtYWlsIiwibmFtZSIsIm1ldGFkYXRhIiwic2Vzc2lvblBhcmFtcyIsInBheW1lbnRfbWV0aG9kX3R5cGVzIiwibGluZV9pdGVtcyIsInByaWNlIiwic3RyaXBlUHJpY2VJZCIsInF1YW50aXR5IiwibW9kZSIsInN1Y2Nlc3NfdXJsIiwiY2FuY2VsX3VybCIsInN1YnNjcmlwdGlvbl9kYXRhIiwidHJpYWxfcGVyaW9kX2RheXMiLCJ0cmlhbERheXMiLCJjb3Vwb24iLCJjb2RlIiwiaXNDb3Vwb25WYWxpZCIsImRpc2NvdW50cyIsInN0cmlwZUNvdXBvbklkIiwic2Vzc2lvbiIsImNoZWNrb3V0Iiwic2Vzc2lvbnMiLCJzZXNzaW9uSWQiLCJ1cmwiLCJjcmVhdGVDdXN0b21lciIsImdldFN1YnNjcmlwdGlvbiIsInN1YnNjcmlwdGlvbklkIiwic3Vic2NyaXB0aW9ucyIsInJldHJpZXZlIiwiY2FuY2VsU3Vic2NyaXB0aW9uIiwiY2FuY2VsQXRQZXJpb2RFbmQiLCJ1cGRhdGUiLCJjYW5jZWxfYXRfcGVyaW9kX2VuZCIsImNhbmNlbCIsInVwZ3JhZGVTdWJzY3JpcHRpb24iLCJuZXdQcmljZUlkIiwiaXRlbXMiLCJkYXRhIiwicHJvcmF0aW9uX2JlaGF2aW9yIiwiY3JlYXRlUG9ydGFsU2Vzc2lvbiIsInJldHVyblVybCIsImJpbGxpbmdQb3J0YWwiLCJyZXR1cm5fdXJsIiwiZ2V0SW52b2ljZXMiLCJsaW1pdCIsImludm9pY2VzIiwibGlzdCIsImNyZWF0ZVVzYWdlUmVjb3JkIiwic3Vic2NyaXB0aW9uSXRlbUlkIiwidGltZXN0YW1wIiwic3Vic2NyaXB0aW9uSXRlbXMiLCJNYXRoIiwiZmxvb3IiLCJEYXRlIiwibm93IiwiYWN0aW9uIiwiYXR0YWNoUGF5bWVudE1ldGhvZCIsInBheW1lbnRNZXRob2RJZCIsInBheW1lbnRNZXRob2RzIiwiYXR0YWNoIiwiaW52b2ljZV9zZXR0aW5ncyIsImRlZmF1bHRfcGF5bWVudF9tZXRob2QiLCJnZXRQYXltZW50TWV0aG9kcyIsInR5cGUiLCJjcmVhdGVDb3Vwb24iLCJzdHJpcGVDb3Vwb24iLCJjb3Vwb25zIiwicGVyY2VudF9vZmYiLCJwZXJjZW50T2ZmIiwiYW1vdW50X29mZiIsImFtb3VudE9mZiIsImN1cnJlbmN5IiwiZHVyYXRpb24iLCJkdXJhdGlvbl9pbl9tb250aHMiLCJkdXJhdGlvbkluTW9udGhzIiwibWF4X3JlZGVtcHRpb25zIiwibWF4UmVkZW1wdGlvbnMiLCJ2YWxpZEZyb20iLCJ2YWxpZFVudGlsIiwidGltZXNSZWRlZW1lZCIsImNvbnN0cnVjdFdlYmhvb2tFdmVudCIsInBheWxvYWQiLCJzaWduYXR1cmUiLCJ3ZWJob29rcyIsImNvbnN0cnVjdEV2ZW50IiwiU1RSSVBFX1dFQkhPT0tfU0VDUkVUIl0sInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxFbnpvIE1hcmNlbG9cXERlc2t0b3BcXFByb2pldG9zIEVtcHJlc2FcXFNhYXMgVXRtaWZ5XFx1dG1pZnktY2xvbmVcXGFwcHNcXGFwaVxcc3JjXFxzZXJ2aWNlc1xcc3RyaXBlLnNlcnZpY2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFN0cmlwZSBmcm9tICdzdHJpcGUnO1xuaW1wb3J0IHsgUHJpc21hQ2xpZW50LCBQbGFuVHlwZSwgU3Vic2NyaXB0aW9uU3RhdHVzIH0gZnJvbSAnQHV0bWlmeS9kYXRhYmFzZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ3JlYXRlQ2hlY2tvdXRTZXNzaW9uUGFyYW1zIHtcbiAgb3JnYW5pemF0aW9uSWQ6IHN0cmluZztcbiAgcGxhbklkOiBzdHJpbmc7XG4gIHN1Y2Nlc3NVcmw6IHN0cmluZztcbiAgY2FuY2VsVXJsOiBzdHJpbmc7XG4gIGNvdXBvbkNvZGU/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ3JlYXRlQ3VzdG9tZXJQYXJhbXMge1xuICBlbWFpbDogc3RyaW5nO1xuICBuYW1lOiBzdHJpbmc7XG4gIG9yZ2FuaXphdGlvbklkOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBjbGFzcyBTdHJpcGVTZXJ2aWNlIHtcbiAgcHJpdmF0ZSBzdHJpcGU6IFN0cmlwZTtcbiAgcHJpdmF0ZSBwcmlzbWE6IFByaXNtYUNsaWVudDtcblxuICBjb25zdHJ1Y3RvcihwcmlzbWE/OiBQcmlzbWFDbGllbnQpIHtcbiAgICB0aGlzLnN0cmlwZSA9IG5ldyBTdHJpcGUocHJvY2Vzcy5lbnYuU1RSSVBFX1NFQ1JFVF9LRVkhLCB7XG4gICAgICBhcGlWZXJzaW9uOiAnMjAyMy0xMC0xNicsXG4gICAgfSk7XG4gICAgdGhpcy5wcmlzbWEgPSBwcmlzbWEgfHwgbmV3IFByaXNtYUNsaWVudCgpO1xuICB9XG5cbiAgYXN5bmMgY3JlYXRlQ2hlY2tvdXRTZXNzaW9uKHBhcmFtczogQ3JlYXRlQ2hlY2tvdXRTZXNzaW9uUGFyYW1zKSB7XG4gICAgY29uc3QgeyBvcmdhbml6YXRpb25JZCwgcGxhbklkLCBzdWNjZXNzVXJsLCBjYW5jZWxVcmwsIGNvdXBvbkNvZGUgfSA9IHBhcmFtcztcblxuICAgIC8vIEdldCBwbGFuIGRldGFpbHNcbiAgICBjb25zdCBwbGFuID0gYXdhaXQgdGhpcy5wcmlzbWEucGxhbi5maW5kVW5pcXVlKHtcbiAgICAgIHdoZXJlOiB7IGlkOiBwbGFuSWQgfSxcbiAgICB9KTtcblxuICAgIGlmICghcGxhbiB8fCAhcGxhbi5pc0FjdGl2ZSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdQbGFubyBuw6NvIGVuY29udHJhZG8gb3UgaW5hdGl2bycpO1xuICAgIH1cblxuICAgIC8vIEdldCBvcmdhbml6YXRpb25cbiAgICBjb25zdCBvcmdhbml6YXRpb24gPSBhd2FpdCB0aGlzLnByaXNtYS5vcmdhbml6YXRpb24uZmluZFVuaXF1ZSh7XG4gICAgICB3aGVyZTogeyBpZDogb3JnYW5pemF0aW9uSWQgfSxcbiAgICAgIGluY2x1ZGU6IHsgc3Vic2NyaXB0aW9uOiB0cnVlIH0sXG4gICAgfSk7XG5cbiAgICBpZiAoIW9yZ2FuaXphdGlvbikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdPcmdhbml6YcOnw6NvIG7Do28gZW5jb250cmFkYScpO1xuICAgIH1cblxuICAgIC8vIENoZWNrIGlmIG9yZ2FuaXphdGlvbiBhbHJlYWR5IGhhcyBhbiBhY3RpdmUgc3Vic2NyaXB0aW9uXG4gICAgaWYgKG9yZ2FuaXphdGlvbi5zdWJzY3JpcHRpb24gJiYgb3JnYW5pemF0aW9uLnN1YnNjcmlwdGlvbi5zdGF0dXMgPT09ICdBQ1RJVkUnKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ09yZ2FuaXphw6fDo28gasOhIHBvc3N1aSB1bWEgYXNzaW5hdHVyYSBhdGl2YScpO1xuICAgIH1cblxuICAgIGxldCBjdXN0b21lcklkID0gb3JnYW5pemF0aW9uLnN1YnNjcmlwdGlvbj8uc3RyaXBlQ3VzdG9tZXJJZDtcblxuICAgIC8vIENyZWF0ZSBvciBnZXQgU3RyaXBlIGN1c3RvbWVyXG4gICAgaWYgKCFjdXN0b21lcklkKSB7XG4gICAgICBjb25zdCBjdXN0b21lciA9IGF3YWl0IHRoaXMuc3RyaXBlLmN1c3RvbWVycy5jcmVhdGUoe1xuICAgICAgICBlbWFpbDogb3JnYW5pemF0aW9uLm5hbWUgKyAnQHV0bWlmeS5jb20nLCAvLyBZb3UgbWlnaHQgd2FudCB0byB1c2UgYSByZWFsIGVtYWlsXG4gICAgICAgIG5hbWU6IG9yZ2FuaXphdGlvbi5uYW1lLFxuICAgICAgICBtZXRhZGF0YToge1xuICAgICAgICAgIG9yZ2FuaXphdGlvbklkOiBvcmdhbml6YXRpb25JZCxcbiAgICAgICAgfSxcbiAgICAgIH0pO1xuICAgICAgY3VzdG9tZXJJZCA9IGN1c3RvbWVyLmlkO1xuICAgIH1cblxuICAgIGNvbnN0IHNlc3Npb25QYXJhbXM6IFN0cmlwZS5DaGVja291dC5TZXNzaW9uQ3JlYXRlUGFyYW1zID0ge1xuICAgICAgY3VzdG9tZXI6IGN1c3RvbWVySWQsXG4gICAgICBwYXltZW50X21ldGhvZF90eXBlczogWydjYXJkJ10sXG4gICAgICBsaW5lX2l0ZW1zOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBwcmljZTogcGxhbi5zdHJpcGVQcmljZUlkISxcbiAgICAgICAgICBxdWFudGl0eTogMSxcbiAgICAgICAgfSxcbiAgICAgIF0sXG4gICAgICBtb2RlOiAnc3Vic2NyaXB0aW9uJyxcbiAgICAgIHN1Y2Nlc3NfdXJsOiBzdWNjZXNzVXJsLFxuICAgICAgY2FuY2VsX3VybDogY2FuY2VsVXJsLFxuICAgICAgc3Vic2NyaXB0aW9uX2RhdGE6IHtcbiAgICAgICAgdHJpYWxfcGVyaW9kX2RheXM6IHBsYW4udHJpYWxEYXlzLFxuICAgICAgICBtZXRhZGF0YToge1xuICAgICAgICAgIG9yZ2FuaXphdGlvbklkOiBvcmdhbml6YXRpb25JZCxcbiAgICAgICAgICBwbGFuSWQ6IHBsYW5JZCxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgICBtZXRhZGF0YToge1xuICAgICAgICBvcmdhbml6YXRpb25JZDogb3JnYW5pemF0aW9uSWQsXG4gICAgICAgIHBsYW5JZDogcGxhbklkLFxuICAgICAgfSxcbiAgICB9O1xuXG4gICAgLy8gQXBwbHkgY291cG9uIGlmIHByb3ZpZGVkXG4gICAgaWYgKGNvdXBvbkNvZGUpIHtcbiAgICAgIGNvbnN0IGNvdXBvbiA9IGF3YWl0IHRoaXMucHJpc21hLmNvdXBvbi5maW5kVW5pcXVlKHtcbiAgICAgICAgd2hlcmU6IHsgY29kZTogY291cG9uQ29kZSwgaXNBY3RpdmU6IHRydWUgfSxcbiAgICAgIH0pO1xuXG4gICAgICBpZiAoY291cG9uICYmIHRoaXMuaXNDb3Vwb25WYWxpZChjb3Vwb24pKSB7XG4gICAgICAgIHNlc3Npb25QYXJhbXMuZGlzY291bnRzID0gW3tcbiAgICAgICAgICBjb3Vwb246IGNvdXBvbi5zdHJpcGVDb3Vwb25JZCEsXG4gICAgICAgIH1dO1xuICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IHNlc3Npb24gPSBhd2FpdCB0aGlzLnN0cmlwZS5jaGVja291dC5zZXNzaW9ucy5jcmVhdGUoc2Vzc2lvblBhcmFtcyk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgc2Vzc2lvbklkOiBzZXNzaW9uLmlkLFxuICAgICAgdXJsOiBzZXNzaW9uLnVybCxcbiAgICB9O1xuICB9XG5cbiAgYXN5bmMgY3JlYXRlQ3VzdG9tZXIocGFyYW1zOiBDcmVhdGVDdXN0b21lclBhcmFtcykge1xuICAgIGNvbnN0IHsgZW1haWwsIG5hbWUsIG9yZ2FuaXphdGlvbklkIH0gPSBwYXJhbXM7XG5cbiAgICBjb25zdCBjdXN0b21lciA9IGF3YWl0IHRoaXMuc3RyaXBlLmN1c3RvbWVycy5jcmVhdGUoe1xuICAgICAgZW1haWwsXG4gICAgICBuYW1lLFxuICAgICAgbWV0YWRhdGE6IHtcbiAgICAgICAgb3JnYW5pemF0aW9uSWQsXG4gICAgICB9LFxuICAgIH0pO1xuXG4gICAgcmV0dXJuIGN1c3RvbWVyO1xuICB9XG5cbiAgYXN5bmMgZ2V0U3Vic2NyaXB0aW9uKHN1YnNjcmlwdGlvbklkOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5zdHJpcGUuc3Vic2NyaXB0aW9ucy5yZXRyaWV2ZShzdWJzY3JpcHRpb25JZCk7XG4gIH1cblxuICBhc3luYyBjYW5jZWxTdWJzY3JpcHRpb24oc3Vic2NyaXB0aW9uSWQ6IHN0cmluZywgY2FuY2VsQXRQZXJpb2RFbmQgPSB0cnVlKSB7XG4gICAgaWYgKGNhbmNlbEF0UGVyaW9kRW5kKSB7XG4gICAgICByZXR1cm4gYXdhaXQgdGhpcy5zdHJpcGUuc3Vic2NyaXB0aW9ucy51cGRhdGUoc3Vic2NyaXB0aW9uSWQsIHtcbiAgICAgICAgY2FuY2VsX2F0X3BlcmlvZF9lbmQ6IHRydWUsXG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGF3YWl0IHRoaXMuc3RyaXBlLnN1YnNjcmlwdGlvbnMuY2FuY2VsKHN1YnNjcmlwdGlvbklkKTtcbiAgICB9XG4gIH1cblxuICBhc3luYyB1cGdyYWRlU3Vic2NyaXB0aW9uKHN1YnNjcmlwdGlvbklkOiBzdHJpbmcsIG5ld1ByaWNlSWQ6IHN0cmluZykge1xuICAgIGNvbnN0IHN1YnNjcmlwdGlvbiA9IGF3YWl0IHRoaXMuc3RyaXBlLnN1YnNjcmlwdGlvbnMucmV0cmlldmUoc3Vic2NyaXB0aW9uSWQpO1xuICAgIFxuICAgIHJldHVybiBhd2FpdCB0aGlzLnN0cmlwZS5zdWJzY3JpcHRpb25zLnVwZGF0ZShzdWJzY3JpcHRpb25JZCwge1xuICAgICAgaXRlbXM6IFt7XG4gICAgICAgIGlkOiBzdWJzY3JpcHRpb24uaXRlbXMuZGF0YVswXS5pZCxcbiAgICAgICAgcHJpY2U6IG5ld1ByaWNlSWQsXG4gICAgICB9XSxcbiAgICAgIHByb3JhdGlvbl9iZWhhdmlvcjogJ2NyZWF0ZV9wcm9yYXRpb25zJyxcbiAgICB9KTtcbiAgfVxuXG4gIGFzeW5jIGNyZWF0ZVBvcnRhbFNlc3Npb24oY3VzdG9tZXJJZDogc3RyaW5nLCByZXR1cm5Vcmw6IHN0cmluZykge1xuICAgIHJldHVybiBhd2FpdCB0aGlzLnN0cmlwZS5iaWxsaW5nUG9ydGFsLnNlc3Npb25zLmNyZWF0ZSh7XG4gICAgICBjdXN0b21lcjogY3VzdG9tZXJJZCxcbiAgICAgIHJldHVybl91cmw6IHJldHVyblVybCxcbiAgICB9KTtcbiAgfVxuXG4gIGFzeW5jIGdldEludm9pY2VzKGN1c3RvbWVySWQ6IHN0cmluZywgbGltaXQgPSAxMCkge1xuICAgIHJldHVybiBhd2FpdCB0aGlzLnN0cmlwZS5pbnZvaWNlcy5saXN0KHtcbiAgICAgIGN1c3RvbWVyOiBjdXN0b21lcklkLFxuICAgICAgbGltaXQsXG4gICAgfSk7XG4gIH1cblxuICBhc3luYyBjcmVhdGVVc2FnZVJlY29yZChzdWJzY3JpcHRpb25JdGVtSWQ6IHN0cmluZywgcXVhbnRpdHk6IG51bWJlciwgdGltZXN0YW1wPzogbnVtYmVyKSB7XG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuc3RyaXBlLnN1YnNjcmlwdGlvbkl0ZW1zLmNyZWF0ZVVzYWdlUmVjb3JkKFxuICAgICAgc3Vic2NyaXB0aW9uSXRlbUlkLFxuICAgICAge1xuICAgICAgICBxdWFudGl0eSxcbiAgICAgICAgdGltZXN0YW1wOiB0aW1lc3RhbXAgfHwgTWF0aC5mbG9vcihEYXRlLm5vdygpIC8gMTAwMCksXG4gICAgICAgIGFjdGlvbjogJ2luY3JlbWVudCcsXG4gICAgICB9XG4gICAgKTtcbiAgfVxuXG4gIGFzeW5jIGF0dGFjaFBheW1lbnRNZXRob2QoY3VzdG9tZXJJZDogc3RyaW5nLCBwYXltZW50TWV0aG9kSWQ6IHN0cmluZykge1xuICAgIGF3YWl0IHRoaXMuc3RyaXBlLnBheW1lbnRNZXRob2RzLmF0dGFjaChwYXltZW50TWV0aG9kSWQsIHtcbiAgICAgIGN1c3RvbWVyOiBjdXN0b21lcklkLFxuICAgIH0pO1xuXG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuc3RyaXBlLmN1c3RvbWVycy51cGRhdGUoY3VzdG9tZXJJZCwge1xuICAgICAgaW52b2ljZV9zZXR0aW5nczoge1xuICAgICAgICBkZWZhdWx0X3BheW1lbnRfbWV0aG9kOiBwYXltZW50TWV0aG9kSWQsXG4gICAgICB9LFxuICAgIH0pO1xuICB9XG5cbiAgYXN5bmMgZ2V0UGF5bWVudE1ldGhvZHMoY3VzdG9tZXJJZDogc3RyaW5nKSB7XG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuc3RyaXBlLnBheW1lbnRNZXRob2RzLmxpc3Qoe1xuICAgICAgY3VzdG9tZXI6IGN1c3RvbWVySWQsXG4gICAgICB0eXBlOiAnY2FyZCcsXG4gICAgfSk7XG4gIH1cblxuICBhc3luYyBjcmVhdGVDb3Vwb24ocGFyYW1zOiB7XG4gICAgY29kZTogc3RyaW5nO1xuICAgIG5hbWU/OiBzdHJpbmc7XG4gICAgcGVyY2VudE9mZj86IG51bWJlcjtcbiAgICBhbW91bnRPZmY/OiBudW1iZXI7XG4gICAgY3VycmVuY3k/OiBzdHJpbmc7XG4gICAgZHVyYXRpb246ICdvbmNlJyB8ICdyZXBlYXRpbmcnIHwgJ2ZvcmV2ZXInO1xuICAgIGR1cmF0aW9uSW5Nb250aHM/OiBudW1iZXI7XG4gICAgbWF4UmVkZW1wdGlvbnM/OiBudW1iZXI7XG4gIH0pIHtcbiAgICBjb25zdCBzdHJpcGVDb3Vwb24gPSBhd2FpdCB0aGlzLnN0cmlwZS5jb3Vwb25zLmNyZWF0ZSh7XG4gICAgICBpZDogcGFyYW1zLmNvZGUsXG4gICAgICBuYW1lOiBwYXJhbXMubmFtZSxcbiAgICAgIHBlcmNlbnRfb2ZmOiBwYXJhbXMucGVyY2VudE9mZixcbiAgICAgIGFtb3VudF9vZmY6IHBhcmFtcy5hbW91bnRPZmYsXG4gICAgICBjdXJyZW5jeTogcGFyYW1zLmN1cnJlbmN5LFxuICAgICAgZHVyYXRpb246IHBhcmFtcy5kdXJhdGlvbixcbiAgICAgIGR1cmF0aW9uX2luX21vbnRoczogcGFyYW1zLmR1cmF0aW9uSW5Nb250aHMsXG4gICAgICBtYXhfcmVkZW1wdGlvbnM6IHBhcmFtcy5tYXhSZWRlbXB0aW9ucyxcbiAgICB9KTtcblxuICAgIC8vIFNhdmUgdG8gZGF0YWJhc2VcbiAgICBhd2FpdCB0aGlzLnByaXNtYS5jb3Vwb24uY3JlYXRlKHtcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgc3RyaXBlQ291cG9uSWQ6IHN0cmlwZUNvdXBvbi5pZCxcbiAgICAgICAgY29kZTogcGFyYW1zLmNvZGUsXG4gICAgICAgIG5hbWU6IHBhcmFtcy5uYW1lLFxuICAgICAgICBwZXJjZW50T2ZmOiBwYXJhbXMucGVyY2VudE9mZixcbiAgICAgICAgYW1vdW50T2ZmOiBwYXJhbXMuYW1vdW50T2ZmLFxuICAgICAgICBjdXJyZW5jeTogcGFyYW1zLmN1cnJlbmN5LFxuICAgICAgICBkdXJhdGlvbjogcGFyYW1zLmR1cmF0aW9uLFxuICAgICAgICBkdXJhdGlvbkluTW9udGhzOiBwYXJhbXMuZHVyYXRpb25Jbk1vbnRocyxcbiAgICAgICAgbWF4UmVkZW1wdGlvbnM6IHBhcmFtcy5tYXhSZWRlbXB0aW9ucyxcbiAgICAgIH0sXG4gICAgfSk7XG5cbiAgICByZXR1cm4gc3RyaXBlQ291cG9uO1xuICB9XG5cbiAgcHJpdmF0ZSBpc0NvdXBvblZhbGlkKGNvdXBvbjogYW55KTogYm9vbGVhbiB7XG4gICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKTtcbiAgICBcbiAgICBpZiAoY291cG9uLnZhbGlkRnJvbSAmJiBuZXcgRGF0ZShjb3Vwb24udmFsaWRGcm9tKSA+IG5vdykge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBcbiAgICBpZiAoY291cG9uLnZhbGlkVW50aWwgJiYgbmV3IERhdGUoY291cG9uLnZhbGlkVW50aWwpIDwgbm93KSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIFxuICAgIGlmIChjb3Vwb24ubWF4UmVkZW1wdGlvbnMgJiYgY291cG9uLnRpbWVzUmVkZWVtZWQgPj0gY291cG9uLm1heFJlZGVtcHRpb25zKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIFxuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgYXN5bmMgY29uc3RydWN0V2ViaG9va0V2ZW50KHBheWxvYWQ6IHN0cmluZyB8IEJ1ZmZlciwgc2lnbmF0dXJlOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gdGhpcy5zdHJpcGUud2ViaG9va3MuY29uc3RydWN0RXZlbnQoXG4gICAgICBwYXlsb2FkLFxuICAgICAgc2lnbmF0dXJlLFxuICAgICAgcHJvY2Vzcy5lbnYuU1RSSVBFX1dFQkhPT0tfU0VDUkVUIVxuICAgICk7XG4gIH1cbn0iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFpQ007SUFBQUEsYUFBQSxZQUFBQSxDQUFBO01BQUEsT0FBQUMsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQUQsYUFBQTtBQWpDTixPQUFPRSxN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