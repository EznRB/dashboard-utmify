f51bb69229eca3419c0daec6d8a6de59
/* istanbul ignore next */
function cov_19t0hfvfno() {
  var path = "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\controllers\\utm.controller.ts";
  var hash = "3604f17960d5e44afdce088a6fdef750482a5bb7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\controllers\\utm.controller.ts",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 24
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "1": {
        start: {
          line: 18,
          column: 28
        },
        end: {
          line: 20,
          column: 2
        }
      },
      "2": {
        start: {
          line: 21,
          column: 25
        },
        end: {
          line: 24,
          column: 2
        }
      },
      "3": {
        start: {
          line: 25,
          column: 22
        },
        end: {
          line: 35,
          column: 2
        }
      },
      "4": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 37
        }
      },
      "5": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 75,
          column: 9
        }
      },
      "6": {
        start: {
          line: 46,
          column: 35
        },
        end: {
          line: 46,
          column: 59
        }
      },
      "7": {
        start: {
          line: 47,
          column: 27
        },
        end: {
          line: 47,
          column: 43
        }
      },
      "8": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 50,
          column: 13
        }
      },
      "9": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 49,
          column: 84
        }
      },
      "10": {
        start: {
          line: 51,
          column: 34
        },
        end: {
          line: 51,
          column: 69
        }
      },
      "11": {
        start: {
          line: 52,
          column: 28
        },
        end: {
          line: 56,
          column: 14
        }
      },
      "12": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 60,
          column: 15
        }
      },
      "13": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 69,
          column: 13
        }
      },
      "14": {
        start: {
          line: 64,
          column: 16
        },
        end: {
          line: 68,
          column: 19
        }
      },
      "15": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 37
        }
      },
      "16": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 74,
          column: 15
        }
      },
      "17": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 112,
          column: 9
        }
      },
      "18": {
        start: {
          line: 82,
          column: 35
        },
        end: {
          line: 82,
          column: 59
        }
      },
      "19": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 85,
          column: 13
        }
      },
      "20": {
        start: {
          line: 84,
          column: 16
        },
        end: {
          line: 84,
          column: 84
        }
      },
      "21": {
        start: {
          line: 86,
          column: 26
        },
        end: {
          line: 86,
          column: 60
        }
      },
      "22": {
        start: {
          line: 87,
          column: 27
        },
        end: {
          line: 87,
          column: 84
        }
      },
      "23": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 97,
          column: 15
        }
      },
      "24": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 106,
          column: 13
        }
      },
      "25": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 105,
          column: 19
        }
      },
      "26": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 37
        }
      },
      "27": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 111,
          column: 15
        }
      },
      "28": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 146,
          column: 9
        }
      },
      "29": {
        start: {
          line: 119,
          column: 35
        },
        end: {
          line: 119,
          column: 59
        }
      },
      "30": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 122,
          column: 13
        }
      },
      "31": {
        start: {
          line: 121,
          column: 16
        },
        end: {
          line: 121,
          column: 84
        }
      },
      "32": {
        start: {
          line: 123,
          column: 27
        },
        end: {
          line: 123,
          column: 41
        }
      },
      "33": {
        start: {
          line: 124,
          column: 56
        },
        end: {
          line: 124,
          column: 69
        }
      },
      "34": {
        start: {
          line: 125,
          column: 26
        },
        end: {
          line: 128,
          column: 14
        }
      },
      "35": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 134,
          column: 13
        }
      },
      "36": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 133,
          column: 19
        }
      },
      "37": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 138,
          column: 15
        }
      },
      "38": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 37
        }
      },
      "39": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 145,
          column: 15
        }
      },
      "40": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 186,
          column: 9
        }
      },
      "41": {
        start: {
          line: 153,
          column: 35
        },
        end: {
          line: 153,
          column: 59
        }
      },
      "42": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 156,
          column: 13
        }
      },
      "43": {
        start: {
          line: 155,
          column: 16
        },
        end: {
          line: 155,
          column: 84
        }
      },
      "44": {
        start: {
          line: 157,
          column: 34
        },
        end: {
          line: 157,
          column: 70
        }
      },
      "45": {
        start: {
          line: 158,
          column: 30
        },
        end: {
          line: 161,
          column: 14
        }
      },
      "46": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 165,
          column: 15
        }
      },
      "47": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 174,
          column: 13
        }
      },
      "48": {
        start: {
          line: 169,
          column: 16
        },
        end: {
          line: 173,
          column: 19
        }
      },
      "49": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 180,
          column: 13
        }
      },
      "50": {
        start: {
          line: 176,
          column: 16
        },
        end: {
          line: 179,
          column: 19
        }
      },
      "51": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 181,
          column: 37
        }
      },
      "52": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 185,
          column: 15
        }
      },
      "53": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 217,
          column: 9
        }
      },
      "54": {
        start: {
          line: 193,
          column: 29
        },
        end: {
          line: 193,
          column: 43
        }
      },
      "55": {
        start: {
          line: 194,
          column: 30
        },
        end: {
          line: 194,
          column: 59
        }
      },
      "56": {
        start: {
          line: 195,
          column: 28
        },
        end: {
          line: 195,
          column: 51
        }
      },
      "57": {
        start: {
          line: 196,
          column: 30
        },
        end: {
          line: 196,
          column: 40
        }
      },
      "58": {
        start: {
          line: 197,
          column: 27
        },
        end: {
          line: 201,
          column: 14
        }
      },
      "59": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 207,
          column: 13
        }
      },
      "60": {
        start: {
          line: 203,
          column: 16
        },
        end: {
          line: 206,
          column: 19
        }
      },
      "61": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 209,
          column: 59
        }
      },
      "62": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 212,
          column: 37
        }
      },
      "63": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 216,
          column: 15
        }
      },
      "64": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 257,
          column: 9
        }
      },
      "65": {
        start: {
          line: 224,
          column: 35
        },
        end: {
          line: 224,
          column: 59
        }
      },
      "66": {
        start: {
          line: 225,
          column: 27
        },
        end: {
          line: 225,
          column: 43
        }
      },
      "67": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 228,
          column: 13
        }
      },
      "68": {
        start: {
          line: 227,
          column: 16
        },
        end: {
          line: 227,
          column: 84
        }
      },
      "69": {
        start: {
          line: 229,
          column: 34
        },
        end: {
          line: 229,
          column: 73
        }
      },
      "70": {
        start: {
          line: 230,
          column: 28
        },
        end: {
          line: 234,
          column: 14
        }
      },
      "71": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 242,
          column: 15
        }
      },
      "72": {
        start: {
          line: 245,
          column: 12
        },
        end: {
          line: 251,
          column: 13
        }
      },
      "73": {
        start: {
          line: 246,
          column: 16
        },
        end: {
          line: 250,
          column: 19
        }
      },
      "74": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 252,
          column: 37
        }
      },
      "75": {
        start: {
          line: 253,
          column: 12
        },
        end: {
          line: 256,
          column: 15
        }
      },
      "76": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 287,
          column: 9
        }
      },
      "77": {
        start: {
          line: 264,
          column: 35
        },
        end: {
          line: 264,
          column: 59
        }
      },
      "78": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 267,
          column: 13
        }
      },
      "79": {
        start: {
          line: 266,
          column: 16
        },
        end: {
          line: 266,
          column: 84
        }
      },
      "80": {
        start: {
          line: 268,
          column: 27
        },
        end: {
          line: 268,
          column: 41
        }
      },
      "81": {
        start: {
          line: 269,
          column: 32
        },
        end: {
          line: 269,
          column: 101
        }
      },
      "82": {
        start: {
          line: 270,
          column: 12
        },
        end: {
          line: 275,
          column: 13
        }
      },
      "83": {
        start: {
          line: 271,
          column: 16
        },
        end: {
          line: 274,
          column: 19
        }
      },
      "84": {
        start: {
          line: 276,
          column: 12
        },
        end: {
          line: 279,
          column: 15
        }
      },
      "85": {
        start: {
          line: 282,
          column: 12
        },
        end: {
          line: 282,
          column: 37
        }
      },
      "86": {
        start: {
          line: 283,
          column: 12
        },
        end: {
          line: 286,
          column: 15
        }
      },
      "87": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 314,
          column: 9
        }
      },
      "88": {
        start: {
          line: 294,
          column: 35
        },
        end: {
          line: 294,
          column: 59
        }
      },
      "89": {
        start: {
          line: 295,
          column: 12
        },
        end: {
          line: 297,
          column: 13
        }
      },
      "90": {
        start: {
          line: 296,
          column: 16
        },
        end: {
          line: 296,
          column: 84
        }
      },
      "91": {
        start: {
          line: 298,
          column: 27
        },
        end: {
          line: 298,
          column: 41
        }
      },
      "92": {
        start: {
          line: 299,
          column: 28
        },
        end: {
          line: 299,
          column: 83
        }
      },
      "93": {
        start: {
          line: 300,
          column: 12
        },
        end: {
          line: 305,
          column: 13
        }
      },
      "94": {
        start: {
          line: 301,
          column: 16
        },
        end: {
          line: 304,
          column: 19
        }
      },
      "95": {
        start: {
          line: 306,
          column: 12
        },
        end: {
          line: 306,
          column: 44
        }
      },
      "96": {
        start: {
          line: 309,
          column: 12
        },
        end: {
          line: 309,
          column: 37
        }
      },
      "97": {
        start: {
          line: 310,
          column: 12
        },
        end: {
          line: 313,
          column: 15
        }
      },
      "98": {
        start: {
          line: 320,
          column: 8
        },
        end: {
          line: 341,
          column: 9
        }
      },
      "99": {
        start: {
          line: 321,
          column: 35
        },
        end: {
          line: 321,
          column: 59
        }
      },
      "100": {
        start: {
          line: 322,
          column: 12
        },
        end: {
          line: 324,
          column: 13
        }
      },
      "101": {
        start: {
          line: 323,
          column: 16
        },
        end: {
          line: 323,
          column: 84
        }
      },
      "102": {
        start: {
          line: 325,
          column: 35
        },
        end: {
          line: 325,
          column: 47
        }
      },
      "103": {
        start: {
          line: 326,
          column: 31
        },
        end: {
          line: 329,
          column: 14
        }
      },
      "104": {
        start: {
          line: 330,
          column: 12
        },
        end: {
          line: 333,
          column: 15
        }
      },
      "105": {
        start: {
          line: 336,
          column: 12
        },
        end: {
          line: 336,
          column: 37
        }
      },
      "106": {
        start: {
          line: 337,
          column: 12
        },
        end: {
          line: 340,
          column: 15
        }
      },
      "107": {
        start: {
          line: 347,
          column: 8
        },
        end: {
          line: 377,
          column: 9
        }
      },
      "108": {
        start: {
          line: 348,
          column: 35
        },
        end: {
          line: 348,
          column: 59
        }
      },
      "109": {
        start: {
          line: 349,
          column: 12
        },
        end: {
          line: 351,
          column: 13
        }
      },
      "110": {
        start: {
          line: 350,
          column: 16
        },
        end: {
          line: 350,
          column: 84
        }
      },
      "111": {
        start: {
          line: 352,
          column: 26
        },
        end: {
          line: 352,
          column: 39
        }
      },
      "112": {
        start: {
          line: 353,
          column: 34
        },
        end: {
          line: 365,
          column: 13
        }
      },
      "113": {
        start: {
          line: 366,
          column: 49
        },
        end: {
          line: 366,
          column: 96
        }
      },
      "114": {
        start: {
          line: 367,
          column: 12
        },
        end: {
          line: 367,
          column: 51
        }
      },
      "115": {
        start: {
          line: 368,
          column: 12
        },
        end: {
          line: 368,
          column: 86
        }
      },
      "116": {
        start: {
          line: 369,
          column: 12
        },
        end: {
          line: 369,
          column: 36
        }
      },
      "117": {
        start: {
          line: 372,
          column: 12
        },
        end: {
          line: 372,
          column: 37
        }
      },
      "118": {
        start: {
          line: 373,
          column: 12
        },
        end: {
          line: 376,
          column: 15
        }
      },
      "119": {
        start: {
          line: 381,
          column: 8
        },
        end: {
          line: 403,
          column: 9
        }
      },
      "120": {
        start: {
          line: 382,
          column: 35
        },
        end: {
          line: 382,
          column: 59
        }
      },
      "121": {
        start: {
          line: 383,
          column: 12
        },
        end: {
          line: 385,
          column: 13
        }
      },
      "122": {
        start: {
          line: 384,
          column: 16
        },
        end: {
          line: 384,
          column: 84
        }
      },
      "123": {
        start: {
          line: 386,
          column: 66
        },
        end: {
          line: 386,
          column: 79
        }
      },
      "124": {
        start: {
          line: 387,
          column: 27
        },
        end: {
          line: 391,
          column: 14
        }
      },
      "125": {
        start: {
          line: 392,
          column: 12
        },
        end: {
          line: 395,
          column: 15
        }
      },
      "126": {
        start: {
          line: 398,
          column: 12
        },
        end: {
          line: 398,
          column: 37
        }
      },
      "127": {
        start: {
          line: 399,
          column: 12
        },
        end: {
          line: 402,
          column: 15
        }
      },
      "128": {
        start: {
          line: 406,
          column: 8
        },
        end: {
          line: 427,
          column: 9
        }
      },
      "129": {
        start: {
          line: 407,
          column: 35
        },
        end: {
          line: 407,
          column: 59
        }
      },
      "130": {
        start: {
          line: 408,
          column: 12
        },
        end: {
          line: 410,
          column: 13
        }
      },
      "131": {
        start: {
          line: 409,
          column: 16
        },
        end: {
          line: 409,
          column: 84
        }
      },
      "132": {
        start: {
          line: 411,
          column: 29
        },
        end: {
          line: 411,
          column: 41
        }
      },
      "133": {
        start: {
          line: 412,
          column: 27
        },
        end: {
          line: 412,
          column: 97
        }
      },
      "134": {
        start: {
          line: 413,
          column: 12
        },
        end: {
          line: 419,
          column: 15
        }
      },
      "135": {
        start: {
          line: 422,
          column: 12
        },
        end: {
          line: 422,
          column: 37
        }
      },
      "136": {
        start: {
          line: 423,
          column: 12
        },
        end: {
          line: 426,
          column: 15
        }
      },
      "137": {
        start: {
          line: 430,
          column: 8
        },
        end: {
          line: 447,
          column: 9
        }
      },
      "138": {
        start: {
          line: 431,
          column: 35
        },
        end: {
          line: 431,
          column: 59
        }
      },
      "139": {
        start: {
          line: 432,
          column: 12
        },
        end: {
          line: 434,
          column: 13
        }
      },
      "140": {
        start: {
          line: 433,
          column: 16
        },
        end: {
          line: 433,
          column: 84
        }
      },
      "141": {
        start: {
          line: 435,
          column: 26
        },
        end: {
          line: 435,
          column: 84
        }
      },
      "142": {
        start: {
          line: 436,
          column: 12
        },
        end: {
          line: 439,
          column: 15
        }
      },
      "143": {
        start: {
          line: 442,
          column: 12
        },
        end: {
          line: 442,
          column: 37
        }
      },
      "144": {
        start: {
          line: 443,
          column: 12
        },
        end: {
          line: 446,
          column: 15
        }
      },
      "145": {
        start: {
          line: 450,
          column: 8
        },
        end: {
          line: 469,
          column: 9
        }
      },
      "146": {
        start: {
          line: 451,
          column: 35
        },
        end: {
          line: 451,
          column: 59
        }
      },
      "147": {
        start: {
          line: 452,
          column: 12
        },
        end: {
          line: 454,
          column: 13
        }
      },
      "148": {
        start: {
          line: 453,
          column: 16
        },
        end: {
          line: 453,
          column: 84
        }
      },
      "149": {
        start: {
          line: 455,
          column: 27
        },
        end: {
          line: 455,
          column: 41
        }
      },
      "150": {
        start: {
          line: 456,
          column: 31
        },
        end: {
          line: 456,
          column: 43
        }
      },
      "151": {
        start: {
          line: 457,
          column: 12
        },
        end: {
          line: 457,
          column: 89
        }
      },
      "152": {
        start: {
          line: 458,
          column: 12
        },
        end: {
          line: 461,
          column: 15
        }
      },
      "153": {
        start: {
          line: 464,
          column: 12
        },
        end: {
          line: 464,
          column: 37
        }
      },
      "154": {
        start: {
          line: 465,
          column: 12
        },
        end: {
          line: 468,
          column: 15
        }
      },
      "155": {
        start: {
          line: 472,
          column: 8
        },
        end: {
          line: 490,
          column: 9
        }
      },
      "156": {
        start: {
          line: 473,
          column: 35
        },
        end: {
          line: 473,
          column: 59
        }
      },
      "157": {
        start: {
          line: 474,
          column: 12
        },
        end: {
          line: 476,
          column: 13
        }
      },
      "158": {
        start: {
          line: 475,
          column: 16
        },
        end: {
          line: 475,
          column: 84
        }
      },
      "159": {
        start: {
          line: 477,
          column: 27
        },
        end: {
          line: 477,
          column: 41
        }
      },
      "160": {
        start: {
          line: 478,
          column: 12
        },
        end: {
          line: 478,
          column: 77
        }
      },
      "161": {
        start: {
          line: 479,
          column: 12
        },
        end: {
          line: 482,
          column: 15
        }
      },
      "162": {
        start: {
          line: 485,
          column: 12
        },
        end: {
          line: 485,
          column: 37
        }
      },
      "163": {
        start: {
          line: 486,
          column: 12
        },
        end: {
          line: 489,
          column: 15
        }
      },
      "164": {
        start: {
          line: 493,
          column: 8
        },
        end: {
          line: 511,
          column: 9
        }
      },
      "165": {
        start: {
          line: 494,
          column: 35
        },
        end: {
          line: 494,
          column: 59
        }
      },
      "166": {
        start: {
          line: 495,
          column: 12
        },
        end: {
          line: 497,
          column: 13
        }
      },
      "167": {
        start: {
          line: 496,
          column: 16
        },
        end: {
          line: 496,
          column: 84
        }
      },
      "168": {
        start: {
          line: 498,
          column: 27
        },
        end: {
          line: 498,
          column: 41
        }
      },
      "169": {
        start: {
          line: 499,
          column: 12
        },
        end: {
          line: 499,
          column: 77
        }
      },
      "170": {
        start: {
          line: 500,
          column: 12
        },
        end: {
          line: 503,
          column: 15
        }
      },
      "171": {
        start: {
          line: 506,
          column: 12
        },
        end: {
          line: 506,
          column: 37
        }
      },
      "172": {
        start: {
          line: 507,
          column: 12
        },
        end: {
          line: 510,
          column: 15
        }
      },
      "173": {
        start: {
          line: 515,
          column: 8
        },
        end: {
          line: 534,
          column: 9
        }
      },
      "174": {
        start: {
          line: 516,
          column: 39
        },
        end: {
          line: 516,
          column: 52
        }
      },
      "175": {
        start: {
          line: 517,
          column: 12
        },
        end: {
          line: 522,
          column: 13
        }
      },
      "176": {
        start: {
          line: 518,
          column: 16
        },
        end: {
          line: 521,
          column: 19
        }
      },
      "177": {
        start: {
          line: 523,
          column: 33
        },
        end: {
          line: 523,
          column: 86
        }
      },
      "178": {
        start: {
          line: 524,
          column: 12
        },
        end: {
          line: 527,
          column: 15
        }
      },
      "179": {
        start: {
          line: 530,
          column: 12
        },
        end: {
          line: 533,
          column: 15
        }
      },
      "180": {
        start: {
          line: 537,
          column: 8
        },
        end: {
          line: 574,
          column: 9
        }
      },
      "181": {
        start: {
          line: 538,
          column: 76
        },
        end: {
          line: 538,
          column: 88
        }
      },
      "182": {
        start: {
          line: 539,
          column: 27
        },
        end: {
          line: 539,
          column: 43
        }
      },
      "183": {
        start: {
          line: 540,
          column: 12
        },
        end: {
          line: 545,
          column: 13
        }
      },
      "184": {
        start: {
          line: 541,
          column: 16
        },
        end: {
          line: 544,
          column: 19
        }
      },
      "185": {
        start: {
          line: 546,
          column: 12
        },
        end: {
          line: 551,
          column: 13
        }
      },
      "186": {
        start: {
          line: 547,
          column: 16
        },
        end: {
          line: 550,
          column: 19
        }
      },
      "187": {
        start: {
          line: 552,
          column: 32
        },
        end: {
          line: 560,
          column: 14
        }
      },
      "188": {
        start: {
          line: 561,
          column: 12
        },
        end: {
          line: 567,
          column: 15
        }
      },
      "189": {
        start: {
          line: 570,
          column: 12
        },
        end: {
          line: 573,
          column: 15
        }
      },
      "190": {
        start: {
          line: 577,
          column: 8
        },
        end: {
          line: 602,
          column: 9
        }
      },
      "191": {
        start: {
          line: 578,
          column: 27
        },
        end: {
          line: 578,
          column: 41
        }
      },
      "192": {
        start: {
          line: 579,
          column: 70
        },
        end: {
          line: 579,
          column: 82
        }
      },
      "193": {
        start: {
          line: 580,
          column: 12
        },
        end: {
          line: 585,
          column: 13
        }
      },
      "194": {
        start: {
          line: 581,
          column: 16
        },
        end: {
          line: 584,
          column: 19
        }
      },
      "195": {
        start: {
          line: 586,
          column: 32
        },
        end: {
          line: 591,
          column: 14
        }
      },
      "196": {
        start: {
          line: 592,
          column: 12
        },
        end: {
          line: 595,
          column: 15
        }
      },
      "197": {
        start: {
          line: 598,
          column: 12
        },
        end: {
          line: 601,
          column: 15
        }
      },
      "198": {
        start: {
          line: 605,
          column: 8
        },
        end: {
          line: 625,
          column: 9
        }
      },
      "199": {
        start: {
          line: 606,
          column: 27
        },
        end: {
          line: 606,
          column: 41
        }
      },
      "200": {
        start: {
          line: 607,
          column: 39
        },
        end: {
          line: 607,
          column: 52
        }
      },
      "201": {
        start: {
          line: 608,
          column: 12
        },
        end: {
          line: 613,
          column: 13
        }
      },
      "202": {
        start: {
          line: 609,
          column: 16
        },
        end: {
          line: 612,
          column: 19
        }
      },
      "203": {
        start: {
          line: 614,
          column: 12
        },
        end: {
          line: 614,
          column: 72
        }
      },
      "204": {
        start: {
          line: 615,
          column: 12
        },
        end: {
          line: 618,
          column: 15
        }
      },
      "205": {
        start: {
          line: 621,
          column: 12
        },
        end: {
          line: 624,
          column: 15
        }
      },
      "206": {
        start: {
          line: 628,
          column: 8
        },
        end: {
          line: 648,
          column: 9
        }
      },
      "207": {
        start: {
          line: 629,
          column: 27
        },
        end: {
          line: 629,
          column: 41
        }
      },
      "208": {
        start: {
          line: 630,
          column: 39
        },
        end: {
          line: 630,
          column: 51
        }
      },
      "209": {
        start: {
          line: 631,
          column: 12
        },
        end: {
          line: 636,
          column: 13
        }
      },
      "210": {
        start: {
          line: 632,
          column: 16
        },
        end: {
          line: 635,
          column: 19
        }
      },
      "211": {
        start: {
          line: 637,
          column: 27
        },
        end: {
          line: 637,
          column: 84
        }
      },
      "212": {
        start: {
          line: 638,
          column: 12
        },
        end: {
          line: 641,
          column: 15
        }
      },
      "213": {
        start: {
          line: 644,
          column: 12
        },
        end: {
          line: 647,
          column: 15
        }
      },
      "214": {
        start: {
          line: 651,
          column: 8
        },
        end: {
          line: 675,
          column: 9
        }
      },
      "215": {
        start: {
          line: 652,
          column: 72
        },
        end: {
          line: 652,
          column: 84
        }
      },
      "216": {
        start: {
          line: 653,
          column: 12
        },
        end: {
          line: 658,
          column: 13
        }
      },
      "217": {
        start: {
          line: 654,
          column: 16
        },
        end: {
          line: 657,
          column: 19
        }
      },
      "218": {
        start: {
          line: 659,
          column: 28
        },
        end: {
          line: 664,
          column: 14
        }
      },
      "219": {
        start: {
          line: 665,
          column: 12
        },
        end: {
          line: 668,
          column: 15
        }
      },
      "220": {
        start: {
          line: 671,
          column: 12
        },
        end: {
          line: 674,
          column: 15
        }
      },
      "221": {
        start: {
          line: 678,
          column: 8
        },
        end: {
          line: 690,
          column: 9
        }
      },
      "222": {
        start: {
          line: 679,
          column: 30
        },
        end: {
          line: 679,
          column: 49
        }
      },
      "223": {
        start: {
          line: 680,
          column: 12
        },
        end: {
          line: 683,
          column: 15
        }
      },
      "224": {
        start: {
          line: 686,
          column: 12
        },
        end: {
          line: 689,
          column: 15
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        loc: {
          start: {
            line: 38,
            column: 28
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 38
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        loc: {
          start: {
            line: 44,
            column: 36
          },
          end: {
            line: 76,
            column: 5
          }
        },
        line: 44
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        },
        loc: {
          start: {
            line: 80,
            column: 34
          },
          end: {
            line: 113,
            column: 5
          }
        },
        line: 80
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 117,
            column: 5
          }
        },
        loc: {
          start: {
            line: 117,
            column: 38
          },
          end: {
            line: 147,
            column: 5
          }
        },
        line: 117
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 151,
            column: 4
          },
          end: {
            line: 151,
            column: 5
          }
        },
        loc: {
          start: {
            line: 151,
            column: 37
          },
          end: {
            line: 187,
            column: 5
          }
        },
        line: 151
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 191,
            column: 4
          },
          end: {
            line: 191,
            column: 5
          }
        },
        loc: {
          start: {
            line: 191,
            column: 43
          },
          end: {
            line: 218,
            column: 5
          }
        },
        line: 191
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 222,
            column: 4
          },
          end: {
            line: 222,
            column: 5
          }
        },
        loc: {
          start: {
            line: 222,
            column: 40
          },
          end: {
            line: 258,
            column: 5
          }
        },
        line: 222
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 262,
            column: 4
          },
          end: {
            line: 262,
            column: 5
          }
        },
        loc: {
          start: {
            line: 262,
            column: 36
          },
          end: {
            line: 288,
            column: 5
          }
        },
        line: 262
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 292,
            column: 4
          },
          end: {
            line: 292,
            column: 5
          }
        },
        loc: {
          start: {
            line: 292,
            column: 36
          },
          end: {
            line: 315,
            column: 5
          }
        },
        line: 292
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 319,
            column: 4
          },
          end: {
            line: 319,
            column: 5
          }
        },
        loc: {
          start: {
            line: 319,
            column: 42
          },
          end: {
            line: 342,
            column: 5
          }
        },
        line: 319
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 346,
            column: 4
          },
          end: {
            line: 346,
            column: 5
          }
        },
        loc: {
          start: {
            line: 346,
            column: 37
          },
          end: {
            line: 378,
            column: 5
          }
        },
        line: 346
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 380,
            column: 4
          },
          end: {
            line: 380,
            column: 5
          }
        },
        loc: {
          start: {
            line: 380,
            column: 43
          },
          end: {
            line: 404,
            column: 5
          }
        },
        line: 380
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 405,
            column: 4
          },
          end: {
            line: 405,
            column: 5
          }
        },
        loc: {
          start: {
            line: 405,
            column: 49
          },
          end: {
            line: 428,
            column: 5
          }
        },
        line: 405
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 429,
            column: 4
          },
          end: {
            line: 429,
            column: 5
          }
        },
        loc: {
          start: {
            line: 429,
            column: 47
          },
          end: {
            line: 448,
            column: 5
          }
        },
        line: 429
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 449,
            column: 4
          },
          end: {
            line: 449,
            column: 5
          }
        },
        loc: {
          start: {
            line: 449,
            column: 49
          },
          end: {
            line: 470,
            column: 5
          }
        },
        line: 449
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 471,
            column: 4
          },
          end: {
            line: 471,
            column: 5
          }
        },
        loc: {
          start: {
            line: 471,
            column: 49
          },
          end: {
            line: 491,
            column: 5
          }
        },
        line: 471
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 492,
            column: 4
          },
          end: {
            line: 492,
            column: 5
          }
        },
        loc: {
          start: {
            line: 492,
            column: 49
          },
          end: {
            line: 512,
            column: 5
          }
        },
        line: 492
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 514,
            column: 4
          },
          end: {
            line: 514,
            column: 5
          }
        },
        loc: {
          start: {
            line: 514,
            column: 42
          },
          end: {
            line: 535,
            column: 5
          }
        },
        line: 514
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 536,
            column: 4
          },
          end: {
            line: 536,
            column: 5
          }
        },
        loc: {
          start: {
            line: 536,
            column: 44
          },
          end: {
            line: 575,
            column: 5
          }
        },
        line: 536
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 576,
            column: 4
          },
          end: {
            line: 576,
            column: 5
          }
        },
        loc: {
          start: {
            line: 576,
            column: 44
          },
          end: {
            line: 603,
            column: 5
          }
        },
        line: 576
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 604,
            column: 4
          },
          end: {
            line: 604,
            column: 5
          }
        },
        loc: {
          start: {
            line: 604,
            column: 44
          },
          end: {
            line: 626,
            column: 5
          }
        },
        line: 604
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 627,
            column: 4
          },
          end: {
            line: 627,
            column: 5
          }
        },
        loc: {
          start: {
            line: 627,
            column: 42
          },
          end: {
            line: 649,
            column: 5
          }
        },
        line: 627
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 650,
            column: 4
          },
          end: {
            line: 650,
            column: 5
          }
        },
        loc: {
          start: {
            line: 650,
            column: 50
          },
          end: {
            line: 676,
            column: 5
          }
        },
        line: 650
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 677,
            column: 4
          },
          end: {
            line: 677,
            column: 5
          }
        },
        loc: {
          start: {
            line: 677,
            column: 44
          },
          end: {
            line: 691,
            column: 5
          }
        },
        line: 677
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 50,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 50,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "1": {
        loc: {
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 48,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 48,
            column: 31
          }
        }, {
          start: {
            line: 48,
            column: 35
          },
          end: {
            line: 48,
            column: 42
          }
        }],
        line: 48
      },
      "2": {
        loc: {
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 69,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 69,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "3": {
        loc: {
          start: {
            line: 83,
            column: 12
          },
          end: {
            line: 85,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 12
          },
          end: {
            line: 85,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "4": {
        loc: {
          start: {
            line: 100,
            column: 12
          },
          end: {
            line: 106,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 12
          },
          end: {
            line: 106,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      },
      "5": {
        loc: {
          start: {
            line: 120,
            column: 12
          },
          end: {
            line: 122,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 12
          },
          end: {
            line: 122,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      },
      "6": {
        loc: {
          start: {
            line: 124,
            column: 20
          },
          end: {
            line: 124,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 124,
            column: 29
          },
          end: {
            line: 124,
            column: 34
          }
        }],
        line: 124
      },
      "7": {
        loc: {
          start: {
            line: 124,
            column: 36
          },
          end: {
            line: 124,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 124,
            column: 46
          },
          end: {
            line: 124,
            column: 51
          }
        }],
        line: 124
      },
      "8": {
        loc: {
          start: {
            line: 129,
            column: 12
          },
          end: {
            line: 134,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 12
          },
          end: {
            line: 134,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "9": {
        loc: {
          start: {
            line: 154,
            column: 12
          },
          end: {
            line: 156,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 154,
            column: 12
          },
          end: {
            line: 156,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 154
      },
      "10": {
        loc: {
          start: {
            line: 168,
            column: 12
          },
          end: {
            line: 174,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 12
          },
          end: {
            line: 174,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 168
      },
      "11": {
        loc: {
          start: {
            line: 175,
            column: 12
          },
          end: {
            line: 180,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 175,
            column: 12
          },
          end: {
            line: 180,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 175
      },
      "12": {
        loc: {
          start: {
            line: 202,
            column: 12
          },
          end: {
            line: 207,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 202,
            column: 12
          },
          end: {
            line: 207,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 202
      },
      "13": {
        loc: {
          start: {
            line: 226,
            column: 12
          },
          end: {
            line: 228,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 12
          },
          end: {
            line: 228,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 226
      },
      "14": {
        loc: {
          start: {
            line: 226,
            column: 16
          },
          end: {
            line: 226,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 226,
            column: 16
          },
          end: {
            line: 226,
            column: 31
          }
        }, {
          start: {
            line: 226,
            column: 35
          },
          end: {
            line: 226,
            column: 42
          }
        }],
        line: 226
      },
      "15": {
        loc: {
          start: {
            line: 245,
            column: 12
          },
          end: {
            line: 251,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 245,
            column: 12
          },
          end: {
            line: 251,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 245
      },
      "16": {
        loc: {
          start: {
            line: 265,
            column: 12
          },
          end: {
            line: 267,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 265,
            column: 12
          },
          end: {
            line: 267,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 265
      },
      "17": {
        loc: {
          start: {
            line: 270,
            column: 12
          },
          end: {
            line: 275,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 270,
            column: 12
          },
          end: {
            line: 275,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 270
      },
      "18": {
        loc: {
          start: {
            line: 295,
            column: 12
          },
          end: {
            line: 297,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 295,
            column: 12
          },
          end: {
            line: 297,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 295
      },
      "19": {
        loc: {
          start: {
            line: 300,
            column: 12
          },
          end: {
            line: 305,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 300,
            column: 12
          },
          end: {
            line: 305,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 300
      },
      "20": {
        loc: {
          start: {
            line: 322,
            column: 12
          },
          end: {
            line: 324,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 322,
            column: 12
          },
          end: {
            line: 324,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 322
      },
      "21": {
        loc: {
          start: {
            line: 349,
            column: 12
          },
          end: {
            line: 351,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 349,
            column: 12
          },
          end: {
            line: 351,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 349
      },
      "22": {
        loc: {
          start: {
            line: 354,
            column: 24
          },
          end: {
            line: 354,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 354,
            column: 24
          },
          end: {
            line: 354,
            column: 36
          }
        }, {
          start: {
            line: 354,
            column: 40
          },
          end: {
            line: 354,
            column: 45
          }
        }],
        line: 354
      },
      "23": {
        loc: {
          start: {
            line: 355,
            column: 27
          },
          end: {
            line: 355,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 355,
            column: 27
          },
          end: {
            line: 355,
            column: 42
          }
        }, {
          start: {
            line: 355,
            column: 46
          },
          end: {
            line: 355,
            column: 58
          }
        }],
        line: 355
      },
      "24": {
        loc: {
          start: {
            line: 383,
            column: 12
          },
          end: {
            line: 385,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 383,
            column: 12
          },
          end: {
            line: 385,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 383
      },
      "25": {
        loc: {
          start: {
            line: 386,
            column: 20
          },
          end: {
            line: 386,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 386,
            column: 27
          },
          end: {
            line: 386,
            column: 28
          }
        }],
        line: 386
      },
      "26": {
        loc: {
          start: {
            line: 386,
            column: 30
          },
          end: {
            line: 386,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 386,
            column: 38
          },
          end: {
            line: 386,
            column: 40
          }
        }],
        line: 386
      },
      "27": {
        loc: {
          start: {
            line: 386,
            column: 42
          },
          end: {
            line: 386,
            column: 61
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 386,
            column: 56
          },
          end: {
            line: 386,
            column: 61
          }
        }],
        line: 386
      },
      "28": {
        loc: {
          start: {
            line: 408,
            column: 12
          },
          end: {
            line: 410,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 408,
            column: 12
          },
          end: {
            line: 410,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 408
      },
      "29": {
        loc: {
          start: {
            line: 432,
            column: 12
          },
          end: {
            line: 434,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 432,
            column: 12
          },
          end: {
            line: 434,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 432
      },
      "30": {
        loc: {
          start: {
            line: 452,
            column: 12
          },
          end: {
            line: 454,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 452,
            column: 12
          },
          end: {
            line: 454,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 452
      },
      "31": {
        loc: {
          start: {
            line: 474,
            column: 12
          },
          end: {
            line: 476,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 474,
            column: 12
          },
          end: {
            line: 476,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 474
      },
      "32": {
        loc: {
          start: {
            line: 495,
            column: 12
          },
          end: {
            line: 497,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 495,
            column: 12
          },
          end: {
            line: 497,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 495
      },
      "33": {
        loc: {
          start: {
            line: 517,
            column: 12
          },
          end: {
            line: 522,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 517,
            column: 12
          },
          end: {
            line: 522,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 517
      },
      "34": {
        loc: {
          start: {
            line: 540,
            column: 12
          },
          end: {
            line: 545,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 540,
            column: 12
          },
          end: {
            line: 545,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 540
      },
      "35": {
        loc: {
          start: {
            line: 540,
            column: 16
          },
          end: {
            line: 540,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 540,
            column: 16
          },
          end: {
            line: 540,
            column: 31
          }
        }, {
          start: {
            line: 540,
            column: 35
          },
          end: {
            line: 540,
            column: 40
          }
        }, {
          start: {
            line: 540,
            column: 44
          },
          end: {
            line: 540,
            column: 49
          }
        }, {
          start: {
            line: 540,
            column: 53
          },
          end: {
            line: 540,
            column: 60
          }
        }],
        line: 540
      },
      "36": {
        loc: {
          start: {
            line: 546,
            column: 12
          },
          end: {
            line: 551,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 546,
            column: 12
          },
          end: {
            line: 551,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 546
      },
      "37": {
        loc: {
          start: {
            line: 558,
            column: 24
          },
          end: {
            line: 558,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 558,
            column: 24
          },
          end: {
            line: 558,
            column: 30
          }
        }, {
          start: {
            line: 558,
            column: 34
          },
          end: {
            line: 558,
            column: 36
          }
        }],
        line: 558
      },
      "38": {
        loc: {
          start: {
            line: 559,
            column: 25
          },
          end: {
            line: 559,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 559,
            column: 25
          },
          end: {
            line: 559,
            column: 32
          }
        }, {
          start: {
            line: 559,
            column: 36
          },
          end: {
            line: 559,
            column: 40
          }
        }],
        line: 559
      },
      "39": {
        loc: {
          start: {
            line: 580,
            column: 12
          },
          end: {
            line: 585,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 580,
            column: 12
          },
          end: {
            line: 585,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 580
      },
      "40": {
        loc: {
          start: {
            line: 608,
            column: 12
          },
          end: {
            line: 613,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 608,
            column: 12
          },
          end: {
            line: 613,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 608
      },
      "41": {
        loc: {
          start: {
            line: 631,
            column: 12
          },
          end: {
            line: 636,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 631,
            column: 12
          },
          end: {
            line: 636,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 631
      },
      "42": {
        loc: {
          start: {
            line: 653,
            column: 12
          },
          end: {
            line: 658,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 653,
            column: 12
          },
          end: {
            line: 658,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 653
      },
      "43": {
        loc: {
          start: {
            line: 653,
            column: 16
          },
          end: {
            line: 653,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 653,
            column: 16
          },
          end: {
            line: 653,
            column: 31
          }
        }, {
          start: {
            line: 653,
            column: 35
          },
          end: {
            line: 653,
            column: 45
          }
        }, {
          start: {
            line: 653,
            column: 49
          },
          end: {
            line: 653,
            column: 59
          }
        }],
        line: 653
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0],
      "7": [0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0],
      "26": [0],
      "27": [0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0, 0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\controllers\\utm.controller.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\controllers\\utm.controller.ts"],
      sourcesContent: ["import { FastifyRequest, FastifyReply } from 'fastify';\nimport { UTMService } from '../services/utm.service';\nimport { ApiError } from '../utils/errors';\nimport { z } from 'zod';\n\n// Validation schemas\nconst createUTMSchema = z.object({\n  originalUrl: z.string().url('URL inv\xE1lida'),\n  utmSource: z.string().optional(),\n  utmMedium: z.string().optional(),\n  utmCampaign: z.string().optional(),\n  utmTerm: z.string().optional(),\n  utmContent: z.string().optional(),\n  customParams: z.record(z.string()).optional(),\n  title: z.string().optional(),\n  description: z.string().optional(),\n  tags: z.array(z.string()).optional(),\n  expiresAt: z.string().datetime().optional(),\n  isPublic: z.boolean().optional(),\n});\n\nconst bulkCreateUTMSchema = z.object({\n  links: z.array(createUTMSchema).min(1).max(100),\n});\n\nconst shortenUrlSchema = z.object({\n  url: z.string().url('URL inv\xE1lida'),\n  customCode: z.string().optional(),\n});\n\nconst listUTMSchema = z.object({\n  page: z.number().min(1).default(1),\n  limit: z.number().min(1).max(100).default(20),\n  search: z.string().optional(),\n  status: z.enum(['ACTIVE', 'PAUSED', 'ARCHIVED']).optional(),\n  utmSource: z.string().optional(),\n  utmMedium: z.string().optional(),\n  utmCampaign: z.string().optional(),\n  sortBy: z.enum(['createdAt', 'clickCount', 'conversionCount', 'title']).default('createdAt'),\n  sortOrder: z.enum(['asc', 'desc']).default('desc'),\n});\n\nexport class UTMController {\n  constructor(private utmService: UTMService) {}\n\n  /**\n   * POST /api/utm/create - Criar novo link UTM\n   */\n  async createUTM(request: FastifyRequest, reply: FastifyReply) {\n    try {\n      const organizationId = (request as any).organization?.id;\n      const userId = (request as any).user?.id;\n      \n      if (!organizationId || !userId) {\n        throw new ApiError('Authentication required', 'AUTH_REQUIRED', 401);\n      }\n      \n      const validatedData = createUTMSchema.parse(request.body);\n      \n      const utmLink = await this.utmService.createUTMLink({\n        ...validatedData,\n        organizationId,\n        userId,\n      });\n\n      return reply.status(201).send({\n        success: true,\n        data: utmLink,\n      });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return reply.status(400).send({\n          success: false,\n          error: 'Dados inv\xE1lidos',\n          details: error.errors,\n        });\n      }\n      \n      request.log.error(error);\n      return reply.status(500).send({\n        success: false,\n        error: 'Erro interno do servidor',\n      });\n    }\n  }\n\n  /**\n   * GET /api/utm/list - Listar links UTM\n   */\n  async listUTM(request: FastifyRequest, reply: FastifyReply) {\n    try {\n      const organizationId = (request as any).organization?.id;\n      \n      if (!organizationId) {\n        throw new ApiError('Authentication required', 'AUTH_REQUIRED', 401);\n      }\n      const query = listUTMSchema.parse(request.query);\n      \n      const result = await this.utmService.listUTMLinks(organizationId, query);\n\n      return reply.send({\n        success: true,\n        data: result.links,\n        pagination: {\n          page: query.page,\n          limit: query.limit,\n          total: result.total,\n          totalPages: Math.ceil(result.total / query.limit),\n        },\n      });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return reply.status(400).send({\n          success: false,\n          error: 'Par\xE2metros inv\xE1lidos',\n          details: error.errors,\n        });\n      }\n      \n      request.log.error(error);\n      return reply.status(500).send({\n        success: false,\n        error: 'Erro interno do servidor',\n      });\n    }\n  }\n\n  /**\n   * GET /api/utm/:id/stats - Obter estat\xEDsticas de um link UTM\n   */\n  async getUTMStats(request: FastifyRequest, reply: FastifyReply) {\n    try {\n      const organizationId = (request as any).organization?.id;\n      \n      if (!organizationId) {\n        throw new ApiError('Authentication required', 'AUTH_REQUIRED', 401);\n      }\n      const { id } = request.params;\n      const { period = '30d', groupBy = 'day' } = request.query;\n      \n      const stats = await this.utmService.getUTMStats(organizationId, id, {\n        period,\n        groupBy,\n      });\n\n      if (!stats) {\n        return reply.status(404).send({\n          success: false,\n          error: 'Link UTM n\xE3o encontrado',\n        });\n      }\n\n      return reply.send({\n        success: true,\n        data: stats,\n      });\n    } catch (error) {\n      request.log.error(error);\n      return reply.status(500).send({\n        success: false,\n        error: 'Erro interno do servidor',\n      });\n    }\n  }\n\n  /**\n   * POST /api/utm/shorten - Encurtar URL\n   */\n  async shortenUrl(request: FastifyRequest, reply: FastifyReply) {\n    try {\n      const organizationId = (request as any).organization?.id;\n      \n      if (!organizationId) {\n        throw new ApiError('Authentication required', 'AUTH_REQUIRED', 401);\n      }\n      const validatedData = shortenUrlSchema.parse(request.body);\n      \n      const shortLink = await this.utmService.shortenUrl({\n        ...validatedData,\n        organizationId,\n      });\n\n      return reply.status(201).send({\n        success: true,\n        data: shortLink,\n      });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return reply.status(400).send({\n          success: false,\n          error: 'Dados inv\xE1lidos',\n          details: error.errors,\n        });\n      }\n      \n      if (error.message === 'CUSTOM_CODE_EXISTS') {\n        return reply.status(409).send({\n          success: false,\n          error: 'C\xF3digo personalizado j\xE1 existe',\n        });\n      }\n      \n      request.log.error(error);\n      return reply.status(500).send({\n        success: false,\n        error: 'Erro interno do servidor',\n      });\n    }\n  }\n\n  /**\n   * GET /api/r/:code - Redirecionar e rastrear clique\n   */\n  async redirectAndTrack(\n    request: FastifyRequest<{\n      Params: { code: string };\n    }>,\n    reply: FastifyReply\n  ) {\n    try {\n      const { code } = request.params;\n      const userAgent = request.headers['user-agent'];\n      const referer = request.headers.referer;\n      const ipAddress = request.ip;\n      \n      const result = await this.utmService.trackClickAndRedirect(code, {\n        userAgent,\n        referer,\n        ipAddress,\n      });\n\n      if (!result) {\n        return reply.status(404).send({\n          success: false,\n          error: 'Link n\xE3o encontrado',\n        });\n      }\n\n      // Redirect to original URL\n      return reply.redirect(302, result.originalUrl);\n    } catch (error) {\n      request.log.error(error);\n      return reply.status(500).send({\n        success: false,\n        error: 'Erro interno do servidor',\n      });\n    }\n  }\n\n  /**\n   * POST /api/utm/bulk - Cria\xE7\xE3o em massa de links UTM\n   */\n  async bulkCreateUTM(request: FastifyRequest, reply: FastifyReply) {\n    try {\n      const organizationId = (request as any).organization?.id;\n      const userId = (request as any).user?.id;\n      \n      if (!organizationId || !userId) {\n        throw new ApiError('Authentication required', 'AUTH_REQUIRED', 401);\n      }\n      const validatedData = bulkCreateUTMSchema.parse(request.body);\n      \n      const results = await this.utmService.bulkCreateUTMLinks({\n        links: validatedData.links,\n        organizationId,\n        userId,\n      });\n\n      return reply.status(201).send({\n        success: true,\n        data: {\n          created: results.created,\n          failed: results.failed,\n          total: validatedData.links.length,\n        },\n      });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return reply.status(400).send({\n          success: false,\n          error: 'Dados inv\xE1lidos',\n          details: error.errors,\n        });\n      }\n      \n      request.log.error(error);\n      return reply.status(500).send({\n        success: false,\n        error: 'Erro interno do servidor',\n      });\n    }\n  }\n\n  /**\n   * PUT /api/utm/:id - Atualizar link UTM\n   */\n  async updateUTM(request: FastifyRequest, reply: FastifyReply) {\n    try {\n      const organizationId = (request as any).organization?.id;\n      \n      if (!organizationId) {\n        throw new ApiError('Authentication required', 'AUTH_REQUIRED', 401);\n      }\n      const { id } = request.params;\n      \n      const updatedLink = await this.utmService.updateUTMLink(organizationId, id, request.body);\n\n      if (!updatedLink) {\n        return reply.status(404).send({\n          success: false,\n          error: 'Link UTM n\xE3o encontrado',\n        });\n      }\n\n      return reply.send({\n        success: true,\n        data: updatedLink,\n      });\n    } catch (error) {\n      request.log.error(error);\n      return reply.status(500).send({\n        success: false,\n        error: 'Erro interno do servidor',\n      });\n    }\n  }\n\n  /**\n   * DELETE /api/utm/:id - Deletar link UTM\n   */\n  async deleteUTM(request: FastifyRequest, reply: FastifyReply) {\n    try {\n      const organizationId = (request as any).organization?.id;\n      \n      if (!organizationId) {\n        throw new ApiError('Authentication required', 'AUTH_REQUIRED', 401);\n      }\n      const { id } = request.params;\n      \n      const deleted = await this.utmService.deleteUTMLink(organizationId, id);\n\n      if (!deleted) {\n        return reply.status(404).send({\n          success: false,\n          error: 'Link UTM n\xE3o encontrado',\n        });\n      }\n\n      return reply.status(204).send();\n    } catch (error) {\n      request.log.error(error);\n      return reply.status(500).send({\n        success: false,\n        error: 'Erro interno do servidor',\n      });\n    }\n  }\n\n  /**\n   * POST /api/utm/conversion - Registrar convers\xE3o\n   */\n  async trackConversion(request: FastifyRequest, reply: FastifyReply) {\n    try {\n      const organizationId = (request as any).organization?.id;\n      \n      if (!organizationId) {\n        throw new ApiError('Authentication required', 'AUTH_REQUIRED', 401);\n      }\n      const conversionData = request.body;\n      \n      const conversion = await this.utmService.trackConversion({\n        ...conversionData,\n        organizationId,\n      });\n\n      return reply.status(201).send({\n        success: true,\n        data: conversion,\n      });\n    } catch (error) {\n      request.log.error(error);\n      return reply.status(500).send({\n        success: false,\n        error: 'Erro interno do servidor',\n      });\n    }\n  }\n\n  /**\n   * GET /api/utm/export - Exportar dados UTM\n   */\n  async exportData(request: FastifyRequest, reply: FastifyReply) {\n    try {\n      const organizationId = (request as any).organization?.id;\n      \n      if (!organizationId) {\n        throw new ApiError('Authentication required', 'AUTH_REQUIRED', 401);\n      }\n\n      const query = request.query as any;\n      const exportOptions = {\n        format: query.format || 'csv',\n        dateRange: query.dateRange || 'last30days',\n        startDate: query.startDate,\n        endDate: query.endDate,\n        includeClicks: query.includeClicks !== 'false',\n        includeConversions: query.includeConversions !== 'false',\n        includeMetrics: query.includeMetrics !== 'false',\n        utmSource: query.utmSource,\n        utmMedium: query.utmMedium,\n        utmCampaign: query.utmCampaign,\n        organizationId,\n      };\n\n      const { data, filename, mimeType } = await this.utmService.exportData(exportOptions);\n\n      reply.header('Content-Type', mimeType);\n      reply.header('Content-Disposition', `attachment; filename=\"${filename}\"`);\n      \n      return reply.send(data);\n    } catch (error) {\n      request.log.error(error);\n      return reply.status(500).send({\n        success: false,\n        error: 'Erro interno do servidor',\n      });\n    }\n  }\n\n  // Notification methods\n  async getNotifications(request: FastifyRequest, reply: FastifyReply) {\n    try {\n      const organizationId = (request as any).organization?.id;\n      \n      if (!organizationId) {\n        throw new ApiError('Authentication required', 'AUTH_REQUIRED', 401);\n      }\n\n      const { page = 1, limit = 20, unread_only = false } = request.query as any;\n      \n      const result = await this.utmService.getNotifications(organizationId, {\n        page: parseInt(page),\n        limit: parseInt(limit),\n        unreadOnly: unread_only\n      });\n\n      return reply.send({\n        success: true,\n        data: result,\n      });\n    } catch (error) {\n      request.log.error(error);\n      return reply.status(500).send({\n        success: false,\n        error: 'Erro interno do servidor',\n      });\n    }\n  }\n\n  async createNotificationRule(request: FastifyRequest, reply: FastifyReply) {\n    try {\n      const organizationId = (request as any).organization?.id;\n      \n      if (!organizationId) {\n        throw new ApiError('Authentication required', 'AUTH_REQUIRED', 401);\n      }\n\n      const ruleData = request.body as any;\n      const ruleId = await this.utmService.createNotificationRule(organizationId, ruleData);\n\n      return reply.status(201).send({\n        success: true,\n        data: {\n          id: ruleId,\n          message: 'Regra de notifica\xE7\xE3o criada com sucesso'\n        }\n      });\n    } catch (error) {\n      request.log.error(error);\n      return reply.status(500).send({\n        success: false,\n        error: 'Erro interno do servidor',\n      });\n    }\n  }\n\n  async getNotificationRules(request: FastifyRequest, reply: FastifyReply) {\n    try {\n      const organizationId = (request as any).organization?.id;\n      \n      if (!organizationId) {\n        throw new ApiError('Authentication required', 'AUTH_REQUIRED', 401);\n      }\n\n      const rules = await this.utmService.getNotificationRules(organizationId);\n      return reply.send({\n        success: true,\n        data: rules,\n      });\n    } catch (error) {\n      request.log.error(error);\n      return reply.status(500).send({\n        success: false,\n        error: 'Erro interno do servidor',\n      });\n    }\n  }\n\n  async updateNotificationRule(request: FastifyRequest, reply: FastifyReply) {\n    try {\n      const organizationId = (request as any).organization?.id;\n      \n      if (!organizationId) {\n        throw new ApiError('Authentication required', 'AUTH_REQUIRED', 401);\n      }\n\n      const { id } = request.params as any;\n      const updateData = request.body as any;\n      \n      await this.utmService.updateNotificationRule(organizationId, id, updateData);\n      return reply.send({\n        success: true,\n        message: 'Regra de notifica\xE7\xE3o atualizada com sucesso'\n      });\n    } catch (error) {\n      request.log.error(error);\n      return reply.status(500).send({\n        success: false,\n        error: 'Erro interno do servidor',\n      });\n    }\n  }\n\n  async deleteNotificationRule(request: FastifyRequest, reply: FastifyReply) {\n    try {\n      const organizationId = (request as any).organization?.id;\n      \n      if (!organizationId) {\n        throw new ApiError('Authentication required', 'AUTH_REQUIRED', 401);\n      }\n\n      const { id } = request.params as any;\n      await this.utmService.deleteNotificationRule(organizationId, id);\n      return reply.send({\n        success: true,\n        message: 'Regra de notifica\xE7\xE3o deletada com sucesso'\n      });\n    } catch (error) {\n      request.log.error(error);\n      return reply.status(500).send({\n        success: false,\n        error: 'Erro interno do servidor',\n      });\n    }\n  }\n\n  async markNotificationAsRead(request: FastifyRequest, reply: FastifyReply) {\n    try {\n      const organizationId = (request as any).organization?.id;\n      \n      if (!organizationId) {\n        throw new ApiError('Authentication required', 'AUTH_REQUIRED', 401);\n      }\n\n      const { id } = request.params as any;\n      await this.utmService.markNotificationAsRead(organizationId, id);\n      return reply.send({\n        success: true,\n        message: 'Notifica\xE7\xE3o marcada como lida'\n      });\n    } catch (error) {\n      request.log.error(error);\n      return reply.status(500).send({\n        success: false,\n        error: 'Erro interno do servidor',\n      });\n    }\n  }\n\n  // Integration management methods\n  async getIntegrations(request: FastifyRequest, reply: FastifyReply) {\n    try {\n      const { organizationId } = request.query as { organizationId: string };\n      \n      if (!organizationId) {\n        return reply.status(400).send({\n          success: false,\n          error: 'Organization ID is required'\n        });\n      }\n\n      const integrations = await this.utmService.getIntegrations(organizationId);\n      \n      reply.send({\n        success: true,\n        data: integrations\n      });\n    } catch (error) {\n      reply.status(500).send({\n        success: false,\n        error: 'Failed to fetch integrations'\n      });\n    }\n  }\n\n  async createIntegration(request: FastifyRequest, reply: FastifyReply) {\n    try {\n      const { organizationId, type, name, config, events, enabled } = request.body as {\n        organizationId: string;\n        type: string;\n        name: string;\n        config: Record<string, any>;\n        events?: string[];\n        enabled?: boolean;\n      };\n      const userId = (request as any).user?.id;\n      \n      if (!organizationId || !type || !name || !config) {\n        return reply.status(400).send({\n          success: false,\n          error: 'Missing required fields'\n        });\n      }\n\n      if (!userId) {\n        return reply.status(401).send({\n          success: false,\n          error: 'User authentication required'\n        });\n      }\n\n      const integration = await this.utmService.createIntegration({\n        organizationId,\n        userId,\n        type,\n        name,\n        config,\n        events: events || [],\n        enabled: enabled ?? true\n      });\n      \n      reply.send({\n        success: true,\n        data: {\n          id: integration.id,\n          message: 'Integration created successfully'\n        }\n      });\n    } catch (error) {\n      reply.status(500).send({\n        success: false,\n        error: 'Failed to create integration'\n      });\n    }\n  }\n\n  async updateIntegration(request: FastifyRequest, reply: FastifyReply) {\n    try {\n      const { id } = request.params as { id: string };\n      const { organizationId, accountName, config, isActive } = request.body as {\n        organizationId: string;\n        accountName?: string;\n        config?: Record<string, any>;\n        isActive?: boolean;\n      };\n      \n      if (!organizationId) {\n        return reply.status(400).send({\n          success: false,\n          error: 'Organization ID is required'\n        });\n      }\n\n      const integration = await this.utmService.updateIntegration(id, {\n        organizationId,\n        accountName,\n        config,\n        isActive\n      });\n      \n      reply.send({\n        success: true,\n        data: integration\n      });\n    } catch (error) {\n      reply.status(500).send({\n        success: false,\n        error: 'Failed to update integration'\n      });\n    }\n  }\n\n  async deleteIntegration(request: FastifyRequest, reply: FastifyReply) {\n    try {\n      const { id } = request.params as { id: string };\n      const { organizationId } = request.query as { organizationId: string };\n      \n      if (!organizationId) {\n        return reply.status(400).send({\n          success: false,\n          error: 'Organization ID is required'\n        });\n      }\n\n      await this.utmService.deleteIntegration(id, organizationId);\n      \n      reply.send({\n        success: true,\n        data: { message: 'Integration deleted successfully' }\n      });\n    } catch (error) {\n      reply.status(500).send({\n        success: false,\n        error: 'Failed to delete integration'\n      });\n    }\n  }\n\n  async testIntegration(request: FastifyRequest, reply: FastifyReply) {\n    try {\n      const { id } = request.params as { id: string };\n      const { organizationId } = request.body as { organizationId: string };\n      \n      if (!organizationId) {\n        return reply.status(400).send({\n          success: false,\n          error: 'Organization ID is required'\n        });\n      }\n\n      const result = await this.utmService.testIntegration(id, organizationId);\n      \n      reply.send({\n        success: true,\n        data: result\n      });\n    } catch (error) {\n      reply.status(500).send({\n        success: false,\n        error: 'Failed to test integration'\n      });\n    }\n  }\n\n  async sendEventToIntegrations(request: FastifyRequest, reply: FastifyReply) {\n    try {\n      const { organizationId, eventType, eventData, utmLinkId } = request.body as {\n        organizationId: string;\n        eventType: string;\n        eventData: Record<string, any>;\n        utmLinkId?: string;\n      };\n      \n      if (!organizationId || !eventType || !eventData) {\n        return reply.status(400).send({\n          success: false,\n          error: 'Missing required fields'\n        });\n      }\n\n      const results = await this.utmService.sendEventToIntegrations({\n        organizationId,\n        eventType,\n        eventData,\n        utmLinkId\n      });\n      \n      reply.send({\n        success: true,\n        data: results\n      });\n    } catch (error) {\n      reply.status(500).send({\n        success: false,\n        error: 'Failed to send event to integrations'\n      });\n    }\n  }\n\n  async generateSessionId(request: FastifyRequest, reply: FastifyReply) {\n    try {\n      const sessionId = crypto.randomUUID();\n      \n      reply.send({\n        success: true,\n        data: { sessionId }\n      });\n    } catch (error) {\n      reply.status(500).send({\n        success: false,\n        error: 'Failed to generate session ID'\n      });\n    }\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3604f17960d5e44afdce088a6fdef750482a5bb7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_19t0hfvfno = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_19t0hfvfno();
import { ApiError } from '../utils/errors';
import { z } from 'zod';
// Validation schemas
const createUTMSchema =
/* istanbul ignore next */
(cov_19t0hfvfno().s[0]++, z.object({
  originalUrl: z.string().url('URL inválida'),
  utmSource: z.string().optional(),
  utmMedium: z.string().optional(),
  utmCampaign: z.string().optional(),
  utmTerm: z.string().optional(),
  utmContent: z.string().optional(),
  customParams: z.record(z.string()).optional(),
  title: z.string().optional(),
  description: z.string().optional(),
  tags: z.array(z.string()).optional(),
  expiresAt: z.string().datetime().optional(),
  isPublic: z.boolean().optional()
}));
const bulkCreateUTMSchema =
/* istanbul ignore next */
(cov_19t0hfvfno().s[1]++, z.object({
  links: z.array(createUTMSchema).min(1).max(100)
}));
const shortenUrlSchema =
/* istanbul ignore next */
(cov_19t0hfvfno().s[2]++, z.object({
  url: z.string().url('URL inválida'),
  customCode: z.string().optional()
}));
const listUTMSchema =
/* istanbul ignore next */
(cov_19t0hfvfno().s[3]++, z.object({
  page: z.number().min(1).default(1),
  limit: z.number().min(1).max(100).default(20),
  search: z.string().optional(),
  status: z.enum(['ACTIVE', 'PAUSED', 'ARCHIVED']).optional(),
  utmSource: z.string().optional(),
  utmMedium: z.string().optional(),
  utmCampaign: z.string().optional(),
  sortBy: z.enum(['createdAt', 'clickCount', 'conversionCount', 'title']).default('createdAt'),
  sortOrder: z.enum(['asc', 'desc']).default('desc')
}));
export class UTMController {
  utmService;
  constructor(utmService) {
    /* istanbul ignore next */
    cov_19t0hfvfno().f[0]++;
    cov_19t0hfvfno().s[4]++;
    this.utmService = utmService;
  }
  /**
   * POST /api/utm/create - Criar novo link UTM
   */
  async createUTM(request, reply) {
    /* istanbul ignore next */
    cov_19t0hfvfno().f[1]++;
    cov_19t0hfvfno().s[5]++;
    try {
      const organizationId =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[6]++, request.organization?.id);
      const userId =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[7]++, request.user?.id);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[8]++;
      if (
      /* istanbul ignore next */
      (cov_19t0hfvfno().b[1][0]++, !organizationId) ||
      /* istanbul ignore next */
      (cov_19t0hfvfno().b[1][1]++, !userId)) {
        /* istanbul ignore next */
        cov_19t0hfvfno().b[0][0]++;
        cov_19t0hfvfno().s[9]++;
        throw new ApiError('Authentication required', 'AUTH_REQUIRED', 401);
      } else
      /* istanbul ignore next */
      {
        cov_19t0hfvfno().b[0][1]++;
      }
      const validatedData =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[10]++, createUTMSchema.parse(request.body));
      const utmLink =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[11]++, await this.utmService.createUTMLink({
        ...validatedData,
        organizationId,
        userId
      }));
      /* istanbul ignore next */
      cov_19t0hfvfno().s[12]++;
      return reply.status(201).send({
        success: true,
        data: utmLink
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_19t0hfvfno().s[13]++;
      if (error instanceof z.ZodError) {
        /* istanbul ignore next */
        cov_19t0hfvfno().b[2][0]++;
        cov_19t0hfvfno().s[14]++;
        return reply.status(400).send({
          success: false,
          error: 'Dados inválidos',
          details: error.errors
        });
      } else
      /* istanbul ignore next */
      {
        cov_19t0hfvfno().b[2][1]++;
      }
      cov_19t0hfvfno().s[15]++;
      request.log.error(error);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[16]++;
      return reply.status(500).send({
        success: false,
        error: 'Erro interno do servidor'
      });
    }
  }
  /**
   * GET /api/utm/list - Listar links UTM
   */
  async listUTM(request, reply) {
    /* istanbul ignore next */
    cov_19t0hfvfno().f[2]++;
    cov_19t0hfvfno().s[17]++;
    try {
      const organizationId =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[18]++, request.organization?.id);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[19]++;
      if (!organizationId) {
        /* istanbul ignore next */
        cov_19t0hfvfno().b[3][0]++;
        cov_19t0hfvfno().s[20]++;
        throw new ApiError('Authentication required', 'AUTH_REQUIRED', 401);
      } else
      /* istanbul ignore next */
      {
        cov_19t0hfvfno().b[3][1]++;
      }
      const query =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[21]++, listUTMSchema.parse(request.query));
      const result =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[22]++, await this.utmService.listUTMLinks(organizationId, query));
      /* istanbul ignore next */
      cov_19t0hfvfno().s[23]++;
      return reply.send({
        success: true,
        data: result.links,
        pagination: {
          page: query.page,
          limit: query.limit,
          total: result.total,
          totalPages: Math.ceil(result.total / query.limit)
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_19t0hfvfno().s[24]++;
      if (error instanceof z.ZodError) {
        /* istanbul ignore next */
        cov_19t0hfvfno().b[4][0]++;
        cov_19t0hfvfno().s[25]++;
        return reply.status(400).send({
          success: false,
          error: 'Parâmetros inválidos',
          details: error.errors
        });
      } else
      /* istanbul ignore next */
      {
        cov_19t0hfvfno().b[4][1]++;
      }
      cov_19t0hfvfno().s[26]++;
      request.log.error(error);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[27]++;
      return reply.status(500).send({
        success: false,
        error: 'Erro interno do servidor'
      });
    }
  }
  /**
   * GET /api/utm/:id/stats - Obter estatísticas de um link UTM
   */
  async getUTMStats(request, reply) {
    /* istanbul ignore next */
    cov_19t0hfvfno().f[3]++;
    cov_19t0hfvfno().s[28]++;
    try {
      const organizationId =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[29]++, request.organization?.id);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[30]++;
      if (!organizationId) {
        /* istanbul ignore next */
        cov_19t0hfvfno().b[5][0]++;
        cov_19t0hfvfno().s[31]++;
        throw new ApiError('Authentication required', 'AUTH_REQUIRED', 401);
      } else
      /* istanbul ignore next */
      {
        cov_19t0hfvfno().b[5][1]++;
      }
      const {
        id
      } =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[32]++, request.params);
      const {
        period =
        /* istanbul ignore next */
        (cov_19t0hfvfno().b[6][0]++, '30d'),
        groupBy =
        /* istanbul ignore next */
        (cov_19t0hfvfno().b[7][0]++, 'day')
      } =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[33]++, request.query);
      const stats =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[34]++, await this.utmService.getUTMStats(organizationId, id, {
        period,
        groupBy
      }));
      /* istanbul ignore next */
      cov_19t0hfvfno().s[35]++;
      if (!stats) {
        /* istanbul ignore next */
        cov_19t0hfvfno().b[8][0]++;
        cov_19t0hfvfno().s[36]++;
        return reply.status(404).send({
          success: false,
          error: 'Link UTM não encontrado'
        });
      } else
      /* istanbul ignore next */
      {
        cov_19t0hfvfno().b[8][1]++;
      }
      cov_19t0hfvfno().s[37]++;
      return reply.send({
        success: true,
        data: stats
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_19t0hfvfno().s[38]++;
      request.log.error(error);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[39]++;
      return reply.status(500).send({
        success: false,
        error: 'Erro interno do servidor'
      });
    }
  }
  /**
   * POST /api/utm/shorten - Encurtar URL
   */
  async shortenUrl(request, reply) {
    /* istanbul ignore next */
    cov_19t0hfvfno().f[4]++;
    cov_19t0hfvfno().s[40]++;
    try {
      const organizationId =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[41]++, request.organization?.id);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[42]++;
      if (!organizationId) {
        /* istanbul ignore next */
        cov_19t0hfvfno().b[9][0]++;
        cov_19t0hfvfno().s[43]++;
        throw new ApiError('Authentication required', 'AUTH_REQUIRED', 401);
      } else
      /* istanbul ignore next */
      {
        cov_19t0hfvfno().b[9][1]++;
      }
      const validatedData =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[44]++, shortenUrlSchema.parse(request.body));
      const shortLink =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[45]++, await this.utmService.shortenUrl({
        ...validatedData,
        organizationId
      }));
      /* istanbul ignore next */
      cov_19t0hfvfno().s[46]++;
      return reply.status(201).send({
        success: true,
        data: shortLink
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_19t0hfvfno().s[47]++;
      if (error instanceof z.ZodError) {
        /* istanbul ignore next */
        cov_19t0hfvfno().b[10][0]++;
        cov_19t0hfvfno().s[48]++;
        return reply.status(400).send({
          success: false,
          error: 'Dados inválidos',
          details: error.errors
        });
      } else
      /* istanbul ignore next */
      {
        cov_19t0hfvfno().b[10][1]++;
      }
      cov_19t0hfvfno().s[49]++;
      if (error.message === 'CUSTOM_CODE_EXISTS') {
        /* istanbul ignore next */
        cov_19t0hfvfno().b[11][0]++;
        cov_19t0hfvfno().s[50]++;
        return reply.status(409).send({
          success: false,
          error: 'Código personalizado já existe'
        });
      } else
      /* istanbul ignore next */
      {
        cov_19t0hfvfno().b[11][1]++;
      }
      cov_19t0hfvfno().s[51]++;
      request.log.error(error);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[52]++;
      return reply.status(500).send({
        success: false,
        error: 'Erro interno do servidor'
      });
    }
  }
  /**
   * GET /api/r/:code - Redirecionar e rastrear clique
   */
  async redirectAndTrack(request, reply) {
    /* istanbul ignore next */
    cov_19t0hfvfno().f[5]++;
    cov_19t0hfvfno().s[53]++;
    try {
      const {
        code
      } =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[54]++, request.params);
      const userAgent =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[55]++, request.headers['user-agent']);
      const referer =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[56]++, request.headers.referer);
      const ipAddress =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[57]++, request.ip);
      const result =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[58]++, await this.utmService.trackClickAndRedirect(code, {
        userAgent,
        referer,
        ipAddress
      }));
      /* istanbul ignore next */
      cov_19t0hfvfno().s[59]++;
      if (!result) {
        /* istanbul ignore next */
        cov_19t0hfvfno().b[12][0]++;
        cov_19t0hfvfno().s[60]++;
        return reply.status(404).send({
          success: false,
          error: 'Link não encontrado'
        });
      } else
      /* istanbul ignore next */
      {
        cov_19t0hfvfno().b[12][1]++;
      }
      // Redirect to original URL
      cov_19t0hfvfno().s[61]++;
      return reply.redirect(302, result.originalUrl);
    } catch (error) {
      /* istanbul ignore next */
      cov_19t0hfvfno().s[62]++;
      request.log.error(error);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[63]++;
      return reply.status(500).send({
        success: false,
        error: 'Erro interno do servidor'
      });
    }
  }
  /**
   * POST /api/utm/bulk - Criação em massa de links UTM
   */
  async bulkCreateUTM(request, reply) {
    /* istanbul ignore next */
    cov_19t0hfvfno().f[6]++;
    cov_19t0hfvfno().s[64]++;
    try {
      const organizationId =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[65]++, request.organization?.id);
      const userId =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[66]++, request.user?.id);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[67]++;
      if (
      /* istanbul ignore next */
      (cov_19t0hfvfno().b[14][0]++, !organizationId) ||
      /* istanbul ignore next */
      (cov_19t0hfvfno().b[14][1]++, !userId)) {
        /* istanbul ignore next */
        cov_19t0hfvfno().b[13][0]++;
        cov_19t0hfvfno().s[68]++;
        throw new ApiError('Authentication required', 'AUTH_REQUIRED', 401);
      } else
      /* istanbul ignore next */
      {
        cov_19t0hfvfno().b[13][1]++;
      }
      const validatedData =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[69]++, bulkCreateUTMSchema.parse(request.body));
      const results =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[70]++, await this.utmService.bulkCreateUTMLinks({
        links: validatedData.links,
        organizationId,
        userId
      }));
      /* istanbul ignore next */
      cov_19t0hfvfno().s[71]++;
      return reply.status(201).send({
        success: true,
        data: {
          created: results.created,
          failed: results.failed,
          total: validatedData.links.length
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_19t0hfvfno().s[72]++;
      if (error instanceof z.ZodError) {
        /* istanbul ignore next */
        cov_19t0hfvfno().b[15][0]++;
        cov_19t0hfvfno().s[73]++;
        return reply.status(400).send({
          success: false,
          error: 'Dados inválidos',
          details: error.errors
        });
      } else
      /* istanbul ignore next */
      {
        cov_19t0hfvfno().b[15][1]++;
      }
      cov_19t0hfvfno().s[74]++;
      request.log.error(error);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[75]++;
      return reply.status(500).send({
        success: false,
        error: 'Erro interno do servidor'
      });
    }
  }
  /**
   * PUT /api/utm/:id - Atualizar link UTM
   */
  async updateUTM(request, reply) {
    /* istanbul ignore next */
    cov_19t0hfvfno().f[7]++;
    cov_19t0hfvfno().s[76]++;
    try {
      const organizationId =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[77]++, request.organization?.id);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[78]++;
      if (!organizationId) {
        /* istanbul ignore next */
        cov_19t0hfvfno().b[16][0]++;
        cov_19t0hfvfno().s[79]++;
        throw new ApiError('Authentication required', 'AUTH_REQUIRED', 401);
      } else
      /* istanbul ignore next */
      {
        cov_19t0hfvfno().b[16][1]++;
      }
      const {
        id
      } =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[80]++, request.params);
      const updatedLink =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[81]++, await this.utmService.updateUTMLink(organizationId, id, request.body));
      /* istanbul ignore next */
      cov_19t0hfvfno().s[82]++;
      if (!updatedLink) {
        /* istanbul ignore next */
        cov_19t0hfvfno().b[17][0]++;
        cov_19t0hfvfno().s[83]++;
        return reply.status(404).send({
          success: false,
          error: 'Link UTM não encontrado'
        });
      } else
      /* istanbul ignore next */
      {
        cov_19t0hfvfno().b[17][1]++;
      }
      cov_19t0hfvfno().s[84]++;
      return reply.send({
        success: true,
        data: updatedLink
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_19t0hfvfno().s[85]++;
      request.log.error(error);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[86]++;
      return reply.status(500).send({
        success: false,
        error: 'Erro interno do servidor'
      });
    }
  }
  /**
   * DELETE /api/utm/:id - Deletar link UTM
   */
  async deleteUTM(request, reply) {
    /* istanbul ignore next */
    cov_19t0hfvfno().f[8]++;
    cov_19t0hfvfno().s[87]++;
    try {
      const organizationId =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[88]++, request.organization?.id);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[89]++;
      if (!organizationId) {
        /* istanbul ignore next */
        cov_19t0hfvfno().b[18][0]++;
        cov_19t0hfvfno().s[90]++;
        throw new ApiError('Authentication required', 'AUTH_REQUIRED', 401);
      } else
      /* istanbul ignore next */
      {
        cov_19t0hfvfno().b[18][1]++;
      }
      const {
        id
      } =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[91]++, request.params);
      const deleted =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[92]++, await this.utmService.deleteUTMLink(organizationId, id));
      /* istanbul ignore next */
      cov_19t0hfvfno().s[93]++;
      if (!deleted) {
        /* istanbul ignore next */
        cov_19t0hfvfno().b[19][0]++;
        cov_19t0hfvfno().s[94]++;
        return reply.status(404).send({
          success: false,
          error: 'Link UTM não encontrado'
        });
      } else
      /* istanbul ignore next */
      {
        cov_19t0hfvfno().b[19][1]++;
      }
      cov_19t0hfvfno().s[95]++;
      return reply.status(204).send();
    } catch (error) {
      /* istanbul ignore next */
      cov_19t0hfvfno().s[96]++;
      request.log.error(error);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[97]++;
      return reply.status(500).send({
        success: false,
        error: 'Erro interno do servidor'
      });
    }
  }
  /**
   * POST /api/utm/conversion - Registrar conversão
   */
  async trackConversion(request, reply) {
    /* istanbul ignore next */
    cov_19t0hfvfno().f[9]++;
    cov_19t0hfvfno().s[98]++;
    try {
      const organizationId =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[99]++, request.organization?.id);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[100]++;
      if (!organizationId) {
        /* istanbul ignore next */
        cov_19t0hfvfno().b[20][0]++;
        cov_19t0hfvfno().s[101]++;
        throw new ApiError('Authentication required', 'AUTH_REQUIRED', 401);
      } else
      /* istanbul ignore next */
      {
        cov_19t0hfvfno().b[20][1]++;
      }
      const conversionData =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[102]++, request.body);
      const conversion =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[103]++, await this.utmService.trackConversion({
        ...conversionData,
        organizationId
      }));
      /* istanbul ignore next */
      cov_19t0hfvfno().s[104]++;
      return reply.status(201).send({
        success: true,
        data: conversion
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_19t0hfvfno().s[105]++;
      request.log.error(error);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[106]++;
      return reply.status(500).send({
        success: false,
        error: 'Erro interno do servidor'
      });
    }
  }
  /**
   * GET /api/utm/export - Exportar dados UTM
   */
  async exportData(request, reply) {
    /* istanbul ignore next */
    cov_19t0hfvfno().f[10]++;
    cov_19t0hfvfno().s[107]++;
    try {
      const organizationId =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[108]++, request.organization?.id);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[109]++;
      if (!organizationId) {
        /* istanbul ignore next */
        cov_19t0hfvfno().b[21][0]++;
        cov_19t0hfvfno().s[110]++;
        throw new ApiError('Authentication required', 'AUTH_REQUIRED', 401);
      } else
      /* istanbul ignore next */
      {
        cov_19t0hfvfno().b[21][1]++;
      }
      const query =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[111]++, request.query);
      const exportOptions =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[112]++, {
        format:
        /* istanbul ignore next */
        (cov_19t0hfvfno().b[22][0]++, query.format) ||
        /* istanbul ignore next */
        (cov_19t0hfvfno().b[22][1]++, 'csv'),
        dateRange:
        /* istanbul ignore next */
        (cov_19t0hfvfno().b[23][0]++, query.dateRange) ||
        /* istanbul ignore next */
        (cov_19t0hfvfno().b[23][1]++, 'last30days'),
        startDate: query.startDate,
        endDate: query.endDate,
        includeClicks: query.includeClicks !== 'false',
        includeConversions: query.includeConversions !== 'false',
        includeMetrics: query.includeMetrics !== 'false',
        utmSource: query.utmSource,
        utmMedium: query.utmMedium,
        utmCampaign: query.utmCampaign,
        organizationId
      });
      const {
        data,
        filename,
        mimeType
      } =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[113]++, await this.utmService.exportData(exportOptions));
      /* istanbul ignore next */
      cov_19t0hfvfno().s[114]++;
      reply.header('Content-Type', mimeType);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[115]++;
      reply.header('Content-Disposition', `attachment; filename="${filename}"`);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[116]++;
      return reply.send(data);
    } catch (error) {
      /* istanbul ignore next */
      cov_19t0hfvfno().s[117]++;
      request.log.error(error);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[118]++;
      return reply.status(500).send({
        success: false,
        error: 'Erro interno do servidor'
      });
    }
  }
  // Notification methods
  async getNotifications(request, reply) {
    /* istanbul ignore next */
    cov_19t0hfvfno().f[11]++;
    cov_19t0hfvfno().s[119]++;
    try {
      const organizationId =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[120]++, request.organization?.id);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[121]++;
      if (!organizationId) {
        /* istanbul ignore next */
        cov_19t0hfvfno().b[24][0]++;
        cov_19t0hfvfno().s[122]++;
        throw new ApiError('Authentication required', 'AUTH_REQUIRED', 401);
      } else
      /* istanbul ignore next */
      {
        cov_19t0hfvfno().b[24][1]++;
      }
      const {
        page =
        /* istanbul ignore next */
        (cov_19t0hfvfno().b[25][0]++, 1),
        limit =
        /* istanbul ignore next */
        (cov_19t0hfvfno().b[26][0]++, 20),
        unread_only =
        /* istanbul ignore next */
        (cov_19t0hfvfno().b[27][0]++, false)
      } =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[123]++, request.query);
      const result =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[124]++, await this.utmService.getNotifications(organizationId, {
        page: parseInt(page),
        limit: parseInt(limit),
        unreadOnly: unread_only
      }));
      /* istanbul ignore next */
      cov_19t0hfvfno().s[125]++;
      return reply.send({
        success: true,
        data: result
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_19t0hfvfno().s[126]++;
      request.log.error(error);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[127]++;
      return reply.status(500).send({
        success: false,
        error: 'Erro interno do servidor'
      });
    }
  }
  async createNotificationRule(request, reply) {
    /* istanbul ignore next */
    cov_19t0hfvfno().f[12]++;
    cov_19t0hfvfno().s[128]++;
    try {
      const organizationId =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[129]++, request.organization?.id);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[130]++;
      if (!organizationId) {
        /* istanbul ignore next */
        cov_19t0hfvfno().b[28][0]++;
        cov_19t0hfvfno().s[131]++;
        throw new ApiError('Authentication required', 'AUTH_REQUIRED', 401);
      } else
      /* istanbul ignore next */
      {
        cov_19t0hfvfno().b[28][1]++;
      }
      const ruleData =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[132]++, request.body);
      const ruleId =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[133]++, await this.utmService.createNotificationRule(organizationId, ruleData));
      /* istanbul ignore next */
      cov_19t0hfvfno().s[134]++;
      return reply.status(201).send({
        success: true,
        data: {
          id: ruleId,
          message: 'Regra de notificação criada com sucesso'
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_19t0hfvfno().s[135]++;
      request.log.error(error);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[136]++;
      return reply.status(500).send({
        success: false,
        error: 'Erro interno do servidor'
      });
    }
  }
  async getNotificationRules(request, reply) {
    /* istanbul ignore next */
    cov_19t0hfvfno().f[13]++;
    cov_19t0hfvfno().s[137]++;
    try {
      const organizationId =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[138]++, request.organization?.id);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[139]++;
      if (!organizationId) {
        /* istanbul ignore next */
        cov_19t0hfvfno().b[29][0]++;
        cov_19t0hfvfno().s[140]++;
        throw new ApiError('Authentication required', 'AUTH_REQUIRED', 401);
      } else
      /* istanbul ignore next */
      {
        cov_19t0hfvfno().b[29][1]++;
      }
      const rules =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[141]++, await this.utmService.getNotificationRules(organizationId));
      /* istanbul ignore next */
      cov_19t0hfvfno().s[142]++;
      return reply.send({
        success: true,
        data: rules
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_19t0hfvfno().s[143]++;
      request.log.error(error);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[144]++;
      return reply.status(500).send({
        success: false,
        error: 'Erro interno do servidor'
      });
    }
  }
  async updateNotificationRule(request, reply) {
    /* istanbul ignore next */
    cov_19t0hfvfno().f[14]++;
    cov_19t0hfvfno().s[145]++;
    try {
      const organizationId =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[146]++, request.organization?.id);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[147]++;
      if (!organizationId) {
        /* istanbul ignore next */
        cov_19t0hfvfno().b[30][0]++;
        cov_19t0hfvfno().s[148]++;
        throw new ApiError('Authentication required', 'AUTH_REQUIRED', 401);
      } else
      /* istanbul ignore next */
      {
        cov_19t0hfvfno().b[30][1]++;
      }
      const {
        id
      } =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[149]++, request.params);
      const updateData =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[150]++, request.body);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[151]++;
      await this.utmService.updateNotificationRule(organizationId, id, updateData);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[152]++;
      return reply.send({
        success: true,
        message: 'Regra de notificação atualizada com sucesso'
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_19t0hfvfno().s[153]++;
      request.log.error(error);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[154]++;
      return reply.status(500).send({
        success: false,
        error: 'Erro interno do servidor'
      });
    }
  }
  async deleteNotificationRule(request, reply) {
    /* istanbul ignore next */
    cov_19t0hfvfno().f[15]++;
    cov_19t0hfvfno().s[155]++;
    try {
      const organizationId =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[156]++, request.organization?.id);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[157]++;
      if (!organizationId) {
        /* istanbul ignore next */
        cov_19t0hfvfno().b[31][0]++;
        cov_19t0hfvfno().s[158]++;
        throw new ApiError('Authentication required', 'AUTH_REQUIRED', 401);
      } else
      /* istanbul ignore next */
      {
        cov_19t0hfvfno().b[31][1]++;
      }
      const {
        id
      } =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[159]++, request.params);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[160]++;
      await this.utmService.deleteNotificationRule(organizationId, id);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[161]++;
      return reply.send({
        success: true,
        message: 'Regra de notificação deletada com sucesso'
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_19t0hfvfno().s[162]++;
      request.log.error(error);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[163]++;
      return reply.status(500).send({
        success: false,
        error: 'Erro interno do servidor'
      });
    }
  }
  async markNotificationAsRead(request, reply) {
    /* istanbul ignore next */
    cov_19t0hfvfno().f[16]++;
    cov_19t0hfvfno().s[164]++;
    try {
      const organizationId =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[165]++, request.organization?.id);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[166]++;
      if (!organizationId) {
        /* istanbul ignore next */
        cov_19t0hfvfno().b[32][0]++;
        cov_19t0hfvfno().s[167]++;
        throw new ApiError('Authentication required', 'AUTH_REQUIRED', 401);
      } else
      /* istanbul ignore next */
      {
        cov_19t0hfvfno().b[32][1]++;
      }
      const {
        id
      } =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[168]++, request.params);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[169]++;
      await this.utmService.markNotificationAsRead(organizationId, id);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[170]++;
      return reply.send({
        success: true,
        message: 'Notificação marcada como lida'
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_19t0hfvfno().s[171]++;
      request.log.error(error);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[172]++;
      return reply.status(500).send({
        success: false,
        error: 'Erro interno do servidor'
      });
    }
  }
  // Integration management methods
  async getIntegrations(request, reply) {
    /* istanbul ignore next */
    cov_19t0hfvfno().f[17]++;
    cov_19t0hfvfno().s[173]++;
    try {
      const {
        organizationId
      } =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[174]++, request.query);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[175]++;
      if (!organizationId) {
        /* istanbul ignore next */
        cov_19t0hfvfno().b[33][0]++;
        cov_19t0hfvfno().s[176]++;
        return reply.status(400).send({
          success: false,
          error: 'Organization ID is required'
        });
      } else
      /* istanbul ignore next */
      {
        cov_19t0hfvfno().b[33][1]++;
      }
      const integrations =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[177]++, await this.utmService.getIntegrations(organizationId));
      /* istanbul ignore next */
      cov_19t0hfvfno().s[178]++;
      reply.send({
        success: true,
        data: integrations
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_19t0hfvfno().s[179]++;
      reply.status(500).send({
        success: false,
        error: 'Failed to fetch integrations'
      });
    }
  }
  async createIntegration(request, reply) {
    /* istanbul ignore next */
    cov_19t0hfvfno().f[18]++;
    cov_19t0hfvfno().s[180]++;
    try {
      const {
        organizationId,
        type,
        name,
        config,
        events,
        enabled
      } =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[181]++, request.body);
      const userId =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[182]++, request.user?.id);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[183]++;
      if (
      /* istanbul ignore next */
      (cov_19t0hfvfno().b[35][0]++, !organizationId) ||
      /* istanbul ignore next */
      (cov_19t0hfvfno().b[35][1]++, !type) ||
      /* istanbul ignore next */
      (cov_19t0hfvfno().b[35][2]++, !name) ||
      /* istanbul ignore next */
      (cov_19t0hfvfno().b[35][3]++, !config)) {
        /* istanbul ignore next */
        cov_19t0hfvfno().b[34][0]++;
        cov_19t0hfvfno().s[184]++;
        return reply.status(400).send({
          success: false,
          error: 'Missing required fields'
        });
      } else
      /* istanbul ignore next */
      {
        cov_19t0hfvfno().b[34][1]++;
      }
      cov_19t0hfvfno().s[185]++;
      if (!userId) {
        /* istanbul ignore next */
        cov_19t0hfvfno().b[36][0]++;
        cov_19t0hfvfno().s[186]++;
        return reply.status(401).send({
          success: false,
          error: 'User authentication required'
        });
      } else
      /* istanbul ignore next */
      {
        cov_19t0hfvfno().b[36][1]++;
      }
      const integration =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[187]++, await this.utmService.createIntegration({
        organizationId,
        userId,
        type,
        name,
        config,
        events:
        /* istanbul ignore next */
        (cov_19t0hfvfno().b[37][0]++, events) ||
        /* istanbul ignore next */
        (cov_19t0hfvfno().b[37][1]++, []),
        enabled:
        /* istanbul ignore next */
        (cov_19t0hfvfno().b[38][0]++, enabled) ??
        /* istanbul ignore next */
        (cov_19t0hfvfno().b[38][1]++, true)
      }));
      /* istanbul ignore next */
      cov_19t0hfvfno().s[188]++;
      reply.send({
        success: true,
        data: {
          id: integration.id,
          message: 'Integration created successfully'
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_19t0hfvfno().s[189]++;
      reply.status(500).send({
        success: false,
        error: 'Failed to create integration'
      });
    }
  }
  async updateIntegration(request, reply) {
    /* istanbul ignore next */
    cov_19t0hfvfno().f[19]++;
    cov_19t0hfvfno().s[190]++;
    try {
      const {
        id
      } =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[191]++, request.params);
      const {
        organizationId,
        accountName,
        config,
        isActive
      } =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[192]++, request.body);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[193]++;
      if (!organizationId) {
        /* istanbul ignore next */
        cov_19t0hfvfno().b[39][0]++;
        cov_19t0hfvfno().s[194]++;
        return reply.status(400).send({
          success: false,
          error: 'Organization ID is required'
        });
      } else
      /* istanbul ignore next */
      {
        cov_19t0hfvfno().b[39][1]++;
      }
      const integration =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[195]++, await this.utmService.updateIntegration(id, {
        organizationId,
        accountName,
        config,
        isActive
      }));
      /* istanbul ignore next */
      cov_19t0hfvfno().s[196]++;
      reply.send({
        success: true,
        data: integration
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_19t0hfvfno().s[197]++;
      reply.status(500).send({
        success: false,
        error: 'Failed to update integration'
      });
    }
  }
  async deleteIntegration(request, reply) {
    /* istanbul ignore next */
    cov_19t0hfvfno().f[20]++;
    cov_19t0hfvfno().s[198]++;
    try {
      const {
        id
      } =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[199]++, request.params);
      const {
        organizationId
      } =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[200]++, request.query);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[201]++;
      if (!organizationId) {
        /* istanbul ignore next */
        cov_19t0hfvfno().b[40][0]++;
        cov_19t0hfvfno().s[202]++;
        return reply.status(400).send({
          success: false,
          error: 'Organization ID is required'
        });
      } else
      /* istanbul ignore next */
      {
        cov_19t0hfvfno().b[40][1]++;
      }
      cov_19t0hfvfno().s[203]++;
      await this.utmService.deleteIntegration(id, organizationId);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[204]++;
      reply.send({
        success: true,
        data: {
          message: 'Integration deleted successfully'
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_19t0hfvfno().s[205]++;
      reply.status(500).send({
        success: false,
        error: 'Failed to delete integration'
      });
    }
  }
  async testIntegration(request, reply) {
    /* istanbul ignore next */
    cov_19t0hfvfno().f[21]++;
    cov_19t0hfvfno().s[206]++;
    try {
      const {
        id
      } =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[207]++, request.params);
      const {
        organizationId
      } =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[208]++, request.body);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[209]++;
      if (!organizationId) {
        /* istanbul ignore next */
        cov_19t0hfvfno().b[41][0]++;
        cov_19t0hfvfno().s[210]++;
        return reply.status(400).send({
          success: false,
          error: 'Organization ID is required'
        });
      } else
      /* istanbul ignore next */
      {
        cov_19t0hfvfno().b[41][1]++;
      }
      const result =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[211]++, await this.utmService.testIntegration(id, organizationId));
      /* istanbul ignore next */
      cov_19t0hfvfno().s[212]++;
      reply.send({
        success: true,
        data: result
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_19t0hfvfno().s[213]++;
      reply.status(500).send({
        success: false,
        error: 'Failed to test integration'
      });
    }
  }
  async sendEventToIntegrations(request, reply) {
    /* istanbul ignore next */
    cov_19t0hfvfno().f[22]++;
    cov_19t0hfvfno().s[214]++;
    try {
      const {
        organizationId,
        eventType,
        eventData,
        utmLinkId
      } =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[215]++, request.body);
      /* istanbul ignore next */
      cov_19t0hfvfno().s[216]++;
      if (
      /* istanbul ignore next */
      (cov_19t0hfvfno().b[43][0]++, !organizationId) ||
      /* istanbul ignore next */
      (cov_19t0hfvfno().b[43][1]++, !eventType) ||
      /* istanbul ignore next */
      (cov_19t0hfvfno().b[43][2]++, !eventData)) {
        /* istanbul ignore next */
        cov_19t0hfvfno().b[42][0]++;
        cov_19t0hfvfno().s[217]++;
        return reply.status(400).send({
          success: false,
          error: 'Missing required fields'
        });
      } else
      /* istanbul ignore next */
      {
        cov_19t0hfvfno().b[42][1]++;
      }
      const results =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[218]++, await this.utmService.sendEventToIntegrations({
        organizationId,
        eventType,
        eventData,
        utmLinkId
      }));
      /* istanbul ignore next */
      cov_19t0hfvfno().s[219]++;
      reply.send({
        success: true,
        data: results
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_19t0hfvfno().s[220]++;
      reply.status(500).send({
        success: false,
        error: 'Failed to send event to integrations'
      });
    }
  }
  async generateSessionId(request, reply) {
    /* istanbul ignore next */
    cov_19t0hfvfno().f[23]++;
    cov_19t0hfvfno().s[221]++;
    try {
      const sessionId =
      /* istanbul ignore next */
      (cov_19t0hfvfno().s[222]++, crypto.randomUUID());
      /* istanbul ignore next */
      cov_19t0hfvfno().s[223]++;
      reply.send({
        success: true,
        data: {
          sessionId
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_19t0hfvfno().s[224]++;
      reply.status(500).send({
        success: false,
        error: 'Failed to generate session ID'
      });
    }
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,