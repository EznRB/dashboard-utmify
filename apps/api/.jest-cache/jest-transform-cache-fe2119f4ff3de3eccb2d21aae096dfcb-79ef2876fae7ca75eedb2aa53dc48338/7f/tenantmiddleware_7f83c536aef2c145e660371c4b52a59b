b60d0daf89f2b9e944b8da76a7b7f24c
/* istanbul ignore next */
function cov_1kcq82k1ge() {
  var path = "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\middleware\\tenant.middleware.ts";
  var hash = "41395d82572d6ffe42b9f74b5cb60086e501f37c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\middleware\\tenant.middleware.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 32
        },
        end: {
          line: 81,
          column: 1
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 80,
          column: 5
        }
      },
      "2": {
        start: {
          line: 7,
          column: 25
        },
        end: {
          line: 7,
          column: 29
        }
      },
      "3": {
        start: {
          line: 9,
          column: 21
        },
        end: {
          line: 9,
          column: 47
        }
      },
      "4": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 48
        }
      },
      "5": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 14,
          column: 9
        }
      },
      "6": {
        start: {
          line: 12,
          column: 12
        },
        end: {
          line: 12,
          column: 35
        }
      },
      "7": {
        start: {
          line: 13,
          column: 12
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "8": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 21,
          column: 9
        }
      },
      "9": {
        start: {
          line: 17,
          column: 12
        },
        end: {
          line: 17,
          column: 66
        }
      },
      "10": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 20,
          column: 13
        }
      },
      "11": {
        start: {
          line: 19,
          column: 16
        },
        end: {
          line: 19,
          column: 73
        }
      },
      "12": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 28,
          column: 9
        }
      },
      "13": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 24,
          column: 55
        }
      },
      "14": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 27,
          column: 13
        }
      },
      "15": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 78
        }
      },
      "16": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 33,
          column: 9
        }
      },
      "17": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 32
        }
      },
      "18": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 76
        }
      },
      "19": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 39,
          column: 9
        }
      },
      "20": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 38,
          column: 15
        }
      },
      "21": {
        start: {
          line: 41,
          column: 29
        },
        end: {
          line: 53,
          column: 10
        }
      },
      "22": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "23": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 80
        }
      },
      "24": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 59,
          column: 15
        }
      },
      "25": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 69,
          column: 10
        }
      },
      "26": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 72
        }
      },
      "27": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 88
        }
      },
      "28": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 78
        }
      },
      "29": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 79,
          column: 11
        }
      },
      "30": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 88,
          column: 20
        }
      },
      "31": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 88,
          column: 20
        }
      },
      "32": {
        start: {
          line: 90,
          column: 28
        },
        end: {
          line: 90,
          column: 46
        }
      },
      "33": {
        start: {
          line: 91,
          column: 18
        },
        end: {
          line: 91,
          column: 44
        }
      },
      "34": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 95,
          column: 5
        }
      },
      "35": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 20
        }
      },
      "36": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 99,
          column: 5
        }
      },
      "37": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 98,
          column: 24
        }
      },
      "38": {
        start: {
          line: 100,
          column: 4
        },
        end: {
          line: 100,
          column: 16
        }
      },
      "39": {
        start: {
          line: 106,
          column: 4
        },
        end: {
          line: 116,
          column: 5
        }
      },
      "40": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 78
        }
      },
      "41": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 77
        }
      },
      "42": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 111,
          column: 54
        }
      },
      "43": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 114,
          column: 78
        }
      },
      "44": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 20
        }
      },
      "45": {
        start: {
          line: 122,
          column: 4
        },
        end: {
          line: 122,
          column: 43
        }
      },
      "46": {
        start: {
          line: 128,
          column: 4
        },
        end: {
          line: 128,
          column: 41
        }
      },
      "47": {
        start: {
          line: 134,
          column: 4
        },
        end: {
          line: 134,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 32
          },
          end: {
            line: 5,
            column: 33
          }
        },
        loc: {
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 81,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "extractSubdomain",
        decl: {
          start: {
            line: 86,
            column: 9
          },
          end: {
            line: 86,
            column: 25
          }
        },
        loc: {
          start: {
            line: 86,
            column: 32
          },
          end: {
            line: 101,
            column: 1
          }
        },
        line: 86
      },
      "2": {
        name: "setTenantSchema",
        decl: {
          start: {
            line: 105,
            column: 15
          },
          end: {
            line: 105,
            column: 30
          }
        },
        loc: {
          start: {
            line: 105,
            column: 43
          },
          end: {
            line: 117,
            column: 1
          }
        },
        line: 105
      },
      "3": {
        name: "validateTenantAccess",
        decl: {
          start: {
            line: 121,
            column: 16
          },
          end: {
            line: 121,
            column: 36
          }
        },
        loc: {
          start: {
            line: 121,
            column: 67
          },
          end: {
            line: 123,
            column: 1
          }
        },
        line: 121
      },
      "4": {
        name: "generateCacheKey",
        decl: {
          start: {
            line: 127,
            column: 16
          },
          end: {
            line: 127,
            column: 32
          }
        },
        loc: {
          start: {
            line: 127,
            column: 50
          },
          end: {
            line: 129,
            column: 1
          }
        },
        line: 127
      },
      "5": {
        name: "generateQueueName",
        decl: {
          start: {
            line: 133,
            column: 16
          },
          end: {
            line: 133,
            column: 33
          }
        },
        loc: {
          start: {
            line: 133,
            column: 57
          },
          end: {
            line: 135,
            column: 1
          }
        },
        line: 133
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 21
          },
          end: {
            line: 9,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 21
          },
          end: {
            line: 9,
            column: 41
          }
        }, {
          start: {
            line: 9,
            column: 45
          },
          end: {
            line: 9,
            column: 47
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 11,
            column: 8
          },
          end: {
            line: 14,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 11,
            column: 8
          },
          end: {
            line: 14,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 11
      },
      "2": {
        loc: {
          start: {
            line: 11,
            column: 12
          },
          end: {
            line: 11,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 12
          },
          end: {
            line: 11,
            column: 21
          }
        }, {
          start: {
            line: 11,
            column: 25
          },
          end: {
            line: 11,
            column: 44
          }
        }, {
          start: {
            line: 11,
            column: 48
          },
          end: {
            line: 11,
            column: 67
          }
        }],
        line: 11
      },
      "3": {
        loc: {
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 21,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 21,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "4": {
        loc: {
          start: {
            line: 17,
            column: 25
          },
          end: {
            line: 17,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 25
          },
          end: {
            line: 17,
            column: 57
          }
        }, {
          start: {
            line: 17,
            column: 61
          },
          end: {
            line: 17,
            column: 65
          }
        }],
        line: 17
      },
      "5": {
        loc: {
          start: {
            line: 18,
            column: 12
          },
          end: {
            line: 20,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 12
          },
          end: {
            line: 20,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "6": {
        loc: {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "7": {
        loc: {
          start: {
            line: 23,
            column: 12
          },
          end: {
            line: 23,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 12
          },
          end: {
            line: 23,
            column: 23
          }
        }, {
          start: {
            line: 23,
            column: 27
          },
          end: {
            line: 23,
            column: 65
          }
        }],
        line: 23
      },
      "8": {
        loc: {
          start: {
            line: 24,
            column: 25
          },
          end: {
            line: 24,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 25
          },
          end: {
            line: 24,
            column: 46
          }
        }, {
          start: {
            line: 24,
            column: 50
          },
          end: {
            line: 24,
            column: 54
          }
        }],
        line: 24
      },
      "9": {
        loc: {
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 27,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 27,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "10": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "11": {
        loc: {
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 30,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 30,
            column: 23
          }
        }, {
          start: {
            line: 30,
            column: 27
          },
          end: {
            line: 30,
            column: 65
          }
        }],
        line: 30
      },
      "12": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 39,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 39,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "13": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "14": {
        loc: {
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 88,
            column: 20
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 88,
            column: 20
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "15": {
        loc: {
          start: {
            line: 93,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "16": {
        loc: {
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 93,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 93,
            column: 45
          }
        }, {
          start: {
            line: 93,
            column: 49
          },
          end: {
            line: 93,
            column: 86
          }
        }],
        line: 93
      },
      "17": {
        loc: {
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 99,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 99,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\middleware\\tenant.middleware.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\middleware\\tenant.middleware.ts"],
      sourcesContent: ["import { FastifyRequest, FastifyReply } from 'fastify'\nimport { logger } from '../utils/logger'\n\nexport interface TenantInfo {\n  id: string\n  slug: string\n  name: string\n  planType: string\n  isActive: boolean\n  schema: string\n}\n\ndeclare module 'fastify' {\n  interface FastifyRequest {\n    tenant?: TenantInfo\n  }\n}\n\n/**\n * Middleware para identificar e configurar o tenant atual\n */\nexport const tenantMiddleware = async (\n  request: FastifyRequest,\n  reply: FastifyReply\n) => {\n  try {\n    let tenantSlug: string | null = null\n\n    // 1. Extrair tenant do subdomain (empresa.utmify.com)\n    const host = request.headers.host || ''\n    const subdomain = extractSubdomain(host)\n    \n    if (subdomain && subdomain !== 'www' && subdomain !== 'api') {\n      tenantSlug = subdomain\n      logger.debug(`Tenant extra\xEDdo do subdomain: ${tenantSlug}`)\n    }\n\n    // 2. Fallback: extrair do header X-Tenant-Slug\n    if (!tenantSlug) {\n      tenantSlug = request.headers['x-tenant-slug'] as string || null\n      if (tenantSlug) {\n        logger.debug(`Tenant extra\xEDdo do header: ${tenantSlug}`)\n      }\n    }\n\n    // 3. Fallback: extrair do query parameter (para desenvolvimento)\n    if (!tenantSlug && process.env.NODE_ENV === 'development') {\n      tenantSlug = (request.query as any)?.tenant || null\n      if (tenantSlug) {\n        logger.debug(`Tenant extra\xEDdo do query param: ${tenantSlug}`)\n      }\n    }\n\n    // 4. Para desenvolvimento, usar tenant padr\xE3o se n\xE3o especificado\n    if (!tenantSlug && process.env.NODE_ENV === 'development') {\n      tenantSlug = 'demo'\n      logger.debug('Usando tenant padr\xE3o para desenvolvimento: demo')\n    }\n\n    if (!tenantSlug) {\n      return reply.code(400).send({\n        error: 'Bad Request',\n        message: 'Tenant n\xE3o identificado. Verifique o subdomain ou header X-Tenant-Slug.'\n      })\n    }\n\n    // 5. Buscar organiza\xE7\xE3o no banco de dados\n    const organization = await request.server.db.organization.findUnique({\n      where: { \n        slug: tenantSlug,\n        isActive: true \n      },\n      select: {\n        id: true,\n        slug: true,\n        name: true,\n        planType: true,\n        isActive: true\n      }\n    })\n\n    if (!organization) {\n      logger.warn(`Organiza\xE7\xE3o n\xE3o encontrada ou inativa: ${tenantSlug}`)\n      return reply.code(404).send({\n        error: 'Not Found',\n        message: `Organiza\xE7\xE3o '${tenantSlug}' n\xE3o encontrada ou inativa.`\n      })\n    }\n\n    // 6. Adicionar informa\xE7\xF5es do tenant ao request\n    request.tenant = {\n      id: organization.id,\n      slug: organization.slug,\n      name: organization.name,\n      planType: organization.planType,\n      isActive: organization.isActive,\n      schema: `tenant_${organization.slug}`\n    }\n\n    // 7. Setar schema PostgreSQL para isolamento\n    await setTenantSchema(request.tenant.schema, request.server.db)\n\n    logger.debug(`Tenant configurado: ${organization.name} (${organization.slug})`)\n    \n  } catch (error) {\n    logger.error(`Erro no middleware de tenant: ${error.message}`, error)\n    \n    return reply.code(500).send({\n      error: 'Internal Server Error',\n      message: 'Erro interno ao processar tenant.'\n    })\n  }\n}\n\n/**\n * Extrai o subdomain do host\n * Exemplo: empresa.utmify.com -> empresa\n */\nfunction extractSubdomain(host: string): string | null {\n  if (!host) return null\n\n  // Remove porta se existir\n  const hostWithoutPort = host.split(':')[0]\n  const parts = hostWithoutPort.split('.')\n\n  // Para desenvolvimento local (localhost:3000)\n  if (hostWithoutPort.includes('localhost') || hostWithoutPort.includes('127.0.0.1')) {\n    return null\n  }\n\n  // Para dom\xEDnios como empresa.utmify.com\n  if (parts.length >= 3) {\n    return parts[0]\n  }\n\n  return null\n}\n\n/**\n * Configura o schema PostgreSQL para o tenant atual\n */\nasync function setTenantSchema(schema: string, db: any): Promise<void> {\n  try {\n    // Criar schema se n\xE3o existir\n    await db.$executeRawUnsafe(`CREATE SCHEMA IF NOT EXISTS \"${schema}\"`)\n    \n    // Setar search_path para o schema do tenant\n    await db.$executeRawUnsafe(`SET search_path TO \"${schema}\", public`)\n    \n    logger.debug(`Schema configurado: ${schema}`)\n  } catch (error) {\n    logger.error(`Erro ao configurar schema ${schema}: ${error.message}`)\n    throw error\n  }\n}\n\n/**\n * Valida se o usu\xE1rio tem acesso ao tenant atual\n */\nexport function validateTenantAccess(userOrganizationId: string, tenantId: string): boolean {\n  return userOrganizationId === tenantId\n}\n\n/**\n * Gera chave de cache com prefixo do tenant\n */\nexport function generateCacheKey(tenantSlug: string, key: string): string {\n  return `tenant:${tenantSlug}:${key}`\n}\n\n/**\n * Gera nome da fila com isolamento por tenant\n */\nexport function generateQueueName(tenantSlug: string, queueName: string): string {\n  return `${tenantSlug}_${queueName}`\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "41395d82572d6ffe42b9f74b5cb60086e501f37c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1kcq82k1ge = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1kcq82k1ge();
import { logger } from '../utils/logger';
/**
 * Middleware para identificar e configurar o tenant atual
 */
/* istanbul ignore next */
cov_1kcq82k1ge().s[0]++;
export const tenantMiddleware = async (request, reply) => {
  /* istanbul ignore next */
  cov_1kcq82k1ge().f[0]++;
  cov_1kcq82k1ge().s[1]++;
  try {
    let tenantSlug =
    /* istanbul ignore next */
    (cov_1kcq82k1ge().s[2]++, null);
    // 1. Extrair tenant do subdomain (empresa.utmify.com)
    const host =
    /* istanbul ignore next */
    (cov_1kcq82k1ge().s[3]++,
    /* istanbul ignore next */
    (cov_1kcq82k1ge().b[0][0]++, request.headers.host) ||
    /* istanbul ignore next */
    (cov_1kcq82k1ge().b[0][1]++, ''));
    const subdomain =
    /* istanbul ignore next */
    (cov_1kcq82k1ge().s[4]++, extractSubdomain(host));
    /* istanbul ignore next */
    cov_1kcq82k1ge().s[5]++;
    if (
    /* istanbul ignore next */
    (cov_1kcq82k1ge().b[2][0]++, subdomain) &&
    /* istanbul ignore next */
    (cov_1kcq82k1ge().b[2][1]++, subdomain !== 'www') &&
    /* istanbul ignore next */
    (cov_1kcq82k1ge().b[2][2]++, subdomain !== 'api')) {
      /* istanbul ignore next */
      cov_1kcq82k1ge().b[1][0]++;
      cov_1kcq82k1ge().s[6]++;
      tenantSlug = subdomain;
      /* istanbul ignore next */
      cov_1kcq82k1ge().s[7]++;
      logger.debug(`Tenant extraído do subdomain: ${tenantSlug}`);
    } else
    /* istanbul ignore next */
    {
      cov_1kcq82k1ge().b[1][1]++;
    }
    // 2. Fallback: extrair do header X-Tenant-Slug
    cov_1kcq82k1ge().s[8]++;
    if (!tenantSlug) {
      /* istanbul ignore next */
      cov_1kcq82k1ge().b[3][0]++;
      cov_1kcq82k1ge().s[9]++;
      tenantSlug =
      /* istanbul ignore next */
      (cov_1kcq82k1ge().b[4][0]++, request.headers['x-tenant-slug']) ||
      /* istanbul ignore next */
      (cov_1kcq82k1ge().b[4][1]++, null);
      /* istanbul ignore next */
      cov_1kcq82k1ge().s[10]++;
      if (tenantSlug) {
        /* istanbul ignore next */
        cov_1kcq82k1ge().b[5][0]++;
        cov_1kcq82k1ge().s[11]++;
        logger.debug(`Tenant extraído do header: ${tenantSlug}`);
      } else
      /* istanbul ignore next */
      {
        cov_1kcq82k1ge().b[5][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1kcq82k1ge().b[3][1]++;
    }
    // 3. Fallback: extrair do query parameter (para desenvolvimento)
    cov_1kcq82k1ge().s[12]++;
    if (
    /* istanbul ignore next */
    (cov_1kcq82k1ge().b[7][0]++, !tenantSlug) &&
    /* istanbul ignore next */
    (cov_1kcq82k1ge().b[7][1]++, process.env.NODE_ENV === 'development')) {
      /* istanbul ignore next */
      cov_1kcq82k1ge().b[6][0]++;
      cov_1kcq82k1ge().s[13]++;
      tenantSlug =
      /* istanbul ignore next */
      (cov_1kcq82k1ge().b[8][0]++, request.query?.tenant) ||
      /* istanbul ignore next */
      (cov_1kcq82k1ge().b[8][1]++, null);
      /* istanbul ignore next */
      cov_1kcq82k1ge().s[14]++;
      if (tenantSlug) {
        /* istanbul ignore next */
        cov_1kcq82k1ge().b[9][0]++;
        cov_1kcq82k1ge().s[15]++;
        logger.debug(`Tenant extraído do query param: ${tenantSlug}`);
      } else
      /* istanbul ignore next */
      {
        cov_1kcq82k1ge().b[9][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1kcq82k1ge().b[6][1]++;
    }
    // 4. Para desenvolvimento, usar tenant padrão se não especificado
    cov_1kcq82k1ge().s[16]++;
    if (
    /* istanbul ignore next */
    (cov_1kcq82k1ge().b[11][0]++, !tenantSlug) &&
    /* istanbul ignore next */
    (cov_1kcq82k1ge().b[11][1]++, process.env.NODE_ENV === 'development')) {
      /* istanbul ignore next */
      cov_1kcq82k1ge().b[10][0]++;
      cov_1kcq82k1ge().s[17]++;
      tenantSlug = 'demo';
      /* istanbul ignore next */
      cov_1kcq82k1ge().s[18]++;
      logger.debug('Usando tenant padrão para desenvolvimento: demo');
    } else
    /* istanbul ignore next */
    {
      cov_1kcq82k1ge().b[10][1]++;
    }
    cov_1kcq82k1ge().s[19]++;
    if (!tenantSlug) {
      /* istanbul ignore next */
      cov_1kcq82k1ge().b[12][0]++;
      cov_1kcq82k1ge().s[20]++;
      return reply.code(400).send({
        error: 'Bad Request',
        message: 'Tenant não identificado. Verifique o subdomain ou header X-Tenant-Slug.'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1kcq82k1ge().b[12][1]++;
    }
    // 5. Buscar organização no banco de dados
    const organization =
    /* istanbul ignore next */
    (cov_1kcq82k1ge().s[21]++, await request.server.db.organization.findUnique({
      where: {
        slug: tenantSlug,
        isActive: true
      },
      select: {
        id: true,
        slug: true,
        name: true,
        planType: true,
        isActive: true
      }
    }));
    /* istanbul ignore next */
    cov_1kcq82k1ge().s[22]++;
    if (!organization) {
      /* istanbul ignore next */
      cov_1kcq82k1ge().b[13][0]++;
      cov_1kcq82k1ge().s[23]++;
      logger.warn(`Organização não encontrada ou inativa: ${tenantSlug}`);
      /* istanbul ignore next */
      cov_1kcq82k1ge().s[24]++;
      return reply.code(404).send({
        error: 'Not Found',
        message: `Organização '${tenantSlug}' não encontrada ou inativa.`
      });
    } else
    /* istanbul ignore next */
    {
      cov_1kcq82k1ge().b[13][1]++;
    }
    // 6. Adicionar informações do tenant ao request
    cov_1kcq82k1ge().s[25]++;
    request.tenant = {
      id: organization.id,
      slug: organization.slug,
      name: organization.name,
      planType: organization.planType,
      isActive: organization.isActive,
      schema: `tenant_${organization.slug}`
    };
    // 7. Setar schema PostgreSQL para isolamento
    /* istanbul ignore next */
    cov_1kcq82k1ge().s[26]++;
    await setTenantSchema(request.tenant.schema, request.server.db);
    /* istanbul ignore next */
    cov_1kcq82k1ge().s[27]++;
    logger.debug(`Tenant configurado: ${organization.name} (${organization.slug})`);
  } catch (error) {
    /* istanbul ignore next */
    cov_1kcq82k1ge().s[28]++;
    logger.error(`Erro no middleware de tenant: ${error.message}`, error);
    /* istanbul ignore next */
    cov_1kcq82k1ge().s[29]++;
    return reply.code(500).send({
      error: 'Internal Server Error',
      message: 'Erro interno ao processar tenant.'
    });
  }
};
/**
 * Extrai o subdomain do host
 * Exemplo: empresa.utmify.com -> empresa
 */
function extractSubdomain(host) {
  /* istanbul ignore next */
  cov_1kcq82k1ge().f[1]++;
  cov_1kcq82k1ge().s[30]++;
  if (!host) {
    /* istanbul ignore next */
    cov_1kcq82k1ge().b[14][0]++;
    cov_1kcq82k1ge().s[31]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1kcq82k1ge().b[14][1]++;
  }
  // Remove porta se existir
  const hostWithoutPort =
  /* istanbul ignore next */
  (cov_1kcq82k1ge().s[32]++, host.split(':')[0]);
  const parts =
  /* istanbul ignore next */
  (cov_1kcq82k1ge().s[33]++, hostWithoutPort.split('.'));
  // Para desenvolvimento local (localhost:3000)
  /* istanbul ignore next */
  cov_1kcq82k1ge().s[34]++;
  if (
  /* istanbul ignore next */
  (cov_1kcq82k1ge().b[16][0]++, hostWithoutPort.includes('localhost')) ||
  /* istanbul ignore next */
  (cov_1kcq82k1ge().b[16][1]++, hostWithoutPort.includes('127.0.0.1'))) {
    /* istanbul ignore next */
    cov_1kcq82k1ge().b[15][0]++;
    cov_1kcq82k1ge().s[35]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1kcq82k1ge().b[15][1]++;
  }
  // Para domínios como empresa.utmify.com
  cov_1kcq82k1ge().s[36]++;
  if (parts.length >= 3) {
    /* istanbul ignore next */
    cov_1kcq82k1ge().b[17][0]++;
    cov_1kcq82k1ge().s[37]++;
    return parts[0];
  } else
  /* istanbul ignore next */
  {
    cov_1kcq82k1ge().b[17][1]++;
  }
  cov_1kcq82k1ge().s[38]++;
  return null;
}
/**
 * Configura o schema PostgreSQL para o tenant atual
 */
async function setTenantSchema(schema, db) {
  /* istanbul ignore next */
  cov_1kcq82k1ge().f[2]++;
  cov_1kcq82k1ge().s[39]++;
  try {
    /* istanbul ignore next */
    cov_1kcq82k1ge().s[40]++;
    // Criar schema se não existir
    await db.$executeRawUnsafe(`CREATE SCHEMA IF NOT EXISTS "${schema}"`);
    // Setar search_path para o schema do tenant
    /* istanbul ignore next */
    cov_1kcq82k1ge().s[41]++;
    await db.$executeRawUnsafe(`SET search_path TO "${schema}", public`);
    /* istanbul ignore next */
    cov_1kcq82k1ge().s[42]++;
    logger.debug(`Schema configurado: ${schema}`);
  } catch (error) {
    /* istanbul ignore next */
    cov_1kcq82k1ge().s[43]++;
    logger.error(`Erro ao configurar schema ${schema}: ${error.message}`);
    /* istanbul ignore next */
    cov_1kcq82k1ge().s[44]++;
    throw error;
  }
}
/**
 * Valida se o usuário tem acesso ao tenant atual
 */
export function validateTenantAccess(userOrganizationId, tenantId) {
  /* istanbul ignore next */
  cov_1kcq82k1ge().f[3]++;
  cov_1kcq82k1ge().s[45]++;
  return userOrganizationId === tenantId;
}
/**
 * Gera chave de cache com prefixo do tenant
 */
export function generateCacheKey(tenantSlug, key) {
  /* istanbul ignore next */
  cov_1kcq82k1ge().f[4]++;
  cov_1kcq82k1ge().s[46]++;
  return `tenant:${tenantSlug}:${key}`;
}
/**
 * Gera nome da fila com isolamento por tenant
 */
export function generateQueueName(tenantSlug, queueName) {
  /* istanbul ignore next */
  cov_1kcq82k1ge().f[5]++;
  cov_1kcq82k1ge().s[47]++;
  return `${tenantSlug}_${queueName}`;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,