ea03fda8d75e52140aad87eeebd64e90
/* istanbul ignore next */
function cov_1e8a0gbxo4() {
  var path = "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\index.ts";
  var hash = "89570be5158ab7ea6ce0cec1ca1aafd86079512a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\index.ts",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 12
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "1": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 28,
          column: 3
        }
      },
      "2": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 27,
          column: 27
        }
      },
      "3": {
        start: {
          line: 30,
          column: 0
        },
        end: {
          line: 30,
          column: 34
        }
      },
      "4": {
        start: {
          line: 32,
          column: 0
        },
        end: {
          line: 32,
          column: 40
        }
      },
      "5": {
        start: {
          line: 34,
          column: 0
        },
        end: {
          line: 34,
          column: 27
        }
      },
      "6": {
        start: {
          line: 36,
          column: 0
        },
        end: {
          line: 36,
          column: 26
        }
      },
      "7": {
        start: {
          line: 38,
          column: 14
        },
        end: {
          line: 65,
          column: 1
        }
      },
      "8": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 64,
          column: 5
        }
      },
      "9": {
        start: {
          line: 41,
          column: 30
        },
        end: {
          line: 41,
          column: 54
        }
      },
      "10": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 36
        }
      },
      "11": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 56
        }
      },
      "12": {
        start: {
          line: 45,
          column: 27
        },
        end: {
          line: 45,
          column: 48
        }
      },
      "13": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 33
        }
      },
      "14": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 63
        }
      },
      "15": {
        start: {
          line: 49,
          column: 29
        },
        end: {
          line: 49,
          column: 52
        }
      },
      "16": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 40
        }
      },
      "17": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 61
        }
      },
      "18": {
        start: {
          line: 52,
          column: 24
        },
        end: {
          line: 55,
          column: 10
        }
      },
      "19": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 54
        }
      },
      "20": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 52
        }
      },
      "21": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 90
        }
      },
      "22": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 84
        }
      },
      "23": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 53
        }
      },
      "24": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 24
        }
      },
      "25": {
        start: {
          line: 67,
          column: 0
        },
        end: {
          line: 67,
          column: 22
        }
      },
      "26": {
        start: {
          line: 69,
          column: 0
        },
        end: {
          line: 75,
          column: 3
        }
      },
      "27": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 73,
          column: 38
        }
      },
      "28": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 74,
          column: 20
        }
      },
      "29": {
        start: {
          line: 77,
          column: 0
        },
        end: {
          line: 80,
          column: 3
        }
      },
      "30": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 78,
          column: 46
        }
      },
      "31": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 79,
          column: 20
        }
      },
      "32": {
        start: {
          line: 82,
          column: 0
        },
        end: {
          line: 82,
          column: 8
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 19,
            column: 25
          },
          end: {
            line: 19,
            column: 26
          }
        },
        loc: {
          start: {
            line: 19,
            column: 44
          },
          end: {
            line: 28,
            column: 1
          }
        },
        line: 19
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 38,
            column: 14
          },
          end: {
            line: 38,
            column: 15
          }
        },
        loc: {
          start: {
            line: 38,
            column: 26
          },
          end: {
            line: 65,
            column: 1
          }
        },
        line: 38
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 69,
            column: 33
          },
          end: {
            line: 69,
            column: 34
          }
        },
        loc: {
          start: {
            line: 69,
            column: 54
          },
          end: {
            line: 75,
            column: 1
          }
        },
        line: 69
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 77,
            column: 32
          },
          end: {
            line: 77,
            column: 33
          }
        },
        loc: {
          start: {
            line: 77,
            column: 43
          },
          end: {
            line: 80,
            column: 1
          }
        },
        line: 77
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 58,
            column: 37
          },
          end: {
            line: 58,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 58,
            column: 56
          },
          end: {
            line: 58,
            column: 67
          }
        }, {
          start: {
            line: 58,
            column: 70
          },
          end: {
            line: 58,
            column: 86
          }
        }],
        line: 58
      },
      "1": {
        loc: {
          start: {
            line: 59,
            column: 34
          },
          end: {
            line: 59,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 59,
            column: 50
          },
          end: {
            line: 59,
            column: 61
          }
        }, {
          start: {
            line: 59,
            column: 64
          },
          end: {
            line: 59,
            column: 80
          }
        }],
        line: 59
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\index.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\index.ts"],
      sourcesContent: ["import Fastify from 'fastify'\nimport { gracefulShutdown } from './utils/graceful-shutdown'\nimport { logger } from './utils/logger'\nimport { registerPlugins } from './config/plugins'\nimport { registerRoutes } from './routes'\nimport { errorHandler, notFoundHandler } from './utils/errors'\nimport { env } from './config/env'\nimport { getWorkerManager } from './workers'\nimport { getJobManager } from './jobs'\nimport { getQueueManager } from './queue'\n\n// Create Fastify instance\nconst app = Fastify({\n  logger: false, // We use our custom logger\n  trustProxy: true,\n  requestIdLogLabel: 'requestId',\n  requestIdHeader: 'x-request-id',\n})\n\n// Add request logging\napp.addHook('onRequest', async (request) => {\n  logger.info({\n    request: {\n      method: request.method,\n      url: request.url,\n      headers: request.headers,\n      ip: request.ip,\n    },\n  }, 'Incoming request')\n})\n\n// Global error handler\napp.setErrorHandler(errorHandler)\n\n// 404 handler\napp.setNotFoundHandler(notFoundHandler)\n\n// Register plugins\nawait registerPlugins(app)\n\n// Register routes\nawait registerRoutes(app)\n\n// Start server\nconst start = async () => {\n  try {\n    // Initialize workers\n    const workerManager = getWorkerManager(app.db)\n    await workerManager.start()\n    logger.info('Workers initialized successfully')\n    \n    // Initialize scheduled jobs\n    const jobManager = getJobManager(app.db)\n    await jobManager.start()\n    logger.info('Scheduled jobs initialized successfully')\n    \n    // Initialize queue system\n    const queueManager = getQueueManager(app.db)\n    await queueManager.initialize()\n    logger.info('Queue system initialized successfully')\n    \n    const address = await app.listen({\n      port: env.PORT,\n      host: env.HOST,\n    })\n    \n    logger.info(`Server listening on ${address}`)\n    logger.info(`Environment: ${env.NODE_ENV}`)\n    logger.info(`Database URL: ${env.DATABASE_URL ? 'Connected' : 'Not configured'}`)\n    logger.info(`Redis URL: ${env.REDIS_URL ? 'Connected' : 'Not configured'}`)\n  } catch (error) {\n    logger.error(error, 'Error starting server')\n    process.exit(1)\n  }\n}\n\n// Setup graceful shutdown\ngracefulShutdown(app)\n\n// Handle unhandled promise rejections\nprocess.on('unhandledRejection', (reason, promise) => {\n  logger.error({\n    reason,\n    promise,\n  }, 'Unhandled promise rejection')\n  process.exit(1)\n})\n\n// Handle uncaught exceptions\nprocess.on('uncaughtException', (error) => {\n  logger.error(error, 'Uncaught exception')\n  process.exit(1)\n})\n\n// Start the server\nstart()"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "89570be5158ab7ea6ce0cec1ca1aafd86079512a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1e8a0gbxo4 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1e8a0gbxo4();
import Fastify from 'fastify';
import { gracefulShutdown } from './utils/graceful-shutdown';
import { logger } from './utils/logger';
import { registerPlugins } from './config/plugins';
import { registerRoutes } from './routes';
import { errorHandler, notFoundHandler } from './utils/errors';
import { env } from './config/env';
import { getWorkerManager } from './workers';
import { getJobManager } from './jobs';
import { getQueueManager } from './queue';
// Create Fastify instance
const app =
/* istanbul ignore next */
(cov_1e8a0gbxo4().s[0]++, Fastify({
  logger: false,
  // We use our custom logger
  trustProxy: true,
  requestIdLogLabel: 'requestId',
  requestIdHeader: 'x-request-id'
}));
// Add request logging
/* istanbul ignore next */
cov_1e8a0gbxo4().s[1]++;
app.addHook('onRequest', async request => {
  /* istanbul ignore next */
  cov_1e8a0gbxo4().f[0]++;
  cov_1e8a0gbxo4().s[2]++;
  logger.info({
    request: {
      method: request.method,
      url: request.url,
      headers: request.headers,
      ip: request.ip
    }
  }, 'Incoming request');
});
// Global error handler
/* istanbul ignore next */
cov_1e8a0gbxo4().s[3]++;
app.setErrorHandler(errorHandler);
// 404 handler
/* istanbul ignore next */
cov_1e8a0gbxo4().s[4]++;
app.setNotFoundHandler(notFoundHandler);
// Register plugins
/* istanbul ignore next */
cov_1e8a0gbxo4().s[5]++;
await registerPlugins(app);
// Register routes
/* istanbul ignore next */
cov_1e8a0gbxo4().s[6]++;
await registerRoutes(app);
// Start server
/* istanbul ignore next */
cov_1e8a0gbxo4().s[7]++;
const start = async () => {
  /* istanbul ignore next */
  cov_1e8a0gbxo4().f[1]++;
  cov_1e8a0gbxo4().s[8]++;
  try {
    // Initialize workers
    const workerManager =
    /* istanbul ignore next */
    (cov_1e8a0gbxo4().s[9]++, getWorkerManager(app.db));
    /* istanbul ignore next */
    cov_1e8a0gbxo4().s[10]++;
    await workerManager.start();
    /* istanbul ignore next */
    cov_1e8a0gbxo4().s[11]++;
    logger.info('Workers initialized successfully');
    // Initialize scheduled jobs
    const jobManager =
    /* istanbul ignore next */
    (cov_1e8a0gbxo4().s[12]++, getJobManager(app.db));
    /* istanbul ignore next */
    cov_1e8a0gbxo4().s[13]++;
    await jobManager.start();
    /* istanbul ignore next */
    cov_1e8a0gbxo4().s[14]++;
    logger.info('Scheduled jobs initialized successfully');
    // Initialize queue system
    const queueManager =
    /* istanbul ignore next */
    (cov_1e8a0gbxo4().s[15]++, getQueueManager(app.db));
    /* istanbul ignore next */
    cov_1e8a0gbxo4().s[16]++;
    await queueManager.initialize();
    /* istanbul ignore next */
    cov_1e8a0gbxo4().s[17]++;
    logger.info('Queue system initialized successfully');
    const address =
    /* istanbul ignore next */
    (cov_1e8a0gbxo4().s[18]++, await app.listen({
      port: env.PORT,
      host: env.HOST
    }));
    /* istanbul ignore next */
    cov_1e8a0gbxo4().s[19]++;
    logger.info(`Server listening on ${address}`);
    /* istanbul ignore next */
    cov_1e8a0gbxo4().s[20]++;
    logger.info(`Environment: ${env.NODE_ENV}`);
    /* istanbul ignore next */
    cov_1e8a0gbxo4().s[21]++;
    logger.info(`Database URL: ${env.DATABASE_URL ?
    /* istanbul ignore next */
    (cov_1e8a0gbxo4().b[0][0]++, 'Connected') :
    /* istanbul ignore next */
    (cov_1e8a0gbxo4().b[0][1]++, 'Not configured')}`);
    /* istanbul ignore next */
    cov_1e8a0gbxo4().s[22]++;
    logger.info(`Redis URL: ${env.REDIS_URL ?
    /* istanbul ignore next */
    (cov_1e8a0gbxo4().b[1][0]++, 'Connected') :
    /* istanbul ignore next */
    (cov_1e8a0gbxo4().b[1][1]++, 'Not configured')}`);
  } catch (error) {
    /* istanbul ignore next */
    cov_1e8a0gbxo4().s[23]++;
    logger.error(error, 'Error starting server');
    /* istanbul ignore next */
    cov_1e8a0gbxo4().s[24]++;
    process.exit(1);
  }
};
// Setup graceful shutdown
/* istanbul ignore next */
cov_1e8a0gbxo4().s[25]++;
gracefulShutdown(app);
// Handle unhandled promise rejections
/* istanbul ignore next */
cov_1e8a0gbxo4().s[26]++;
process.on('unhandledRejection', (reason, promise) => {
  /* istanbul ignore next */
  cov_1e8a0gbxo4().f[2]++;
  cov_1e8a0gbxo4().s[27]++;
  logger.error({
    reason,
    promise
  }, 'Unhandled promise rejection');
  /* istanbul ignore next */
  cov_1e8a0gbxo4().s[28]++;
  process.exit(1);
});
// Handle uncaught exceptions
/* istanbul ignore next */
cov_1e8a0gbxo4().s[29]++;
process.on('uncaughtException', error => {
  /* istanbul ignore next */
  cov_1e8a0gbxo4().f[3]++;
  cov_1e8a0gbxo4().s[30]++;
  logger.error(error, 'Uncaught exception');
  /* istanbul ignore next */
  cov_1e8a0gbxo4().s[31]++;
  process.exit(1);
});
// Start the server
/* istanbul ignore next */
cov_1e8a0gbxo4().s[32]++;
start();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,