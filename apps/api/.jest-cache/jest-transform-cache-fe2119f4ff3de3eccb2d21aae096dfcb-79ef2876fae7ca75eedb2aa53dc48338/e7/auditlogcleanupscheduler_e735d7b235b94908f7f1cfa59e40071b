66863b42850e2bdb2983372510d98911
/* istanbul ignore next */
function cov_1cigxmaa37() {
  var path = "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\schedulers\\audit-log-cleanup.scheduler.ts";
  var hash = "234d1bbb38fb72e6d59463386f87e88872ec1af0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\schedulers\\audit-log-cleanup.scheduler.ts",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 17
        },
        end: {
          line: 6,
          column: 1
        }
      },
      "1": {
        start: {
          line: 2,
          column: 12
        },
        end: {
          line: 2,
          column: 28
        }
      },
      "2": {
        start: {
          line: 2,
          column: 34
        },
        end: {
          line: 2,
          column: 125
        }
      },
      "3": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 4,
          column: 150
        }
      },
      "4": {
        start: {
          line: 3,
          column: 79
        },
        end: {
          line: 3,
          column: 131
        }
      },
      "5": {
        start: {
          line: 4,
          column: 9
        },
        end: {
          line: 4,
          column: 150
        }
      },
      "6": {
        start: {
          line: 4,
          column: 22
        },
        end: {
          line: 4,
          column: 43
        }
      },
      "7": {
        start: {
          line: 4,
          column: 58
        },
        end: {
          line: 4,
          column: 150
        }
      },
      "8": {
        start: {
          line: 4,
          column: 81
        },
        end: {
          line: 4,
          column: 150
        }
      },
      "9": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 5,
          column: 66
        }
      },
      "10": {
        start: {
          line: 7,
          column: 17
        },
        end: {
          line: 9,
          column: 1
        }
      },
      "11": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 109
        }
      },
      "12": {
        start: {
          line: 8,
          column: 79
        },
        end: {
          line: 8,
          column: 109
        }
      },
      "13": {
        start: {
          line: 15,
          column: 31
        },
        end: {
          line: 176,
          column: 1
        }
      },
      "14": {
        start: {
          line: 17,
          column: 13
        },
        end: {
          line: 17,
          column: 56
        }
      },
      "15": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 47
        }
      },
      "16": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 63
        }
      },
      "17": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 30,
          column: 9
        }
      },
      "18": {
        start: {
          line: 25,
          column: 33
        },
        end: {
          line: 25,
          column: 78
        }
      },
      "19": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 95
        }
      },
      "20": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 106
        }
      },
      "21": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 65
        }
      },
      "22": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "23": {
        start: {
          line: 36,
          column: 32
        },
        end: {
          line: 36,
          column: 42
        }
      },
      "24": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 61
        }
      },
      "25": {
        start: {
          line: 39,
          column: 37
        },
        end: {
          line: 44,
          column: 14
        }
      },
      "26": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 49,
          column: 13
        }
      },
      "27": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 46,
          column: 119
        }
      },
      "28": {
        start: {
          line: 51,
          column: 33
        },
        end: {
          line: 55,
          column: 14
        }
      },
      "29": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 58,
          column: 13
        }
      },
      "30": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 57,
          column: 131
        }
      },
      "31": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 67
        }
      },
      "32": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 108
        }
      },
      "33": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 61
        }
      },
      "34": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 120,
          column: 9
        }
      },
      "35": {
        start: {
          line: 68,
          column: 31
        },
        end: {
          line: 68,
          column: 41
        }
      },
      "36": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 57
        }
      },
      "37": {
        start: {
          line: 71,
          column: 31
        },
        end: {
          line: 74,
          column: 14
        }
      },
      "38": {
        start: {
          line: 76,
          column: 29
        },
        end: {
          line: 76,
          column: 38
        }
      },
      "39": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 90,
          column: 15
        }
      },
      "40": {
        start: {
          line: 78,
          column: 30
        },
        end: {
          line: 78,
          column: 48
        }
      },
      "41": {
        start: {
          line: 79,
          column: 16
        },
        end: {
          line: 81,
          column: 17
        }
      },
      "42": {
        start: {
          line: 80,
          column: 20
        },
        end: {
          line: 80,
          column: 91
        }
      },
      "43": {
        start: {
          line: 82,
          column: 30
        },
        end: {
          line: 82,
          column: 49
        }
      },
      "44": {
        start: {
          line: 83,
          column: 16
        },
        end: {
          line: 83,
          column: 30
        }
      },
      "45": {
        start: {
          line: 84,
          column: 16
        },
        end: {
          line: 85,
          column: 37
        }
      },
      "46": {
        start: {
          line: 85,
          column: 20
        },
        end: {
          line: 85,
          column: 37
        }
      },
      "47": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 87,
          column: 35
        }
      },
      "48": {
        start: {
          line: 87,
          column: 20
        },
        end: {
          line: 87,
          column: 35
        }
      },
      "49": {
        start: {
          line: 88,
          column: 16
        },
        end: {
          line: 89,
          column: 37
        }
      },
      "50": {
        start: {
          line: 89,
          column: 20
        },
        end: {
          line: 89,
          column: 37
        }
      },
      "51": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 54
        }
      },
      "52": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 85
        }
      },
      "53": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 77
        }
      },
      "54": {
        start: {
          line: 95,
          column: 32
        },
        end: {
          line: 95,
          column: 33
        }
      },
      "55": {
        start: {
          line: 96,
          column: 30
        },
        end: {
          line: 96,
          column: 31
        }
      },
      "56": {
        start: {
          line: 97,
          column: 32
        },
        end: {
          line: 97,
          column: 33
        }
      },
      "57": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 102,
          column: 15
        }
      },
      "58": {
        start: {
          line: 99,
          column: 16
        },
        end: {
          line: 99,
          column: 48
        }
      },
      "59": {
        start: {
          line: 100,
          column: 16
        },
        end: {
          line: 100,
          column: 44
        }
      },
      "60": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 101,
          column: 48
        }
      },
      "61": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 67
        }
      },
      "62": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 67
        }
      },
      "63": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 67
        }
      },
      "64": {
        start: {
          line: 107,
          column: 35
        },
        end: {
          line: 112,
          column: 40
        }
      },
      "65": {
        start: {
          line: 109,
          column: 40
        },
        end: {
          line: 109,
          column: 102
        }
      },
      "66": {
        start: {
          line: 110,
          column: 16
        },
        end: {
          line: 110,
          column: 45
        }
      },
      "67": {
        start: {
          line: 112,
          column: 34
        },
        end: {
          line: 112,
          column: 39
        }
      },
      "68": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 115,
          column: 13
        }
      },
      "69": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 110
        }
      },
      "70": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 74
        }
      },
      "71": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 103
        }
      },
      "72": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 148,
          column: 9
        }
      },
      "73": {
        start: {
          line: 125,
          column: 31
        },
        end: {
          line: 125,
          column: 41
        }
      },
      "74": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 59
        }
      },
      "75": {
        start: {
          line: 127,
          column: 31
        },
        end: {
          line: 130,
          column: 14
        }
      },
      "76": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 134,
          column: 13
        }
      },
      "77": {
        start: {
          line: 133,
          column: 16
        },
        end: {
          line: 133,
          column: 110
        }
      },
      "78": {
        start: {
          line: 136,
          column: 33
        },
        end: {
          line: 141,
          column: 14
        }
      },
      "79": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 144,
          column: 13
        }
      },
      "80": {
        start: {
          line: 143,
          column: 16
        },
        end: {
          line: 143,
          column: 130
        }
      },
      "81": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 147,
          column: 94
        }
      },
      "82": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 151,
          column: 67
        }
      },
      "83": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 174,
          column: 9
        }
      },
      "84": {
        start: {
          line: 154,
          column: 33
        },
        end: {
          line: 154,
          column: 43
        }
      },
      "85": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 155,
          column: 63
        }
      },
      "86": {
        start: {
          line: 156,
          column: 28
        },
        end: {
          line: 159,
          column: 14
        }
      },
      "87": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 170,
          column: 13
        }
      },
      "88": {
        start: {
          line: 161,
          column: 16
        },
        end: {
          line: 161,
          column: 103
        }
      },
      "89": {
        start: {
          line: 166,
          column: 16
        },
        end: {
          line: 166,
          column: 71
        }
      },
      "90": {
        start: {
          line: 169,
          column: 16
        },
        end: {
          line: 169,
          column: 67
        }
      },
      "91": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 173,
          column: 110
        }
      },
      "92": {
        start: {
          line: 177,
          column: 0
        },
        end: {
          line: 182,
          column: 67
        }
      },
      "93": {
        start: {
          line: 183,
          column: 0
        },
        end: {
          line: 189,
          column: 78
        }
      },
      "94": {
        start: {
          line: 190,
          column: 0
        },
        end: {
          line: 196,
          column: 67
        }
      },
      "95": {
        start: {
          line: 197,
          column: 0
        },
        end: {
          line: 203,
          column: 66
        }
      },
      "96": {
        start: {
          line: 204,
          column: 0
        },
        end: {
          line: 210,
          column: 69
        }
      },
      "97": {
        start: {
          line: 211,
          column: 0
        },
        end: {
          line: 214,
          column: 29
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 1,
            column: 46
          },
          end: {
            line: 1,
            column: 47
          }
        },
        loc: {
          start: {
            line: 1,
            column: 87
          },
          end: {
            line: 6,
            column: 1
          }
        },
        line: 1
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 47
          }
        },
        loc: {
          start: {
            line: 7,
            column: 62
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 7
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 33
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 31
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        loc: {
          start: {
            line: 32,
            column: 42
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 32
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        },
        loc: {
          start: {
            line: 65,
            column: 31
          },
          end: {
            line: 121,
            column: 5
          }
        },
        line: 65
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 77,
            column: 36
          },
          end: {
            line: 77,
            column: 37
          }
        },
        loc: {
          start: {
            line: 77,
            column: 43
          },
          end: {
            line: 90,
            column: 13
          }
        },
        line: 77
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 98,
            column: 29
          },
          end: {
            line: 98,
            column: 30
          }
        },
        loc: {
          start: {
            line: 98,
            column: 38
          },
          end: {
            line: 102,
            column: 13
          }
        },
        line: 98
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 108,
            column: 24
          },
          end: {
            line: 108,
            column: 25
          }
        },
        loc: {
          start: {
            line: 108,
            column: 40
          },
          end: {
            line: 111,
            column: 13
          }
        },
        line: 108
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 112,
            column: 21
          },
          end: {
            line: 112,
            column: 22
          }
        },
        loc: {
          start: {
            line: 112,
            column: 34
          },
          end: {
            line: 112,
            column: 39
          }
        },
        line: 112
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 122,
            column: 4
          },
          end: {
            line: 122,
            column: 5
          }
        },
        loc: {
          start: {
            line: 122,
            column: 30
          },
          end: {
            line: 149,
            column: 5
          }
        },
        line: 122
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 150,
            column: 4
          },
          end: {
            line: 150,
            column: 5
          }
        },
        loc: {
          start: {
            line: 150,
            column: 33
          },
          end: {
            line: 175,
            column: 5
          }
        },
        line: 150
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 1,
            column: 17
          },
          end: {
            line: 6,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1,
            column: 18
          },
          end: {
            line: 1,
            column: 22
          }
        }, {
          start: {
            line: 1,
            column: 26
          },
          end: {
            line: 1,
            column: 41
          }
        }, {
          start: {
            line: 1,
            column: 46
          },
          end: {
            line: 6,
            column: 1
          }
        }],
        line: 1
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 34
          },
          end: {
            line: 2,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 42
          },
          end: {
            line: 2,
            column: 48
          }
        }, {
          start: {
            line: 2,
            column: 51
          },
          end: {
            line: 2,
            column: 125
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 2,
            column: 51
          },
          end: {
            line: 2,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 67
          },
          end: {
            line: 2,
            column: 118
          }
        }, {
          start: {
            line: 2,
            column: 121
          },
          end: {
            line: 2,
            column: 125
          }
        }],
        line: 2
      },
      "3": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 4,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 4,
            column: 150
          }
        }, {
          start: {
            line: 4,
            column: 9
          },
          end: {
            line: 4,
            column: 150
          }
        }],
        line: 3
      },
      "4": {
        loc: {
          start: {
            line: 3,
            column: 8
          },
          end: {
            line: 3,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 8
          },
          end: {
            line: 3,
            column: 35
          }
        }, {
          start: {
            line: 3,
            column: 39
          },
          end: {
            line: 3,
            column: 77
          }
        }],
        line: 3
      },
      "5": {
        loc: {
          start: {
            line: 4,
            column: 58
          },
          end: {
            line: 4,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 58
          },
          end: {
            line: 4,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 4
      },
      "6": {
        loc: {
          start: {
            line: 4,
            column: 85
          },
          end: {
            line: 4,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 86
          },
          end: {
            line: 4,
            column: 143
          }
        }, {
          start: {
            line: 4,
            column: 148
          },
          end: {
            line: 4,
            column: 149
          }
        }],
        line: 4
      },
      "7": {
        loc: {
          start: {
            line: 4,
            column: 86
          },
          end: {
            line: 4,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 4,
            column: 94
          },
          end: {
            line: 4,
            column: 98
          }
        }, {
          start: {
            line: 4,
            column: 101
          },
          end: {
            line: 4,
            column: 143
          }
        }],
        line: 4
      },
      "8": {
        loc: {
          start: {
            line: 4,
            column: 101
          },
          end: {
            line: 4,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 4,
            column: 109
          },
          end: {
            line: 4,
            column: 126
          }
        }, {
          start: {
            line: 4,
            column: 129
          },
          end: {
            line: 4,
            column: 143
          }
        }],
        line: 4
      },
      "9": {
        loc: {
          start: {
            line: 5,
            column: 11
          },
          end: {
            line: 5,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 11
          },
          end: {
            line: 5,
            column: 16
          }
        }, {
          start: {
            line: 5,
            column: 20
          },
          end: {
            line: 5,
            column: 21
          }
        }, {
          start: {
            line: 5,
            column: 25
          },
          end: {
            line: 5,
            column: 62
          }
        }],
        line: 5
      },
      "10": {
        loc: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 9,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 7,
            column: 18
          },
          end: {
            line: 7,
            column: 22
          }
        }, {
          start: {
            line: 7,
            column: 26
          },
          end: {
            line: 7,
            column: 41
          }
        }, {
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 9,
            column: 1
          }
        }],
        line: 7
      },
      "11": {
        loc: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 109
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 109
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 8
      },
      "12": {
        loc: {
          start: {
            line: 8,
            column: 8
          },
          end: {
            line: 8,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 8
          },
          end: {
            line: 8,
            column: 35
          }
        }, {
          start: {
            line: 8,
            column: 39
          },
          end: {
            line: 8,
            column: 77
          }
        }],
        line: 8
      },
      "13": {
        loc: {
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 49,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 49,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "14": {
        loc: {
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "15": {
        loc: {
          start: {
            line: 79,
            column: 16
          },
          end: {
            line: 81,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 16
          },
          end: {
            line: 81,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "16": {
        loc: {
          start: {
            line: 84,
            column: 16
          },
          end: {
            line: 85,
            column: 37
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 16
          },
          end: {
            line: 85,
            column: 37
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "17": {
        loc: {
          start: {
            line: 86,
            column: 16
          },
          end: {
            line: 87,
            column: 35
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 16
          },
          end: {
            line: 87,
            column: 35
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "18": {
        loc: {
          start: {
            line: 88,
            column: 16
          },
          end: {
            line: 89,
            column: 37
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 16
          },
          end: {
            line: 89,
            column: 37
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "19": {
        loc: {
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 115,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 115,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "20": {
        loc: {
          start: {
            line: 132,
            column: 12
          },
          end: {
            line: 134,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 12
          },
          end: {
            line: 134,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      },
      "21": {
        loc: {
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 144,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 144,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "22": {
        loc: {
          start: {
            line: 160,
            column: 12
          },
          end: {
            line: 170,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 12
          },
          end: {
            line: 170,
            column: 13
          }
        }, {
          start: {
            line: 168,
            column: 17
          },
          end: {
            line: 170,
            column: 13
          }
        }],
        line: 160
      },
      "23": {
        loc: {
          start: {
            line: 213,
            column: 37
          },
          end: {
            line: 213,
            column: 137
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 213,
            column: 126
          },
          end: {
            line: 213,
            column: 128
          }
        }, {
          start: {
            line: 213,
            column: 131
          },
          end: {
            line: 213,
            column: 137
          }
        }],
        line: 213
      },
      "24": {
        loc: {
          start: {
            line: 213,
            column: 50
          },
          end: {
            line: 213,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 213,
            column: 50
          },
          end: {
            line: 213,
            column: 88
          }
        }, {
          start: {
            line: 213,
            column: 92
          },
          end: {
            line: 213,
            column: 107
          }
        }],
        line: 213
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\schedulers\\audit-log-cleanup.scheduler.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\schedulers\\audit-log-cleanup.scheduler.ts"],
      sourcesContent: ["import { Injectable, Logger } from '@nestjs/common';\nimport { Cron, CronExpression } from '@nestjs/schedule';\nimport { AuditLogService } from '../services/audit-log.service';\n\n@Injectable()\nexport class AuditLogCleanupScheduler {\n  private readonly logger = new Logger(AuditLogCleanupScheduler.name);\n\n  constructor(\n    private readonly auditLogService: AuditLogService,\n  ) {}\n\n  @Cron(CronExpression.EVERY_DAY_AT_3AM)\n  async handleDailyCleanup() {\n    this.logger.log('Starting daily audit log cleanup...');\n    \n    try {\n      // Limpar logs com mais de 90 dias (padr\xE3o)\n      const deletedCount = await this.auditLogService.cleanupOldLogs(90);\n      \n      this.logger.log(`Daily cleanup completed: ${deletedCount} old audit logs deleted`);\n    } catch (error) {\n      this.logger.error(\n        `Failed to perform daily audit log cleanup: ${error.message}`,\n        error.stack,\n      );\n    }\n  }\n\n  @Cron('0 */6 * * *') // A cada 6 horas\n  async handleSuspiciousActivityCheck() {\n    this.logger.log('Starting suspicious activity check...');\n    \n    try {\n      // Verificar atividades suspeitas nas \xFAltimas 6 horas\n      const sixHoursAgo = new Date();\n      sixHoursAgo.setHours(sixHoursAgo.getHours() - 6);\n\n      // Buscar eventos de seguran\xE7a cr\xEDticos\n      const suspiciousEvents = await this.auditLogService.getAuditLogs({\n        category: 'SECURITY',\n        severity: 'CRITICAL',\n        startDate: sixHoursAgo,\n        limit: 100,\n      });\n\n      if (suspiciousEvents.logs.length > 0) {\n        this.logger.warn(\n          `Found ${suspiciousEvents.logs.length} critical security events in the last 6 hours`,\n        );\n        \n        // Aqui voc\xEA pode implementar notifica\xE7\xF5es adicionais\n        // como envio de emails para administradores\n      }\n\n      // Verificar tentativas de login falhadas\n      const failedLogins = await this.auditLogService.getAuditLogs({\n        action: 'LOGIN_FAILED',\n        startDate: sixHoursAgo,\n        limit: 100,\n      });\n\n      if (failedLogins.logs.length > 10) {\n        this.logger.warn(\n          `High number of failed login attempts detected: ${failedLogins.logs.length} in the last 6 hours`,\n        );\n      }\n\n      this.logger.log('Suspicious activity check completed');\n    } catch (error) {\n      this.logger.error(\n        `Failed to perform suspicious activity check: ${error.message}`,\n        error.stack,\n      );\n    }\n  }\n\n  @Cron('0 0 * * 0') // Todo domingo \xE0 meia-noite\n  async handleWeeklyReport() {\n    this.logger.log('Generating weekly audit report...');\n    \n    try {\n      const oneWeekAgo = new Date();\n      oneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\n      // Buscar estat\xEDsticas da semana\n      const weeklyLogs = await this.auditLogService.getAuditLogs({\n        startDate: oneWeekAgo,\n        limit: 10000,\n      });\n\n      // Agrupar por organiza\xE7\xE3o\n      const orgStats = new Map<string, {\n        total: number;\n        security: number;\n        failed: number;\n        critical: number;\n      }>();\n\n      weeklyLogs.logs.forEach(log => {\n        const orgId = log.organizationId;\n        if (!orgStats.has(orgId)) {\n          orgStats.set(orgId, { total: 0, security: 0, failed: 0, critical: 0 });\n        }\n        \n        const stats = orgStats.get(orgId)!;\n        stats.total++;\n        \n        if (log.category === 'SECURITY') stats.security++;\n        if (!log.success) stats.failed++;\n        if (log.severity === 'CRITICAL') stats.critical++;\n      });\n\n      // Log do relat\xF3rio\n      this.logger.log(`Weekly Report Summary:`);\n      this.logger.log(`- Total organizations with activity: ${orgStats.size}`);\n      this.logger.log(`- Total audit logs: ${weeklyLogs.logs.length}`);\n      \n      let totalSecurity = 0;\n      let totalFailed = 0;\n      let totalCritical = 0;\n      \n      orgStats.forEach(stats => {\n        totalSecurity += stats.security;\n        totalFailed += stats.failed;\n        totalCritical += stats.critical;\n      });\n      \n      this.logger.log(`- Security events: ${totalSecurity}`);\n      this.logger.log(`- Failed operations: ${totalFailed}`);\n      this.logger.log(`- Critical events: ${totalCritical}`);\n\n      // Identificar organiza\xE7\xF5es com alta atividade suspeita\n      const suspiciousOrgs = Array.from(orgStats.entries())\n        .filter(([_, stats]) => {\n          const suspiciousRatio = (stats.security + stats.failed + stats.critical) / stats.total;\n          return suspiciousRatio > 0.1; // Mais de 10% de eventos suspeitos\n        })\n        .map(([orgId]) => orgId);\n\n      if (suspiciousOrgs.length > 0) {\n        this.logger.warn(\n          `Organizations with high suspicious activity: ${suspiciousOrgs.join(', ')}`,\n        );\n      }\n\n      this.logger.log('Weekly audit report generated successfully');\n    } catch (error) {\n      this.logger.error(\n        `Failed to generate weekly audit report: ${error.message}`,\n        error.stack,\n      );\n    }\n  }\n\n  @Cron('0 */1 * * *') // A cada hora\n  async handleHealthCheck() {\n    try {\n      // Verificar se o sistema de auditoria est\xE1 funcionando\n      const oneHourAgo = new Date();\n      oneHourAgo.setHours(oneHourAgo.getHours() - 1);\n\n      const recentLogs = await this.auditLogService.getAuditLogs({\n        startDate: oneHourAgo,\n        limit: 1,\n      });\n\n      // Se n\xE3o h\xE1 logs na \xFAltima hora, pode indicar um problema\n      if (recentLogs.logs.length === 0) {\n        this.logger.warn('No audit logs found in the last hour - system may not be logging properly');\n      }\n\n      // Verificar se h\xE1 muitos erros de sistema\n      const systemErrors = await this.auditLogService.getAuditLogs({\n        category: 'SYSTEM',\n        severity: 'CRITICAL',\n        startDate: oneHourAgo,\n        limit: 10,\n      });\n\n      if (systemErrors.logs.length > 5) {\n        this.logger.error(\n          `High number of critical system errors detected: ${systemErrors.logs.length} in the last hour`,\n        );\n      }\n    } catch (error) {\n      this.logger.error(\n        `Audit log health check failed: ${error.message}`,\n        error.stack,\n      );\n    }\n  }\n\n  @Cron('0 0 1 * *') // Todo dia 1 do m\xEAs \xE0 meia-noite\n  async handleMonthlyArchive() {\n    this.logger.log('Starting monthly audit log archiving...');\n    \n    try {\n      // Arquivar logs com mais de 6 meses\n      const sixMonthsAgo = new Date();\n      sixMonthsAgo.setMonth(sixMonthsAgo.getMonth() - 6);\n\n      const oldLogs = await this.auditLogService.getAuditLogs({\n        endDate: sixMonthsAgo,\n        limit: 1000,\n      });\n\n      if (oldLogs.logs.length > 0) {\n        this.logger.log(\n          `Found ${oldLogs.logs.length} logs older than 6 months for archiving`,\n        );\n        \n        // Aqui voc\xEA pode implementar a l\xF3gica de arquivamento\n        // Por exemplo, exportar para um sistema de armazenamento externo\n        // antes de deletar os logs antigos\n        \n        // Por enquanto, apenas log da a\xE7\xE3o\n        this.logger.log('Monthly archiving process completed');\n      } else {\n        this.logger.log('No old logs found for archiving');\n      }\n    } catch (error) {\n      this.logger.error(\n        `Failed to perform monthly audit log archiving: ${error.message}`,\n        error.stack,\n      );\n    }\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "234d1bbb38fb72e6d59463386f87e88872ec1af0"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1cigxmaa37 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1cigxmaa37();
var __decorate =
/* istanbul ignore next */
(cov_1cigxmaa37().s[0]++,
/* istanbul ignore next */
(cov_1cigxmaa37().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1cigxmaa37().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_1cigxmaa37().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_1cigxmaa37().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_1cigxmaa37().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_1cigxmaa37().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_1cigxmaa37().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_1cigxmaa37().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_1cigxmaa37().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_1cigxmaa37().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_1cigxmaa37().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_1cigxmaa37().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_1cigxmaa37().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_1cigxmaa37().b[3][0]++;
    cov_1cigxmaa37().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_1cigxmaa37().b[3][1]++;
    cov_1cigxmaa37().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_1cigxmaa37().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_1cigxmaa37().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_1cigxmaa37().b[5][0]++;
        cov_1cigxmaa37().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_1cigxmaa37().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_1cigxmaa37().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_1cigxmaa37().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_1cigxmaa37().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_1cigxmaa37().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_1cigxmaa37().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_1cigxmaa37().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_1cigxmaa37().s[9]++;
  return /* istanbul ignore next */(cov_1cigxmaa37().b[9][0]++, c > 3) &&
  /* istanbul ignore next */
  (cov_1cigxmaa37().b[9][1]++, r) &&
  /* istanbul ignore next */
  (cov_1cigxmaa37().b[9][2]++, Object.defineProperty(target, key, r)), r;
}));
var __metadata =
/* istanbul ignore next */
(cov_1cigxmaa37().s[10]++,
/* istanbul ignore next */
(cov_1cigxmaa37().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_1cigxmaa37().b[10][1]++, this.__metadata) ||
/* istanbul ignore next */
(cov_1cigxmaa37().b[10][2]++, function (k, v) {
  /* istanbul ignore next */
  cov_1cigxmaa37().f[1]++;
  cov_1cigxmaa37().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_1cigxmaa37().b[12][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_1cigxmaa37().b[12][1]++, typeof Reflect.metadata === "function")) {
    /* istanbul ignore next */
    cov_1cigxmaa37().b[11][0]++;
    cov_1cigxmaa37().s[12]++;
    return Reflect.metadata(k, v);
  } else
  /* istanbul ignore next */
  {
    cov_1cigxmaa37().b[11][1]++;
  }
}));
var AuditLogCleanupScheduler_1;
var _a;
import { Injectable, Logger } from '@nestjs/common';
import { Cron, CronExpression } from '@nestjs/schedule';
import { AuditLogService } from '../services/audit-log.service';
let AuditLogCleanupScheduler =
/* istanbul ignore next */
(cov_1cigxmaa37().s[13]++, AuditLogCleanupScheduler_1 = class AuditLogCleanupScheduler {
  auditLogService;
  logger =
  /* istanbul ignore next */
  (cov_1cigxmaa37().s[14]++, new Logger(AuditLogCleanupScheduler_1.name));
  constructor(auditLogService) {
    /* istanbul ignore next */
    cov_1cigxmaa37().f[2]++;
    cov_1cigxmaa37().s[15]++;
    this.auditLogService = auditLogService;
  }
  async handleDailyCleanup() {
    /* istanbul ignore next */
    cov_1cigxmaa37().f[3]++;
    cov_1cigxmaa37().s[16]++;
    this.logger.log('Starting daily audit log cleanup...');
    /* istanbul ignore next */
    cov_1cigxmaa37().s[17]++;
    try {
      // Limpar logs com mais de 90 dias (padrão)
      const deletedCount =
      /* istanbul ignore next */
      (cov_1cigxmaa37().s[18]++, await this.auditLogService.cleanupOldLogs(90));
      /* istanbul ignore next */
      cov_1cigxmaa37().s[19]++;
      this.logger.log(`Daily cleanup completed: ${deletedCount} old audit logs deleted`);
    } catch (error) {
      /* istanbul ignore next */
      cov_1cigxmaa37().s[20]++;
      this.logger.error(`Failed to perform daily audit log cleanup: ${error.message}`, error.stack);
    }
  }
  async handleSuspiciousActivityCheck() {
    /* istanbul ignore next */
    cov_1cigxmaa37().f[4]++;
    cov_1cigxmaa37().s[21]++;
    this.logger.log('Starting suspicious activity check...');
    /* istanbul ignore next */
    cov_1cigxmaa37().s[22]++;
    try {
      // Verificar atividades suspeitas nas últimas 6 horas
      const sixHoursAgo =
      /* istanbul ignore next */
      (cov_1cigxmaa37().s[23]++, new Date());
      /* istanbul ignore next */
      cov_1cigxmaa37().s[24]++;
      sixHoursAgo.setHours(sixHoursAgo.getHours() - 6);
      // Buscar eventos de segurança críticos
      const suspiciousEvents =
      /* istanbul ignore next */
      (cov_1cigxmaa37().s[25]++, await this.auditLogService.getAuditLogs({
        category: 'SECURITY',
        severity: 'CRITICAL',
        startDate: sixHoursAgo,
        limit: 100
      }));
      /* istanbul ignore next */
      cov_1cigxmaa37().s[26]++;
      if (suspiciousEvents.logs.length > 0) {
        /* istanbul ignore next */
        cov_1cigxmaa37().b[13][0]++;
        cov_1cigxmaa37().s[27]++;
        this.logger.warn(`Found ${suspiciousEvents.logs.length} critical security events in the last 6 hours`);
        // Aqui você pode implementar notificações adicionais
        // como envio de emails para administradores
      } else
      /* istanbul ignore next */
      {
        cov_1cigxmaa37().b[13][1]++;
      }
      // Verificar tentativas de login falhadas
      const failedLogins =
      /* istanbul ignore next */
      (cov_1cigxmaa37().s[28]++, await this.auditLogService.getAuditLogs({
        action: 'LOGIN_FAILED',
        startDate: sixHoursAgo,
        limit: 100
      }));
      /* istanbul ignore next */
      cov_1cigxmaa37().s[29]++;
      if (failedLogins.logs.length > 10) {
        /* istanbul ignore next */
        cov_1cigxmaa37().b[14][0]++;
        cov_1cigxmaa37().s[30]++;
        this.logger.warn(`High number of failed login attempts detected: ${failedLogins.logs.length} in the last 6 hours`);
      } else
      /* istanbul ignore next */
      {
        cov_1cigxmaa37().b[14][1]++;
      }
      cov_1cigxmaa37().s[31]++;
      this.logger.log('Suspicious activity check completed');
    } catch (error) {
      /* istanbul ignore next */
      cov_1cigxmaa37().s[32]++;
      this.logger.error(`Failed to perform suspicious activity check: ${error.message}`, error.stack);
    }
  }
  async handleWeeklyReport() {
    /* istanbul ignore next */
    cov_1cigxmaa37().f[5]++;
    cov_1cigxmaa37().s[33]++;
    this.logger.log('Generating weekly audit report...');
    /* istanbul ignore next */
    cov_1cigxmaa37().s[34]++;
    try {
      const oneWeekAgo =
      /* istanbul ignore next */
      (cov_1cigxmaa37().s[35]++, new Date());
      /* istanbul ignore next */
      cov_1cigxmaa37().s[36]++;
      oneWeekAgo.setDate(oneWeekAgo.getDate() - 7);
      // Buscar estatísticas da semana
      const weeklyLogs =
      /* istanbul ignore next */
      (cov_1cigxmaa37().s[37]++, await this.auditLogService.getAuditLogs({
        startDate: oneWeekAgo,
        limit: 10000
      }));
      // Agrupar por organização
      const orgStats =
      /* istanbul ignore next */
      (cov_1cigxmaa37().s[38]++, new Map());
      /* istanbul ignore next */
      cov_1cigxmaa37().s[39]++;
      weeklyLogs.logs.forEach(log => {
        /* istanbul ignore next */
        cov_1cigxmaa37().f[6]++;
        const orgId =
        /* istanbul ignore next */
        (cov_1cigxmaa37().s[40]++, log.organizationId);
        /* istanbul ignore next */
        cov_1cigxmaa37().s[41]++;
        if (!orgStats.has(orgId)) {
          /* istanbul ignore next */
          cov_1cigxmaa37().b[15][0]++;
          cov_1cigxmaa37().s[42]++;
          orgStats.set(orgId, {
            total: 0,
            security: 0,
            failed: 0,
            critical: 0
          });
        } else
        /* istanbul ignore next */
        {
          cov_1cigxmaa37().b[15][1]++;
        }
        const stats =
        /* istanbul ignore next */
        (cov_1cigxmaa37().s[43]++, orgStats.get(orgId));
        /* istanbul ignore next */
        cov_1cigxmaa37().s[44]++;
        stats.total++;
        /* istanbul ignore next */
        cov_1cigxmaa37().s[45]++;
        if (log.category === 'SECURITY') {
          /* istanbul ignore next */
          cov_1cigxmaa37().b[16][0]++;
          cov_1cigxmaa37().s[46]++;
          stats.security++;
        } else
        /* istanbul ignore next */
        {
          cov_1cigxmaa37().b[16][1]++;
        }
        cov_1cigxmaa37().s[47]++;
        if (!log.success) {
          /* istanbul ignore next */
          cov_1cigxmaa37().b[17][0]++;
          cov_1cigxmaa37().s[48]++;
          stats.failed++;
        } else
        /* istanbul ignore next */
        {
          cov_1cigxmaa37().b[17][1]++;
        }
        cov_1cigxmaa37().s[49]++;
        if (log.severity === 'CRITICAL') {
          /* istanbul ignore next */
          cov_1cigxmaa37().b[18][0]++;
          cov_1cigxmaa37().s[50]++;
          stats.critical++;
        } else
        /* istanbul ignore next */
        {
          cov_1cigxmaa37().b[18][1]++;
        }
      });
      // Log do relatório
      /* istanbul ignore next */
      cov_1cigxmaa37().s[51]++;
      this.logger.log(`Weekly Report Summary:`);
      /* istanbul ignore next */
      cov_1cigxmaa37().s[52]++;
      this.logger.log(`- Total organizations with activity: ${orgStats.size}`);
      /* istanbul ignore next */
      cov_1cigxmaa37().s[53]++;
      this.logger.log(`- Total audit logs: ${weeklyLogs.logs.length}`);
      let totalSecurity =
      /* istanbul ignore next */
      (cov_1cigxmaa37().s[54]++, 0);
      let totalFailed =
      /* istanbul ignore next */
      (cov_1cigxmaa37().s[55]++, 0);
      let totalCritical =
      /* istanbul ignore next */
      (cov_1cigxmaa37().s[56]++, 0);
      /* istanbul ignore next */
      cov_1cigxmaa37().s[57]++;
      orgStats.forEach(stats => {
        /* istanbul ignore next */
        cov_1cigxmaa37().f[7]++;
        cov_1cigxmaa37().s[58]++;
        totalSecurity += stats.security;
        /* istanbul ignore next */
        cov_1cigxmaa37().s[59]++;
        totalFailed += stats.failed;
        /* istanbul ignore next */
        cov_1cigxmaa37().s[60]++;
        totalCritical += stats.critical;
      });
      /* istanbul ignore next */
      cov_1cigxmaa37().s[61]++;
      this.logger.log(`- Security events: ${totalSecurity}`);
      /* istanbul ignore next */
      cov_1cigxmaa37().s[62]++;
      this.logger.log(`- Failed operations: ${totalFailed}`);
      /* istanbul ignore next */
      cov_1cigxmaa37().s[63]++;
      this.logger.log(`- Critical events: ${totalCritical}`);
      // Identificar organizações com alta atividade suspeita
      const suspiciousOrgs =
      /* istanbul ignore next */
      (cov_1cigxmaa37().s[64]++, Array.from(orgStats.entries()).filter(([_, stats]) => {
        /* istanbul ignore next */
        cov_1cigxmaa37().f[8]++;
        const suspiciousRatio =
        /* istanbul ignore next */
        (cov_1cigxmaa37().s[65]++, (stats.security + stats.failed + stats.critical) / stats.total);
        /* istanbul ignore next */
        cov_1cigxmaa37().s[66]++;
        return suspiciousRatio > 0.1; // Mais de 10% de eventos suspeitos
      }).map(([orgId]) => {
        /* istanbul ignore next */
        cov_1cigxmaa37().f[9]++;
        cov_1cigxmaa37().s[67]++;
        return orgId;
      }));
      /* istanbul ignore next */
      cov_1cigxmaa37().s[68]++;
      if (suspiciousOrgs.length > 0) {
        /* istanbul ignore next */
        cov_1cigxmaa37().b[19][0]++;
        cov_1cigxmaa37().s[69]++;
        this.logger.warn(`Organizations with high suspicious activity: ${suspiciousOrgs.join(', ')}`);
      } else
      /* istanbul ignore next */
      {
        cov_1cigxmaa37().b[19][1]++;
      }
      cov_1cigxmaa37().s[70]++;
      this.logger.log('Weekly audit report generated successfully');
    } catch (error) {
      /* istanbul ignore next */
      cov_1cigxmaa37().s[71]++;
      this.logger.error(`Failed to generate weekly audit report: ${error.message}`, error.stack);
    }
  }
  async handleHealthCheck() {
    /* istanbul ignore next */
    cov_1cigxmaa37().f[10]++;
    cov_1cigxmaa37().s[72]++;
    try {
      // Verificar se o sistema de auditoria está funcionando
      const oneHourAgo =
      /* istanbul ignore next */
      (cov_1cigxmaa37().s[73]++, new Date());
      /* istanbul ignore next */
      cov_1cigxmaa37().s[74]++;
      oneHourAgo.setHours(oneHourAgo.getHours() - 1);
      const recentLogs =
      /* istanbul ignore next */
      (cov_1cigxmaa37().s[75]++, await this.auditLogService.getAuditLogs({
        startDate: oneHourAgo,
        limit: 1
      }));
      // Se não há logs na última hora, pode indicar um problema
      /* istanbul ignore next */
      cov_1cigxmaa37().s[76]++;
      if (recentLogs.logs.length === 0) {
        /* istanbul ignore next */
        cov_1cigxmaa37().b[20][0]++;
        cov_1cigxmaa37().s[77]++;
        this.logger.warn('No audit logs found in the last hour - system may not be logging properly');
      } else
      /* istanbul ignore next */
      {
        cov_1cigxmaa37().b[20][1]++;
      }
      // Verificar se há muitos erros de sistema
      const systemErrors =
      /* istanbul ignore next */
      (cov_1cigxmaa37().s[78]++, await this.auditLogService.getAuditLogs({
        category: 'SYSTEM',
        severity: 'CRITICAL',
        startDate: oneHourAgo,
        limit: 10
      }));
      /* istanbul ignore next */
      cov_1cigxmaa37().s[79]++;
      if (systemErrors.logs.length > 5) {
        /* istanbul ignore next */
        cov_1cigxmaa37().b[21][0]++;
        cov_1cigxmaa37().s[80]++;
        this.logger.error(`High number of critical system errors detected: ${systemErrors.logs.length} in the last hour`);
      } else
      /* istanbul ignore next */
      {
        cov_1cigxmaa37().b[21][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1cigxmaa37().s[81]++;
      this.logger.error(`Audit log health check failed: ${error.message}`, error.stack);
    }
  }
  async handleMonthlyArchive() {
    /* istanbul ignore next */
    cov_1cigxmaa37().f[11]++;
    cov_1cigxmaa37().s[82]++;
    this.logger.log('Starting monthly audit log archiving...');
    /* istanbul ignore next */
    cov_1cigxmaa37().s[83]++;
    try {
      // Arquivar logs com mais de 6 meses
      const sixMonthsAgo =
      /* istanbul ignore next */
      (cov_1cigxmaa37().s[84]++, new Date());
      /* istanbul ignore next */
      cov_1cigxmaa37().s[85]++;
      sixMonthsAgo.setMonth(sixMonthsAgo.getMonth() - 6);
      const oldLogs =
      /* istanbul ignore next */
      (cov_1cigxmaa37().s[86]++, await this.auditLogService.getAuditLogs({
        endDate: sixMonthsAgo,
        limit: 1000
      }));
      /* istanbul ignore next */
      cov_1cigxmaa37().s[87]++;
      if (oldLogs.logs.length > 0) {
        /* istanbul ignore next */
        cov_1cigxmaa37().b[22][0]++;
        cov_1cigxmaa37().s[88]++;
        this.logger.log(`Found ${oldLogs.logs.length} logs older than 6 months for archiving`);
        // Aqui você pode implementar a lógica de arquivamento
        // Por exemplo, exportar para um sistema de armazenamento externo
        // antes de deletar os logs antigos
        // Por enquanto, apenas log da ação
        /* istanbul ignore next */
        cov_1cigxmaa37().s[89]++;
        this.logger.log('Monthly archiving process completed');
      } else {
        /* istanbul ignore next */
        cov_1cigxmaa37().b[22][1]++;
        cov_1cigxmaa37().s[90]++;
        this.logger.log('No old logs found for archiving');
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1cigxmaa37().s[91]++;
      this.logger.error(`Failed to perform monthly audit log archiving: ${error.message}`, error.stack);
    }
  }
});
/* istanbul ignore next */
cov_1cigxmaa37().s[92]++;
__decorate([Cron(CronExpression.EVERY_DAY_AT_3AM), __metadata("design:type", Function), __metadata("design:paramtypes", []), __metadata("design:returntype", Promise)], AuditLogCleanupScheduler.prototype, "handleDailyCleanup", null);
/* istanbul ignore next */
cov_1cigxmaa37().s[93]++;
__decorate([Cron('0 */6 * * *') // A cada 6 horas
, __metadata("design:type", Function), __metadata("design:paramtypes", []), __metadata("design:returntype", Promise)], AuditLogCleanupScheduler.prototype, "handleSuspiciousActivityCheck", null);
/* istanbul ignore next */
cov_1cigxmaa37().s[94]++;
__decorate([Cron('0 0 * * 0') // Todo domingo à meia-noite
, __metadata("design:type", Function), __metadata("design:paramtypes", []), __metadata("design:returntype", Promise)], AuditLogCleanupScheduler.prototype, "handleWeeklyReport", null);
/* istanbul ignore next */
cov_1cigxmaa37().s[95]++;
__decorate([Cron('0 */1 * * *') // A cada hora
, __metadata("design:type", Function), __metadata("design:paramtypes", []), __metadata("design:returntype", Promise)], AuditLogCleanupScheduler.prototype, "handleHealthCheck", null);
/* istanbul ignore next */
cov_1cigxmaa37().s[96]++;
__decorate([Cron('0 0 1 * *') // Todo dia 1 do mês à meia-noite
, __metadata("design:type", Function), __metadata("design:paramtypes", []), __metadata("design:returntype", Promise)], AuditLogCleanupScheduler.prototype, "handleMonthlyArchive", null);
/* istanbul ignore next */
cov_1cigxmaa37().s[97]++;
AuditLogCleanupScheduler = AuditLogCleanupScheduler_1 = __decorate([Injectable(), __metadata("design:paramtypes", [typeof (_a =
/* istanbul ignore next */
(cov_1cigxmaa37().b[24][0]++, typeof AuditLogService !== "undefined") &&
/* istanbul ignore next */
(cov_1cigxmaa37().b[24][1]++, AuditLogService)) === "function" ?
/* istanbul ignore next */
(cov_1cigxmaa37().b[23][0]++, _a) :
/* istanbul ignore next */
(cov_1cigxmaa37().b[23][1]++, Object)])], AuditLogCleanupScheduler);
export { AuditLogCleanupScheduler };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,