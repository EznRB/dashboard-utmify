{"file":"C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\utils\\logger.ts","mappings":"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","names":[],"sources":["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\utils\\logger.ts"],"sourcesContent":["import pino from 'pino'\nimport { config } from '@/config/env'\n\n// Create logger instance\nexport const logger = pino({\n  level: config.LOG_LEVEL,\n  transport: config.NODE_ENV === 'development' ? {\n    target: 'pino-pretty',\n    options: {\n      colorize: true,\n      translateTime: 'HH:MM:ss Z',\n      ignore: 'pid,hostname',\n      messageFormat: '{levelLabel} - {msg}',\n    },\n  } : undefined,\n  formatters: {\n    level: (label) => {\n      return { level: label }\n    },\n  },\n  timestamp: pino.stdTimeFunctions.isoTime,\n  base: {\n    pid: process.pid,\n    hostname: process.env.HOSTNAME || 'unknown',\n    service: 'utmify-api',\n    version: process.env.npm_package_version || '0.1.0',\n  },\n})\n\n// Log levels for different scenarios\nexport const logLevels = {\n  fatal: 60,\n  error: 50,\n  warn: 40,\n  info: 30,\n  debug: 20,\n  trace: 10,\n} as const\n\n// Helper functions for structured logging\nexport const logError = (error: Error, message?: string, context?: Record<string, any>) => {\n  logger.error({\n    error: {\n      name: error.name,\n      message: error.message,\n      stack: error.stack,\n    },\n    ...context,\n  }, message || error.message)\n}\n\nexport const logRequest = (request: {\n  method: string\n  url: string\n  headers?: Record<string, any>\n  ip?: string\n  userAgent?: string\n}, message?: string) => {\n  logger.info({\n    request: {\n      method: request.method,\n      url: request.url,\n      ip: request.ip,\n      userAgent: request.userAgent,\n      // Don't log sensitive headers\n      headers: request.headers ? {\n        'content-type': request.headers['content-type'],\n        'accept': request.headers['accept'],\n        'origin': request.headers['origin'],\n      } : undefined,\n    },\n  }, message || 'Request received')\n}\n\nexport const logResponse = (response: {\n  statusCode: number\n  responseTime?: number\n}, message?: string) => {\n  const level = response.statusCode >= 500 ? 'error' : \n               response.statusCode >= 400 ? 'warn' : 'info'\n  \n  logger[level]({\n    response: {\n      statusCode: response.statusCode,\n      responseTime: response.responseTime,\n    },\n  }, message || 'Request completed')\n}\n\nexport const logDatabase = (operation: string, table?: string, duration?: number, error?: Error) => {\n  if (error) {\n    logger.error({\n      database: {\n        operation,\n        table,\n        duration,\n        error: {\n          name: error.name,\n          message: error.message,\n        },\n      },\n    }, `Database operation failed: ${operation}`)\n  } else {\n    logger.debug({\n      database: {\n        operation,\n        table,\n        duration,\n      },\n    }, `Database operation: ${operation}`)\n  }\n}\n\nexport const logAuth = (event: string, userId?: string, email?: string, ip?: string, success: boolean = true) => {\n  const level = success ? 'info' : 'warn'\n  \n  logger[level]({\n    auth: {\n      event,\n      userId,\n      email,\n      ip,\n      success,\n    },\n  }, `Auth event: ${event}`)\n}\n\nexport const logSecurity = (event: string, details: Record<string, any>, severity: 'low' | 'medium' | 'high' = 'medium') => {\n  const level = severity === 'high' ? 'error' : severity === 'medium' ? 'warn' : 'info'\n  \n  logger[level]({\n    security: {\n      event,\n      severity,\n      ...details,\n    },\n  }, `Security event: ${event}`)\n}\n\nexport const logPerformance = (operation: string, duration: number, metadata?: Record<string, any>) => {\n  const level = duration > 5000 ? 'warn' : duration > 1000 ? 'info' : 'debug'\n  \n  logger[level]({\n    performance: {\n      operation,\n      duration,\n      ...metadata,\n    },\n  }, `Performance: ${operation} took ${duration}ms`)\n}\n\nexport const logWebhook = (event: string, webhookId: string, url: string, success: boolean, responseTime?: number, error?: Error) => {\n  const level = success ? 'info' : 'error'\n  \n  logger[level]({\n    webhook: {\n      event,\n      webhookId,\n      url,\n      success,\n      responseTime,\n      error: error ? {\n        name: error.name,\n        message: error.message,\n      } : undefined,\n    },\n  }, `Webhook ${success ? 'delivered' : 'failed'}: ${event}`)\n}\n\nexport const logQueue = (jobName: string, jobId: string, status: 'started' | 'completed' | 'failed', duration?: number, error?: Error) => {\n  const level = status === 'failed' ? 'error' : 'info'\n  \n  logger[level]({\n    queue: {\n      jobName,\n      jobId,\n      status,\n      duration,\n      error: error ? {\n        name: error.name,\n        message: error.message,\n      } : undefined,\n    },\n  }, `Queue job ${status}: ${jobName}`)\n}\n\n// Create child logger with context\nexport const createContextLogger = (context: Record<string, any>) => {\n  return logger.child(context)\n}\n\n// Export default logger\nexport default logger"],"version":3}