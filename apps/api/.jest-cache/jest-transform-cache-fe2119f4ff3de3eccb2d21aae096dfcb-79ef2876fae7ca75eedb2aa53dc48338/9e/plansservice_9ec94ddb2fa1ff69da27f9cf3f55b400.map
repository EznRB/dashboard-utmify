{"version":3,"names":["PrismaClient","PlanType","StripeService","PlansService","prisma","stripeService","constructor","cov_a39dudkxf","f","s","b","getDefaultPlans","name","type","FREE","price","currency","interval","maxIntegrations","maxUsers","maxApiCalls","features","trialDays","STARTER","PRO","ENTERPRISE","initializePlans","console","log","plans","planConfig","existingPlan","plan","findFirst","where","stripeProductId","stripePriceId","stripeProduct","createStripeProduct","id","stripePrice","createStripePrice","create","data","error","stripe","products","description","join","metadata","planType","toString","productId","prices","product","unit_amount","toLowerCase","recurring","getPlans","findMany","isActive","orderBy","getPlan","findUnique","getPlanByType","createCoupons","coupons","code","percentOff","duration","maxRedemptions","durationInMonths","couponConfig","existingCoupon","coupon","createCoupon","setupStripeWebhooks","webhookUrl","process","env","API_BASE_URL","existingWebhooks","webhookEndpoints","list","existingWebhook","find","webhook","url","enabled_events","secret","initializeStripeSetup","NODE_ENV","SETUP_WEBHOOKS"],"sources":["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\services\\plans.service.ts"],"sourcesContent":["import { PrismaClient, PlanType } from '@prisma/client';\nimport { StripeService } from './stripe.service';\n\nexport interface PlanConfig {\n  name: string;\n  type: PlanType;\n  price: number; // in cents\n  currency: string;\n  interval: 'month' | 'year';\n  maxIntegrations: number | null;\n  maxUsers: number | null;\n  maxApiCalls: number | null;\n  features: string[];\n  trialDays: number;\n}\n\nexport class PlansService {\n  private prisma: PrismaClient;\n  private stripeService: StripeService;\n\n  constructor(prisma?: PrismaClient) {\n    this.prisma = prisma || new PrismaClient();\n    this.stripeService = new StripeService();\n  }\n\n  private getDefaultPlans(): PlanConfig[] {\n    return [\n      {\n        name: 'Free',\n        type: PlanType.FREE,\n        price: 0,\n        currency: 'BRL',\n        interval: 'month',\n        maxIntegrations: 1,\n        maxUsers: 1,\n        maxApiCalls: 1000,\n        features: [\n          '1 integração',\n          '1 usuário',\n          '1.000 chamadas de API/mês',\n          'Suporte por email',\n        ],\n        trialDays: 0,\n      },\n      {\n        name: 'Starter',\n        type: PlanType.STARTER,\n        price: 9700, // R$ 97.00\n        currency: 'BRL',\n        interval: 'month',\n        maxIntegrations: 3,\n        maxUsers: 5,\n        maxApiCalls: 10000,\n        features: [\n          '3 integrações',\n          '5 usuários',\n          '10.000 chamadas de API/mês',\n          'Suporte prioritário',\n          'Relatórios avançados',\n        ],\n        trialDays: 7,\n      },\n      {\n        name: 'Pro',\n        type: PlanType.PRO,\n        price: 29700, // R$ 297.00\n        currency: 'BRL',\n        interval: 'month',\n        maxIntegrations: null, // unlimited\n        maxUsers: null, // unlimited\n        maxApiCalls: null, // unlimited\n        features: [\n          'Integrações ilimitadas',\n          'Usuários ilimitados',\n          'Chamadas de API ilimitadas',\n          'Suporte 24/7',\n          'Relatórios personalizados',\n          'API avançada',\n          'Webhooks',\n        ],\n        trialDays: 7,\n      },\n      {\n        name: 'Enterprise',\n        type: PlanType.ENTERPRISE,\n        price: 0, // Custom pricing\n        currency: 'BRL',\n        interval: 'month',\n        maxIntegrations: null,\n        maxUsers: null,\n        maxApiCalls: null,\n        features: [\n          'Tudo do Pro',\n          'Implementação dedicada',\n          'Gerente de conta',\n          'SLA garantido',\n          'Integração personalizada',\n          'Treinamento da equipe',\n        ],\n        trialDays: 14,\n      },\n    ];\n  }\n\n  async initializePlans() {\n    console.log('Initializing plans...');\n    \n    const plans = this.getDefaultPlans();\n    \n    for (const planConfig of plans) {\n      try {\n        // Check if plan already exists\n        const existingPlan = await this.prisma.plan.findFirst({\n          where: { name: planConfig.name },\n        });\n\n        if (existingPlan) {\n          console.log(`Plan ${planConfig.name} already exists, skipping...`);\n          continue;\n        }\n\n        let stripeProductId: string | null = null;\n        let stripePriceId: string | null = null;\n\n        // Create Stripe product and price for paid plans\n        if (planConfig.price > 0) {\n          // Create Stripe product\n          const stripeProduct = await this.createStripeProduct(planConfig);\n          stripeProductId = stripeProduct.id;\n\n          // Create Stripe price\n          const stripePrice = await this.createStripePrice(stripeProductId, planConfig);\n          stripePriceId = stripePrice.id;\n        }\n\n        // Create plan in database\n        await this.prisma.plan.create({\n          data: {\n            name: planConfig.name,\n            type: planConfig.type,\n            price: planConfig.price,\n            currency: planConfig.currency,\n            interval: planConfig.interval,\n            maxIntegrations: planConfig.maxIntegrations,\n            maxUsers: planConfig.maxUsers,\n            maxApiCalls: planConfig.maxApiCalls,\n            features: planConfig.features,\n            trialDays: planConfig.trialDays,\n            stripeProductId,\n            stripePriceId,\n          },\n        });\n\n        console.log(`Plan ${planConfig.name} created successfully`);\n      } catch (error) {\n        console.error(`Error creating plan ${planConfig.name}:`, error);\n      }\n    }\n\n    console.log('Plans initialization completed');\n  }\n\n  private async createStripeProduct(planConfig: PlanConfig) {\n    const stripe = (this.stripeService as any).stripe;\n    \n    return await stripe.products.create({\n      name: `Utmify ${planConfig.name}`,\n      description: `Plano ${planConfig.name} - ${planConfig.features.join(', ')}`,\n      metadata: {\n        planType: planConfig.type,\n        maxIntegrations: planConfig.maxIntegrations?.toString() || 'unlimited',\n        maxUsers: planConfig.maxUsers?.toString() || 'unlimited',\n        maxApiCalls: planConfig.maxApiCalls?.toString() || 'unlimited',\n      },\n    });\n  }\n\n  private async createStripePrice(productId: string, planConfig: PlanConfig) {\n    const stripe = (this.stripeService as any).stripe;\n    \n    return await stripe.prices.create({\n      product: productId,\n      unit_amount: planConfig.price,\n      currency: planConfig.currency.toLowerCase(),\n      recurring: {\n        interval: planConfig.interval,\n      },\n      metadata: {\n        planType: planConfig.type,\n      },\n    });\n  }\n\n  async getPlans() {\n    return await this.prisma.plan.findMany({\n      where: { isActive: true },\n      orderBy: { price: 'asc' },\n    });\n  }\n\n  async getPlan(id: string) {\n    return await this.prisma.plan.findUnique({\n      where: { id },\n    });\n  }\n\n  async getPlanByType(type: PlanType) {\n    return await this.prisma.plan.findFirst({\n      where: { type, isActive: true },\n    });\n  }\n\n  async createCoupons() {\n    console.log('Creating default coupons...');\n    \n    const coupons = [\n      {\n        code: 'WELCOME10',\n        name: 'Desconto de Boas-vindas',\n        percentOff: 10,\n        duration: 'once' as const,\n        maxRedemptions: 1000,\n      },\n      {\n        code: 'SAVE20',\n        name: 'Desconto de 20%',\n        percentOff: 20,\n        duration: 'repeating' as const,\n        durationInMonths: 3,\n        maxRedemptions: 500,\n      },\n      {\n        code: 'FIRSTMONTH',\n        name: 'Primeiro Mês Grátis',\n        percentOff: 100,\n        duration: 'once' as const,\n        maxRedemptions: 100,\n      },\n    ];\n\n    for (const couponConfig of coupons) {\n      try {\n        // Check if coupon already exists\n        const existingCoupon = await this.prisma.coupon.findUnique({\n          where: { code: couponConfig.code },\n        });\n\n        if (existingCoupon) {\n          console.log(`Coupon ${couponConfig.code} already exists, skipping...`);\n          continue;\n        }\n\n        // Create coupon in Stripe and database\n        await this.stripeService.createCoupon(couponConfig);\n        \n        console.log(`Coupon ${couponConfig.code} created successfully`);\n      } catch (error) {\n        console.error(`Error creating coupon ${couponConfig.code}:`, error);\n      }\n    }\n\n    console.log('Coupons creation completed');\n  }\n\n  async setupStripeWebhooks() {\n    console.log('Setting up Stripe webhooks...');\n    \n    const stripe = (this.stripeService as any).stripe;\n    const webhookUrl = `${process.env.API_BASE_URL}/api/billing/webhook`;\n    \n    try {\n      // List existing webhooks\n      const existingWebhooks = await stripe.webhookEndpoints.list();\n      \n      // Check if webhook already exists\n      const existingWebhook = existingWebhooks.data.find(\n        (webhook: any) => webhook.url === webhookUrl\n      );\n\n      if (existingWebhook) {\n        console.log('Webhook endpoint already exists:', existingWebhook.id);\n        return existingWebhook;\n      }\n\n      // Create new webhook endpoint\n      const webhook = await stripe.webhookEndpoints.create({\n        url: webhookUrl,\n        enabled_events: [\n          'customer.subscription.created',\n          'customer.subscription.updated',\n          'customer.subscription.deleted',\n          'invoice.payment_succeeded',\n          'invoice.payment_failed',\n          'customer.created',\n          'customer.updated',\n          'payment_method.attached',\n        ],\n      });\n\n      console.log('Webhook endpoint created:', webhook.id);\n      console.log('Webhook secret:', webhook.secret);\n      console.log('Make sure to set STRIPE_WEBHOOK_SECRET in your environment variables');\n      \n      return webhook;\n    } catch (error) {\n      console.error('Error setting up Stripe webhooks:', error);\n      throw error;\n    }\n  }\n\n  async initializeStripeSetup() {\n    try {\n      console.log('Starting Stripe setup initialization...');\n      \n      await this.initializePlans();\n      await this.createCoupons();\n      \n      // Only setup webhooks in production or when explicitly requested\n      if (process.env.NODE_ENV === 'production' || process.env.SETUP_WEBHOOKS === 'true') {\n        await this.setupStripeWebhooks();\n      }\n      \n      console.log('Stripe setup completed successfully!');\n    } catch (error) {\n      console.error('Error during Stripe setup:', error);\n      throw error;\n    }\n  }\n}"],"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","ignoreList":[]}