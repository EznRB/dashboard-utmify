{"version":3,"names":["cov_267kk8lzns","actualCoverage","GoogleAdsService","PrismaService","CryptoService","authMiddleware","z","AuthRequestSchema","s","object","redirect_uri","string","url","CallbackQuerySchema","code","optional","state","error","error_description","SyncRequestSchema","force","boolean","default","customer_id","CustomerQuerySchema","min","KeywordQuerySchema","campaign_ids","MetricsQuerySchema","start_date","regex","end_date","googleAdsRoutes","app","f","prismaService","cryptoService","googleAdsService","addHook","post","schema","tags","summary","body","response","type","properties","success","data","authUrl","message","request","reply","user","b","send","generateAuthUrl","id","log","info","get","querystring","query","frontendUrl","process","env","FRONTEND_URL","redirect","encodeURIComponent","stateData","JSON","parse","decrypt","userId","redirectUri","tokens","exchangeCodeForToken","storeTokens","accounts","getCustomerAccounts","campaigns","getCampaigns","campaignIds","split","map","trim","undefined","keywords","getKeywords","dateRange","startDate","endDate","metrics","getCampaignMetrics","searchTerms","getSearchTermsReport","timestamp","syncUserData","Date","toISOString","connected","status","connectedAt","format","lastSync","expiresAt","integration","findUnique","where","userId_platform","platform","isExpired","isActive","createdAt","disconnectIntegration","qualityScores","filter","keyword","quality_score","keyword_id","keyword_text","text","first_page_cpc","top_of_page_cpc","campaign_id","ad_group_id"],"sources":["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\routes\\google-ads.routes.ts"],"sourcesContent":["import type { FastifyInstance } from 'fastify';\nimport { GoogleAdsService } from '../services/google-ads.service';\nimport { PrismaService } from '../database/prisma.service';\nimport { CryptoService } from '../services/crypto.service';\nimport { authMiddleware } from '../middleware/auth.middleware';\nimport { z } from 'zod';\n\n// Validation schemas\nconst AuthRequestSchema = z.object({\n  redirect_uri: z.string().url('Invalid redirect URI format'),\n});\n\nconst CallbackQuerySchema = z.object({\n  code: z.string().optional(),\n  state: z.string().optional(),\n  error: z.string().optional(),\n  error_description: z.string().optional(),\n});\n\nconst SyncRequestSchema = z.object({\n  force: z.boolean().optional().default(false),\n  customer_id: z.string().optional(),\n});\n\nconst CustomerQuerySchema = z.object({\n  customer_id: z.string().min(1, 'Customer ID is required'),\n});\n\nconst KeywordQuerySchema = z.object({\n  customer_id: z.string().min(1, 'Customer ID is required'),\n  campaign_ids: z.string().optional(),\n});\n\nconst MetricsQuerySchema = z.object({\n  customer_id: z.string().min(1, 'Customer ID is required'),\n  start_date: z.string().regex(/^\\d{4}-\\d{2}-\\d{2}$/, 'Invalid date format (YYYY-MM-DD)').optional(),\n  end_date: z.string().regex(/^\\d{4}-\\d{2}-\\d{2}$/, 'Invalid date format (YYYY-MM-DD)').optional(),\n});\n\n// Google Ads routes\nexport async function googleAdsRoutes(app: FastifyInstance) {\n  const prismaService = new PrismaService();\n  const cryptoService = new CryptoService();\n  const googleAdsService = new GoogleAdsService(prismaService, cryptoService);\n\n  // Apply auth middleware to all routes\n  app.addHook('preHandler', authMiddleware);\n\n  // POST /api/integrations/google/auth - Initiate OAuth flow\n  app.post('/auth', {\n    schema: {\n      tags: ['Google Ads Integration'],\n      summary: 'Initiate Google Ads OAuth flow',\n      body: AuthRequestSchema,\n      response: {\n        200: {\n          type: 'object',\n          properties: {\n            success: { type: 'boolean' },\n            data: {\n              type: 'object',\n              properties: {\n                authUrl: { type: 'string' },\n                message: { type: 'string' },\n              },\n            },\n          },\n        },\n      },\n    },\n  }, async (request, reply) => {\n    try {\n      const { redirect_uri } = request.body as z.infer<typeof AuthRequestSchema>;\n      const user = request.user;\n\n      if (!user) {\n        return reply.code(401).send({ error: 'Unauthorized' });\n      }\n\n      const authUrl = googleAdsService.generateAuthUrl(user.id, redirect_uri);\n      \n      app.log.info(`Generated Google Ads OAuth URL for user ${user.id}`);\n      \n      return {\n        success: true,\n        data: {\n          authUrl,\n          message: 'Redirect user to this URL to complete authorization',\n        },\n      };\n    } catch (error) {\n      app.log.error('Failed to initiate Google Ads OAuth', error);\n      return reply.code(500).send({ error: 'Internal server error' });\n    }\n  });\n\n  // GET /api/integrations/google/callback - Handle OAuth callback\n  app.get('/callback', {\n    schema: {\n      tags: ['Google Ads Integration'],\n      summary: 'Handle Google Ads OAuth callback',\n      querystring: CallbackQuerySchema,\n    },\n  }, async (request, reply) => {\n    try {\n      const query = request.query as z.infer<typeof CallbackQuerySchema>;\n      const frontendUrl = process.env.FRONTEND_URL || 'http://localhost:3000';\n\n      if (query.error) {\n        app.log.error('OAuth error:', query.error_description || query.error);\n        return reply.redirect(`${frontendUrl}/integrations/google?error=${encodeURIComponent(query.error_description || query.error)}`);\n      }\n\n      if (!query.code || !query.state) {\n        return reply.redirect(`${frontendUrl}/integrations/google?error=${encodeURIComponent('Missing authorization code or state')}`);\n      }\n\n      // Decrypt state to get user info\n      const stateData = JSON.parse(cryptoService.decrypt(query.state));\n      \n      if (!stateData.userId || !stateData.redirectUri) {\n        return reply.redirect(`${frontendUrl}/integrations/google?error=${encodeURIComponent('Invalid state parameter')}`);\n      }\n\n      // Exchange code for tokens\n      const tokens = await googleAdsService.exchangeCodeForToken(\n        query.code,\n        stateData.redirectUri\n      );\n\n      // Store tokens\n      await googleAdsService.storeTokens(stateData.userId, tokens);\n\n      app.log.info(`Google Ads OAuth completed for user ${stateData.userId}`);\n\n      // Redirect to success page\n      return reply.redirect(`${frontendUrl}/integrations/google?success=true`);\n    } catch (error) {\n      app.log.error('Failed to handle Google Ads OAuth callback', error);\n      const frontendUrl = process.env.FRONTEND_URL || 'http://localhost:3000';\n      return reply.redirect(`${frontendUrl}/integrations/google?error=${encodeURIComponent('Authorization failed')}`);\n    }\n  });\n\n  // GET /api/integrations/google/accounts - Get customer accounts\n  app.get('/accounts', {\n    schema: {\n      tags: ['Google Ads Integration'],\n      summary: 'Get user\\'s Google Ads customer accounts',\n      response: {\n        200: {\n          type: 'object',\n          properties: {\n            success: { type: 'boolean' },\n            data: { type: 'array' },\n          },\n        },\n      },\n    },\n  }, async (request, reply) => {\n    try {\n      const user = request.user;\n      if (!user) {\n        return reply.code(401).send({ error: 'Unauthorized' });\n      }\n\n      const accounts = await googleAdsService.getCustomerAccounts(user.id);\n      \n      return {\n        success: true,\n        data: accounts,\n      };\n    } catch (error) {\n      app.log.error('Failed to get Google Ads customer accounts', error);\n      return reply.code(500).send({ error: 'Internal server error' });\n    }\n  });\n\n  // GET /api/integrations/google/campaigns - Get campaigns\n  app.get('/campaigns', {\n    schema: {\n      tags: ['Google Ads Integration'],\n      summary: 'Get campaigns for a customer account',\n      querystring: CustomerQuerySchema,\n      response: {\n        200: {\n          type: 'object',\n          properties: {\n            success: { type: 'boolean' },\n            data: { type: 'array' },\n          },\n        },\n      },\n    },\n  }, async (request, reply) => {\n    try {\n      const user = request.user;\n      if (!user) {\n        return reply.code(401).send({ error: 'Unauthorized' });\n      }\n\n      const { customer_id } = request.query as z.infer<typeof CustomerQuerySchema>;\n      const campaigns = await googleAdsService.getCampaigns(user.id, customer_id);\n      \n      return {\n        success: true,\n        data: campaigns,\n      };\n    } catch (error) {\n      app.log.error('Failed to get Google Ads campaigns', error);\n      return reply.code(500).send({ error: 'Internal server error' });\n    }\n  });\n\n  // GET /api/integrations/google/keywords - Get keywords\n  app.get('/keywords', {\n    schema: {\n      tags: ['Google Ads Integration'],\n      summary: 'Get keywords for campaigns',\n      querystring: KeywordQuerySchema,\n      response: {\n        200: {\n          type: 'object',\n          properties: {\n            success: { type: 'boolean' },\n            data: { type: 'array' },\n          },\n        },\n      },\n    },\n  }, async (request, reply) => {\n    try {\n      const user = request.user;\n      if (!user) {\n        return reply.code(401).send({ error: 'Unauthorized' });\n      }\n\n      const query = request.query as z.infer<typeof KeywordQuerySchema>;\n      const campaignIds = query.campaign_ids ? \n        query.campaign_ids.split(',').map(id => id.trim()) : undefined;\n\n      const keywords = await googleAdsService.getKeywords(\n        user.id,\n        query.customer_id,\n        campaignIds\n      );\n      \n      return {\n        success: true,\n        data: keywords,\n      };\n    } catch (error) {\n      app.log.error('Failed to get Google Ads keywords', error);\n      return reply.code(500).send({ error: 'Internal server error' });\n    }\n  });\n\n  // GET /api/integrations/google/metrics - Get campaign metrics\n  app.get('/metrics', {\n    schema: {\n      tags: ['Google Ads Integration'],\n      summary: 'Get campaign performance metrics',\n      querystring: MetricsQuerySchema,\n      response: {\n        200: {\n          type: 'object',\n          properties: {\n            success: { type: 'boolean' },\n            data: { type: 'array' },\n          },\n        },\n      },\n    },\n  }, async (request, reply) => {\n    try {\n      const user = request.user;\n      if (!user) {\n        return reply.code(401).send({ error: 'Unauthorized' });\n      }\n\n      const query = request.query as z.infer<typeof MetricsQuerySchema>;\n      const dateRange = query.start_date && query.end_date ? {\n        startDate: query.start_date,\n        endDate: query.end_date,\n      } : undefined;\n\n      const metrics = await googleAdsService.getCampaignMetrics(\n        user.id,\n        query.customer_id,\n        dateRange\n      );\n      \n      return {\n        success: true,\n        data: metrics,\n      };\n    } catch (error) {\n      app.log.error('Failed to get Google Ads metrics', error);\n      return reply.code(500).send({ error: 'Internal server error' });\n    }\n  });\n\n  // GET /api/integrations/google/search-terms - Get search terms report\n  app.get('/search-terms', {\n    schema: {\n      tags: ['Google Ads Integration'],\n      summary: 'Get search terms report',\n      querystring: MetricsQuerySchema,\n      response: {\n        200: {\n          type: 'object',\n          properties: {\n            success: { type: 'boolean' },\n            data: { type: 'array' },\n          },\n        },\n      },\n    },\n  }, async (request, reply) => {\n    try {\n      const user = request.user;\n      if (!user) {\n        return reply.code(401).send({ error: 'Unauthorized' });\n      }\n\n      const query = request.query as z.infer<typeof MetricsQuerySchema>;\n      const dateRange = query.start_date && query.end_date ? {\n        startDate: query.start_date,\n        endDate: query.end_date,\n      } : undefined;\n\n      const searchTerms = await googleAdsService.getSearchTermsReport(\n        user.id,\n        query.customer_id,\n        dateRange\n      );\n      \n      return {\n        success: true,\n        data: searchTerms,\n      };\n    } catch (error) {\n      app.log.error('Failed to get Google Ads search terms', error);\n      return reply.code(500).send({ error: 'Internal server error' });\n    }\n  });\n\n  // POST /api/integrations/google/sync - Trigger manual sync\n  app.post('/sync', {\n    schema: {\n      tags: ['Google Ads Integration'],\n      summary: 'Trigger manual data synchronization',\n      body: SyncRequestSchema,\n      response: {\n        200: {\n          type: 'object',\n          properties: {\n            success: { type: 'boolean' },\n            data: {\n              type: 'object',\n              properties: {\n                message: { type: 'string' },\n                timestamp: { type: 'string' },\n              },\n            },\n          },\n        },\n      },\n    },\n  }, async (request, reply) => {\n    try {\n      const user = request.user;\n      if (!user) {\n        return reply.code(401).send({ error: 'Unauthorized' });\n      }\n\n      const { force } = request.body as z.infer<typeof SyncRequestSchema>;\n      await googleAdsService.syncUserData(user.id, force);\n      \n      app.log.info(`Manual Google Ads sync completed for user ${user.id}`);\n      \n      return {\n        success: true,\n        data: {\n          message: 'Data synchronization completed successfully',\n          timestamp: new Date().toISOString(),\n        },\n      };\n    } catch (error) {\n      app.log.error('Failed to sync Google Ads data', error);\n      return reply.code(500).send({ error: 'Internal server error' });\n    }\n  });\n\n  // GET /api/integrations/google/status - Get integration status\n  app.get('/status', {\n    schema: {\n      tags: ['Google Ads Integration'],\n      summary: 'Get Google Ads integration status',\n      response: {\n        200: {\n          type: 'object',\n          properties: {\n            success: { type: 'boolean' },\n            data: {\n              type: 'object',\n              properties: {\n                connected: { type: 'boolean' },\n                status: { type: 'string' },\n                connectedAt: { type: 'string', format: 'date-time' },\n                lastSync: { type: 'string', format: 'date-time' },\n                expiresAt: { type: 'string', format: 'date-time' },\n              },\n            },\n          },\n        },\n      },\n    },\n  }, async (request, reply) => {\n    try {\n      const user = request.user;\n      if (!user) {\n        return reply.code(401).send({ error: 'Unauthorized' });\n      }\n\n      // Get integration from database\n      const integration = await prismaService.integration.findUnique({\n        where: {\n          userId_platform: {\n            userId: user.id,\n            platform: 'GOOGLE_ADS',\n          },\n        },\n      });\n\n      if (!integration) {\n        return {\n          success: true,\n          data: {\n            connected: false,\n            status: 'not_connected',\n          },\n        };\n      }\n\n      const isExpired = integration.expiresAt && integration.expiresAt <= new Date();\n      const status = !integration.isActive ? 'inactive' : \n                    isExpired ? 'expired' : 'active';\n\n      return {\n        success: true,\n        data: {\n          connected: integration.isActive && !isExpired,\n          status,\n          connectedAt: integration.createdAt,\n          lastSync: integration.lastSync,\n          expiresAt: integration.expiresAt,\n        },\n      };\n    } catch (error) {\n      app.log.error('Failed to get Google Ads integration status', error);\n      return reply.code(500).send({ error: 'Internal server error' });\n    }\n  });\n\n  // POST /api/integrations/google/disconnect - Disconnect integration\n  app.post('/disconnect', {\n    schema: {\n      tags: ['Google Ads Integration'],\n      summary: 'Disconnect Google Ads integration',\n      response: {\n        200: {\n          type: 'object',\n          properties: {\n            success: { type: 'boolean' },\n            data: {\n              type: 'object',\n              properties: {\n                message: { type: 'string' },\n              },\n            },\n          },\n        },\n      },\n    },\n  }, async (request, reply) => {\n    try {\n      const user = request.user;\n      if (!user) {\n        return reply.code(401).send({ error: 'Unauthorized' });\n      }\n\n      await googleAdsService.disconnectIntegration(user.id);\n      \n      app.log.info(`Google Ads integration disconnected for user ${user.id}`);\n      \n      return {\n        success: true,\n        data: {\n          message: 'Google Ads integration disconnected successfully',\n        },\n      };\n    } catch (error) {\n      app.log.error('Failed to disconnect Google Ads integration', error);\n      return reply.code(500).send({ error: 'Internal server error' });\n    }\n  });\n\n  // GET /api/integrations/google/quality-scores - Get quality scores\n  app.get('/quality-scores', {\n    schema: {\n      tags: ['Google Ads Integration'],\n      summary: 'Get quality scores for keywords',\n      querystring: KeywordQuerySchema,\n      response: {\n        200: {\n          type: 'object',\n          properties: {\n            success: { type: 'boolean' },\n            data: { type: 'array' },\n          },\n        },\n      },\n    },\n  }, async (request, reply) => {\n    try {\n      const user = request.user;\n      if (!user) {\n        return reply.code(401).send({ error: 'Unauthorized' });\n      }\n\n      const query = request.query as z.infer<typeof KeywordQuerySchema>;\n      const campaignIds = query.campaign_ids ? \n        query.campaign_ids.split(',').map(id => id.trim()) : undefined;\n\n      // Get keywords with quality scores\n      const keywords = await googleAdsService.getKeywords(\n        user.id,\n        query.customer_id,\n        campaignIds\n      );\n      \n      // Filter and format quality score data\n      const qualityScores = keywords\n        .filter(keyword => keyword.quality_score !== undefined)\n        .map(keyword => ({\n          keyword_id: keyword.id,\n          keyword_text: keyword.text,\n          quality_score: keyword.quality_score,\n          first_page_cpc: keyword.first_page_cpc,\n          top_of_page_cpc: keyword.top_of_page_cpc,\n          campaign_id: keyword.campaign_id,\n          ad_group_id: keyword.ad_group_id,\n        }));\n      \n      return {\n        success: true,\n        data: qualityScores,\n      };\n    } catch (error) {\n      app.log.error('Failed to get Google Ads quality scores', error);\n      return reply.code(500).send({ error: 'Internal server error' });\n    }\n  });\n}"],"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","ignoreList":[]}