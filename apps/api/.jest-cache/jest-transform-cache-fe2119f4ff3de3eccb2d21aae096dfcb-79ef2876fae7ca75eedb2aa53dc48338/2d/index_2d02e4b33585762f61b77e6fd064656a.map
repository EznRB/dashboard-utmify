{"version":3,"names":["cov_1e8a0gbxo4","actualCoverage","require","fastify_1","s","__importDefault","graceful_shutdown_1","logger_1","plugins_1","routes_1","errors_1","env_1","app","default","logger","trustProxy","requestIdLogLabel","requestIdHeader","addHook","request","f","info","method","url","headers","ip","setErrorHandler","errorHandler","setNotFoundHandler","notFoundHandler","start","registerPlugins","registerRoutes","address","listen","port","config","PORT","host","HOST","NODE_ENV","DATABASE_URL","b","REDIS_URL","error","process","exit","gracefulShutdown","on","reason","promise","stack","Error","message","String","console"],"sources":["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\index.ts"],"sourcesContent":["import 'dotenv/config'\nimport Fastify from 'fastify'\nimport { gracefulShutdown } from './utils/graceful-shutdown'\nimport { logger } from './utils/logger'\nimport { registerPlugins } from './config/plugins'\nimport { registerRoutes } from './routes'\nimport { errorHandler, notFoundHandler } from './utils/errors'\nimport { config } from './config/env'\nimport { getWorkerManager } from './workers'\nimport { getJobManager } from './jobs'\nimport { getQueueManager } from './queue'\n\n// Create Fastify instance\nconst app = Fastify({\n  logger: false, // We use our custom logger\n  trustProxy: true,\n  requestIdLogLabel: 'requestId',\n  requestIdHeader: 'x-request-id',\n})\n\n// Add request logging\napp.addHook('onRequest', async (request) => {\n  logger.info({\n    request: {\n      method: request.method,\n      url: request.url,\n      headers: request.headers,\n      ip: request.ip,\n    },\n  }, 'Incoming request')\n})\n\n// Global error handler\napp.setErrorHandler(errorHandler)\n\n// 404 handler\napp.setNotFoundHandler(notFoundHandler)\n\n// Start server\nconst start = async () => {\n  // Register plugins\n  await registerPlugins(app)\n\n  // Register routes\n  await registerRoutes(app)\n  try {\n    // TEMPORARILY DISABLED - Initialize workers\n    // const workerManager = getWorkerManager(app.db)\n    // await workerManager.start()\n    // logger.info('Workers initialized successfully')\n    \n    // TEMPORARILY DISABLED - Initialize scheduled jobs\n    // const jobManager = getJobManager(app.db)\n    // await jobManager.start()\n    // logger.info('Scheduled jobs initialized successfully')\n    \n    // TEMPORARILY DISABLED - Initialize queue system\n    // const queueManager = getQueueManager(app.db)\n    // await queueManager.initialize()\n    // logger.info('Queue system initialized successfully')\n    \n    const address = await app.listen({\n      port: config.PORT,\n      host: config.HOST,\n    })\n    \n    logger.info(`Server listening on ${address}`)\n    logger.info(`Environment: ${config.NODE_ENV}`)\n    logger.info(`Database URL: ${config.DATABASE_URL ? 'Connected' : 'Not configured'}`)\n    logger.info(`Redis URL: ${config.REDIS_URL ? 'Connected' : 'Not configured'}`)\n  } catch (error) {\n    logger.error(error, 'Error starting server')\n    process.exit(1)\n  }\n}\n\n// Setup graceful shutdown\ngracefulShutdown(app)\n\n// Handle unhandled promise rejections - TEMPORARILY NOT EXITING FOR DEBUGGING\nprocess.on('unhandledRejection', (reason, promise) => {\n  logger.error({\n    reason,\n    promise,\n    stack: reason instanceof Error ? reason.stack : 'No stack trace available',\n    message: reason instanceof Error ? reason.message : String(reason)\n  }, 'Unhandled promise rejection - NOT EXITING FOR DEBUGGING')\n  console.error('UNHANDLED REJECTION DETAILS:')\n  console.error('Reason:', reason)\n  console.error('Promise:', promise)\n  if (reason instanceof Error) {\n    console.error('Stack:', reason.stack)\n  }\n  // Temporarily commented out to debug: process.exit(1)\n})\n\n// Handle uncaught exceptions\nprocess.on('uncaughtException', (error) => {\n  logger.error(error, 'Uncaught exception')\n  process.exit(1)\n})\n\n// Start the server\nstart()"],"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","ignoreList":[]}