52a745ed9a5a089330b814a4037a3f90
/* istanbul ignore next */
function cov_jsew5uwg2() {
  var path = "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\services\\audit-log.service.ts";
  var hash = "1c0f0128fba6afb7973c8014df402de4e1b22725";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\services\\audit-log.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 17
        },
        end: {
          line: 6,
          column: 1
        }
      },
      "1": {
        start: {
          line: 2,
          column: 12
        },
        end: {
          line: 2,
          column: 28
        }
      },
      "2": {
        start: {
          line: 2,
          column: 34
        },
        end: {
          line: 2,
          column: 125
        }
      },
      "3": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 4,
          column: 150
        }
      },
      "4": {
        start: {
          line: 3,
          column: 79
        },
        end: {
          line: 3,
          column: 131
        }
      },
      "5": {
        start: {
          line: 4,
          column: 9
        },
        end: {
          line: 4,
          column: 150
        }
      },
      "6": {
        start: {
          line: 4,
          column: 22
        },
        end: {
          line: 4,
          column: 43
        }
      },
      "7": {
        start: {
          line: 4,
          column: 58
        },
        end: {
          line: 4,
          column: 150
        }
      },
      "8": {
        start: {
          line: 4,
          column: 81
        },
        end: {
          line: 4,
          column: 150
        }
      },
      "9": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 5,
          column: 66
        }
      },
      "10": {
        start: {
          line: 7,
          column: 17
        },
        end: {
          line: 9,
          column: 1
        }
      },
      "11": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 109
        }
      },
      "12": {
        start: {
          line: 8,
          column: 79
        },
        end: {
          line: 8,
          column: 109
        }
      },
      "13": {
        start: {
          line: 16,
          column: 22
        },
        end: {
          line: 417,
          column: 1
        }
      },
      "14": {
        start: {
          line: 20,
          column: 13
        },
        end: {
          line: 20,
          column: 47
        }
      },
      "15": {
        start: {
          line: 22,
          column: 22
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "16": {
        start: {
          line: 35,
          column: 23
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "17": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 29
        }
      },
      "18": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 53
        }
      },
      "19": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 59
        }
      },
      "20": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 86,
          column: 9
        }
      },
      "21": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 66
        }
      },
      "22": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 72,
          column: 15
        }
      },
      "23": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 94
        }
      },
      "24": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 78,
          column: 13
        }
      },
      "25": {
        start: {
          line: 77,
          column: 16
        },
        end: {
          line: 77,
          column: 134
        }
      },
      "26": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 55
        }
      },
      "27": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 91
        }
      },
      "28": {
        start: {
          line: 90,
          column: 25
        },
        end: {
          line: 90,
          column: 65
        }
      },
      "29": {
        start: {
          line: 91,
          column: 25
        },
        end: {
          line: 91,
          column: 65
        }
      },
      "30": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 105,
          column: 11
        }
      },
      "31": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 129,
          column: 9
        }
      },
      "32": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 121,
          column: 15
        }
      },
      "33": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 125,
          column: 13
        }
      },
      "34": {
        start: {
          line: 124,
          column: 16
        },
        end: {
          line: 124,
          column: 55
        }
      },
      "35": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 93
        }
      },
      "36": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 185,
          column: 9
        }
      },
      "37": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 66
        }
      },
      "38": {
        start: {
          line: 136,
          column: 26
        },
        end: {
          line: 138,
          column: 13
        }
      },
      "39": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 140,
          column: 44
        }
      },
      "40": {
        start: {
          line: 140,
          column: 16
        },
        end: {
          line: 140,
          column: 44
        }
      },
      "41": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 142,
          column: 58
        }
      },
      "42": {
        start: {
          line: 142,
          column: 16
        },
        end: {
          line: 142,
          column: 58
        }
      },
      "43": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 144,
          column: 48
        }
      },
      "44": {
        start: {
          line: 144,
          column: 16
        },
        end: {
          line: 144,
          column: 48
        }
      },
      "45": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 146,
          column: 48
        }
      },
      "46": {
        start: {
          line: 146,
          column: 16
        },
        end: {
          line: 146,
          column: 48
        }
      },
      "47": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 148,
          column: 48
        }
      },
      "48": {
        start: {
          line: 148,
          column: 16
        },
        end: {
          line: 148,
          column: 48
        }
      },
      "49": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 155,
          column: 13
        }
      },
      "50": {
        start: {
          line: 150,
          column: 16
        },
        end: {
          line: 150,
          column: 37
        }
      },
      "51": {
        start: {
          line: 151,
          column: 16
        },
        end: {
          line: 152,
          column: 58
        }
      },
      "52": {
        start: {
          line: 152,
          column: 20
        },
        end: {
          line: 152,
          column: 58
        }
      },
      "53": {
        start: {
          line: 153,
          column: 16
        },
        end: {
          line: 154,
          column: 56
        }
      },
      "54": {
        start: {
          line: 154,
          column: 20
        },
        end: {
          line: 154,
          column: 56
        }
      },
      "55": {
        start: {
          line: 156,
          column: 26
        },
        end: {
          line: 156,
          column: 59
        }
      },
      "56": {
        start: {
          line: 157,
          column: 27
        },
        end: {
          line: 157,
          column: 44
        }
      },
      "57": {
        start: {
          line: 158,
          column: 34
        },
        end: {
          line: 175,
          column: 14
        }
      },
      "58": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 180,
          column: 14
        }
      },
      "59": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 183,
          column: 89
        }
      },
      "60": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 24
        }
      },
      "61": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 241,
          column: 9
        }
      },
      "62": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 190,
          column: 60
        }
      },
      "63": {
        start: {
          line: 191,
          column: 30
        },
        end: {
          line: 191,
          column: 40
        }
      },
      "64": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 192,
          column: 58
        }
      },
      "65": {
        start: {
          line: 193,
          column: 26
        },
        end: {
          line: 196,
          column: 13
        }
      },
      "66": {
        start: {
          line: 197,
          column: 86
        },
        end: {
          line: 221,
          column: 14
        }
      },
      "67": {
        start: {
          line: 222,
          column: 35
        },
        end: {
          line: 222,
          column: 37
        }
      },
      "68": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 225,
          column: 15
        }
      },
      "69": {
        start: {
          line: 224,
          column: 16
        },
        end: {
          line: 224,
          column: 69
        }
      },
      "70": {
        start: {
          line: 226,
          column: 35
        },
        end: {
          line: 226,
          column: 37
        }
      },
      "71": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 229,
          column: 15
        }
      },
      "72": {
        start: {
          line: 228,
          column: 16
        },
        end: {
          line: 228,
          column: 69
        }
      },
      "73": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 236,
          column: 14
        }
      },
      "74": {
        start: {
          line: 239,
          column: 12
        },
        end: {
          line: 239,
          column: 90
        }
      },
      "75": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 240,
          column: 24
        }
      },
      "76": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 270,
          column: 9
        }
      },
      "77": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 249,
          column: 13
        }
      },
      "78": {
        start: {
          line: 248,
          column: 16
        },
        end: {
          line: 248,
          column: 28
        }
      },
      "79": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 262,
          column: 15
        }
      },
      "80": {
        start: {
          line: 263,
          column: 12
        },
        end: {
          line: 263,
          column: 174
        }
      },
      "81": {
        start: {
          line: 264,
          column: 12
        },
        end: {
          line: 264,
          column: 25
        }
      },
      "82": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 267,
          column: 103
        }
      },
      "83": {
        start: {
          line: 269,
          column: 12
        },
        end: {
          line: 269,
          column: 25
        }
      },
      "84": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 329,
          column: 9
        }
      },
      "85": {
        start: {
          line: 275,
          column: 33
        },
        end: {
          line: 275,
          column: 46
        }
      },
      "86": {
        start: {
          line: 276,
          column: 31
        },
        end: {
          line: 276,
          column: 66
        }
      },
      "87": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 302,
          column: 13
        }
      },
      "88": {
        start: {
          line: 279,
          column: 39
        },
        end: {
          line: 286,
          column: 18
        }
      },
      "89": {
        start: {
          line: 287,
          column: 16
        },
        end: {
          line: 301,
          column: 17
        }
      },
      "90": {
        start: {
          line: 288,
          column: 20
        },
        end: {
          line: 300,
          column: 23
        }
      },
      "91": {
        start: {
          line: 304,
          column: 34
        },
        end: {
          line: 310,
          column: 14
        }
      },
      "92": {
        start: {
          line: 311,
          column: 12
        },
        end: {
          line: 325,
          column: 13
        }
      },
      "93": {
        start: {
          line: 312,
          column: 16
        },
        end: {
          line: 324,
          column: 19
        }
      },
      "94": {
        start: {
          line: 328,
          column: 12
        },
        end: {
          line: 328,
          column: 101
        }
      },
      "95": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 335,
          column: 9
        }
      },
      "96": {
        start: {
          line: 334,
          column: 12
        },
        end: {
          line: 334,
          column: 30
        }
      },
      "97": {
        start: {
          line: 336,
          column: 8
        },
        end: {
          line: 338,
          column: 9
        }
      },
      "98": {
        start: {
          line: 337,
          column: 12
        },
        end: {
          line: 337,
          column: 26
        }
      },
      "99": {
        start: {
          line: 339,
          column: 8
        },
        end: {
          line: 341,
          column: 9
        }
      },
      "100": {
        start: {
          line: 340,
          column: 12
        },
        end: {
          line: 340,
          column: 28
        }
      },
      "101": {
        start: {
          line: 342,
          column: 8
        },
        end: {
          line: 342,
          column: 21
        }
      },
      "102": {
        start: {
          line: 345,
          column: 8
        },
        end: {
          line: 347,
          column: 9
        }
      },
      "103": {
        start: {
          line: 346,
          column: 12
        },
        end: {
          line: 346,
          column: 26
        }
      },
      "104": {
        start: {
          line: 348,
          column: 8
        },
        end: {
          line: 350,
          column: 9
        }
      },
      "105": {
        start: {
          line: 349,
          column: 12
        },
        end: {
          line: 349,
          column: 30
        }
      },
      "106": {
        start: {
          line: 351,
          column: 8
        },
        end: {
          line: 353,
          column: 9
        }
      },
      "107": {
        start: {
          line: 352,
          column: 12
        },
        end: {
          line: 352,
          column: 27
        }
      },
      "108": {
        start: {
          line: 354,
          column: 8
        },
        end: {
          line: 356,
          column: 9
        }
      },
      "109": {
        start: {
          line: 355,
          column: 12
        },
        end: {
          line: 355,
          column: 28
        }
      },
      "110": {
        start: {
          line: 357,
          column: 8
        },
        end: {
          line: 357,
          column: 22
        }
      },
      "111": {
        start: {
          line: 360,
          column: 23
        },
        end: {
          line: 363,
          column: 10
        }
      },
      "112": {
        start: {
          line: 364,
          column: 8
        },
        end: {
          line: 366,
          column: 9
        }
      },
      "113": {
        start: {
          line: 365,
          column: 12
        },
        end: {
          line: 365,
          column: 72
        }
      },
      "114": {
        start: {
          line: 369,
          column: 8
        },
        end: {
          line: 383,
          column: 9
        }
      },
      "115": {
        start: {
          line: 370,
          column: 24
        },
        end: {
          line: 370,
          column: 55
        }
      },
      "116": {
        start: {
          line: 371,
          column: 26
        },
        end: {
          line: 375,
          column: 13
        }
      },
      "117": {
        start: {
          line: 376,
          column: 12
        },
        end: {
          line: 376,
          column: 79
        }
      },
      "118": {
        start: {
          line: 377,
          column: 12
        },
        end: {
          line: 377,
          column: 79
        }
      },
      "119": {
        start: {
          line: 378,
          column: 12
        },
        end: {
          line: 378,
          column: 42
        }
      },
      "120": {
        start: {
          line: 379,
          column: 12
        },
        end: {
          line: 379,
          column: 64
        }
      },
      "121": {
        start: {
          line: 382,
          column: 12
        },
        end: {
          line: 382,
          column: 93
        }
      },
      "122": {
        start: {
          line: 386,
          column: 8
        },
        end: {
          line: 396,
          column: 9
        }
      },
      "123": {
        start: {
          line: 389,
          column: 12
        },
        end: {
          line: 389,
          column: 114
        }
      },
      "124": {
        start: {
          line: 391,
          column: 29
        },
        end: {
          line: 391,
          column: 83
        }
      },
      "125": {
        start: {
          line: 392,
          column: 12
        },
        end: {
          line: 392,
          column: 70
        }
      },
      "126": {
        start: {
          line: 395,
          column: 12
        },
        end: {
          line: 395,
          column: 97
        }
      },
      "127": {
        start: {
          line: 400,
          column: 8
        },
        end: {
          line: 415,
          column: 9
        }
      },
      "128": {
        start: {
          line: 401,
          column: 31
        },
        end: {
          line: 401,
          column: 41
        }
      },
      "129": {
        start: {
          line: 402,
          column: 12
        },
        end: {
          line: 402,
          column: 69
        }
      },
      "130": {
        start: {
          line: 403,
          column: 27
        },
        end: {
          line: 408,
          column: 14
        }
      },
      "131": {
        start: {
          line: 409,
          column: 12
        },
        end: {
          line: 409,
          column: 102
        }
      },
      "132": {
        start: {
          line: 410,
          column: 12
        },
        end: {
          line: 410,
          column: 32
        }
      },
      "133": {
        start: {
          line: 413,
          column: 12
        },
        end: {
          line: 413,
          column: 91
        }
      },
      "134": {
        start: {
          line: 414,
          column: 12
        },
        end: {
          line: 414,
          column: 21
        }
      },
      "135": {
        start: {
          line: 418,
          column: 0
        },
        end: {
          line: 421,
          column: 20
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 1,
            column: 46
          },
          end: {
            line: 1,
            column: 47
          }
        },
        loc: {
          start: {
            line: 1,
            column: 87
          },
          end: {
            line: 6,
            column: 1
          }
        },
        line: 1
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 47
          }
        },
        loc: {
          start: {
            line: 7,
            column: 62
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 7
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        loc: {
          start: {
            line: 45,
            column: 67
          },
          end: {
            line: 49,
            column: 5
          }
        },
        line: 45
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        loc: {
          start: {
            line: 51,
            column: 32
          },
          end: {
            line: 87,
            column: 5
          }
        },
        line: 51
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        },
        loc: {
          start: {
            line: 89,
            column: 76
          },
          end: {
            line: 106,
            column: 5
          }
        },
        line: 89
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 108,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        },
        loc: {
          start: {
            line: 108,
            column: 34
          },
          end: {
            line: 130,
            column: 5
          }
        },
        line: 108
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 132,
            column: 4
          },
          end: {
            line: 132,
            column: 5
          }
        },
        loc: {
          start: {
            line: 132,
            column: 30
          },
          end: {
            line: 186,
            column: 5
          }
        },
        line: 132
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 188,
            column: 4
          },
          end: {
            line: 188,
            column: 5
          }
        },
        loc: {
          start: {
            line: 188,
            column: 51
          },
          end: {
            line: 242,
            column: 5
          }
        },
        line: 188
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 223,
            column: 34
          },
          end: {
            line: 223,
            column: 35
          }
        },
        loc: {
          start: {
            line: 223,
            column: 42
          },
          end: {
            line: 225,
            column: 13
          }
        },
        line: 223
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 227,
            column: 34
          },
          end: {
            line: 227,
            column: 35
          }
        },
        loc: {
          start: {
            line: 227,
            column: 42
          },
          end: {
            line: 229,
            column: 13
          }
        },
        line: 227
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 244,
            column: 4
          },
          end: {
            line: 244,
            column: 5
          }
        },
        loc: {
          start: {
            line: 244,
            column: 104
          },
          end: {
            line: 271,
            column: 5
          }
        },
        line: 244
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 273,
            column: 4
          },
          end: {
            line: 273,
            column: 5
          }
        },
        loc: {
          start: {
            line: 273,
            column: 42
          },
          end: {
            line: 330,
            column: 5
          }
        },
        line: 273
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 332,
            column: 4
          },
          end: {
            line: 332,
            column: 5
          }
        },
        loc: {
          start: {
            line: 332,
            column: 40
          },
          end: {
            line: 343,
            column: 5
          }
        },
        line: 332
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 344,
            column: 4
          },
          end: {
            line: 344,
            column: 5
          }
        },
        loc: {
          start: {
            line: 344,
            column: 40
          },
          end: {
            line: 358,
            column: 5
          }
        },
        line: 344
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 359,
            column: 4
          },
          end: {
            line: 359,
            column: 5
          }
        },
        loc: {
          start: {
            line: 359,
            column: 47
          },
          end: {
            line: 367,
            column: 5
          }
        },
        line: 359
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 368,
            column: 4
          },
          end: {
            line: 368,
            column: 5
          }
        },
        loc: {
          start: {
            line: 368,
            column: 63
          },
          end: {
            line: 384,
            column: 5
          }
        },
        line: 368
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 385,
            column: 4
          },
          end: {
            line: 385,
            column: 5
          }
        },
        loc: {
          start: {
            line: 385,
            column: 38
          },
          end: {
            line: 397,
            column: 5
          }
        },
        line: 385
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 399,
            column: 4
          },
          end: {
            line: 399,
            column: 5
          }
        },
        loc: {
          start: {
            line: 399,
            column: 45
          },
          end: {
            line: 416,
            column: 5
          }
        },
        line: 399
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 1,
            column: 17
          },
          end: {
            line: 6,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1,
            column: 18
          },
          end: {
            line: 1,
            column: 22
          }
        }, {
          start: {
            line: 1,
            column: 26
          },
          end: {
            line: 1,
            column: 41
          }
        }, {
          start: {
            line: 1,
            column: 46
          },
          end: {
            line: 6,
            column: 1
          }
        }],
        line: 1
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 34
          },
          end: {
            line: 2,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 42
          },
          end: {
            line: 2,
            column: 48
          }
        }, {
          start: {
            line: 2,
            column: 51
          },
          end: {
            line: 2,
            column: 125
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 2,
            column: 51
          },
          end: {
            line: 2,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 67
          },
          end: {
            line: 2,
            column: 118
          }
        }, {
          start: {
            line: 2,
            column: 121
          },
          end: {
            line: 2,
            column: 125
          }
        }],
        line: 2
      },
      "3": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 4,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 4,
            column: 150
          }
        }, {
          start: {
            line: 4,
            column: 9
          },
          end: {
            line: 4,
            column: 150
          }
        }],
        line: 3
      },
      "4": {
        loc: {
          start: {
            line: 3,
            column: 8
          },
          end: {
            line: 3,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 8
          },
          end: {
            line: 3,
            column: 35
          }
        }, {
          start: {
            line: 3,
            column: 39
          },
          end: {
            line: 3,
            column: 77
          }
        }],
        line: 3
      },
      "5": {
        loc: {
          start: {
            line: 4,
            column: 58
          },
          end: {
            line: 4,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 58
          },
          end: {
            line: 4,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 4
      },
      "6": {
        loc: {
          start: {
            line: 4,
            column: 85
          },
          end: {
            line: 4,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 86
          },
          end: {
            line: 4,
            column: 143
          }
        }, {
          start: {
            line: 4,
            column: 148
          },
          end: {
            line: 4,
            column: 149
          }
        }],
        line: 4
      },
      "7": {
        loc: {
          start: {
            line: 4,
            column: 86
          },
          end: {
            line: 4,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 4,
            column: 94
          },
          end: {
            line: 4,
            column: 98
          }
        }, {
          start: {
            line: 4,
            column: 101
          },
          end: {
            line: 4,
            column: 143
          }
        }],
        line: 4
      },
      "8": {
        loc: {
          start: {
            line: 4,
            column: 101
          },
          end: {
            line: 4,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 4,
            column: 109
          },
          end: {
            line: 4,
            column: 126
          }
        }, {
          start: {
            line: 4,
            column: 129
          },
          end: {
            line: 4,
            column: 143
          }
        }],
        line: 4
      },
      "9": {
        loc: {
          start: {
            line: 5,
            column: 11
          },
          end: {
            line: 5,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 11
          },
          end: {
            line: 5,
            column: 16
          }
        }, {
          start: {
            line: 5,
            column: 20
          },
          end: {
            line: 5,
            column: 21
          }
        }, {
          start: {
            line: 5,
            column: 25
          },
          end: {
            line: 5,
            column: 62
          }
        }],
        line: 5
      },
      "10": {
        loc: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 9,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 7,
            column: 18
          },
          end: {
            line: 7,
            column: 22
          }
        }, {
          start: {
            line: 7,
            column: 26
          },
          end: {
            line: 7,
            column: 41
          }
        }, {
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 9,
            column: 1
          }
        }],
        line: 7
      },
      "11": {
        loc: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 109
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 109
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 8
      },
      "12": {
        loc: {
          start: {
            line: 8,
            column: 8
          },
          end: {
            line: 8,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 8
          },
          end: {
            line: 8,
            column: 35
          }
        }, {
          start: {
            line: 8,
            column: 39
          },
          end: {
            line: 8,
            column: 77
          }
        }],
        line: 8
      },
      "13": {
        loc: {
          start: {
            line: 63,
            column: 29
          },
          end: {
            line: 63,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 29
          },
          end: {
            line: 63,
            column: 42
          }
        }, {
          start: {
            line: 63,
            column: 46
          },
          end: {
            line: 63,
            column: 48
          }
        }],
        line: 63
      },
      "14": {
        loc: {
          start: {
            line: 76,
            column: 12
          },
          end: {
            line: 78,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 12
          },
          end: {
            line: 78,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "15": {
        loc: {
          start: {
            line: 76,
            column: 16
          },
          end: {
            line: 76,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 16
          },
          end: {
            line: 76,
            column: 45
          }
        }, {
          start: {
            line: 76,
            column: 49
          },
          end: {
            line: 76,
            column: 92
          }
        }],
        line: 76
      },
      "16": {
        loc: {
          start: {
            line: 89,
            column: 62
          },
          end: {
            line: 89,
            column: 74
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 89,
            column: 72
          },
          end: {
            line: 89,
            column: 74
          }
        }],
        line: 89
      },
      "17": {
        loc: {
          start: {
            line: 103,
            column: 21
          },
          end: {
            line: 103,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 21
          },
          end: {
            line: 103,
            column: 36
          }
        }, {
          start: {
            line: 103,
            column: 40
          },
          end: {
            line: 103,
            column: 44
          }
        }],
        line: 103
      },
      "18": {
        loc: {
          start: {
            line: 112,
            column: 24
          },
          end: {
            line: 112,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 112,
            column: 24
          },
          end: {
            line: 112,
            column: 36
          }
        }, {
          start: {
            line: 112,
            column: 40
          },
          end: {
            line: 112,
            column: 48
          }
        }],
        line: 112
      },
      "19": {
        loc: {
          start: {
            line: 123,
            column: 12
          },
          end: {
            line: 125,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 12
          },
          end: {
            line: 125,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "20": {
        loc: {
          start: {
            line: 139,
            column: 12
          },
          end: {
            line: 140,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 12
          },
          end: {
            line: 140,
            column: 44
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "21": {
        loc: {
          start: {
            line: 141,
            column: 12
          },
          end: {
            line: 142,
            column: 58
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 141,
            column: 12
          },
          end: {
            line: 142,
            column: 58
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 141
      },
      "22": {
        loc: {
          start: {
            line: 143,
            column: 12
          },
          end: {
            line: 144,
            column: 48
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 12
          },
          end: {
            line: 144,
            column: 48
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 143
      },
      "23": {
        loc: {
          start: {
            line: 145,
            column: 12
          },
          end: {
            line: 146,
            column: 48
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 12
          },
          end: {
            line: 146,
            column: 48
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "24": {
        loc: {
          start: {
            line: 147,
            column: 12
          },
          end: {
            line: 148,
            column: 48
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 12
          },
          end: {
            line: 148,
            column: 48
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "25": {
        loc: {
          start: {
            line: 149,
            column: 12
          },
          end: {
            line: 155,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 12
          },
          end: {
            line: 155,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 149
      },
      "26": {
        loc: {
          start: {
            line: 149,
            column: 16
          },
          end: {
            line: 149,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 149,
            column: 16
          },
          end: {
            line: 149,
            column: 31
          }
        }, {
          start: {
            line: 149,
            column: 35
          },
          end: {
            line: 149,
            column: 48
          }
        }],
        line: 149
      },
      "27": {
        loc: {
          start: {
            line: 151,
            column: 16
          },
          end: {
            line: 152,
            column: 58
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 16
          },
          end: {
            line: 152,
            column: 58
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 151
      },
      "28": {
        loc: {
          start: {
            line: 153,
            column: 16
          },
          end: {
            line: 154,
            column: 56
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 16
          },
          end: {
            line: 154,
            column: 56
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 153
      },
      "29": {
        loc: {
          start: {
            line: 156,
            column: 35
          },
          end: {
            line: 156,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 156,
            column: 35
          },
          end: {
            line: 156,
            column: 46
          }
        }, {
          start: {
            line: 156,
            column: 50
          },
          end: {
            line: 156,
            column: 52
          }
        }],
        line: 156
      },
      "30": {
        loc: {
          start: {
            line: 157,
            column: 27
          },
          end: {
            line: 157,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 157,
            column: 27
          },
          end: {
            line: 157,
            column: 39
          }
        }, {
          start: {
            line: 157,
            column: 43
          },
          end: {
            line: 157,
            column: 44
          }
        }],
        line: 157
      },
      "31": {
        loc: {
          start: {
            line: 188,
            column: 40
          },
          end: {
            line: 188,
            column: 49
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 188,
            column: 47
          },
          end: {
            line: 188,
            column: 49
          }
        }],
        line: 188
      },
      "32": {
        loc: {
          start: {
            line: 247,
            column: 12
          },
          end: {
            line: 249,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 247,
            column: 12
          },
          end: {
            line: 249,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 247
      },
      "33": {
        loc: {
          start: {
            line: 278,
            column: 12
          },
          end: {
            line: 302,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 278,
            column: 12
          },
          end: {
            line: 302,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 278
      },
      "34": {
        loc: {
          start: {
            line: 278,
            column: 16
          },
          end: {
            line: 278,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 278,
            column: 16
          },
          end: {
            line: 278,
            column: 45
          }
        }, {
          start: {
            line: 278,
            column: 49
          },
          end: {
            line: 278,
            column: 63
          }
        }],
        line: 278
      },
      "35": {
        loc: {
          start: {
            line: 287,
            column: 16
          },
          end: {
            line: 301,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 287,
            column: 16
          },
          end: {
            line: 301,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 287
      },
      "36": {
        loc: {
          start: {
            line: 311,
            column: 12
          },
          end: {
            line: 325,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 311,
            column: 12
          },
          end: {
            line: 325,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 311
      },
      "37": {
        loc: {
          start: {
            line: 333,
            column: 8
          },
          end: {
            line: 335,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 333,
            column: 8
          },
          end: {
            line: 335,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 333
      },
      "38": {
        loc: {
          start: {
            line: 336,
            column: 8
          },
          end: {
            line: 338,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 336,
            column: 8
          },
          end: {
            line: 338,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 336
      },
      "39": {
        loc: {
          start: {
            line: 336,
            column: 12
          },
          end: {
            line: 336,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 336,
            column: 12
          },
          end: {
            line: 336,
            column: 37
          }
        }, {
          start: {
            line: 336,
            column: 41
          },
          end: {
            line: 336,
            column: 67
          }
        }],
        line: 336
      },
      "40": {
        loc: {
          start: {
            line: 339,
            column: 8
          },
          end: {
            line: 341,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 339,
            column: 8
          },
          end: {
            line: 341,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 339
      },
      "41": {
        loc: {
          start: {
            line: 339,
            column: 12
          },
          end: {
            line: 339,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 339,
            column: 12
          },
          end: {
            line: 339,
            column: 37
          }
        }, {
          start: {
            line: 339,
            column: 41
          },
          end: {
            line: 339,
            column: 66
          }
        }],
        line: 339
      },
      "42": {
        loc: {
          start: {
            line: 345,
            column: 8
          },
          end: {
            line: 347,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 345,
            column: 8
          },
          end: {
            line: 347,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 345
      },
      "43": {
        loc: {
          start: {
            line: 345,
            column: 12
          },
          end: {
            line: 345,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 345,
            column: 12
          },
          end: {
            line: 345,
            column: 36
          }
        }, {
          start: {
            line: 345,
            column: 40
          },
          end: {
            line: 345,
            column: 63
          }
        }, {
          start: {
            line: 345,
            column: 67
          },
          end: {
            line: 345,
            column: 94
          }
        }],
        line: 345
      },
      "44": {
        loc: {
          start: {
            line: 348,
            column: 8
          },
          end: {
            line: 350,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 348,
            column: 8
          },
          end: {
            line: 350,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 348
      },
      "45": {
        loc: {
          start: {
            line: 348,
            column: 12
          },
          end: {
            line: 348,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 348,
            column: 12
          },
          end: {
            line: 348,
            column: 39
          }
        }, {
          start: {
            line: 348,
            column: 43
          },
          end: {
            line: 348,
            column: 72
          }
        }],
        line: 348
      },
      "46": {
        loc: {
          start: {
            line: 351,
            column: 8
          },
          end: {
            line: 353,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 351,
            column: 8
          },
          end: {
            line: 353,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 351
      },
      "47": {
        loc: {
          start: {
            line: 351,
            column: 12
          },
          end: {
            line: 351,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 351,
            column: 12
          },
          end: {
            line: 351,
            column: 39
          }
        }, {
          start: {
            line: 351,
            column: 43
          },
          end: {
            line: 351,
            column: 67
          }
        }],
        line: 351
      },
      "48": {
        loc: {
          start: {
            line: 354,
            column: 8
          },
          end: {
            line: 356,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 354,
            column: 8
          },
          end: {
            line: 356,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 354
      },
      "49": {
        loc: {
          start: {
            line: 354,
            column: 12
          },
          end: {
            line: 354,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 354,
            column: 12
          },
          end: {
            line: 354,
            column: 37
          }
        }, {
          start: {
            line: 354,
            column: 41
          },
          end: {
            line: 354,
            column: 62
          }
        }],
        line: 354
      },
      "50": {
        loc: {
          start: {
            line: 364,
            column: 8
          },
          end: {
            line: 366,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 364,
            column: 8
          },
          end: {
            line: 366,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 364
      },
      "51": {
        loc: {
          start: {
            line: 371,
            column: 26
          },
          end: {
            line: 375,
            column: 13
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 371,
            column: 26
          },
          end: {
            line: 371,
            column: 64
          }
        }, {
          start: {
            line: 371,
            column: 68
          },
          end: {
            line: 375,
            column: 13
          }
        }],
        line: 371
      },
      "52": {
        loc: {
          start: {
            line: 376,
            column: 42
          },
          end: {
            line: 376,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 376,
            column: 42
          },
          end: {
            line: 376,
            column: 68
          }
        }, {
          start: {
            line: 376,
            column: 72
          },
          end: {
            line: 376,
            column: 73
          }
        }],
        line: 376
      },
      "53": {
        loc: {
          start: {
            line: 377,
            column: 42
          },
          end: {
            line: 377,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 377,
            column: 42
          },
          end: {
            line: 377,
            column: 68
          }
        }, {
          start: {
            line: 377,
            column: 72
          },
          end: {
            line: 377,
            column: 73
          }
        }],
        line: 377
      },
      "54": {
        loc: {
          start: {
            line: 399,
            column: 25
          },
          end: {
            line: 399,
            column: 43
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 399,
            column: 41
          },
          end: {
            line: 399,
            column: 43
          }
        }],
        line: 399
      },
      "55": {
        loc: {
          start: {
            line: 420,
            column: 37
          },
          end: {
            line: 420,
            column: 133
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 420,
            column: 122
          },
          end: {
            line: 420,
            column: 124
          }
        }, {
          start: {
            line: 420,
            column: 127
          },
          end: {
            line: 420,
            column: 133
          }
        }],
        line: 420
      },
      "56": {
        loc: {
          start: {
            line: 420,
            column: 50
          },
          end: {
            line: 420,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 420,
            column: 50
          },
          end: {
            line: 420,
            column: 86
          }
        }, {
          start: {
            line: 420,
            column: 90
          },
          end: {
            line: 420,
            column: 103
          }
        }],
        line: 420
      },
      "57": {
        loc: {
          start: {
            line: 420,
            column: 135
          },
          end: {
            line: 420,
            column: 241
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 420,
            column: 230
          },
          end: {
            line: 420,
            column: 232
          }
        }, {
          start: {
            line: 420,
            column: 235
          },
          end: {
            line: 420,
            column: 241
          }
        }],
        line: 420
      },
      "58": {
        loc: {
          start: {
            line: 420,
            column: 148
          },
          end: {
            line: 420,
            column: 211
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 420,
            column: 148
          },
          end: {
            line: 420,
            column: 189
          }
        }, {
          start: {
            line: 420,
            column: 193
          },
          end: {
            line: 420,
            column: 211
          }
        }],
        line: 420
      },
      "59": {
        loc: {
          start: {
            line: 420,
            column: 243
          },
          end: {
            line: 420,
            column: 355
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 420,
            column: 344
          },
          end: {
            line: 420,
            column: 346
          }
        }, {
          start: {
            line: 420,
            column: 349
          },
          end: {
            line: 420,
            column: 355
          }
        }],
        line: 420
      },
      "60": {
        loc: {
          start: {
            line: 420,
            column: 256
          },
          end: {
            line: 420,
            column: 325
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 420,
            column: 256
          },
          end: {
            line: 420,
            column: 300
          }
        }, {
          start: {
            line: 420,
            column: 304
          },
          end: {
            line: 420,
            column: 325
          }
        }],
        line: 420
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\services\\audit-log.service.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\services\\audit-log.service.ts"],
      sourcesContent: ["import { Injectable, Logger } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\nimport { TenantCacheService } from './tenant-cache.service';\nimport { TenantDatabaseService } from './tenant-database.service';\n\ninterface AuditLogEntry {\n  id?: string;\n  organizationId: string;\n  userId: string;\n  action: string;\n  resource: string;\n  resourceId?: string;\n  details?: Record<string, any>;\n  ipAddress?: string;\n  userAgent?: string;\n  timestamp: Date;\n  severity: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\n  category: 'AUTH' | 'DATA' | 'ADMIN' | 'SECURITY' | 'SYSTEM';\n  success: boolean;\n  errorMessage?: string;\n}\n\ninterface SecurityEvent {\n  type: 'CROSS_TENANT_ACCESS' | 'UNAUTHORIZED_ACCESS' | 'SUSPICIOUS_ACTIVITY' | 'DATA_BREACH' | 'PRIVILEGE_ESCALATION';\n  organizationId: string;\n  userId?: string;\n  details: Record<string, any>;\n  severity: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\n  ipAddress?: string;\n  userAgent?: string;\n}\n\ninterface AuditLogQuery {\n  organizationId: string;\n  userId?: string;\n  action?: string;\n  resource?: string;\n  category?: string;\n  severity?: string;\n  startDate?: Date;\n  endDate?: Date;\n  limit?: number;\n  offset?: number;\n}\n\ninterface AuditLogStats {\n  totalLogs: number;\n  logsByCategory: Record<string, number>;\n  logsBySeverity: Record<string, number>;\n  recentActivity: number;\n  securityEvents: number;\n}\n\n@Injectable()\nexport class AuditLogService {\n  private readonly logger = new Logger(AuditLogService.name);\n\n  // A\xE7\xF5es sens\xEDveis que sempre devem ser logadas\n  private readonly criticalActions = [\n    'USER_LOGIN',\n    'USER_LOGOUT',\n    'PASSWORD_CHANGE',\n    'ROLE_CHANGE',\n    'ORGANIZATION_CREATE',\n    'ORGANIZATION_DELETE',\n    'INVITATION_SEND',\n    'DATA_EXPORT',\n    'SETTINGS_CHANGE',\n    'CROSS_TENANT_ACCESS',\n  ];\n\n  // Recursos que requerem auditoria\n  private readonly auditedResources = [\n    'User',\n    'Organization',\n    'Campaign',\n    'Contact',\n    'Message',\n    'Webhook',\n    'Integration',\n    'Settings',\n  ];\n\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly tenantCacheService: TenantCacheService,\n    private readonly tenantDatabaseService: TenantDatabaseService,\n  ) {}\n\n  // Criar entrada de audit log\n  async createAuditLog(entry: Omit<AuditLogEntry, 'id' | 'timestamp'>): Promise<void> {\n    try {\n      // Validar se a organiza\xE7\xE3o existe\n      await this.validateOrganization(entry.organizationId);\n\n      // Criar entrada no banco\n      await this.prisma.auditLog.create({\n        data: {\n          organizationId: entry.organizationId,\n          userId: entry.userId,\n          action: entry.action,\n          resource: entry.resource,\n          resourceId: entry.resourceId,\n          details: entry.details || {},\n          ipAddress: entry.ipAddress,\n          userAgent: entry.userAgent,\n          timestamp: new Date(),\n          severity: entry.severity,\n          category: entry.category,\n          success: entry.success,\n          errorMessage: entry.errorMessage,\n        },\n      });\n\n      // Cache para estat\xEDsticas r\xE1pidas\n      await this.updateAuditStats(entry.organizationId, entry.category, entry.severity);\n\n      // Log cr\xEDtico no sistema\n      if (entry.severity === 'CRITICAL' || this.criticalActions.includes(entry.action)) {\n        this.logger.warn(\n          `CRITICAL AUDIT: ${entry.action} by user ${entry.userId} in org ${entry.organizationId}`,\n          { entry },\n        );\n      }\n\n      // Detectar atividade suspeita\n      await this.detectSuspiciousActivity(entry);\n\n    } catch (error) {\n      this.logger.error(\n        `Failed to create audit log: ${error.message}`,\n        error.stack,\n      );\n      \n      // N\xE3o falhar a opera\xE7\xE3o principal por causa do audit log\n      // Mas registrar o erro para investiga\xE7\xE3o\n    }\n  }\n\n  // Log de a\xE7\xE3o com contexto autom\xE1tico\n  async logAction(\n    organizationId: string,\n    userId: string,\n    action: string,\n    resource: string,\n    options: {\n      resourceId?: string;\n      details?: Record<string, any>;\n      ipAddress?: string;\n      userAgent?: string;\n      success?: boolean;\n      errorMessage?: string;\n    } = {},\n  ): Promise<void> {\n    const severity = this.determineSeverity(action, resource);\n    const category = this.determineCategory(action, resource);\n\n    await this.createAuditLog({\n      organizationId,\n      userId,\n      action,\n      resource,\n      resourceId: options.resourceId,\n      details: options.details,\n      ipAddress: options.ipAddress,\n      userAgent: options.userAgent,\n      severity,\n      category,\n      success: options.success ?? true,\n      errorMessage: options.errorMessage,\n    });\n  }\n\n  // Log de evento de seguran\xE7a\n  async logSecurityEvent(event: SecurityEvent): Promise<void> {\n    try {\n      await this.createAuditLog({\n        organizationId: event.organizationId,\n        userId: event.userId || 'SYSTEM',\n        action: `SECURITY_EVENT_${event.type}`,\n        resource: 'Security',\n        details: event.details,\n        ipAddress: event.ipAddress,\n        userAgent: event.userAgent,\n        severity: event.severity,\n        category: 'SECURITY',\n        success: false, // Eventos de seguran\xE7a s\xE3o sempre falhas\n      });\n\n      // Alertar para eventos cr\xEDticos\n      if (event.severity === 'CRITICAL') {\n        await this.triggerSecurityAlert(event);\n      }\n\n    } catch (error) {\n      this.logger.error(\n        `Failed to log security event: ${error.message}`,\n        error.stack,\n      );\n    }\n  }\n\n  // Buscar logs de auditoria\n  async getAuditLogs(query: AuditLogQuery): Promise<{\n    logs: AuditLogEntry[];\n    total: number;\n    hasMore: boolean;\n  }> {\n    try {\n      // Validar acesso \xE0 organiza\xE7\xE3o\n      await this.validateOrganization(query.organizationId);\n\n      const where: any = {\n        organizationId: query.organizationId,\n      };\n\n      if (query.userId) where.userId = query.userId;\n      if (query.action) where.action = { contains: query.action };\n      if (query.resource) where.resource = query.resource;\n      if (query.category) where.category = query.category;\n      if (query.severity) where.severity = query.severity;\n      \n      if (query.startDate || query.endDate) {\n        where.timestamp = {};\n        if (query.startDate) where.timestamp.gte = query.startDate;\n        if (query.endDate) where.timestamp.lte = query.endDate;\n      }\n\n      const limit = Math.min(query.limit || 50, 1000); // M\xE1ximo 1000\n      const offset = query.offset || 0;\n\n      const [logs, total] = await Promise.all([\n        this.prisma.auditLog.findMany({\n          where,\n          orderBy: { timestamp: 'desc' },\n          take: limit,\n          skip: offset,\n          include: {\n            user: {\n              select: {\n                id: true,\n                name: true,\n                email: true,\n              },\n            },\n          },\n        }),\n        this.prisma.auditLog.count({ where }),\n      ]);\n\n      return {\n        logs: logs as AuditLogEntry[],\n        total,\n        hasMore: offset + limit < total,\n      };\n\n    } catch (error) {\n      this.logger.error(\n        `Failed to get audit logs: ${error.message}`,\n        error.stack,\n      );\n      throw error;\n    }\n  }\n\n  // Obter estat\xEDsticas de auditoria\n  async getAuditStats(organizationId: string, days: number = 30): Promise<AuditLogStats> {\n    try {\n      await this.validateOrganization(organizationId);\n\n      const startDate = new Date();\n      startDate.setDate(startDate.getDate() - days);\n\n      const where = {\n        organizationId,\n        timestamp: { gte: startDate },\n      };\n\n      const [total, categoryStats, severityStats, recentCount, securityCount] = await Promise.all([\n        this.prisma.auditLog.count({ where }),\n        this.prisma.auditLog.groupBy({\n          by: ['category'],\n          where,\n          _count: { category: true },\n        }),\n        this.prisma.auditLog.groupBy({\n          by: ['severity'],\n          where,\n          _count: { severity: true },\n        }),\n        this.prisma.auditLog.count({\n          where: {\n            ...where,\n            timestamp: { gte: new Date(Date.now() - 24 * 60 * 60 * 1000) }, // \xDAltimas 24h\n          },\n        }),\n        this.prisma.auditLog.count({\n          where: {\n            ...where,\n            category: 'SECURITY',\n          },\n        }),\n      ]);\n\n      const logsByCategory: Record<string, number> = {};\n      categoryStats.forEach(stat => {\n        logsByCategory[stat.category] = stat._count.category;\n      });\n\n      const logsBySeverity: Record<string, number> = {};\n      severityStats.forEach(stat => {\n        logsBySeverity[stat.severity] = stat._count.severity;\n      });\n\n      return {\n        totalLogs: total,\n        logsByCategory,\n        logsBySeverity,\n        recentActivity: recentCount,\n        securityEvents: securityCount,\n      };\n\n    } catch (error) {\n      this.logger.error(\n        `Failed to get audit stats: ${error.message}`,\n        error.stack,\n      );\n      throw error;\n    }\n  }\n\n  // Verificar acesso cross-tenant\n  async validateCrossTenantAccess(\n    userId: string,\n    userOrganizationId: string,\n    targetOrganizationId: string,\n    resource: string,\n    action: string,\n  ): Promise<boolean> {\n    try {\n      // Se \xE9 a mesma organiza\xE7\xE3o, permitir\n      if (userOrganizationId === targetOrganizationId) {\n        return true;\n      }\n\n      // Log da tentativa de acesso cross-tenant\n      await this.logSecurityEvent({\n        type: 'CROSS_TENANT_ACCESS',\n        organizationId: userOrganizationId,\n        userId,\n        details: {\n          targetOrganizationId,\n          resource,\n          action,\n          blocked: true,\n        },\n        severity: 'HIGH',\n      });\n\n      this.logger.warn(\n        `Cross-tenant access attempt blocked: User ${userId} from org ${userOrganizationId} tried to access ${resource} in org ${targetOrganizationId}`,\n      );\n\n      return false;\n\n    } catch (error) {\n      this.logger.error(\n        `Failed to validate cross-tenant access: ${error.message}`,\n        error.stack,\n      );\n      \n      // Em caso de erro, bloquear por seguran\xE7a\n      return false;\n    }\n  }\n\n  // Detectar atividade suspeita\n  private async detectSuspiciousActivity(entry: AuditLogEntry): Promise<void> {\n    try {\n      const recentWindow = 5 * 60 * 1000; // 5 minutos\n      const recentTime = new Date(Date.now() - recentWindow);\n\n      // Verificar m\xFAltiplas tentativas de login falhadas\n      if (entry.action === 'USER_LOGIN' && !entry.success) {\n        const recentFailures = await this.prisma.auditLog.count({\n          where: {\n            userId: entry.userId,\n            action: 'USER_LOGIN',\n            success: false,\n            timestamp: { gte: recentTime },\n          },\n        });\n\n        if (recentFailures >= 5) {\n          await this.logSecurityEvent({\n            type: 'SUSPICIOUS_ACTIVITY',\n            organizationId: entry.organizationId,\n            userId: entry.userId,\n            details: {\n              reason: 'Multiple failed login attempts',\n              count: recentFailures,\n              timeWindow: '5 minutes',\n            },\n            severity: 'HIGH',\n            ipAddress: entry.ipAddress,\n            userAgent: entry.userAgent,\n          });\n        }\n      }\n\n      // Verificar atividade an\xF4mala (muitas a\xE7\xF5es em pouco tempo)\n      const recentActions = await this.prisma.auditLog.count({\n        where: {\n          userId: entry.userId,\n          organizationId: entry.organizationId,\n          timestamp: { gte: recentTime },\n        },\n      });\n\n      if (recentActions >= 50) { // 50 a\xE7\xF5es em 5 minutos\n        await this.logSecurityEvent({\n          type: 'SUSPICIOUS_ACTIVITY',\n          organizationId: entry.organizationId,\n          userId: entry.userId,\n          details: {\n            reason: 'Unusually high activity',\n            count: recentActions,\n            timeWindow: '5 minutes',\n          },\n          severity: 'MEDIUM',\n          ipAddress: entry.ipAddress,\n          userAgent: entry.userAgent,\n        });\n      }\n\n    } catch (error) {\n      this.logger.error(\n        `Failed to detect suspicious activity: ${error.message}`,\n        error.stack,\n      );\n    }\n  }\n\n  // M\xE9todos auxiliares\n  private determineSeverity(action: string, resource: string): 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL' {\n    if (this.criticalActions.includes(action)) {\n      return 'CRITICAL';\n    }\n\n    if (action.includes('DELETE') || action.includes('DESTROY')) {\n      return 'HIGH';\n    }\n\n    if (action.includes('UPDATE') || action.includes('MODIFY')) {\n      return 'MEDIUM';\n    }\n\n    return 'LOW';\n  }\n\n  private determineCategory(action: string, resource: string): 'AUTH' | 'DATA' | 'ADMIN' | 'SECURITY' | 'SYSTEM' {\n    if (action.includes('LOGIN') || action.includes('AUTH') || action.includes('PASSWORD')) {\n      return 'AUTH';\n    }\n\n    if (action.includes('SECURITY') || action.includes('PERMISSION')) {\n      return 'SECURITY';\n    }\n\n    if (resource === 'Organization' || action.includes('ADMIN')) {\n      return 'ADMIN';\n    }\n\n    if (action.includes('SYSTEM') || resource === 'System') {\n      return 'SYSTEM';\n    }\n\n    return 'DATA';\n  }\n\n  private async validateOrganization(organizationId: string): Promise<void> {\n    const exists = await this.prisma.organization.findUnique({\n      where: { id: organizationId },\n      select: { id: true },\n    });\n\n    if (!exists) {\n      throw new Error(`Organization ${organizationId} not found`);\n    }\n  }\n\n  private async updateAuditStats(\n    organizationId: string,\n    category: string,\n    severity: string,\n  ): Promise<void> {\n    try {\n      const key = `audit_stats:${organizationId}`;\n      const stats = await this.tenantCacheService.get(key) || {\n        categories: {},\n        severities: {},\n        lastUpdate: Date.now(),\n      };\n\n      stats.categories[category] = (stats.categories[category] || 0) + 1;\n      stats.severities[severity] = (stats.severities[severity] || 0) + 1;\n      stats.lastUpdate = Date.now();\n\n      await this.tenantCacheService.set(key, stats, 3600); // 1 hora\n    } catch (error) {\n      this.logger.error(\n        `Failed to update audit stats: ${error.message}`,\n        error.stack,\n      );\n    }\n  }\n\n  private async triggerSecurityAlert(event: SecurityEvent): Promise<void> {\n    try {\n      // Aqui poderia integrar com sistemas de alerta\n      // Como Slack, email, SMS, etc.\n      \n      this.logger.error(\n        `SECURITY ALERT: ${event.type} in organization ${event.organizationId}`,\n        { event },\n      );\n\n      // Salvar alerta para dashboard\n      const alertKey = `security_alert:${event.organizationId}:${Date.now()}`;\n      await this.tenantCacheService.set(alertKey, event, 86400); // 24 horas\n\n    } catch (error) {\n      this.logger.error(\n        `Failed to trigger security alert: ${error.message}`,\n        error.stack,\n      );\n    }\n  }\n\n  // Limpeza de logs antigos\n  async cleanupOldLogs(retentionDays: number = 90): Promise<number> {\n    try {\n      const cutoffDate = new Date();\n      cutoffDate.setDate(cutoffDate.getDate() - retentionDays);\n\n      const result = await this.prisma.auditLog.deleteMany({\n        where: {\n          timestamp: { lt: cutoffDate },\n          severity: { not: 'CRITICAL' }, // Manter logs cr\xEDticos por mais tempo\n        },\n      });\n\n      this.logger.log(\n        `Cleaned up ${result.count} audit logs older than ${retentionDays} days`,\n      );\n\n      return result.count;\n\n    } catch (error) {\n      this.logger.error(\n        `Failed to cleanup old logs: ${error.message}`,\n        error.stack,\n      );\n      return 0;\n    }\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1c0f0128fba6afb7973c8014df402de4e1b22725"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_jsew5uwg2 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_jsew5uwg2();
var __decorate =
/* istanbul ignore next */
(cov_jsew5uwg2().s[0]++,
/* istanbul ignore next */
(cov_jsew5uwg2().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_jsew5uwg2().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_jsew5uwg2().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_jsew5uwg2().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_jsew5uwg2().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_jsew5uwg2().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_jsew5uwg2().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_jsew5uwg2().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_jsew5uwg2().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_jsew5uwg2().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_jsew5uwg2().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_jsew5uwg2().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_jsew5uwg2().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_jsew5uwg2().b[3][0]++;
    cov_jsew5uwg2().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_jsew5uwg2().b[3][1]++;
    cov_jsew5uwg2().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_jsew5uwg2().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_jsew5uwg2().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_jsew5uwg2().b[5][0]++;
        cov_jsew5uwg2().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_jsew5uwg2().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_jsew5uwg2().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_jsew5uwg2().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_jsew5uwg2().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_jsew5uwg2().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_jsew5uwg2().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_jsew5uwg2().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_jsew5uwg2().s[9]++;
  return /* istanbul ignore next */(cov_jsew5uwg2().b[9][0]++, c > 3) &&
  /* istanbul ignore next */
  (cov_jsew5uwg2().b[9][1]++, r) &&
  /* istanbul ignore next */
  (cov_jsew5uwg2().b[9][2]++, Object.defineProperty(target, key, r)), r;
}));
var __metadata =
/* istanbul ignore next */
(cov_jsew5uwg2().s[10]++,
/* istanbul ignore next */
(cov_jsew5uwg2().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_jsew5uwg2().b[10][1]++, this.__metadata) ||
/* istanbul ignore next */
(cov_jsew5uwg2().b[10][2]++, function (k, v) {
  /* istanbul ignore next */
  cov_jsew5uwg2().f[1]++;
  cov_jsew5uwg2().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_jsew5uwg2().b[12][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_jsew5uwg2().b[12][1]++, typeof Reflect.metadata === "function")) {
    /* istanbul ignore next */
    cov_jsew5uwg2().b[11][0]++;
    cov_jsew5uwg2().s[12]++;
    return Reflect.metadata(k, v);
  } else
  /* istanbul ignore next */
  {
    cov_jsew5uwg2().b[11][1]++;
  }
}));
var AuditLogService_1;
var _a, _b, _c;
import { Injectable, Logger } from '@nestjs/common';
import { PrismaService } from './prisma.service';
import { TenantCacheService } from './tenant-cache.service';
import { TenantDatabaseService } from './tenant-database.service';
let AuditLogService =
/* istanbul ignore next */
(cov_jsew5uwg2().s[13]++, AuditLogService_1 = class AuditLogService {
  prisma;
  tenantCacheService;
  tenantDatabaseService;
  logger =
  /* istanbul ignore next */
  (cov_jsew5uwg2().s[14]++, new Logger(AuditLogService_1.name));
  // Ações sensíveis que sempre devem ser logadas
  criticalActions =
  /* istanbul ignore next */
  (cov_jsew5uwg2().s[15]++, ['USER_LOGIN', 'USER_LOGOUT', 'PASSWORD_CHANGE', 'ROLE_CHANGE', 'ORGANIZATION_CREATE', 'ORGANIZATION_DELETE', 'INVITATION_SEND', 'DATA_EXPORT', 'SETTINGS_CHANGE', 'CROSS_TENANT_ACCESS']);
  // Recursos que requerem auditoria
  auditedResources =
  /* istanbul ignore next */
  (cov_jsew5uwg2().s[16]++, ['User', 'Organization', 'Campaign', 'Contact', 'Message', 'Webhook', 'Integration', 'Settings']);
  constructor(prisma, tenantCacheService, tenantDatabaseService) {
    /* istanbul ignore next */
    cov_jsew5uwg2().f[2]++;
    cov_jsew5uwg2().s[17]++;
    this.prisma = prisma;
    /* istanbul ignore next */
    cov_jsew5uwg2().s[18]++;
    this.tenantCacheService = tenantCacheService;
    /* istanbul ignore next */
    cov_jsew5uwg2().s[19]++;
    this.tenantDatabaseService = tenantDatabaseService;
  }
  // Criar entrada de audit log
  async createAuditLog(entry) {
    /* istanbul ignore next */
    cov_jsew5uwg2().f[3]++;
    cov_jsew5uwg2().s[20]++;
    try {
      /* istanbul ignore next */
      cov_jsew5uwg2().s[21]++;
      // Validar se a organização existe
      await this.validateOrganization(entry.organizationId);
      // Criar entrada no banco
      /* istanbul ignore next */
      cov_jsew5uwg2().s[22]++;
      await this.prisma.auditLog.create({
        data: {
          organizationId: entry.organizationId,
          userId: entry.userId,
          action: entry.action,
          resource: entry.resource,
          resourceId: entry.resourceId,
          details:
          /* istanbul ignore next */
          (cov_jsew5uwg2().b[13][0]++, entry.details) ||
          /* istanbul ignore next */
          (cov_jsew5uwg2().b[13][1]++, {}),
          ipAddress: entry.ipAddress,
          userAgent: entry.userAgent,
          timestamp: new Date(),
          severity: entry.severity,
          category: entry.category,
          success: entry.success,
          errorMessage: entry.errorMessage
        }
      });
      // Cache para estatísticas rápidas
      /* istanbul ignore next */
      cov_jsew5uwg2().s[23]++;
      await this.updateAuditStats(entry.organizationId, entry.category, entry.severity);
      // Log crítico no sistema
      /* istanbul ignore next */
      cov_jsew5uwg2().s[24]++;
      if (
      /* istanbul ignore next */
      (cov_jsew5uwg2().b[15][0]++, entry.severity === 'CRITICAL') ||
      /* istanbul ignore next */
      (cov_jsew5uwg2().b[15][1]++, this.criticalActions.includes(entry.action))) {
        /* istanbul ignore next */
        cov_jsew5uwg2().b[14][0]++;
        cov_jsew5uwg2().s[25]++;
        this.logger.warn(`CRITICAL AUDIT: ${entry.action} by user ${entry.userId} in org ${entry.organizationId}`, {
          entry
        });
      } else
      /* istanbul ignore next */
      {
        cov_jsew5uwg2().b[14][1]++;
      }
      // Detectar atividade suspeita
      cov_jsew5uwg2().s[26]++;
      await this.detectSuspiciousActivity(entry);
    } catch (error) {
      /* istanbul ignore next */
      cov_jsew5uwg2().s[27]++;
      this.logger.error(`Failed to create audit log: ${error.message}`, error.stack);
      // Não falhar a operação principal por causa do audit log
      // Mas registrar o erro para investigação
    }
  }
  // Log de ação com contexto automático
  async logAction(organizationId, userId, action, resource, options =
  /* istanbul ignore next */
  (cov_jsew5uwg2().b[16][0]++, {})) {
    /* istanbul ignore next */
    cov_jsew5uwg2().f[4]++;
    const severity =
    /* istanbul ignore next */
    (cov_jsew5uwg2().s[28]++, this.determineSeverity(action, resource));
    const category =
    /* istanbul ignore next */
    (cov_jsew5uwg2().s[29]++, this.determineCategory(action, resource));
    /* istanbul ignore next */
    cov_jsew5uwg2().s[30]++;
    await this.createAuditLog({
      organizationId,
      userId,
      action,
      resource,
      resourceId: options.resourceId,
      details: options.details,
      ipAddress: options.ipAddress,
      userAgent: options.userAgent,
      severity,
      category,
      success:
      /* istanbul ignore next */
      (cov_jsew5uwg2().b[17][0]++, options.success) ??
      /* istanbul ignore next */
      (cov_jsew5uwg2().b[17][1]++, true),
      errorMessage: options.errorMessage
    });
  }
  // Log de evento de segurança
  async logSecurityEvent(event) {
    /* istanbul ignore next */
    cov_jsew5uwg2().f[5]++;
    cov_jsew5uwg2().s[31]++;
    try {
      /* istanbul ignore next */
      cov_jsew5uwg2().s[32]++;
      await this.createAuditLog({
        organizationId: event.organizationId,
        userId:
        /* istanbul ignore next */
        (cov_jsew5uwg2().b[18][0]++, event.userId) ||
        /* istanbul ignore next */
        (cov_jsew5uwg2().b[18][1]++, 'SYSTEM'),
        action: `SECURITY_EVENT_${event.type}`,
        resource: 'Security',
        details: event.details,
        ipAddress: event.ipAddress,
        userAgent: event.userAgent,
        severity: event.severity,
        category: 'SECURITY',
        success: false // Eventos de segurança são sempre falhas
      });
      // Alertar para eventos críticos
      /* istanbul ignore next */
      cov_jsew5uwg2().s[33]++;
      if (event.severity === 'CRITICAL') {
        /* istanbul ignore next */
        cov_jsew5uwg2().b[19][0]++;
        cov_jsew5uwg2().s[34]++;
        await this.triggerSecurityAlert(event);
      } else
      /* istanbul ignore next */
      {
        cov_jsew5uwg2().b[19][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_jsew5uwg2().s[35]++;
      this.logger.error(`Failed to log security event: ${error.message}`, error.stack);
    }
  }
  // Buscar logs de auditoria
  async getAuditLogs(query) {
    /* istanbul ignore next */
    cov_jsew5uwg2().f[6]++;
    cov_jsew5uwg2().s[36]++;
    try {
      /* istanbul ignore next */
      cov_jsew5uwg2().s[37]++;
      // Validar acesso à organização
      await this.validateOrganization(query.organizationId);
      const where =
      /* istanbul ignore next */
      (cov_jsew5uwg2().s[38]++, {
        organizationId: query.organizationId
      });
      /* istanbul ignore next */
      cov_jsew5uwg2().s[39]++;
      if (query.userId) {
        /* istanbul ignore next */
        cov_jsew5uwg2().b[20][0]++;
        cov_jsew5uwg2().s[40]++;
        where.userId = query.userId;
      } else
      /* istanbul ignore next */
      {
        cov_jsew5uwg2().b[20][1]++;
      }
      cov_jsew5uwg2().s[41]++;
      if (query.action) {
        /* istanbul ignore next */
        cov_jsew5uwg2().b[21][0]++;
        cov_jsew5uwg2().s[42]++;
        where.action = {
          contains: query.action
        };
      } else
      /* istanbul ignore next */
      {
        cov_jsew5uwg2().b[21][1]++;
      }
      cov_jsew5uwg2().s[43]++;
      if (query.resource) {
        /* istanbul ignore next */
        cov_jsew5uwg2().b[22][0]++;
        cov_jsew5uwg2().s[44]++;
        where.resource = query.resource;
      } else
      /* istanbul ignore next */
      {
        cov_jsew5uwg2().b[22][1]++;
      }
      cov_jsew5uwg2().s[45]++;
      if (query.category) {
        /* istanbul ignore next */
        cov_jsew5uwg2().b[23][0]++;
        cov_jsew5uwg2().s[46]++;
        where.category = query.category;
      } else
      /* istanbul ignore next */
      {
        cov_jsew5uwg2().b[23][1]++;
      }
      cov_jsew5uwg2().s[47]++;
      if (query.severity) {
        /* istanbul ignore next */
        cov_jsew5uwg2().b[24][0]++;
        cov_jsew5uwg2().s[48]++;
        where.severity = query.severity;
      } else
      /* istanbul ignore next */
      {
        cov_jsew5uwg2().b[24][1]++;
      }
      cov_jsew5uwg2().s[49]++;
      if (
      /* istanbul ignore next */
      (cov_jsew5uwg2().b[26][0]++, query.startDate) ||
      /* istanbul ignore next */
      (cov_jsew5uwg2().b[26][1]++, query.endDate)) {
        /* istanbul ignore next */
        cov_jsew5uwg2().b[25][0]++;
        cov_jsew5uwg2().s[50]++;
        where.timestamp = {};
        /* istanbul ignore next */
        cov_jsew5uwg2().s[51]++;
        if (query.startDate) {
          /* istanbul ignore next */
          cov_jsew5uwg2().b[27][0]++;
          cov_jsew5uwg2().s[52]++;
          where.timestamp.gte = query.startDate;
        } else
        /* istanbul ignore next */
        {
          cov_jsew5uwg2().b[27][1]++;
        }
        cov_jsew5uwg2().s[53]++;
        if (query.endDate) {
          /* istanbul ignore next */
          cov_jsew5uwg2().b[28][0]++;
          cov_jsew5uwg2().s[54]++;
          where.timestamp.lte = query.endDate;
        } else
        /* istanbul ignore next */
        {
          cov_jsew5uwg2().b[28][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_jsew5uwg2().b[25][1]++;
      }
      const limit =
      /* istanbul ignore next */
      (cov_jsew5uwg2().s[55]++, Math.min(
      /* istanbul ignore next */
      (cov_jsew5uwg2().b[29][0]++, query.limit) ||
      /* istanbul ignore next */
      (cov_jsew5uwg2().b[29][1]++, 50), 1000)); // Máximo 1000
      const offset =
      /* istanbul ignore next */
      (cov_jsew5uwg2().s[56]++,
      /* istanbul ignore next */
      (cov_jsew5uwg2().b[30][0]++, query.offset) ||
      /* istanbul ignore next */
      (cov_jsew5uwg2().b[30][1]++, 0));
      const [logs, total] =
      /* istanbul ignore next */
      (cov_jsew5uwg2().s[57]++, await Promise.all([this.prisma.auditLog.findMany({
        where,
        orderBy: {
          timestamp: 'desc'
        },
        take: limit,
        skip: offset,
        include: {
          user: {
            select: {
              id: true,
              name: true,
              email: true
            }
          }
        }
      }), this.prisma.auditLog.count({
        where
      })]));
      /* istanbul ignore next */
      cov_jsew5uwg2().s[58]++;
      return {
        logs: logs,
        total,
        hasMore: offset + limit < total
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_jsew5uwg2().s[59]++;
      this.logger.error(`Failed to get audit logs: ${error.message}`, error.stack);
      /* istanbul ignore next */
      cov_jsew5uwg2().s[60]++;
      throw error;
    }
  }
  // Obter estatísticas de auditoria
  async getAuditStats(organizationId, days =
  /* istanbul ignore next */
  (cov_jsew5uwg2().b[31][0]++, 30)) {
    /* istanbul ignore next */
    cov_jsew5uwg2().f[7]++;
    cov_jsew5uwg2().s[61]++;
    try {
      /* istanbul ignore next */
      cov_jsew5uwg2().s[62]++;
      await this.validateOrganization(organizationId);
      const startDate =
      /* istanbul ignore next */
      (cov_jsew5uwg2().s[63]++, new Date());
      /* istanbul ignore next */
      cov_jsew5uwg2().s[64]++;
      startDate.setDate(startDate.getDate() - days);
      const where =
      /* istanbul ignore next */
      (cov_jsew5uwg2().s[65]++, {
        organizationId,
        timestamp: {
          gte: startDate
        }
      });
      const [total, categoryStats, severityStats, recentCount, securityCount] =
      /* istanbul ignore next */
      (cov_jsew5uwg2().s[66]++, await Promise.all([this.prisma.auditLog.count({
        where
      }), this.prisma.auditLog.groupBy({
        by: ['category'],
        where,
        _count: {
          category: true
        }
      }), this.prisma.auditLog.groupBy({
        by: ['severity'],
        where,
        _count: {
          severity: true
        }
      }), this.prisma.auditLog.count({
        where: {
          ...where,
          timestamp: {
            gte: new Date(Date.now() - 24 * 60 * 60 * 1000)
          } // Últimas 24h
        }
      }), this.prisma.auditLog.count({
        where: {
          ...where,
          category: 'SECURITY'
        }
      })]));
      const logsByCategory =
      /* istanbul ignore next */
      (cov_jsew5uwg2().s[67]++, {});
      /* istanbul ignore next */
      cov_jsew5uwg2().s[68]++;
      categoryStats.forEach(stat => {
        /* istanbul ignore next */
        cov_jsew5uwg2().f[8]++;
        cov_jsew5uwg2().s[69]++;
        logsByCategory[stat.category] = stat._count.category;
      });
      const logsBySeverity =
      /* istanbul ignore next */
      (cov_jsew5uwg2().s[70]++, {});
      /* istanbul ignore next */
      cov_jsew5uwg2().s[71]++;
      severityStats.forEach(stat => {
        /* istanbul ignore next */
        cov_jsew5uwg2().f[9]++;
        cov_jsew5uwg2().s[72]++;
        logsBySeverity[stat.severity] = stat._count.severity;
      });
      /* istanbul ignore next */
      cov_jsew5uwg2().s[73]++;
      return {
        totalLogs: total,
        logsByCategory,
        logsBySeverity,
        recentActivity: recentCount,
        securityEvents: securityCount
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_jsew5uwg2().s[74]++;
      this.logger.error(`Failed to get audit stats: ${error.message}`, error.stack);
      /* istanbul ignore next */
      cov_jsew5uwg2().s[75]++;
      throw error;
    }
  }
  // Verificar acesso cross-tenant
  async validateCrossTenantAccess(userId, userOrganizationId, targetOrganizationId, resource, action) {
    /* istanbul ignore next */
    cov_jsew5uwg2().f[10]++;
    cov_jsew5uwg2().s[76]++;
    try {
      /* istanbul ignore next */
      cov_jsew5uwg2().s[77]++;
      // Se é a mesma organização, permitir
      if (userOrganizationId === targetOrganizationId) {
        /* istanbul ignore next */
        cov_jsew5uwg2().b[32][0]++;
        cov_jsew5uwg2().s[78]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_jsew5uwg2().b[32][1]++;
      }
      // Log da tentativa de acesso cross-tenant
      cov_jsew5uwg2().s[79]++;
      await this.logSecurityEvent({
        type: 'CROSS_TENANT_ACCESS',
        organizationId: userOrganizationId,
        userId,
        details: {
          targetOrganizationId,
          resource,
          action,
          blocked: true
        },
        severity: 'HIGH'
      });
      /* istanbul ignore next */
      cov_jsew5uwg2().s[80]++;
      this.logger.warn(`Cross-tenant access attempt blocked: User ${userId} from org ${userOrganizationId} tried to access ${resource} in org ${targetOrganizationId}`);
      /* istanbul ignore next */
      cov_jsew5uwg2().s[81]++;
      return false;
    } catch (error) {
      /* istanbul ignore next */
      cov_jsew5uwg2().s[82]++;
      this.logger.error(`Failed to validate cross-tenant access: ${error.message}`, error.stack);
      // Em caso de erro, bloquear por segurança
      /* istanbul ignore next */
      cov_jsew5uwg2().s[83]++;
      return false;
    }
  }
  // Detectar atividade suspeita
  async detectSuspiciousActivity(entry) {
    /* istanbul ignore next */
    cov_jsew5uwg2().f[11]++;
    cov_jsew5uwg2().s[84]++;
    try {
      const recentWindow =
      /* istanbul ignore next */
      (cov_jsew5uwg2().s[85]++, 5 * 60 * 1000); // 5 minutos
      const recentTime =
      /* istanbul ignore next */
      (cov_jsew5uwg2().s[86]++, new Date(Date.now() - recentWindow));
      // Verificar múltiplas tentativas de login falhadas
      /* istanbul ignore next */
      cov_jsew5uwg2().s[87]++;
      if (
      /* istanbul ignore next */
      (cov_jsew5uwg2().b[34][0]++, entry.action === 'USER_LOGIN') &&
      /* istanbul ignore next */
      (cov_jsew5uwg2().b[34][1]++, !entry.success)) {
        /* istanbul ignore next */
        cov_jsew5uwg2().b[33][0]++;
        const recentFailures =
        /* istanbul ignore next */
        (cov_jsew5uwg2().s[88]++, await this.prisma.auditLog.count({
          where: {
            userId: entry.userId,
            action: 'USER_LOGIN',
            success: false,
            timestamp: {
              gte: recentTime
            }
          }
        }));
        /* istanbul ignore next */
        cov_jsew5uwg2().s[89]++;
        if (recentFailures >= 5) {
          /* istanbul ignore next */
          cov_jsew5uwg2().b[35][0]++;
          cov_jsew5uwg2().s[90]++;
          await this.logSecurityEvent({
            type: 'SUSPICIOUS_ACTIVITY',
            organizationId: entry.organizationId,
            userId: entry.userId,
            details: {
              reason: 'Multiple failed login attempts',
              count: recentFailures,
              timeWindow: '5 minutes'
            },
            severity: 'HIGH',
            ipAddress: entry.ipAddress,
            userAgent: entry.userAgent
          });
        } else
        /* istanbul ignore next */
        {
          cov_jsew5uwg2().b[35][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_jsew5uwg2().b[33][1]++;
      }
      // Verificar atividade anômala (muitas ações em pouco tempo)
      const recentActions =
      /* istanbul ignore next */
      (cov_jsew5uwg2().s[91]++, await this.prisma.auditLog.count({
        where: {
          userId: entry.userId,
          organizationId: entry.organizationId,
          timestamp: {
            gte: recentTime
          }
        }
      }));
      /* istanbul ignore next */
      cov_jsew5uwg2().s[92]++;
      if (recentActions >= 50) {
        /* istanbul ignore next */
        cov_jsew5uwg2().b[36][0]++;
        cov_jsew5uwg2().s[93]++;
        // 50 ações em 5 minutos
        await this.logSecurityEvent({
          type: 'SUSPICIOUS_ACTIVITY',
          organizationId: entry.organizationId,
          userId: entry.userId,
          details: {
            reason: 'Unusually high activity',
            count: recentActions,
            timeWindow: '5 minutes'
          },
          severity: 'MEDIUM',
          ipAddress: entry.ipAddress,
          userAgent: entry.userAgent
        });
      } else
      /* istanbul ignore next */
      {
        cov_jsew5uwg2().b[36][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_jsew5uwg2().s[94]++;
      this.logger.error(`Failed to detect suspicious activity: ${error.message}`, error.stack);
    }
  }
  // Métodos auxiliares
  determineSeverity(action, resource) {
    /* istanbul ignore next */
    cov_jsew5uwg2().f[12]++;
    cov_jsew5uwg2().s[95]++;
    if (this.criticalActions.includes(action)) {
      /* istanbul ignore next */
      cov_jsew5uwg2().b[37][0]++;
      cov_jsew5uwg2().s[96]++;
      return 'CRITICAL';
    } else
    /* istanbul ignore next */
    {
      cov_jsew5uwg2().b[37][1]++;
    }
    cov_jsew5uwg2().s[97]++;
    if (
    /* istanbul ignore next */
    (cov_jsew5uwg2().b[39][0]++, action.includes('DELETE')) ||
    /* istanbul ignore next */
    (cov_jsew5uwg2().b[39][1]++, action.includes('DESTROY'))) {
      /* istanbul ignore next */
      cov_jsew5uwg2().b[38][0]++;
      cov_jsew5uwg2().s[98]++;
      return 'HIGH';
    } else
    /* istanbul ignore next */
    {
      cov_jsew5uwg2().b[38][1]++;
    }
    cov_jsew5uwg2().s[99]++;
    if (
    /* istanbul ignore next */
    (cov_jsew5uwg2().b[41][0]++, action.includes('UPDATE')) ||
    /* istanbul ignore next */
    (cov_jsew5uwg2().b[41][1]++, action.includes('MODIFY'))) {
      /* istanbul ignore next */
      cov_jsew5uwg2().b[40][0]++;
      cov_jsew5uwg2().s[100]++;
      return 'MEDIUM';
    } else
    /* istanbul ignore next */
    {
      cov_jsew5uwg2().b[40][1]++;
    }
    cov_jsew5uwg2().s[101]++;
    return 'LOW';
  }
  determineCategory(action, resource) {
    /* istanbul ignore next */
    cov_jsew5uwg2().f[13]++;
    cov_jsew5uwg2().s[102]++;
    if (
    /* istanbul ignore next */
    (cov_jsew5uwg2().b[43][0]++, action.includes('LOGIN')) ||
    /* istanbul ignore next */
    (cov_jsew5uwg2().b[43][1]++, action.includes('AUTH')) ||
    /* istanbul ignore next */
    (cov_jsew5uwg2().b[43][2]++, action.includes('PASSWORD'))) {
      /* istanbul ignore next */
      cov_jsew5uwg2().b[42][0]++;
      cov_jsew5uwg2().s[103]++;
      return 'AUTH';
    } else
    /* istanbul ignore next */
    {
      cov_jsew5uwg2().b[42][1]++;
    }
    cov_jsew5uwg2().s[104]++;
    if (
    /* istanbul ignore next */
    (cov_jsew5uwg2().b[45][0]++, action.includes('SECURITY')) ||
    /* istanbul ignore next */
    (cov_jsew5uwg2().b[45][1]++, action.includes('PERMISSION'))) {
      /* istanbul ignore next */
      cov_jsew5uwg2().b[44][0]++;
      cov_jsew5uwg2().s[105]++;
      return 'SECURITY';
    } else
    /* istanbul ignore next */
    {
      cov_jsew5uwg2().b[44][1]++;
    }
    cov_jsew5uwg2().s[106]++;
    if (
    /* istanbul ignore next */
    (cov_jsew5uwg2().b[47][0]++, resource === 'Organization') ||
    /* istanbul ignore next */
    (cov_jsew5uwg2().b[47][1]++, action.includes('ADMIN'))) {
      /* istanbul ignore next */
      cov_jsew5uwg2().b[46][0]++;
      cov_jsew5uwg2().s[107]++;
      return 'ADMIN';
    } else
    /* istanbul ignore next */
    {
      cov_jsew5uwg2().b[46][1]++;
    }
    cov_jsew5uwg2().s[108]++;
    if (
    /* istanbul ignore next */
    (cov_jsew5uwg2().b[49][0]++, action.includes('SYSTEM')) ||
    /* istanbul ignore next */
    (cov_jsew5uwg2().b[49][1]++, resource === 'System')) {
      /* istanbul ignore next */
      cov_jsew5uwg2().b[48][0]++;
      cov_jsew5uwg2().s[109]++;
      return 'SYSTEM';
    } else
    /* istanbul ignore next */
    {
      cov_jsew5uwg2().b[48][1]++;
    }
    cov_jsew5uwg2().s[110]++;
    return 'DATA';
  }
  async validateOrganization(organizationId) {
    /* istanbul ignore next */
    cov_jsew5uwg2().f[14]++;
    const exists =
    /* istanbul ignore next */
    (cov_jsew5uwg2().s[111]++, await this.prisma.organization.findUnique({
      where: {
        id: organizationId
      },
      select: {
        id: true
      }
    }));
    /* istanbul ignore next */
    cov_jsew5uwg2().s[112]++;
    if (!exists) {
      /* istanbul ignore next */
      cov_jsew5uwg2().b[50][0]++;
      cov_jsew5uwg2().s[113]++;
      throw new Error(`Organization ${organizationId} not found`);
    } else
    /* istanbul ignore next */
    {
      cov_jsew5uwg2().b[50][1]++;
    }
  }
  async updateAuditStats(organizationId, category, severity) {
    /* istanbul ignore next */
    cov_jsew5uwg2().f[15]++;
    cov_jsew5uwg2().s[114]++;
    try {
      const key =
      /* istanbul ignore next */
      (cov_jsew5uwg2().s[115]++, `audit_stats:${organizationId}`);
      const stats =
      /* istanbul ignore next */
      (cov_jsew5uwg2().s[116]++,
      /* istanbul ignore next */
      (cov_jsew5uwg2().b[51][0]++, await this.tenantCacheService.get(key)) ||
      /* istanbul ignore next */
      (cov_jsew5uwg2().b[51][1]++, {
        categories: {},
        severities: {},
        lastUpdate: Date.now()
      }));
      /* istanbul ignore next */
      cov_jsew5uwg2().s[117]++;
      stats.categories[category] = (
      /* istanbul ignore next */
      (cov_jsew5uwg2().b[52][0]++, stats.categories[category]) ||
      /* istanbul ignore next */
      (cov_jsew5uwg2().b[52][1]++, 0)) + 1;
      /* istanbul ignore next */
      cov_jsew5uwg2().s[118]++;
      stats.severities[severity] = (
      /* istanbul ignore next */
      (cov_jsew5uwg2().b[53][0]++, stats.severities[severity]) ||
      /* istanbul ignore next */
      (cov_jsew5uwg2().b[53][1]++, 0)) + 1;
      /* istanbul ignore next */
      cov_jsew5uwg2().s[119]++;
      stats.lastUpdate = Date.now();
      /* istanbul ignore next */
      cov_jsew5uwg2().s[120]++;
      await this.tenantCacheService.set(key, stats, 3600); // 1 hora
    } catch (error) {
      /* istanbul ignore next */
      cov_jsew5uwg2().s[121]++;
      this.logger.error(`Failed to update audit stats: ${error.message}`, error.stack);
    }
  }
  async triggerSecurityAlert(event) {
    /* istanbul ignore next */
    cov_jsew5uwg2().f[16]++;
    cov_jsew5uwg2().s[122]++;
    try {
      /* istanbul ignore next */
      cov_jsew5uwg2().s[123]++;
      // Aqui poderia integrar com sistemas de alerta
      // Como Slack, email, SMS, etc.
      this.logger.error(`SECURITY ALERT: ${event.type} in organization ${event.organizationId}`, {
        event
      });
      // Salvar alerta para dashboard
      const alertKey =
      /* istanbul ignore next */
      (cov_jsew5uwg2().s[124]++, `security_alert:${event.organizationId}:${Date.now()}`);
      /* istanbul ignore next */
      cov_jsew5uwg2().s[125]++;
      await this.tenantCacheService.set(alertKey, event, 86400); // 24 horas
    } catch (error) {
      /* istanbul ignore next */
      cov_jsew5uwg2().s[126]++;
      this.logger.error(`Failed to trigger security alert: ${error.message}`, error.stack);
    }
  }
  // Limpeza de logs antigos
  async cleanupOldLogs(retentionDays =
  /* istanbul ignore next */
  (cov_jsew5uwg2().b[54][0]++, 90)) {
    /* istanbul ignore next */
    cov_jsew5uwg2().f[17]++;
    cov_jsew5uwg2().s[127]++;
    try {
      const cutoffDate =
      /* istanbul ignore next */
      (cov_jsew5uwg2().s[128]++, new Date());
      /* istanbul ignore next */
      cov_jsew5uwg2().s[129]++;
      cutoffDate.setDate(cutoffDate.getDate() - retentionDays);
      const result =
      /* istanbul ignore next */
      (cov_jsew5uwg2().s[130]++, await this.prisma.auditLog.deleteMany({
        where: {
          timestamp: {
            lt: cutoffDate
          },
          severity: {
            not: 'CRITICAL'
          } // Manter logs críticos por mais tempo
        }
      }));
      /* istanbul ignore next */
      cov_jsew5uwg2().s[131]++;
      this.logger.log(`Cleaned up ${result.count} audit logs older than ${retentionDays} days`);
      /* istanbul ignore next */
      cov_jsew5uwg2().s[132]++;
      return result.count;
    } catch (error) {
      /* istanbul ignore next */
      cov_jsew5uwg2().s[133]++;
      this.logger.error(`Failed to cleanup old logs: ${error.message}`, error.stack);
      /* istanbul ignore next */
      cov_jsew5uwg2().s[134]++;
      return 0;
    }
  }
});
/* istanbul ignore next */
cov_jsew5uwg2().s[135]++;
AuditLogService = AuditLogService_1 = __decorate([Injectable(), __metadata("design:paramtypes", [typeof (_a =
/* istanbul ignore next */
(cov_jsew5uwg2().b[56][0]++, typeof PrismaService !== "undefined") &&
/* istanbul ignore next */
(cov_jsew5uwg2().b[56][1]++, PrismaService)) === "function" ?
/* istanbul ignore next */
(cov_jsew5uwg2().b[55][0]++, _a) :
/* istanbul ignore next */
(cov_jsew5uwg2().b[55][1]++, Object), typeof (_b =
/* istanbul ignore next */
(cov_jsew5uwg2().b[58][0]++, typeof TenantCacheService !== "undefined") &&
/* istanbul ignore next */
(cov_jsew5uwg2().b[58][1]++, TenantCacheService)) === "function" ?
/* istanbul ignore next */
(cov_jsew5uwg2().b[57][0]++, _b) :
/* istanbul ignore next */
(cov_jsew5uwg2().b[57][1]++, Object), typeof (_c =
/* istanbul ignore next */
(cov_jsew5uwg2().b[60][0]++, typeof TenantDatabaseService !== "undefined") &&
/* istanbul ignore next */
(cov_jsew5uwg2().b[60][1]++, TenantDatabaseService)) === "function" ?
/* istanbul ignore next */
(cov_jsew5uwg2().b[59][0]++, _c) :
/* istanbul ignore next */
(cov_jsew5uwg2().b[59][1]++, Object)])], AuditLogService);
export { AuditLogService };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,