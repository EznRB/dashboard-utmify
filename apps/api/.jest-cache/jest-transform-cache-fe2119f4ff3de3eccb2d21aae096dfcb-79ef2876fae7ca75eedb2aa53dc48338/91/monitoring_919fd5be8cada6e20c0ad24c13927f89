18784ee2d9d8b608eba11bcc5d821e81
/* istanbul ignore next */
function cov_2gg0njr88v() {
  var path = "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\lib\\monitoring.ts";
  var hash = "2fd189a7760c201653d2c475d68374bc5eceaa1d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\lib\\monitoring.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 23
        },
        end: {
          line: 13,
          column: 1
        }
      },
      "1": {
        start: {
          line: 17,
          column: 16
        },
        end: {
          line: 17,
          column: 21
        }
      },
      "2": {
        start: {
          line: 18,
          column: 22
        },
        end: {
          line: 18,
          column: 26
        }
      },
      "3": {
        start: {
          line: 19,
          column: 20
        },
        end: {
          line: 19,
          column: 22
        }
      },
      "4": {
        start: {
          line: 20,
          column: 25
        },
        end: {
          line: 20,
          column: 27
        }
      },
      "5": {
        start: {
          line: 21,
          column: 22
        },
        end: {
          line: 21,
          column: 24
        }
      },
      "6": {
        start: {
          line: 22,
          column: 19
        },
        end: {
          line: 28,
          column: 5
        }
      },
      "7": {
        start: {
          line: 29,
          column: 17
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "8": {
        start: {
          line: 34,
          column: 20
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "9": {
        start: {
          line: 40,
          column: 17
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "10": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 16
        }
      },
      "11": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 55
        }
      },
      "12": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 52,
          column: 9
        }
      },
      "13": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 19
        }
      },
      "14": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 30
        }
      },
      "15": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 56,
          column: 40
        }
      },
      "16": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 34
        }
      },
      "17": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 65
        }
      },
      "18": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 59
        }
      },
      "19": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "20": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 19
        }
      },
      "21": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 31
        }
      },
      "22": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "23": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 48
        }
      },
      "24": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 40
        }
      },
      "25": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 65
        }
      },
      "26": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 59
        }
      },
      "27": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 97,
          column: 9
        }
      },
      "28": {
        start: {
          line: 74,
          column: 30
        },
        end: {
          line: 74,
          column: 40
        }
      },
      "29": {
        start: {
          line: 76,
          column: 34
        },
        end: {
          line: 76,
          column: 76
        }
      },
      "30": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 51
        }
      },
      "31": {
        start: {
          line: 79,
          column: 39
        },
        end: {
          line: 79,
          column: 80
        }
      },
      "32": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 61
        }
      },
      "33": {
        start: {
          line: 82,
          column: 36
        },
        end: {
          line: 82,
          column: 80
        }
      },
      "34": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 55
        }
      },
      "35": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 64
        }
      },
      "36": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 37
        }
      },
      "37": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 93,
          column: 15
        }
      },
      "38": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 66
        }
      },
      "39": {
        start: {
          line: 100,
          column: 25
        },
        end: {
          line: 100,
          column: 46
        }
      },
      "40": {
        start: {
          line: 101,
          column: 25
        },
        end: {
          line: 101,
          column: 43
        }
      },
      "41": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 125,
          column: 10
        }
      },
      "42": {
        start: {
          line: 128,
          column: 20
        },
        end: {
          line: 128,
          column: 30
        }
      },
      "43": {
        start: {
          line: 129,
          column: 31
        },
        end: {
          line: 129,
          column: 64
        }
      },
      "44": {
        start: {
          line: 130,
          column: 34
        },
        end: {
          line: 130,
          column: 83
        }
      },
      "45": {
        start: {
          line: 131,
          column: 36
        },
        end: {
          line: 133,
          column: 15
        }
      },
      "46": {
        start: {
          line: 132,
          column: 63
        },
        end: {
          line: 132,
          column: 68
        }
      },
      "47": {
        start: {
          line: 134,
          column: 26
        },
        end: {
          line: 136,
          column: 15
        }
      },
      "48": {
        start: {
          line: 137,
          column: 33
        },
        end: {
          line: 139,
          column: 15
        }
      },
      "49": {
        start: {
          line: 138,
          column: 61
        },
        end: {
          line: 138,
          column: 66
        }
      },
      "50": {
        start: {
          line: 140,
          column: 29
        },
        end: {
          line: 142,
          column: 15
        }
      },
      "51": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 168,
          column: 10
        }
      },
      "52": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 195,
          column: 10
        }
      },
      "53": {
        start: {
          line: 198,
          column: 23
        },
        end: {
          line: 198,
          column: 25
        }
      },
      "54": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 202,
          column: 9
        }
      },
      "55": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 201,
          column: 82
        }
      },
      "56": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 205,
          column: 9
        }
      },
      "57": {
        start: {
          line: 204,
          column: 12
        },
        end: {
          line: 204,
          column: 88
        }
      },
      "58": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 209,
          column: 9
        }
      },
      "59": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 208,
          column: 111
        }
      },
      "60": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 212,
          column: 9
        }
      },
      "61": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 211,
          column: 90
        }
      },
      "62": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 222,
          column: 9
        }
      },
      "63": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 220,
          column: 15
        }
      },
      "64": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 221,
          column: 76
        }
      },
      "65": {
        start: {
          line: 225,
          column: 23
        },
        end: {
          line: 225,
          column: 63
        }
      },
      "66": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 226,
          column: 82
        }
      },
      "67": {
        start: {
          line: 226,
          column: 60
        },
        end: {
          line: 226,
          column: 80
        }
      },
      "68": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 227,
          column: 92
        }
      },
      "69": {
        start: {
          line: 227,
          column: 70
        },
        end: {
          line: 227,
          column: 90
        }
      },
      "70": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 228,
          column: 86
        }
      },
      "71": {
        start: {
          line: 228,
          column: 64
        },
        end: {
          line: 228,
          column: 84
        }
      },
      "72": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 233,
          column: 59
        }
      },
      "73": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 237,
          column: 34
        }
      },
      "74": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 238,
          column: 59
        }
      },
      "75": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 244,
          column: 9
        }
      },
      "76": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 240,
          column: 43
        }
      },
      "77": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 243,
          column: 39
        }
      },
      "78": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 248,
          column: 9
        }
      },
      "79": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 247,
          column: 90
        }
      },
      "80": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 251,
          column: 32
        }
      },
      "81": {
        start: {
          line: 252,
          column: 26
        },
        end: {
          line: 252,
          column: 56
        }
      },
      "82": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 253,
          column: 89
        }
      },
      "83": {
        start: {
          line: 256,
          column: 8
        },
        end: {
          line: 256,
          column: 37
        }
      },
      "84": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 257,
          column: 54
        }
      },
      "85": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 260,
          column: 9
        }
      },
      "86": {
        start: {
          line: 259,
          column: 12
        },
        end: {
          line: 259,
          column: 45
        }
      },
      "87": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 264,
          column: 9
        }
      },
      "88": {
        start: {
          line: 263,
          column: 12
        },
        end: {
          line: 263,
          column: 86
        }
      },
      "89": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 267,
          column: 31
        }
      },
      "90": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 270,
          column: 33
        }
      },
      "91": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 274,
          column: 48
        }
      },
      "92": {
        start: {
          line: 277,
          column: 8
        },
        end: {
          line: 277,
          column: 53
        }
      },
      "93": {
        start: {
          line: 280,
          column: 8
        },
        end: {
          line: 280,
          column: 50
        }
      },
      "94": {
        start: {
          line: 283,
          column: 8
        },
        end: {
          line: 288,
          column: 10
        }
      },
      "95": {
        start: {
          line: 291,
          column: 20
        },
        end: {
          line: 291,
          column: 30
        }
      },
      "96": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 298,
          column: 10
        }
      },
      "97": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 303,
          column: 10
        }
      },
      "98": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 309,
          column: 10
        }
      },
      "99": {
        start: {
          line: 310,
          column: 8
        },
        end: {
          line: 314,
          column: 10
        }
      },
      "100": {
        start: {
          line: 318,
          column: 16
        },
        end: {
          line: 318,
          column: 35
        }
      },
      "101": {
        start: {
          line: 322,
          column: 31
        },
        end: {
          line: 331,
          column: 1
        }
      },
      "102": {
        start: {
          line: 323,
          column: 4
        },
        end: {
          line: 328,
          column: 5
        }
      },
      "103": {
        start: {
          line: 325,
          column: 30
        },
        end: {
          line: 325,
          column: 55
        }
      },
      "104": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 326,
          column: 30
        }
      },
      "105": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 327,
          column: 29
        }
      },
      "106": {
        start: {
          line: 329,
          column: 4
        },
        end: {
          line: 329,
          column: 20
        }
      },
      "107": {
        start: {
          line: 330,
          column: 4
        },
        end: {
          line: 330,
          column: 19
        }
      },
      "108": {
        start: {
          line: 332,
          column: 30
        },
        end: {
          line: 334,
          column: 1
        }
      },
      "109": {
        start: {
          line: 333,
          column: 4
        },
        end: {
          line: 333,
          column: 19
        }
      },
      "110": {
        start: {
          line: 335,
          column: 28
        },
        end: {
          line: 337,
          column: 1
        }
      },
      "111": {
        start: {
          line: 336,
          column: 4
        },
        end: {
          line: 336,
          column: 48
        }
      },
      "112": {
        start: {
          line: 338,
          column: 26
        },
        end: {
          line: 340,
          column: 1
        }
      },
      "113": {
        start: {
          line: 339,
          column: 4
        },
        end: {
          line: 339,
          column: 36
        }
      },
      "114": {
        start: {
          line: 341,
          column: 34
        },
        end: {
          line: 343,
          column: 1
        }
      },
      "115": {
        start: {
          line: 342,
          column: 4
        },
        end: {
          line: 342,
          column: 48
        }
      },
      "116": {
        start: {
          line: 344,
          column: 29
        },
        end: {
          line: 346,
          column: 1
        }
      },
      "117": {
        start: {
          line: 345,
          column: 4
        },
        end: {
          line: 345,
          column: 28
        }
      },
      "118": {
        start: {
          line: 347,
          column: 30
        },
        end: {
          line: 349,
          column: 1
        }
      },
      "119": {
        start: {
          line: 348,
          column: 4
        },
        end: {
          line: 348,
          column: 29
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        loc: {
          start: {
            line: 45,
            column: 29
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 45
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        loc: {
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 59,
            column: 5
          }
        },
        line: 49
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 54,
            column: 43
          },
          end: {
            line: 54,
            column: 44
          }
        },
        loc: {
          start: {
            line: 54,
            column: 49
          },
          end: {
            line: 56,
            column: 9
          }
        },
        line: 54
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        loc: {
          start: {
            line: 60,
            column: 11
          },
          end: {
            line: 71,
            column: 5
          }
        },
        line: 60
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        },
        loc: {
          start: {
            line: 72,
            column: 27
          },
          end: {
            line: 98,
            column: 5
          }
        },
        line: 72
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 99,
            column: 5
          }
        },
        loc: {
          start: {
            line: 99,
            column: 42
          },
          end: {
            line: 126,
            column: 5
          }
        },
        line: 99
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 127,
            column: 4
          },
          end: {
            line: 127,
            column: 5
          }
        },
        loc: {
          start: {
            line: 127,
            column: 41
          },
          end: {
            line: 169,
            column: 5
          }
        },
        line: 127
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 132,
            column: 53
          },
          end: {
            line: 132,
            column: 54
          }
        },
        loc: {
          start: {
            line: 132,
            column: 63
          },
          end: {
            line: 132,
            column: 68
          }
        },
        line: 132
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 138,
            column: 51
          },
          end: {
            line: 138,
            column: 52
          }
        },
        loc: {
          start: {
            line: 138,
            column: 61
          },
          end: {
            line: 138,
            column: 66
          }
        },
        line: 138
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 170,
            column: 4
          },
          end: {
            line: 170,
            column: 5
          }
        },
        loc: {
          start: {
            line: 170,
            column: 44
          },
          end: {
            line: 196,
            column: 5
          }
        },
        line: 170
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 197,
            column: 4
          },
          end: {
            line: 197,
            column: 5
          }
        },
        loc: {
          start: {
            line: 197,
            column: 51
          },
          end: {
            line: 223,
            column: 5
          }
        },
        line: 197
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 224,
            column: 4
          },
          end: {
            line: 224,
            column: 5
          }
        },
        loc: {
          start: {
            line: 224,
            column: 24
          },
          end: {
            line: 229,
            column: 5
          }
        },
        line: 224
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 226,
            column: 55
          },
          end: {
            line: 226,
            column: 56
          }
        },
        loc: {
          start: {
            line: 226,
            column: 60
          },
          end: {
            line: 226,
            column: 80
          }
        },
        line: 226
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 227,
            column: 65
          },
          end: {
            line: 227,
            column: 66
          }
        },
        loc: {
          start: {
            line: 227,
            column: 70
          },
          end: {
            line: 227,
            column: 90
          }
        },
        line: 227
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 228,
            column: 59
          },
          end: {
            line: 228,
            column: 60
          }
        },
        loc: {
          start: {
            line: 228,
            column: 64
          },
          end: {
            line: 228,
            column: 84
          }
        },
        line: 228
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 230,
            column: 4
          },
          end: {
            line: 230,
            column: 5
          }
        },
        loc: {
          start: {
            line: 230,
            column: 32
          },
          end: {
            line: 234,
            column: 5
          }
        },
        line: 230
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 236,
            column: 4
          },
          end: {
            line: 236,
            column: 5
          }
        },
        loc: {
          start: {
            line: 236,
            column: 40
          },
          end: {
            line: 249,
            column: 5
          }
        },
        line: 236
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 250,
            column: 4
          },
          end: {
            line: 250,
            column: 5
          }
        },
        loc: {
          start: {
            line: 250,
            column: 28
          },
          end: {
            line: 254,
            column: 5
          }
        },
        line: 250
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 255,
            column: 4
          },
          end: {
            line: 255,
            column: 5
          }
        },
        loc: {
          start: {
            line: 255,
            column: 48
          },
          end: {
            line: 265,
            column: 5
          }
        },
        line: 255
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 266,
            column: 4
          },
          end: {
            line: 266,
            column: 5
          }
        },
        loc: {
          start: {
            line: 266,
            column: 20
          },
          end: {
            line: 268,
            column: 5
          }
        },
        line: 266
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 269,
            column: 4
          },
          end: {
            line: 269,
            column: 5
          }
        },
        loc: {
          start: {
            line: 269,
            column: 21
          },
          end: {
            line: 271,
            column: 5
          }
        },
        line: 269
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 273,
            column: 4
          },
          end: {
            line: 273,
            column: 5
          }
        },
        loc: {
          start: {
            line: 273,
            column: 34
          },
          end: {
            line: 275,
            column: 5
          }
        },
        line: 273
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 276,
            column: 4
          },
          end: {
            line: 276,
            column: 5
          }
        },
        loc: {
          start: {
            line: 276,
            column: 39
          },
          end: {
            line: 278,
            column: 5
          }
        },
        line: 276
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 279,
            column: 4
          },
          end: {
            line: 279,
            column: 5
          }
        },
        loc: {
          start: {
            line: 279,
            column: 36
          },
          end: {
            line: 281,
            column: 5
          }
        },
        line: 279
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 282,
            column: 4
          },
          end: {
            line: 282,
            column: 5
          }
        },
        loc: {
          start: {
            line: 282,
            column: 22
          },
          end: {
            line: 289,
            column: 5
          }
        },
        line: 282
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 290,
            column: 4
          },
          end: {
            line: 290,
            column: 5
          }
        },
        loc: {
          start: {
            line: 290,
            column: 17
          },
          end: {
            line: 315,
            column: 5
          }
        },
        line: 290
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 322,
            column: 31
          },
          end: {
            line: 322,
            column: 32
          }
        },
        loc: {
          start: {
            line: 322,
            column: 43
          },
          end: {
            line: 331,
            column: 1
          }
        },
        line: 322
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 332,
            column: 30
          },
          end: {
            line: 332,
            column: 31
          }
        },
        loc: {
          start: {
            line: 332,
            column: 36
          },
          end: {
            line: 334,
            column: 1
          }
        },
        line: 332
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 335,
            column: 28
          },
          end: {
            line: 335,
            column: 29
          }
        },
        loc: {
          start: {
            line: 335,
            column: 55
          },
          end: {
            line: 337,
            column: 1
          }
        },
        line: 335
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 338,
            column: 26
          },
          end: {
            line: 338,
            column: 27
          }
        },
        loc: {
          start: {
            line: 338,
            column: 43
          },
          end: {
            line: 340,
            column: 1
          }
        },
        line: 338
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 341,
            column: 34
          },
          end: {
            line: 341,
            column: 35
          }
        },
        loc: {
          start: {
            line: 341,
            column: 55
          },
          end: {
            line: 343,
            column: 1
          }
        },
        line: 341
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 344,
            column: 29
          },
          end: {
            line: 344,
            column: 30
          }
        },
        loc: {
          start: {
            line: 344,
            column: 35
          },
          end: {
            line: 346,
            column: 1
          }
        },
        line: 344
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 347,
            column: 30
          },
          end: {
            line: 347,
            column: 31
          }
        },
        loc: {
          start: {
            line: 347,
            column: 36
          },
          end: {
            line: 349,
            column: 1
          }
        },
        line: 347
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 45,
            column: 16
          },
          end: {
            line: 45,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 45,
            column: 25
          },
          end: {
            line: 45,
            column: 27
          }
        }],
        line: 45
      },
      "1": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "2": {
        loc: {
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "3": {
        loc: {
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "4": {
        loc: {
          start: {
            line: 131,
            column: 36
          },
          end: {
            line: 133,
            column: 15
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 132,
            column: 14
          },
          end: {
            line: 132,
            column: 113
          }
        }, {
          start: {
            line: 133,
            column: 14
          },
          end: {
            line: 133,
            column: 15
          }
        }],
        line: 131
      },
      "5": {
        loc: {
          start: {
            line: 134,
            column: 26
          },
          end: {
            line: 136,
            column: 15
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 135,
            column: 14
          },
          end: {
            line: 135,
            column: 69
          }
        }, {
          start: {
            line: 136,
            column: 14
          },
          end: {
            line: 136,
            column: 15
          }
        }],
        line: 134
      },
      "6": {
        loc: {
          start: {
            line: 137,
            column: 33
          },
          end: {
            line: 139,
            column: 15
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 138,
            column: 14
          },
          end: {
            line: 138,
            column: 109
          }
        }, {
          start: {
            line: 139,
            column: 14
          },
          end: {
            line: 139,
            column: 15
          }
        }],
        line: 137
      },
      "7": {
        loc: {
          start: {
            line: 140,
            column: 29
          },
          end: {
            line: 142,
            column: 15
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 141,
            column: 14
          },
          end: {
            line: 141,
            column: 92
          }
        }, {
          start: {
            line: 142,
            column: 14
          },
          end: {
            line: 142,
            column: 15
          }
        }],
        line: 140
      },
      "8": {
        loc: {
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 202,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 202,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 200
      },
      "9": {
        loc: {
          start: {
            line: 203,
            column: 8
          },
          end: {
            line: 205,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 8
          },
          end: {
            line: 205,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 203
      },
      "10": {
        loc: {
          start: {
            line: 207,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 207,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 207
      },
      "11": {
        loc: {
          start: {
            line: 210,
            column: 8
          },
          end: {
            line: 212,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 210,
            column: 8
          },
          end: {
            line: 212,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 210
      },
      "12": {
        loc: {
          start: {
            line: 214,
            column: 8
          },
          end: {
            line: 222,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 214,
            column: 8
          },
          end: {
            line: 222,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 214
      },
      "13": {
        loc: {
          start: {
            line: 239,
            column: 8
          },
          end: {
            line: 244,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 239,
            column: 8
          },
          end: {
            line: 244,
            column: 9
          }
        }, {
          start: {
            line: 242,
            column: 13
          },
          end: {
            line: 244,
            column: 9
          }
        }],
        line: 239
      },
      "14": {
        loc: {
          start: {
            line: 246,
            column: 8
          },
          end: {
            line: 248,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 246,
            column: 8
          },
          end: {
            line: 248,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 246
      },
      "15": {
        loc: {
          start: {
            line: 252,
            column: 26
          },
          end: {
            line: 252,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 252,
            column: 26
          },
          end: {
            line: 252,
            column: 30
          }
        }, {
          start: {
            line: 252,
            column: 34
          },
          end: {
            line: 252,
            column: 56
          }
        }],
        line: 252
      },
      "16": {
        loc: {
          start: {
            line: 253,
            column: 45
          },
          end: {
            line: 253,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 253,
            column: 45
          },
          end: {
            line: 253,
            column: 78
          }
        }, {
          start: {
            line: 253,
            column: 82
          },
          end: {
            line: 253,
            column: 83
          }
        }],
        line: 253
      },
      "17": {
        loc: {
          start: {
            line: 255,
            column: 34
          },
          end: {
            line: 255,
            column: 46
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 255,
            column: 41
          },
          end: {
            line: 255,
            column: 46
          }
        }],
        line: 255
      },
      "18": {
        loc: {
          start: {
            line: 258,
            column: 8
          },
          end: {
            line: 260,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 258,
            column: 8
          },
          end: {
            line: 260,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 258
      },
      "19": {
        loc: {
          start: {
            line: 262,
            column: 8
          },
          end: {
            line: 264,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 262,
            column: 8
          },
          end: {
            line: 264,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 262
      },
      "20": {
        loc: {
          start: {
            line: 273,
            column: 21
          },
          end: {
            line: 273,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 273,
            column: 29
          },
          end: {
            line: 273,
            column: 32
          }
        }],
        line: 273
      },
      "21": {
        loc: {
          start: {
            line: 276,
            column: 26
          },
          end: {
            line: 276,
            column: 37
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 276,
            column: 34
          },
          end: {
            line: 276,
            column: 37
          }
        }],
        line: 276
      },
      "22": {
        loc: {
          start: {
            line: 279,
            column: 23
          },
          end: {
            line: 279,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 279,
            column: 31
          },
          end: {
            line: 279,
            column: 34
          }
        }],
        line: 279
      },
      "23": {
        loc: {
          start: {
            line: 323,
            column: 4
          },
          end: {
            line: 328,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 323,
            column: 4
          },
          end: {
            line: 328,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 323
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0],
      "21": [0],
      "22": [0],
      "23": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\lib\\monitoring.ts",
      mappings: "AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,QAAQ,CAAC;AAEtC,OAAO,EAAE,WAAW,EAAE,aAAa,EAAE,aAAa,EAAE,MAAM,UAAU,CAAC;AAerE,MAAM,cAAc,GAAqB;IACvC,eAAe,EAAE,KAAK,EAAE,aAAa;IACrC,eAAe,EAAE;QACf,QAAQ,EAAE,EAAE,EAAE,aAAa;QAC3B,WAAW,EAAE,EAAE,EAAE,aAAa;QAC9B,YAAY,EAAE,IAAI,EAAE,eAAe;QACnC,SAAS,EAAE,CAAC,EAAE,aAAa;QAC3B,iBAAiB,EAAE,IAAI;KACxB;IACD,eAAe,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,EAAE,WAAW;CAClD,CAAC;AA8EF,mBAAmB;AACnB,MAAM,aAAc,SAAQ,YAAY;IAC9B,MAAM,CAAmB;IACzB,SAAS,GAAG,KAAK,CAAC;IAClB,eAAe,GAA0B,IAAI,CAAC;IAC9C,aAAa,GAAoB,EAAE,CAAC;IACpC,kBAAkB,GAAyB,EAAE,CAAC;IAC9C,eAAe,GAAsB,EAAE,CAAC;IACxC,YAAY,GAAG;QACrB,KAAK,EAAE,CAAC;QACR,UAAU,EAAE,CAAC;QACb,MAAM,EAAE,CAAC;QACT,aAAa,EAAE,EAAc;QAC7B,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE;KACtB,CAAC;IACM,UAAU,GAAG;QACnB,KAAK,EAAE,CAAC;QACR,MAAM,EAAE,EAA4B;QACpC,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE;KACtB,CAAC;IACM,aAAa,GAAG;QACtB,OAAO,EAAE,CAAC;QACV,UAAU,EAAE,EAAc;QAC1B,WAAW,EAAE,CAAC;QACd,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE;KACtB,CAAC;IACM,UAAU,GAAG;QACnB,IAAI,EAAE,CAAC;QACP,MAAM,EAAE,CAAC;QACT,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE;KACtB,CAAC;IAEF,YAAY,SAAoC,EAAE;QAChD,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,MAAM,GAAG,EAAE,GAAG,cAAc,EAAE,GAAG,MAAM,EAAE,CAAC;IACjD,CAAC;IAED,KAAK;QACH,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;YACnB,OAAO;QACT,CAAC;QAED,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,eAAe,GAAG,WAAW,CAAC,GAAG,EAAE;YACtC,IAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QAEhC,aAAa,CAAC,2BAA2B,EAAE,YAAY,CAAC,CAAC;QACzD,aAAa,CAAC,2BAA2B,EAAE,MAAM,CAAC,CAAC;IACrD,CAAC;IAED,IAAI;QACF,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;YACpB,OAAO;QACT,CAAC;QAED,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,IAAI,CAAC,eAAe,EAAE,CAAC;YACzB,aAAa,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YACpC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC9B,CAAC;QAED,aAAa,CAAC,2BAA2B,EAAE,YAAY,CAAC,CAAC;QACzD,aAAa,CAAC,2BAA2B,EAAE,MAAM,CAAC,CAAC;IACrD,CAAC;IAEO,KAAK,CAAC,cAAc;QAC1B,IAAI,CAAC;YACH,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YAE7B,yBAAyB;YACzB,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;YACjE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAEvC,8BAA8B;YAC9B,MAAM,kBAAkB,GAAG,IAAI,CAAC,yBAAyB,CAAC,SAAS,CAAC,CAAC;YACrE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAEjD,2BAA2B;YAC3B,MAAM,eAAe,GAAG,MAAM,IAAI,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC;YACrE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YAE3C,mBAAmB;YACnB,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,kBAAkB,CAAC,CAAC;YAEpD,uBAAuB;YACvB,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAEzB,qBAAqB;YACrB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACnB,MAAM,EAAE,aAAa;gBACrB,WAAW,EAAE,kBAAkB;gBAC/B,QAAQ,EAAE,eAAe;aAC1B,CAAC,CAAC;QACL,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,WAAW,CAAC,KAAc,EAAE,EAAE,OAAO,EAAE,oBAAoB,EAAE,CAAC,CAAC;QACjE,CAAC;IACH,CAAC;IAEO,KAAK,CAAC,oBAAoB,CAAC,SAAiB;QAClD,MAAM,QAAQ,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;QACvC,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;QAEpC,mFAAmF;QACnF,OAAO;YACL,SAAS;YACT,GAAG,EAAE;gBACH,KAAK,EAAE,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC;gBACvC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,oCAAoC;aAC7D;YACD,MAAM,EAAE;gBACN,IAAI,EAAE,QAAQ,CAAC,GAAG;gBAClB,KAAK,EAAE,QAAQ,CAAC,GAAG,GAAG,QAAQ,CAAC,SAAS;gBACxC,KAAK,EAAE,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,GAAG,GAAG;gBACjE,QAAQ,EAAE,QAAQ,CAAC,QAAQ;gBAC3B,SAAS,EAAE,QAAQ,CAAC,SAAS;aAC9B;YACD,IAAI,EAAE;gBACJ,KAAK,EAAE,CAAC,EAAE,sCAAsC;gBAChD,IAAI,EAAE,CAAC;gBACP,KAAK,EAAE,CAAC;aACT;YACD,OAAO,EAAE;gBACP,OAAO,EAAE,CAAC,EAAE,gCAAgC;gBAC5C,QAAQ,EAAE,CAAC;aACZ;SACF,CAAC;IACJ,CAAC;IAEO,yBAAyB,CAAC,SAAiB;QACjD,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACvB,MAAM,cAAc,GAAG,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC;QACzD,MAAM,iBAAiB,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,CAAC,cAAc,GAAG,IAAI,CAAC,CAAC;QAC5E,MAAM,mBAAmB,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC;YACpE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,MAAM;YACrG,CAAC,CAAC,CAAC,CAAC;QACN,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,CAAC;YAC3C,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,GAAG;YACzD,CAAC,CAAC,CAAC,CAAC;QACN,MAAM,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC;YAC/D,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,MAAM;YACjG,CAAC,CAAC,CAAC,CAAC;QACN,MAAM,YAAY,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC;YACtE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,GAAG,GAAG;YAChF,CAAC,CAAC,CAAC,CAAC;QAEN,OAAO;YACL,SAAS;YACT,QAAQ,EAAE;gBACR,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK;gBAC9B,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU;gBACxC,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM;gBAChC,mBAAmB;gBACnB,iBAAiB;aAClB;YACD,QAAQ,EAAE;gBACR,WAAW,EAAE,CAAC,EAAE,+BAA+B;gBAC/C,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,OAAO;gBACnC,gBAAgB;gBAChB,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,WAAW;aAC5C;YACD,KAAK,EAAE;gBACL,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI;gBAC1B,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM;gBAC9B,OAAO,EAAE,YAAY;aACtB;YACD,MAAM,EAAE;gBACN,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK;gBAC5B,IAAI,EAAE,SAAS;gBACf,MAAM,EAAE,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;aACtC;SACF,CAAC;IACJ,CAAC;IAEO,KAAK,CAAC,sBAAsB,CAAC,SAAiB;QACpD,gEAAgE;QAChE,6BAA6B;QAC7B,OAAO;YACL,SAAS;YACT,KAAK,EAAE;gBACL,MAAM,EAAE,CAAC;gBACT,GAAG,EAAE,CAAC;gBACN,SAAS,EAAE,CAAC;aACb;YACD,GAAG,EAAE;gBACH,OAAO,EAAE,CAAC;gBACV,OAAO,EAAE,CAAC;gBACV,cAAc,EAAE,CAAC;aAClB;YACD,SAAS,EAAE;gBACT,MAAM,EAAE,CAAC;gBACT,MAAM,EAAE,CAAC;gBACT,SAAS,EAAE,CAAC;aACb;YACD,OAAO,EAAE;gBACP,KAAK,EAAE,CAAC;gBACR,aAAa,EAAE,CAAC;gBAChB,QAAQ,EAAE,CAAC;aACZ;SACF,CAAC;IACJ,CAAC;IAEO,WAAW,CAAC,aAA4B,EAAE,kBAAsC;QACtF,MAAM,MAAM,GAAa,EAAE,CAAC;QAE5B,sBAAsB;QACtB,IAAI,aAAa,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;YACnE,MAAM,CAAC,IAAI,CAAC,mBAAmB,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACxE,CAAC;QAED,IAAI,aAAa,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;YACzE,MAAM,CAAC,IAAI,CAAC,sBAAsB,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAC9E,CAAC;QAED,2BAA2B;QAC3B,IAAI,kBAAkB,CAAC,QAAQ,CAAC,mBAAmB,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;YAC/F,MAAM,CAAC,IAAI,CAAC,uBAAuB,kBAAkB,CAAC,QAAQ,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QACrG,CAAC;QAED,IAAI,kBAAkB,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,SAAS,EAAE,CAAC;YAC3E,MAAM,CAAC,IAAI,CAAC,oBAAoB,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAChF,CAAC;QAED,cAAc;QACd,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YACtB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACjB,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE;gBACrB,MAAM;gBACN,aAAa;gBACb,kBAAkB;aACnB,CAAC,CAAC;YAEH,aAAa,CAAC,kBAAkB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;QAClE,CAAC;IACH,CAAC;IAEO,iBAAiB;QACvB,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC;QAExD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,GAAG,MAAM,CAAC,CAAC;QAC1E,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,GAAG,MAAM,CAAC,CAAC;QACpF,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,GAAG,MAAM,CAAC,CAAC;IAChF,CAAC;IAEO,iBAAiB,CAAC,QAAyB;QACjD,mCAAmC;QACnC,uDAAuD;QACvD,OAAO,CAAC,QAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,CAAC,wBAAwB;IAC9E,CAAC;IAED,iDAAiD;IACjD,YAAY,CAAC,YAAoB,EAAE,OAAgB;QACjD,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QAC1B,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAEnD,IAAI,OAAO,EAAE,CAAC;YACZ,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;QACjC,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;QAC7B,CAAC;QAED,kCAAkC;QAClC,IAAI,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,EAAE,CAAC;YAClD,IAAI,CAAC,YAAY,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;QAChF,CAAC;IACH,CAAC;IAED,UAAU,CAAC,KAAY,EAAE,IAAa;QACpC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;QACxB,MAAM,SAAS,GAAG,IAAI,IAAI,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC;QACjD,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACnF,CAAC;IAED,kBAAkB,CAAC,SAAiB,EAAE,OAAgB,KAAK;QACzD,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;QAC7B,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAE9C,IAAI,IAAI,EAAE,CAAC;YACT,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACnC,CAAC;QAED,+BAA+B;QAC/B,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,EAAE,CAAC;YAChD,IAAI,CAAC,aAAa,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;QAC5E,CAAC;IACH,CAAC;IAED,aAAa;QACX,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;IAC3B,CAAC;IAED,8BAA8B;IAC9B,gBAAgB,CAAC,QAAgB,GAAG;QAClC,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;IAED,qBAAqB,CAAC,QAAgB,GAAG;QACvC,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;IAC/C,CAAC;IAED,kBAAkB,CAAC,QAAgB,GAAG;QACpC,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;IAC5C,CAAC;IAED,eAAe;QACb,OAAO;YACL,QAAQ,EAAE,EAAE,GAAG,IAAI,CAAC,YAAY,EAAE;YAClC,MAAM,EAAE,EAAE,GAAG,IAAI,CAAC,UAAU,EAAE;YAC9B,QAAQ,EAAE,EAAE,GAAG,IAAI,CAAC,aAAa,EAAE;YACnC,KAAK,EAAE,EAAE,GAAG,IAAI,CAAC,UAAU,EAAE;SAC9B,CAAC;IACJ,CAAC;IAED,UAAU;QACR,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,YAAY,GAAG;YAClB,KAAK,EAAE,CAAC;YACR,UAAU,EAAE,CAAC;YACb,MAAM,EAAE,CAAC;YACT,aAAa,EAAE,EAAE;YACjB,SAAS,EAAE,GAAG;SACf,CAAC;QACF,IAAI,CAAC,UAAU,GAAG;YAChB,KAAK,EAAE,CAAC;YACR,MAAM,EAAE,EAAE;YACV,SAAS,EAAE,GAAG;SACf,CAAC;QACF,IAAI,CAAC,aAAa,GAAG;YACnB,OAAO,EAAE,CAAC;YACV,UAAU,EAAE,EAAE;YACd,WAAW,EAAE,CAAC;YACd,SAAS,EAAE,GAAG;SACf,CAAC;QACF,IAAI,CAAC,UAAU,GAAG;YAChB,IAAI,EAAE,CAAC;YACP,MAAM,EAAE,CAAC;YACT,SAAS,EAAE,GAAG;SACf,CAAC;IACJ,CAAC;CACF;AAED,4BAA4B;AAC5B,MAAM,OAAO,GAAG,IAAI,aAAa,EAAE,CAAC;AAEpC,eAAe,OAAO,CAAC;AACvB,OAAO,EAAE,aAAa,EAAsD,CAAC;AAE7E,wBAAwB;AACxB,MAAM,CAAC,MAAM,eAAe,GAAG,CAAC,MAAkC,EAAE,EAAE;IACpE,IAAI,MAAM,EAAE,CAAC;QACX,yCAAyC;QACzC,MAAM,aAAa,GAAG,IAAI,aAAa,CAAC,MAAM,CAAC,CAAC;QAChD,aAAa,CAAC,KAAK,EAAE,CAAC;QACtB,OAAO,aAAa,CAAC;IACvB,CAAC;IACD,OAAO,CAAC,KAAK,EAAE,CAAC;IAChB,OAAO,OAAO,CAAC;AACjB,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,cAAc,GAAG,GAAG,EAAE;IACjC,OAAO,CAAC,IAAI,EAAE,CAAC;AACjB,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,YAAY,GAAG,CAAC,YAAoB,EAAE,OAAgB,EAAE,EAAE;IACrE,OAAO,CAAC,YAAY,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;AAC9C,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,UAAU,GAAG,CAAC,KAAY,EAAE,IAAa,EAAE,EAAE;IACxD,OAAO,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AAClC,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAAC,SAAiB,EAAE,IAAc,EAAE,EAAE;IACtE,OAAO,CAAC,kBAAkB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAC9C,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,aAAa,GAAG,GAAG,EAAE;IAChC,OAAO,CAAC,aAAa,EAAE,CAAC;AAC1B,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,cAAc,GAAG,GAAG,EAAE;IACjC,OAAO,CAAC,cAAc,EAAE,CAAC;AAC3B,CAAC,CAAC",
      names: [],
      sources: ["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\lib\\monitoring.ts"],
      sourcesContent: ["import { EventEmitter } from 'events';\nimport { performance } from 'perf_hooks';\nimport { reportError, reportMessage, addBreadcrumb } from './sentry';\n\n// Monitoring configuration\ninterface MonitoringConfig {\n  metricsInterval: number; // milliseconds\n  alertThresholds: {\n    cpuUsage: number;\n    memoryUsage: number;\n    responseTime: number;\n    errorRate: number;\n    activeConnections: number;\n  };\n  retentionPeriod: number; // milliseconds\n}\n\nconst DEFAULT_CONFIG: MonitoringConfig = {\n  metricsInterval: 30000, // 30 seconds\n  alertThresholds: {\n    cpuUsage: 80, // percentage\n    memoryUsage: 85, // percentage\n    responseTime: 5000, // milliseconds\n    errorRate: 5, // percentage\n    activeConnections: 1000,\n  },\n  retentionPeriod: 24 * 60 * 60 * 1000, // 24 hours\n};\n\n// Metric types\ninterface SystemMetrics {\n  timestamp: number;\n  cpu: {\n    usage: number;\n    loadAverage: number[];\n  };\n  memory: {\n    used: number;\n    total: number;\n    usage: number;\n    heapUsed: number;\n    heapTotal: number;\n  };\n  disk: {\n    usage: number;\n    free: number;\n    total: number;\n  };\n  network: {\n    bytesIn: number;\n    bytesOut: number;\n  };\n}\n\ninterface ApplicationMetrics {\n  timestamp: number;\n  requests: {\n    total: number;\n    successful: number;\n    failed: number;\n    averageResponseTime: number;\n    requestsPerSecond: number;\n  };\n  database: {\n    connections: number;\n    queries: number;\n    averageQueryTime: number;\n    slowQueries: number;\n  };\n  cache: {\n    hits: number;\n    misses: number;\n    hitRate: number;\n  };\n  errors: {\n    total: number;\n    rate: number;\n    byType: Record<string, number>;\n  };\n}\n\ninterface BusinessMetrics {\n  timestamp: number;\n  users: {\n    active: number;\n    new: number;\n    returning: number;\n  };\n  utm: {\n    created: number;\n    clicked: number;\n    conversionRate: number;\n  };\n  campaigns: {\n    active: number;\n    paused: number;\n    completed: number;\n  };\n  revenue: {\n    total: number;\n    subscriptions: number;\n    upgrades: number;\n  };\n}\n\n// Monitoring class\nclass SystemMonitor extends EventEmitter {\n  private config: MonitoringConfig;\n  private isRunning = false;\n  private metricsInterval: NodeJS.Timeout | null = null;\n  private systemMetrics: SystemMetrics[] = [];\n  private applicationMetrics: ApplicationMetrics[] = [];\n  private businessMetrics: BusinessMetrics[] = [];\n  private requestStats = {\n    total: 0,\n    successful: 0,\n    failed: 0,\n    responseTimes: [] as number[],\n    lastReset: Date.now(),\n  };\n  private errorStats = {\n    total: 0,\n    byType: {} as Record<string, number>,\n    lastReset: Date.now(),\n  };\n  private databaseStats = {\n    queries: 0,\n    queryTimes: [] as number[],\n    slowQueries: 0,\n    lastReset: Date.now(),\n  };\n  private cacheStats = {\n    hits: 0,\n    misses: 0,\n    lastReset: Date.now(),\n  };\n\n  constructor(config: Partial<MonitoringConfig> = {}) {\n    super();\n    this.config = { ...DEFAULT_CONFIG, ...config };\n  }\n\n  start() {\n    if (this.isRunning) {\n      return;\n    }\n\n    this.isRunning = true;\n    this.metricsInterval = setInterval(() => {\n      this.collectMetrics();\n    }, this.config.metricsInterval);\n\n    addBreadcrumb('System monitoring started', 'monitoring');\n    reportMessage('System monitoring started', 'info');\n  }\n\n  stop() {\n    if (!this.isRunning) {\n      return;\n    }\n\n    this.isRunning = false;\n    if (this.metricsInterval) {\n      clearInterval(this.metricsInterval);\n      this.metricsInterval = null;\n    }\n\n    addBreadcrumb('System monitoring stopped', 'monitoring');\n    reportMessage('System monitoring stopped', 'info');\n  }\n\n  private async collectMetrics() {\n    try {\n      const timestamp = Date.now();\n\n      // Collect system metrics\n      const systemMetrics = await this.collectSystemMetrics(timestamp);\n      this.systemMetrics.push(systemMetrics);\n\n      // Collect application metrics\n      const applicationMetrics = this.collectApplicationMetrics(timestamp);\n      this.applicationMetrics.push(applicationMetrics);\n\n      // Collect business metrics\n      const businessMetrics = await this.collectBusinessMetrics(timestamp);\n      this.businessMetrics.push(businessMetrics);\n\n      // Check for alerts\n      this.checkAlerts(systemMetrics, applicationMetrics);\n\n      // Clean up old metrics\n      this.cleanupOldMetrics();\n\n      // Emit metrics event\n      this.emit('metrics', {\n        system: systemMetrics,\n        application: applicationMetrics,\n        business: businessMetrics,\n      });\n    } catch (error) {\n      reportError(error as Error, { context: 'metrics_collection' });\n    }\n  }\n\n  private async collectSystemMetrics(timestamp: number): Promise<SystemMetrics> {\n    const memUsage = process.memoryUsage();\n    const cpuUsage = process.cpuUsage();\n    \n    // Get system information (would need additional libraries for full system metrics)\n    return {\n      timestamp,\n      cpu: {\n        usage: this.calculateCpuUsage(cpuUsage),\n        loadAverage: [0, 0, 0], // Would use os.loadavg() in Node.js\n      },\n      memory: {\n        used: memUsage.rss,\n        total: memUsage.rss + memUsage.heapTotal,\n        usage: (memUsage.rss / (memUsage.rss + memUsage.heapTotal)) * 100,\n        heapUsed: memUsage.heapUsed,\n        heapTotal: memUsage.heapTotal,\n      },\n      disk: {\n        usage: 0, // Would need fs.statSync() or similar\n        free: 0,\n        total: 0,\n      },\n      network: {\n        bytesIn: 0, // Would need network monitoring\n        bytesOut: 0,\n      },\n    };\n  }\n\n  private collectApplicationMetrics(timestamp: number): ApplicationMetrics {\n    const now = Date.now();\n    const timeSinceReset = now - this.requestStats.lastReset;\n    const requestsPerSecond = this.requestStats.total / (timeSinceReset / 1000);\n    const averageResponseTime = this.requestStats.responseTimes.length > 0\n      ? this.requestStats.responseTimes.reduce((a, b) => a + b, 0) / this.requestStats.responseTimes.length\n      : 0;\n    const errorRate = this.requestStats.total > 0\n      ? (this.errorStats.total / this.requestStats.total) * 100\n      : 0;\n    const averageQueryTime = this.databaseStats.queryTimes.length > 0\n      ? this.databaseStats.queryTimes.reduce((a, b) => a + b, 0) / this.databaseStats.queryTimes.length\n      : 0;\n    const cacheHitRate = (this.cacheStats.hits + this.cacheStats.misses) > 0\n      ? (this.cacheStats.hits / (this.cacheStats.hits + this.cacheStats.misses)) * 100\n      : 0;\n\n    return {\n      timestamp,\n      requests: {\n        total: this.requestStats.total,\n        successful: this.requestStats.successful,\n        failed: this.requestStats.failed,\n        averageResponseTime,\n        requestsPerSecond,\n      },\n      database: {\n        connections: 0, // Would get from database pool\n        queries: this.databaseStats.queries,\n        averageQueryTime,\n        slowQueries: this.databaseStats.slowQueries,\n      },\n      cache: {\n        hits: this.cacheStats.hits,\n        misses: this.cacheStats.misses,\n        hitRate: cacheHitRate,\n      },\n      errors: {\n        total: this.errorStats.total,\n        rate: errorRate,\n        byType: { ...this.errorStats.byType },\n      },\n    };\n  }\n\n  private async collectBusinessMetrics(timestamp: number): Promise<BusinessMetrics> {\n    // This would typically query your database for business metrics\n    // Placeholder implementation\n    return {\n      timestamp,\n      users: {\n        active: 0,\n        new: 0,\n        returning: 0,\n      },\n      utm: {\n        created: 0,\n        clicked: 0,\n        conversionRate: 0,\n      },\n      campaigns: {\n        active: 0,\n        paused: 0,\n        completed: 0,\n      },\n      revenue: {\n        total: 0,\n        subscriptions: 0,\n        upgrades: 0,\n      },\n    };\n  }\n\n  private checkAlerts(systemMetrics: SystemMetrics, applicationMetrics: ApplicationMetrics) {\n    const alerts: string[] = [];\n\n    // Check system alerts\n    if (systemMetrics.cpu.usage > this.config.alertThresholds.cpuUsage) {\n      alerts.push(`High CPU usage: ${systemMetrics.cpu.usage.toFixed(2)}%`);\n    }\n\n    if (systemMetrics.memory.usage > this.config.alertThresholds.memoryUsage) {\n      alerts.push(`High memory usage: ${systemMetrics.memory.usage.toFixed(2)}%`);\n    }\n\n    // Check application alerts\n    if (applicationMetrics.requests.averageResponseTime > this.config.alertThresholds.responseTime) {\n      alerts.push(`High response time: ${applicationMetrics.requests.averageResponseTime.toFixed(2)}ms`);\n    }\n\n    if (applicationMetrics.errors.rate > this.config.alertThresholds.errorRate) {\n      alerts.push(`High error rate: ${applicationMetrics.errors.rate.toFixed(2)}%`);\n    }\n\n    // Send alerts\n    if (alerts.length > 0) {\n      this.emit('alert', {\n        timestamp: Date.now(),\n        alerts,\n        systemMetrics,\n        applicationMetrics,\n      });\n\n      reportMessage(`System alerts: ${alerts.join(', ')}`, 'warning');\n    }\n  }\n\n  private cleanupOldMetrics() {\n    const cutoff = Date.now() - this.config.retentionPeriod;\n\n    this.systemMetrics = this.systemMetrics.filter(m => m.timestamp > cutoff);\n    this.applicationMetrics = this.applicationMetrics.filter(m => m.timestamp > cutoff);\n    this.businessMetrics = this.businessMetrics.filter(m => m.timestamp > cutoff);\n  }\n\n  private calculateCpuUsage(cpuUsage: NodeJS.CpuUsage): number {\n    // Simplified CPU usage calculation\n    // In a real implementation, you'd track this over time\n    return (cpuUsage.user + cpuUsage.system) / 1000000; // Convert to percentage\n  }\n\n  // Public methods for tracking application events\n  trackRequest(responseTime: number, success: boolean) {\n    this.requestStats.total++;\n    this.requestStats.responseTimes.push(responseTime);\n    \n    if (success) {\n      this.requestStats.successful++;\n    } else {\n      this.requestStats.failed++;\n    }\n\n    // Keep only recent response times\n    if (this.requestStats.responseTimes.length > 1000) {\n      this.requestStats.responseTimes = this.requestStats.responseTimes.slice(-500);\n    }\n  }\n\n  trackError(error: Error, type?: string) {\n    this.errorStats.total++;\n    const errorType = type || error.constructor.name;\n    this.errorStats.byType[errorType] = (this.errorStats.byType[errorType] || 0) + 1;\n  }\n\n  trackDatabaseQuery(queryTime: number, slow: boolean = false) {\n    this.databaseStats.queries++;\n    this.databaseStats.queryTimes.push(queryTime);\n    \n    if (slow) {\n      this.databaseStats.slowQueries++;\n    }\n\n    // Keep only recent query times\n    if (this.databaseStats.queryTimes.length > 1000) {\n      this.databaseStats.queryTimes = this.databaseStats.queryTimes.slice(-500);\n    }\n  }\n\n  trackCacheHit() {\n    this.cacheStats.hits++;\n  }\n\n  trackCacheMiss() {\n    this.cacheStats.misses++;\n  }\n\n  // Getters for current metrics\n  getSystemMetrics(limit: number = 100): SystemMetrics[] {\n    return this.systemMetrics.slice(-limit);\n  }\n\n  getApplicationMetrics(limit: number = 100): ApplicationMetrics[] {\n    return this.applicationMetrics.slice(-limit);\n  }\n\n  getBusinessMetrics(limit: number = 100): BusinessMetrics[] {\n    return this.businessMetrics.slice(-limit);\n  }\n\n  getCurrentStats() {\n    return {\n      requests: { ...this.requestStats },\n      errors: { ...this.errorStats },\n      database: { ...this.databaseStats },\n      cache: { ...this.cacheStats },\n    };\n  }\n\n  resetStats() {\n    const now = Date.now();\n    this.requestStats = {\n      total: 0,\n      successful: 0,\n      failed: 0,\n      responseTimes: [],\n      lastReset: now,\n    };\n    this.errorStats = {\n      total: 0,\n      byType: {},\n      lastReset: now,\n    };\n    this.databaseStats = {\n      queries: 0,\n      queryTimes: [],\n      slowQueries: 0,\n      lastReset: now,\n    };\n    this.cacheStats = {\n      hits: 0,\n      misses: 0,\n      lastReset: now,\n    };\n  }\n}\n\n// Create singleton instance\nconst monitor = new SystemMonitor();\n\nexport default monitor;\nexport { SystemMonitor, SystemMetrics, ApplicationMetrics, BusinessMetrics };\n\n// Convenience functions\nexport const startMonitoring = (config?: Partial<MonitoringConfig>) => {\n  if (config) {\n    // Create new instance with custom config\n    const customMonitor = new SystemMonitor(config);\n    customMonitor.start();\n    return customMonitor;\n  }\n  monitor.start();\n  return monitor;\n};\n\nexport const stopMonitoring = () => {\n  monitor.stop();\n};\n\nexport const trackRequest = (responseTime: number, success: boolean) => {\n  monitor.trackRequest(responseTime, success);\n};\n\nexport const trackError = (error: Error, type?: string) => {\n  monitor.trackError(error, type);\n};\n\nexport const trackDatabaseQuery = (queryTime: number, slow?: boolean) => {\n  monitor.trackDatabaseQuery(queryTime, slow);\n};\n\nexport const trackCacheHit = () => {\n  monitor.trackCacheHit();\n};\n\nexport const trackCacheMiss = () => {\n  monitor.trackCacheMiss();\n};"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2fd189a7760c201653d2c475d68374bc5eceaa1d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2gg0njr88v = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2gg0njr88v();
import { EventEmitter } from 'events';
import { reportError, reportMessage, addBreadcrumb } from './sentry';
const DEFAULT_CONFIG =
/* istanbul ignore next */
(cov_2gg0njr88v().s[0]++, {
  metricsInterval: 30000,
  // 30 seconds
  alertThresholds: {
    cpuUsage: 80,
    // percentage
    memoryUsage: 85,
    // percentage
    responseTime: 5000,
    // milliseconds
    errorRate: 5,
    // percentage
    activeConnections: 1000
  },
  retentionPeriod: 24 * 60 * 60 * 1000 // 24 hours
});
// Monitoring class
class SystemMonitor extends EventEmitter {
  config;
  isRunning =
  /* istanbul ignore next */
  (cov_2gg0njr88v().s[1]++, false);
  metricsInterval =
  /* istanbul ignore next */
  (cov_2gg0njr88v().s[2]++, null);
  systemMetrics =
  /* istanbul ignore next */
  (cov_2gg0njr88v().s[3]++, []);
  applicationMetrics =
  /* istanbul ignore next */
  (cov_2gg0njr88v().s[4]++, []);
  businessMetrics =
  /* istanbul ignore next */
  (cov_2gg0njr88v().s[5]++, []);
  requestStats =
  /* istanbul ignore next */
  (cov_2gg0njr88v().s[6]++, {
    total: 0,
    successful: 0,
    failed: 0,
    responseTimes: [],
    lastReset: Date.now()
  });
  errorStats =
  /* istanbul ignore next */
  (cov_2gg0njr88v().s[7]++, {
    total: 0,
    byType: {},
    lastReset: Date.now()
  });
  databaseStats =
  /* istanbul ignore next */
  (cov_2gg0njr88v().s[8]++, {
    queries: 0,
    queryTimes: [],
    slowQueries: 0,
    lastReset: Date.now()
  });
  cacheStats =
  /* istanbul ignore next */
  (cov_2gg0njr88v().s[9]++, {
    hits: 0,
    misses: 0,
    lastReset: Date.now()
  });
  constructor(config =
  /* istanbul ignore next */
  (cov_2gg0njr88v().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_2gg0njr88v().f[0]++;
    cov_2gg0njr88v().s[10]++;
    super();
    /* istanbul ignore next */
    cov_2gg0njr88v().s[11]++;
    this.config = {
      ...DEFAULT_CONFIG,
      ...config
    };
  }
  start() {
    /* istanbul ignore next */
    cov_2gg0njr88v().f[1]++;
    cov_2gg0njr88v().s[12]++;
    if (this.isRunning) {
      /* istanbul ignore next */
      cov_2gg0njr88v().b[1][0]++;
      cov_2gg0njr88v().s[13]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2gg0njr88v().b[1][1]++;
    }
    cov_2gg0njr88v().s[14]++;
    this.isRunning = true;
    /* istanbul ignore next */
    cov_2gg0njr88v().s[15]++;
    this.metricsInterval = setInterval(() => {
      /* istanbul ignore next */
      cov_2gg0njr88v().f[2]++;
      cov_2gg0njr88v().s[16]++;
      this.collectMetrics();
    }, this.config.metricsInterval);
    /* istanbul ignore next */
    cov_2gg0njr88v().s[17]++;
    addBreadcrumb('System monitoring started', 'monitoring');
    /* istanbul ignore next */
    cov_2gg0njr88v().s[18]++;
    reportMessage('System monitoring started', 'info');
  }
  stop() {
    /* istanbul ignore next */
    cov_2gg0njr88v().f[3]++;
    cov_2gg0njr88v().s[19]++;
    if (!this.isRunning) {
      /* istanbul ignore next */
      cov_2gg0njr88v().b[2][0]++;
      cov_2gg0njr88v().s[20]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2gg0njr88v().b[2][1]++;
    }
    cov_2gg0njr88v().s[21]++;
    this.isRunning = false;
    /* istanbul ignore next */
    cov_2gg0njr88v().s[22]++;
    if (this.metricsInterval) {
      /* istanbul ignore next */
      cov_2gg0njr88v().b[3][0]++;
      cov_2gg0njr88v().s[23]++;
      clearInterval(this.metricsInterval);
      /* istanbul ignore next */
      cov_2gg0njr88v().s[24]++;
      this.metricsInterval = null;
    } else
    /* istanbul ignore next */
    {
      cov_2gg0njr88v().b[3][1]++;
    }
    cov_2gg0njr88v().s[25]++;
    addBreadcrumb('System monitoring stopped', 'monitoring');
    /* istanbul ignore next */
    cov_2gg0njr88v().s[26]++;
    reportMessage('System monitoring stopped', 'info');
  }
  async collectMetrics() {
    /* istanbul ignore next */
    cov_2gg0njr88v().f[4]++;
    cov_2gg0njr88v().s[27]++;
    try {
      const timestamp =
      /* istanbul ignore next */
      (cov_2gg0njr88v().s[28]++, Date.now());
      // Collect system metrics
      const systemMetrics =
      /* istanbul ignore next */
      (cov_2gg0njr88v().s[29]++, await this.collectSystemMetrics(timestamp));
      /* istanbul ignore next */
      cov_2gg0njr88v().s[30]++;
      this.systemMetrics.push(systemMetrics);
      // Collect application metrics
      const applicationMetrics =
      /* istanbul ignore next */
      (cov_2gg0njr88v().s[31]++, this.collectApplicationMetrics(timestamp));
      /* istanbul ignore next */
      cov_2gg0njr88v().s[32]++;
      this.applicationMetrics.push(applicationMetrics);
      // Collect business metrics
      const businessMetrics =
      /* istanbul ignore next */
      (cov_2gg0njr88v().s[33]++, await this.collectBusinessMetrics(timestamp));
      /* istanbul ignore next */
      cov_2gg0njr88v().s[34]++;
      this.businessMetrics.push(businessMetrics);
      // Check for alerts
      /* istanbul ignore next */
      cov_2gg0njr88v().s[35]++;
      this.checkAlerts(systemMetrics, applicationMetrics);
      // Clean up old metrics
      /* istanbul ignore next */
      cov_2gg0njr88v().s[36]++;
      this.cleanupOldMetrics();
      // Emit metrics event
      /* istanbul ignore next */
      cov_2gg0njr88v().s[37]++;
      this.emit('metrics', {
        system: systemMetrics,
        application: applicationMetrics,
        business: businessMetrics
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2gg0njr88v().s[38]++;
      reportError(error, {
        context: 'metrics_collection'
      });
    }
  }
  async collectSystemMetrics(timestamp) {
    /* istanbul ignore next */
    cov_2gg0njr88v().f[5]++;
    const memUsage =
    /* istanbul ignore next */
    (cov_2gg0njr88v().s[39]++, process.memoryUsage());
    const cpuUsage =
    /* istanbul ignore next */
    (cov_2gg0njr88v().s[40]++, process.cpuUsage());
    // Get system information (would need additional libraries for full system metrics)
    /* istanbul ignore next */
    cov_2gg0njr88v().s[41]++;
    return {
      timestamp,
      cpu: {
        usage: this.calculateCpuUsage(cpuUsage),
        loadAverage: [0, 0, 0] // Would use os.loadavg() in Node.js
      },
      memory: {
        used: memUsage.rss,
        total: memUsage.rss + memUsage.heapTotal,
        usage: memUsage.rss / (memUsage.rss + memUsage.heapTotal) * 100,
        heapUsed: memUsage.heapUsed,
        heapTotal: memUsage.heapTotal
      },
      disk: {
        usage: 0,
        // Would need fs.statSync() or similar
        free: 0,
        total: 0
      },
      network: {
        bytesIn: 0,
        // Would need network monitoring
        bytesOut: 0
      }
    };
  }
  collectApplicationMetrics(timestamp) {
    /* istanbul ignore next */
    cov_2gg0njr88v().f[6]++;
    const now =
    /* istanbul ignore next */
    (cov_2gg0njr88v().s[42]++, Date.now());
    const timeSinceReset =
    /* istanbul ignore next */
    (cov_2gg0njr88v().s[43]++, now - this.requestStats.lastReset);
    const requestsPerSecond =
    /* istanbul ignore next */
    (cov_2gg0njr88v().s[44]++, this.requestStats.total / (timeSinceReset / 1000));
    const averageResponseTime =
    /* istanbul ignore next */
    (cov_2gg0njr88v().s[45]++, this.requestStats.responseTimes.length > 0 ?
    /* istanbul ignore next */
    (cov_2gg0njr88v().b[4][0]++, this.requestStats.responseTimes.reduce((a, b) => {
      /* istanbul ignore next */
      cov_2gg0njr88v().f[7]++;
      cov_2gg0njr88v().s[46]++;
      return a + b;
    }, 0) / this.requestStats.responseTimes.length) :
    /* istanbul ignore next */
    (cov_2gg0njr88v().b[4][1]++, 0));
    const errorRate =
    /* istanbul ignore next */
    (cov_2gg0njr88v().s[47]++, this.requestStats.total > 0 ?
    /* istanbul ignore next */
    (cov_2gg0njr88v().b[5][0]++, this.errorStats.total / this.requestStats.total * 100) :
    /* istanbul ignore next */
    (cov_2gg0njr88v().b[5][1]++, 0));
    const averageQueryTime =
    /* istanbul ignore next */
    (cov_2gg0njr88v().s[48]++, this.databaseStats.queryTimes.length > 0 ?
    /* istanbul ignore next */
    (cov_2gg0njr88v().b[6][0]++, this.databaseStats.queryTimes.reduce((a, b) => {
      /* istanbul ignore next */
      cov_2gg0njr88v().f[8]++;
      cov_2gg0njr88v().s[49]++;
      return a + b;
    }, 0) / this.databaseStats.queryTimes.length) :
    /* istanbul ignore next */
    (cov_2gg0njr88v().b[6][1]++, 0));
    const cacheHitRate =
    /* istanbul ignore next */
    (cov_2gg0njr88v().s[50]++, this.cacheStats.hits + this.cacheStats.misses > 0 ?
    /* istanbul ignore next */
    (cov_2gg0njr88v().b[7][0]++, this.cacheStats.hits / (this.cacheStats.hits + this.cacheStats.misses) * 100) :
    /* istanbul ignore next */
    (cov_2gg0njr88v().b[7][1]++, 0));
    /* istanbul ignore next */
    cov_2gg0njr88v().s[51]++;
    return {
      timestamp,
      requests: {
        total: this.requestStats.total,
        successful: this.requestStats.successful,
        failed: this.requestStats.failed,
        averageResponseTime,
        requestsPerSecond
      },
      database: {
        connections: 0,
        // Would get from database pool
        queries: this.databaseStats.queries,
        averageQueryTime,
        slowQueries: this.databaseStats.slowQueries
      },
      cache: {
        hits: this.cacheStats.hits,
        misses: this.cacheStats.misses,
        hitRate: cacheHitRate
      },
      errors: {
        total: this.errorStats.total,
        rate: errorRate,
        byType: {
          ...this.errorStats.byType
        }
      }
    };
  }
  async collectBusinessMetrics(timestamp) {
    /* istanbul ignore next */
    cov_2gg0njr88v().f[9]++;
    cov_2gg0njr88v().s[52]++;
    // This would typically query your database for business metrics
    // Placeholder implementation
    return {
      timestamp,
      users: {
        active: 0,
        new: 0,
        returning: 0
      },
      utm: {
        created: 0,
        clicked: 0,
        conversionRate: 0
      },
      campaigns: {
        active: 0,
        paused: 0,
        completed: 0
      },
      revenue: {
        total: 0,
        subscriptions: 0,
        upgrades: 0
      }
    };
  }
  checkAlerts(systemMetrics, applicationMetrics) {
    /* istanbul ignore next */
    cov_2gg0njr88v().f[10]++;
    const alerts =
    /* istanbul ignore next */
    (cov_2gg0njr88v().s[53]++, []);
    // Check system alerts
    /* istanbul ignore next */
    cov_2gg0njr88v().s[54]++;
    if (systemMetrics.cpu.usage > this.config.alertThresholds.cpuUsage) {
      /* istanbul ignore next */
      cov_2gg0njr88v().b[8][0]++;
      cov_2gg0njr88v().s[55]++;
      alerts.push(`High CPU usage: ${systemMetrics.cpu.usage.toFixed(2)}%`);
    } else
    /* istanbul ignore next */
    {
      cov_2gg0njr88v().b[8][1]++;
    }
    cov_2gg0njr88v().s[56]++;
    if (systemMetrics.memory.usage > this.config.alertThresholds.memoryUsage) {
      /* istanbul ignore next */
      cov_2gg0njr88v().b[9][0]++;
      cov_2gg0njr88v().s[57]++;
      alerts.push(`High memory usage: ${systemMetrics.memory.usage.toFixed(2)}%`);
    } else
    /* istanbul ignore next */
    {
      cov_2gg0njr88v().b[9][1]++;
    }
    // Check application alerts
    cov_2gg0njr88v().s[58]++;
    if (applicationMetrics.requests.averageResponseTime > this.config.alertThresholds.responseTime) {
      /* istanbul ignore next */
      cov_2gg0njr88v().b[10][0]++;
      cov_2gg0njr88v().s[59]++;
      alerts.push(`High response time: ${applicationMetrics.requests.averageResponseTime.toFixed(2)}ms`);
    } else
    /* istanbul ignore next */
    {
      cov_2gg0njr88v().b[10][1]++;
    }
    cov_2gg0njr88v().s[60]++;
    if (applicationMetrics.errors.rate > this.config.alertThresholds.errorRate) {
      /* istanbul ignore next */
      cov_2gg0njr88v().b[11][0]++;
      cov_2gg0njr88v().s[61]++;
      alerts.push(`High error rate: ${applicationMetrics.errors.rate.toFixed(2)}%`);
    } else
    /* istanbul ignore next */
    {
      cov_2gg0njr88v().b[11][1]++;
    }
    // Send alerts
    cov_2gg0njr88v().s[62]++;
    if (alerts.length > 0) {
      /* istanbul ignore next */
      cov_2gg0njr88v().b[12][0]++;
      cov_2gg0njr88v().s[63]++;
      this.emit('alert', {
        timestamp: Date.now(),
        alerts,
        systemMetrics,
        applicationMetrics
      });
      /* istanbul ignore next */
      cov_2gg0njr88v().s[64]++;
      reportMessage(`System alerts: ${alerts.join(', ')}`, 'warning');
    } else
    /* istanbul ignore next */
    {
      cov_2gg0njr88v().b[12][1]++;
    }
  }
  cleanupOldMetrics() {
    /* istanbul ignore next */
    cov_2gg0njr88v().f[11]++;
    const cutoff =
    /* istanbul ignore next */
    (cov_2gg0njr88v().s[65]++, Date.now() - this.config.retentionPeriod);
    /* istanbul ignore next */
    cov_2gg0njr88v().s[66]++;
    this.systemMetrics = this.systemMetrics.filter(m => {
      /* istanbul ignore next */
      cov_2gg0njr88v().f[12]++;
      cov_2gg0njr88v().s[67]++;
      return m.timestamp > cutoff;
    });
    /* istanbul ignore next */
    cov_2gg0njr88v().s[68]++;
    this.applicationMetrics = this.applicationMetrics.filter(m => {
      /* istanbul ignore next */
      cov_2gg0njr88v().f[13]++;
      cov_2gg0njr88v().s[69]++;
      return m.timestamp > cutoff;
    });
    /* istanbul ignore next */
    cov_2gg0njr88v().s[70]++;
    this.businessMetrics = this.businessMetrics.filter(m => {
      /* istanbul ignore next */
      cov_2gg0njr88v().f[14]++;
      cov_2gg0njr88v().s[71]++;
      return m.timestamp > cutoff;
    });
  }
  calculateCpuUsage(cpuUsage) {
    /* istanbul ignore next */
    cov_2gg0njr88v().f[15]++;
    cov_2gg0njr88v().s[72]++;
    // Simplified CPU usage calculation
    // In a real implementation, you'd track this over time
    return (cpuUsage.user + cpuUsage.system) / 1000000; // Convert to percentage
  }
  // Public methods for tracking application events
  trackRequest(responseTime, success) {
    /* istanbul ignore next */
    cov_2gg0njr88v().f[16]++;
    cov_2gg0njr88v().s[73]++;
    this.requestStats.total++;
    /* istanbul ignore next */
    cov_2gg0njr88v().s[74]++;
    this.requestStats.responseTimes.push(responseTime);
    /* istanbul ignore next */
    cov_2gg0njr88v().s[75]++;
    if (success) {
      /* istanbul ignore next */
      cov_2gg0njr88v().b[13][0]++;
      cov_2gg0njr88v().s[76]++;
      this.requestStats.successful++;
    } else {
      /* istanbul ignore next */
      cov_2gg0njr88v().b[13][1]++;
      cov_2gg0njr88v().s[77]++;
      this.requestStats.failed++;
    }
    // Keep only recent response times
    /* istanbul ignore next */
    cov_2gg0njr88v().s[78]++;
    if (this.requestStats.responseTimes.length > 1000) {
      /* istanbul ignore next */
      cov_2gg0njr88v().b[14][0]++;
      cov_2gg0njr88v().s[79]++;
      this.requestStats.responseTimes = this.requestStats.responseTimes.slice(-500);
    } else
    /* istanbul ignore next */
    {
      cov_2gg0njr88v().b[14][1]++;
    }
  }
  trackError(error, type) {
    /* istanbul ignore next */
    cov_2gg0njr88v().f[17]++;
    cov_2gg0njr88v().s[80]++;
    this.errorStats.total++;
    const errorType =
    /* istanbul ignore next */
    (cov_2gg0njr88v().s[81]++,
    /* istanbul ignore next */
    (cov_2gg0njr88v().b[15][0]++, type) ||
    /* istanbul ignore next */
    (cov_2gg0njr88v().b[15][1]++, error.constructor.name));
    /* istanbul ignore next */
    cov_2gg0njr88v().s[82]++;
    this.errorStats.byType[errorType] = (
    /* istanbul ignore next */
    (cov_2gg0njr88v().b[16][0]++, this.errorStats.byType[errorType]) ||
    /* istanbul ignore next */
    (cov_2gg0njr88v().b[16][1]++, 0)) + 1;
  }
  trackDatabaseQuery(queryTime, slow =
  /* istanbul ignore next */
  (cov_2gg0njr88v().b[17][0]++, false)) {
    /* istanbul ignore next */
    cov_2gg0njr88v().f[18]++;
    cov_2gg0njr88v().s[83]++;
    this.databaseStats.queries++;
    /* istanbul ignore next */
    cov_2gg0njr88v().s[84]++;
    this.databaseStats.queryTimes.push(queryTime);
    /* istanbul ignore next */
    cov_2gg0njr88v().s[85]++;
    if (slow) {
      /* istanbul ignore next */
      cov_2gg0njr88v().b[18][0]++;
      cov_2gg0njr88v().s[86]++;
      this.databaseStats.slowQueries++;
    } else
    /* istanbul ignore next */
    {
      cov_2gg0njr88v().b[18][1]++;
    }
    // Keep only recent query times
    cov_2gg0njr88v().s[87]++;
    if (this.databaseStats.queryTimes.length > 1000) {
      /* istanbul ignore next */
      cov_2gg0njr88v().b[19][0]++;
      cov_2gg0njr88v().s[88]++;
      this.databaseStats.queryTimes = this.databaseStats.queryTimes.slice(-500);
    } else
    /* istanbul ignore next */
    {
      cov_2gg0njr88v().b[19][1]++;
    }
  }
  trackCacheHit() {
    /* istanbul ignore next */
    cov_2gg0njr88v().f[19]++;
    cov_2gg0njr88v().s[89]++;
    this.cacheStats.hits++;
  }
  trackCacheMiss() {
    /* istanbul ignore next */
    cov_2gg0njr88v().f[20]++;
    cov_2gg0njr88v().s[90]++;
    this.cacheStats.misses++;
  }
  // Getters for current metrics
  getSystemMetrics(limit =
  /* istanbul ignore next */
  (cov_2gg0njr88v().b[20][0]++, 100)) {
    /* istanbul ignore next */
    cov_2gg0njr88v().f[21]++;
    cov_2gg0njr88v().s[91]++;
    return this.systemMetrics.slice(-limit);
  }
  getApplicationMetrics(limit =
  /* istanbul ignore next */
  (cov_2gg0njr88v().b[21][0]++, 100)) {
    /* istanbul ignore next */
    cov_2gg0njr88v().f[22]++;
    cov_2gg0njr88v().s[92]++;
    return this.applicationMetrics.slice(-limit);
  }
  getBusinessMetrics(limit =
  /* istanbul ignore next */
  (cov_2gg0njr88v().b[22][0]++, 100)) {
    /* istanbul ignore next */
    cov_2gg0njr88v().f[23]++;
    cov_2gg0njr88v().s[93]++;
    return this.businessMetrics.slice(-limit);
  }
  getCurrentStats() {
    /* istanbul ignore next */
    cov_2gg0njr88v().f[24]++;
    cov_2gg0njr88v().s[94]++;
    return {
      requests: {
        ...this.requestStats
      },
      errors: {
        ...this.errorStats
      },
      database: {
        ...this.databaseStats
      },
      cache: {
        ...this.cacheStats
      }
    };
  }
  resetStats() {
    /* istanbul ignore next */
    cov_2gg0njr88v().f[25]++;
    const now =
    /* istanbul ignore next */
    (cov_2gg0njr88v().s[95]++, Date.now());
    /* istanbul ignore next */
    cov_2gg0njr88v().s[96]++;
    this.requestStats = {
      total: 0,
      successful: 0,
      failed: 0,
      responseTimes: [],
      lastReset: now
    };
    /* istanbul ignore next */
    cov_2gg0njr88v().s[97]++;
    this.errorStats = {
      total: 0,
      byType: {},
      lastReset: now
    };
    /* istanbul ignore next */
    cov_2gg0njr88v().s[98]++;
    this.databaseStats = {
      queries: 0,
      queryTimes: [],
      slowQueries: 0,
      lastReset: now
    };
    /* istanbul ignore next */
    cov_2gg0njr88v().s[99]++;
    this.cacheStats = {
      hits: 0,
      misses: 0,
      lastReset: now
    };
  }
}
// Create singleton instance
const monitor =
/* istanbul ignore next */
(cov_2gg0njr88v().s[100]++, new SystemMonitor());
export default monitor;
export { SystemMonitor };
// Convenience functions
/* istanbul ignore next */
cov_2gg0njr88v().s[101]++;
export const startMonitoring = config => {
  /* istanbul ignore next */
  cov_2gg0njr88v().f[26]++;
  cov_2gg0njr88v().s[102]++;
  if (config) {
    /* istanbul ignore next */
    cov_2gg0njr88v().b[23][0]++;
    // Create new instance with custom config
    const customMonitor =
    /* istanbul ignore next */
    (cov_2gg0njr88v().s[103]++, new SystemMonitor(config));
    /* istanbul ignore next */
    cov_2gg0njr88v().s[104]++;
    customMonitor.start();
    /* istanbul ignore next */
    cov_2gg0njr88v().s[105]++;
    return customMonitor;
  } else
  /* istanbul ignore next */
  {
    cov_2gg0njr88v().b[23][1]++;
  }
  cov_2gg0njr88v().s[106]++;
  monitor.start();
  /* istanbul ignore next */
  cov_2gg0njr88v().s[107]++;
  return monitor;
};
/* istanbul ignore next */
cov_2gg0njr88v().s[108]++;
export const stopMonitoring = () => {
  /* istanbul ignore next */
  cov_2gg0njr88v().f[27]++;
  cov_2gg0njr88v().s[109]++;
  monitor.stop();
};
/* istanbul ignore next */
cov_2gg0njr88v().s[110]++;
export const trackRequest = (responseTime, success) => {
  /* istanbul ignore next */
  cov_2gg0njr88v().f[28]++;
  cov_2gg0njr88v().s[111]++;
  monitor.trackRequest(responseTime, success);
};
/* istanbul ignore next */
cov_2gg0njr88v().s[112]++;
export const trackError = (error, type) => {
  /* istanbul ignore next */
  cov_2gg0njr88v().f[29]++;
  cov_2gg0njr88v().s[113]++;
  monitor.trackError(error, type);
};
/* istanbul ignore next */
cov_2gg0njr88v().s[114]++;
export const trackDatabaseQuery = (queryTime, slow) => {
  /* istanbul ignore next */
  cov_2gg0njr88v().f[30]++;
  cov_2gg0njr88v().s[115]++;
  monitor.trackDatabaseQuery(queryTime, slow);
};
/* istanbul ignore next */
cov_2gg0njr88v().s[116]++;
export const trackCacheHit = () => {
  /* istanbul ignore next */
  cov_2gg0njr88v().f[31]++;
  cov_2gg0njr88v().s[117]++;
  monitor.trackCacheHit();
};
/* istanbul ignore next */
cov_2gg0njr88v().s[118]++;
export const trackCacheMiss = () => {
  /* istanbul ignore next */
  cov_2gg0njr88v().f[32]++;
  cov_2gg0njr88v().s[119]++;
  monitor.trackCacheMiss();
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,