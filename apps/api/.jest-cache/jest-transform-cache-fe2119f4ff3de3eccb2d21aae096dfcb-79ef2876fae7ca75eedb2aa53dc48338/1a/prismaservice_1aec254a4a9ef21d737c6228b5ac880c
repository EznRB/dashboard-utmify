c563551074c0d4ba1365f50c2c5cef73
/* istanbul ignore next */
function cov_tdcvulbeh() {
  var path = "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\database\\prisma.service.ts";
  var hash = "2d79e4a59fb9fa44bf37fa68f6adcf7dbb7dc6d3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\database\\prisma.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 18
        },
        end: {
          line: 4,
          column: 23
        }
      },
      "1": {
        start: {
          line: 5,
          column: 13
        },
        end: {
          line: 5,
          column: 19
        }
      },
      "2": {
        start: {
          line: 7,
          column: 8
        },
        end: {
          line: 26,
          column: 11
        }
      },
      "3": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 36,
          column: 9
        }
      },
      "4": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 35,
          column: 15
        }
      },
      "5": {
        start: {
          line: 32,
          column: 16
        },
        end: {
          line: 32,
          column: 55
        }
      },
      "6": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 33,
          column: 57
        }
      },
      "7": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 34,
          column: 63
        }
      },
      "8": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 39,
          column: 11
        }
      },
      "9": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 52
        }
      },
      "10": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 42,
          column: 11
        }
      },
      "11": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 57
        }
      },
      "12": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 45,
          column: 11
        }
      },
      "13": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 61
        }
      },
      "14": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "15": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 34
        }
      },
      "16": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 66
        }
      },
      "17": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 71
        }
      },
      "18": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 24
        }
      },
      "19": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "20": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 37
        }
      },
      "21": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 58
        }
      },
      "22": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 75
        }
      },
      "23": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 70,
          column: 11
        }
      },
      "24": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 30
        }
      },
      "25": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 82,
          column: 9
        }
      },
      "26": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 44
        }
      },
      "27": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 24
        }
      },
      "28": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 4
          },
          end: {
            line: 6,
            column: 5
          }
        },
        loc: {
          start: {
            line: 6,
            column: 18
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 20
          },
          end: {
            line: 54,
            column: 5
          }
        },
        line: 28
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 31,
            column: 30
          },
          end: {
            line: 31,
            column: 31
          }
        },
        loc: {
          start: {
            line: 31,
            column: 37
          },
          end: {
            line: 35,
            column: 13
          }
        },
        line: 31
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 37,
            column: 26
          },
          end: {
            line: 37,
            column: 27
          }
        },
        loc: {
          start: {
            line: 37,
            column: 33
          },
          end: {
            line: 39,
            column: 9
          }
        },
        line: 37
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 40,
            column: 25
          },
          end: {
            line: 40,
            column: 26
          }
        },
        loc: {
          start: {
            line: 40,
            column: 32
          },
          end: {
            line: 42,
            column: 9
          }
        },
        line: 40
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 43,
            column: 25
          },
          end: {
            line: 43,
            column: 26
          }
        },
        loc: {
          start: {
            line: 43,
            column: 32
          },
          end: {
            line: 45,
            column: 9
          }
        },
        line: 43
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        },
        loc: {
          start: {
            line: 55,
            column: 23
          },
          end: {
            line: 63,
            column: 5
          }
        },
        line: 55
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        },
        loc: {
          start: {
            line: 67,
            column: 35
          },
          end: {
            line: 71,
            column: 5
          }
        },
        line: 67
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 68,
            column: 31
          },
          end: {
            line: 68,
            column: 32
          }
        },
        loc: {
          start: {
            line: 68,
            column: 43
          },
          end: {
            line: 70,
            column: 9
          }
        },
        line: 68
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        },
        loc: {
          start: {
            line: 75,
            column: 24
          },
          end: {
            line: 83,
            column: 5
          }
        },
        line: 75
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\database\\prisma.service.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\database\\prisma.service.ts"],
      sourcesContent: ["import { PrismaClient } from '@utmify/database';\nimport { logger } from '../utils/logger';\n\nexport class PrismaService extends PrismaClient {\n  private isConnected = false;\n  private logger = logger;\n\n  constructor() {\n    super({\n      log: [\n        {\n          emit: 'event',\n          level: 'query',\n        },\n        {\n          emit: 'event',\n          level: 'error',\n        },\n        {\n          emit: 'event',\n          level: 'info',\n        },\n        {\n          emit: 'event',\n          level: 'warn',\n        },\n      ],\n    });\n  }\n\n  async connect() {\n    // Log database queries in development\n    if (process.env.NODE_ENV === 'development') {\n      this.$on('query', (e) => {\n        this.logger.debug(`Query: ${e.query}`);\n        this.logger.debug(`Params: ${e.params}`);\n        this.logger.debug(`Duration: ${e.duration}ms`);\n      });\n    }\n\n    this.$on('error', (e) => {\n      this.logger.error('Database error:', e);\n    });\n\n    this.$on('info', (e) => {\n      this.logger.log('Database info:', e.message);\n    });\n\n    this.$on('warn', (e) => {\n      this.logger.warn('Database warning:', e.message);\n    });\n\n    try {\n      await this.$connect();\n      this.logger.log('Successfully connected to database');\n    } catch (error) {\n      this.logger.error('Failed to connect to database:', error);\n      throw error;\n    }\n  }\n\n  async disconnect() {\n    try {\n      await this.$disconnect();\n      this.logger.log('Disconnected from database');\n    } catch (error) {\n      this.logger.error('Error disconnecting from database:', error);\n    }\n  }\n\n  /**\n   * Clean shutdown helper\n   */\n  async enableShutdownHooks(app: any) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n\n  /**\n   * Health check for database connection\n   */\n  async healthCheck(): Promise<boolean> {\n    try {\n      await this.$queryRaw`SELECT 1`;\n      return true;\n    } catch {\n      return false;\n    }\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2d79e4a59fb9fa44bf37fa68f6adcf7dbb7dc6d3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_tdcvulbeh = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_tdcvulbeh();
import { PrismaClient } from '@utmify/database';
import { logger } from '../utils/logger';
export class PrismaService extends PrismaClient {
  isConnected =
  /* istanbul ignore next */
  (cov_tdcvulbeh().s[0]++, false);
  logger =
  /* istanbul ignore next */
  (cov_tdcvulbeh().s[1]++, logger);
  constructor() {
    /* istanbul ignore next */
    cov_tdcvulbeh().f[0]++;
    cov_tdcvulbeh().s[2]++;
    super({
      log: [{
        emit: 'event',
        level: 'query'
      }, {
        emit: 'event',
        level: 'error'
      }, {
        emit: 'event',
        level: 'info'
      }, {
        emit: 'event',
        level: 'warn'
      }]
    });
  }
  async connect() {
    /* istanbul ignore next */
    cov_tdcvulbeh().f[1]++;
    cov_tdcvulbeh().s[3]++;
    // Log database queries in development
    if (process.env.NODE_ENV === 'development') {
      /* istanbul ignore next */
      cov_tdcvulbeh().b[0][0]++;
      cov_tdcvulbeh().s[4]++;
      this.$on('query', e => {
        /* istanbul ignore next */
        cov_tdcvulbeh().f[2]++;
        cov_tdcvulbeh().s[5]++;
        this.logger.debug(`Query: ${e.query}`);
        /* istanbul ignore next */
        cov_tdcvulbeh().s[6]++;
        this.logger.debug(`Params: ${e.params}`);
        /* istanbul ignore next */
        cov_tdcvulbeh().s[7]++;
        this.logger.debug(`Duration: ${e.duration}ms`);
      });
    } else
    /* istanbul ignore next */
    {
      cov_tdcvulbeh().b[0][1]++;
    }
    cov_tdcvulbeh().s[8]++;
    this.$on('error', e => {
      /* istanbul ignore next */
      cov_tdcvulbeh().f[3]++;
      cov_tdcvulbeh().s[9]++;
      this.logger.error('Database error:', e);
    });
    /* istanbul ignore next */
    cov_tdcvulbeh().s[10]++;
    this.$on('info', e => {
      /* istanbul ignore next */
      cov_tdcvulbeh().f[4]++;
      cov_tdcvulbeh().s[11]++;
      this.logger.log('Database info:', e.message);
    });
    /* istanbul ignore next */
    cov_tdcvulbeh().s[12]++;
    this.$on('warn', e => {
      /* istanbul ignore next */
      cov_tdcvulbeh().f[5]++;
      cov_tdcvulbeh().s[13]++;
      this.logger.warn('Database warning:', e.message);
    });
    /* istanbul ignore next */
    cov_tdcvulbeh().s[14]++;
    try {
      /* istanbul ignore next */
      cov_tdcvulbeh().s[15]++;
      await this.$connect();
      /* istanbul ignore next */
      cov_tdcvulbeh().s[16]++;
      this.logger.log('Successfully connected to database');
    } catch (error) {
      /* istanbul ignore next */
      cov_tdcvulbeh().s[17]++;
      this.logger.error('Failed to connect to database:', error);
      /* istanbul ignore next */
      cov_tdcvulbeh().s[18]++;
      throw error;
    }
  }
  async disconnect() {
    /* istanbul ignore next */
    cov_tdcvulbeh().f[6]++;
    cov_tdcvulbeh().s[19]++;
    try {
      /* istanbul ignore next */
      cov_tdcvulbeh().s[20]++;
      await this.$disconnect();
      /* istanbul ignore next */
      cov_tdcvulbeh().s[21]++;
      this.logger.log('Disconnected from database');
    } catch (error) {
      /* istanbul ignore next */
      cov_tdcvulbeh().s[22]++;
      this.logger.error('Error disconnecting from database:', error);
    }
  }
  /**
   * Clean shutdown helper
   */
  async enableShutdownHooks(app) {
    /* istanbul ignore next */
    cov_tdcvulbeh().f[7]++;
    cov_tdcvulbeh().s[23]++;
    this.$on('beforeExit', async () => {
      /* istanbul ignore next */
      cov_tdcvulbeh().f[8]++;
      cov_tdcvulbeh().s[24]++;
      await app.close();
    });
  }
  /**
   * Health check for database connection
   */
  async healthCheck() {
    /* istanbul ignore next */
    cov_tdcvulbeh().f[9]++;
    cov_tdcvulbeh().s[25]++;
    try {
      /* istanbul ignore next */
      cov_tdcvulbeh().s[26]++;
      await this.$queryRaw`SELECT 1`;
      /* istanbul ignore next */
      cov_tdcvulbeh().s[27]++;
      return true;
    } catch {
      /* istanbul ignore next */
      cov_tdcvulbeh().s[28]++;
      return false;
    }
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,