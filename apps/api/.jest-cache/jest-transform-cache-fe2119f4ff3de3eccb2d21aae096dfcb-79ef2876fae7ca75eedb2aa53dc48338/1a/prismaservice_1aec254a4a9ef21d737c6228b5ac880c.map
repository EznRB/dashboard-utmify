{"version":3,"names":["PrismaClient","logger","PrismaService","isConnected","cov_tdcvulbeh","s","constructor","f","log","emit","level","connect","process","env","NODE_ENV","b","$on","e","debug","query","params","duration","error","message","warn","$connect","disconnect","$disconnect","enableShutdownHooks","app","close","healthCheck","$queryRaw"],"sources":["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\database\\prisma.service.ts"],"sourcesContent":["import { PrismaClient } from '@utmify/database';\nimport { logger } from '../utils/logger';\n\nexport class PrismaService extends PrismaClient {\n  private isConnected = false;\n  private logger = logger;\n\n  constructor() {\n    super({\n      log: [\n        {\n          emit: 'event',\n          level: 'query',\n        },\n        {\n          emit: 'event',\n          level: 'error',\n        },\n        {\n          emit: 'event',\n          level: 'info',\n        },\n        {\n          emit: 'event',\n          level: 'warn',\n        },\n      ],\n    });\n  }\n\n  async connect() {\n    // Log database queries in development\n    if (process.env.NODE_ENV === 'development') {\n      this.$on('query', (e) => {\n        this.logger.debug(`Query: ${e.query}`);\n        this.logger.debug(`Params: ${e.params}`);\n        this.logger.debug(`Duration: ${e.duration}ms`);\n      });\n    }\n\n    this.$on('error', (e) => {\n      this.logger.error('Database error:', e);\n    });\n\n    this.$on('info', (e) => {\n      this.logger.log('Database info:', e.message);\n    });\n\n    this.$on('warn', (e) => {\n      this.logger.warn('Database warning:', e.message);\n    });\n\n    try {\n      await this.$connect();\n      this.logger.log('Successfully connected to database');\n    } catch (error) {\n      this.logger.error('Failed to connect to database:', error);\n      throw error;\n    }\n  }\n\n  async disconnect() {\n    try {\n      await this.$disconnect();\n      this.logger.log('Disconnected from database');\n    } catch (error) {\n      this.logger.error('Error disconnecting from database:', error);\n    }\n  }\n\n  /**\n   * Clean shutdown helper\n   */\n  async enableShutdownHooks(app: any) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n\n  /**\n   * Health check for database connection\n   */\n  async healthCheck(): Promise<boolean> {\n    try {\n      await this.$queryRaw`SELECT 1`;\n      return true;\n    } catch {\n      return false;\n    }\n  }\n}"],"mappings":"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","ignoreList":[]}