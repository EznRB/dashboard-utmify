{"version":3,"names":["cov_3refoz7iu","actualCoverage","webhookDispatcher","Logger","logger","s","WebhookEventsMiddleware","campaignEvents","f","req","res","next","originalSend","send","originalJson","json","body","b","statusCode","handleCampaignEvent","call","conversionEvents","handleConversionEvent","budgetEvents","handleBudgetEvent","responseBody","userId","user","id","method","toLowerCase","path","eventType","includes","campaign","dispatchCampaignEvent","error","conversion","dispatchConversionEvent","budget","spentPercentage","spent","amount","dispatchBudgetEvent","dispatchEvent","handleGenericEvent","userAgent","get","ip","dispatchWebhookEvent","data","metadata","WEBHOOK_EVENT_TYPES","CAMPAIGN_CREATED","CAMPAIGN_UPDATED","CAMPAIGN_DELETED","AD_CREATED","AD_UPDATED","AD_DELETED","BUDGET_UPDATED","BUDGET_EXCEEDED","BUDGET_DEPLETED","CONVERSION_RECEIVED","INTEGRATION_CONNECTED","INTEGRATION_DISCONNECTED","INTEGRATION_ERROR","ANALYTICS_REPORT_GENERATED","ANALYTICS_THRESHOLD_REACHED","WEBHOOK_TEST"],"sources":["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\middleware\\webhook-events.middleware.ts"],"sourcesContent":["import { Request, Response, NextFunction } from 'express'\nimport { webhookDispatcher } from '../services/webhook-dispatcher.service'\nimport { Logger } from '../utils/logger'\n\nconst logger = new Logger('WebhookEventsMiddleware')\n\nexport interface WebhookEventContext {\n  userId: string\n  eventType: string\n  data: any\n  metadata?: Record<string, any>\n}\n\n/**\n * Middleware to automatically dispatch webhook events\n */\nexport class WebhookEventsMiddleware {\n  /**\n   * Campaign events middleware\n   */\n  static campaignEvents() {\n    return async (req: Request, res: Response, next: NextFunction) => {\n      const originalSend = res.send\n      const originalJson = res.json\n\n      // Override response methods to capture successful operations\n      res.send = function(body) {\n        if (res.statusCode >= 200 && res.statusCode < 300) {\n          WebhookEventsMiddleware.handleCampaignEvent(req, body)\n        }\n        return originalSend.call(this, body)\n      }\n\n      res.json = function(body) {\n        if (res.statusCode >= 200 && res.statusCode < 300) {\n          WebhookEventsMiddleware.handleCampaignEvent(req, body)\n        }\n        return originalJson.call(this, body)\n      }\n\n      next()\n    }\n  }\n\n  /**\n   * Conversion events middleware\n   */\n  static conversionEvents() {\n    return async (req: Request, res: Response, next: NextFunction) => {\n      const originalSend = res.send\n      const originalJson = res.json\n\n      res.send = function(body) {\n        if (res.statusCode >= 200 && res.statusCode < 300) {\n          WebhookEventsMiddleware.handleConversionEvent(req, body)\n        }\n        return originalSend.call(this, body)\n      }\n\n      res.json = function(body) {\n        if (res.statusCode >= 200 && res.statusCode < 300) {\n          WebhookEventsMiddleware.handleConversionEvent(req, body)\n        }\n        return originalJson.call(this, body)\n      }\n\n      next()\n    }\n  }\n\n  /**\n   * Budget events middleware\n   */\n  static budgetEvents() {\n    return async (req: Request, res: Response, next: NextFunction) => {\n      const originalSend = res.send\n      const originalJson = res.json\n\n      res.send = function(body) {\n        if (res.statusCode >= 200 && res.statusCode < 300) {\n          WebhookEventsMiddleware.handleBudgetEvent(req, body)\n        }\n        return originalSend.call(this, body)\n      }\n\n      res.json = function(body) {\n        if (res.statusCode >= 200 && res.statusCode < 300) {\n          WebhookEventsMiddleware.handleBudgetEvent(req, body)\n        }\n        return originalJson.call(this, body)\n      }\n\n      next()\n    }\n  }\n\n  /**\n   * Handle campaign events\n   */\n  private static async handleCampaignEvent(req: Request, responseBody: any) {\n    try {\n      const userId = req.user?.id || req.body?.userId\n      if (!userId) return\n\n      const method = req.method.toLowerCase()\n      const path = req.path\n\n      // Determine event type based on HTTP method and path\n      let eventType: 'created' | 'updated' | 'deleted' | null = null\n      \n      if (method === 'post' && path.includes('/campaigns')) {\n        eventType = 'created'\n      } else if (method === 'put' && path.includes('/campaigns')) {\n        eventType = 'updated'\n      } else if (method === 'patch' && path.includes('/campaigns')) {\n        eventType = 'updated'\n      } else if (method === 'delete' && path.includes('/campaigns')) {\n        eventType = 'deleted'\n      }\n\n      if (eventType && responseBody?.campaign) {\n        await webhookDispatcher.dispatchCampaignEvent(\n          eventType,\n          responseBody.campaign,\n          userId\n        )\n      }\n    } catch (error) {\n      logger.error('Error handling campaign webhook event:', error)\n    }\n  }\n\n  /**\n   * Handle conversion events\n   */\n  private static async handleConversionEvent(req: Request, responseBody: any) {\n    try {\n      const userId = req.user?.id || req.body?.userId\n      if (!userId) return\n\n      const method = req.method.toLowerCase()\n      const path = req.path\n\n      // Handle conversion tracking endpoints\n      if (method === 'post' && (path.includes('/conversions') || path.includes('/track'))) {\n        if (responseBody?.conversion) {\n          await webhookDispatcher.dispatchConversionEvent(\n            responseBody.conversion,\n            userId\n          )\n        }\n      }\n    } catch (error) {\n      logger.error('Error handling conversion webhook event:', error)\n    }\n  }\n\n  /**\n   * Handle budget events\n   */\n  private static async handleBudgetEvent(req: Request, responseBody: any) {\n    try {\n      const userId = req.user?.id || req.body?.userId\n      if (!userId) return\n\n      const method = req.method.toLowerCase()\n      const path = req.path\n\n      // Determine budget event type\n      let eventType: 'updated' | 'exceeded' | 'depleted' | null = null\n\n      if (method === 'put' && path.includes('/budget')) {\n        eventType = 'updated'\n      } else if (method === 'patch' && path.includes('/budget')) {\n        eventType = 'updated'\n      }\n\n      // Check for budget threshold events\n      if (responseBody?.budget) {\n        const budget = responseBody.budget\n        const spentPercentage = (budget.spent / budget.amount) * 100\n\n        if (spentPercentage >= 100) {\n          eventType = 'depleted'\n        } else if (spentPercentage >= 80) {\n          eventType = 'exceeded'\n        }\n      }\n\n      if (eventType && responseBody?.budget) {\n        await webhookDispatcher.dispatchBudgetEvent(\n          eventType,\n          responseBody.budget,\n          userId\n        )\n      }\n    } catch (error) {\n      logger.error('Error handling budget webhook event:', error)\n    }\n  }\n\n  /**\n   * Generic event dispatcher\n   */\n  static dispatchEvent(eventType: string) {\n    return async (req: Request, res: Response, next: NextFunction) => {\n      const originalSend = res.send\n      const originalJson = res.json\n\n      res.send = function(body) {\n        if (res.statusCode >= 200 && res.statusCode < 300) {\n          WebhookEventsMiddleware.handleGenericEvent(req, body, eventType)\n        }\n        return originalSend.call(this, body)\n      }\n\n      res.json = function(body) {\n        if (res.statusCode >= 200 && res.statusCode < 300) {\n          WebhookEventsMiddleware.handleGenericEvent(req, body, eventType)\n        }\n        return originalJson.call(this, body)\n      }\n\n      next()\n    }\n  }\n\n  /**\n   * Handle generic events\n   */\n  private static async handleGenericEvent(req: Request, responseBody: any, eventType: string) {\n    try {\n      const userId = req.user?.id || req.body?.userId\n      if (!userId) return\n\n      await webhookDispatcher.dispatchEvent(\n        eventType,\n        responseBody,\n        userId,\n        {\n          method: req.method,\n          path: req.path,\n          userAgent: req.get('User-Agent'),\n          ip: req.ip\n        }\n      )\n    } catch (error) {\n      logger.error(`Error handling generic webhook event (${eventType}):`, error)\n    }\n  }\n}\n\n/**\n * Helper function to manually dispatch events\n */\nexport async function dispatchWebhookEvent(\n  eventType: string,\n  data: any,\n  userId: string,\n  metadata?: Record<string, any>\n) {\n  try {\n    await webhookDispatcher.dispatchEvent(eventType, data, userId, metadata)\n  } catch (error) {\n    logger.error('Error dispatching manual webhook event:', error)\n    throw error\n  }\n}\n\n/**\n * Webhook event types constants\n */\nexport const WEBHOOK_EVENT_TYPES = {\n  // Campaign events\n  CAMPAIGN_CREATED: 'campaign.created',\n  CAMPAIGN_UPDATED: 'campaign.updated',\n  CAMPAIGN_DELETED: 'campaign.deleted',\n  \n  // Ad events\n  AD_CREATED: 'ad.created',\n  AD_UPDATED: 'ad.updated',\n  AD_DELETED: 'ad.deleted',\n  \n  // Budget events\n  BUDGET_UPDATED: 'budget.updated',\n  BUDGET_EXCEEDED: 'budget.exceeded',\n  BUDGET_DEPLETED: 'budget.depleted',\n  \n  // Conversion events\n  CONVERSION_RECEIVED: 'conversion.received',\n  \n  // Integration events\n  INTEGRATION_CONNECTED: 'integration.connected',\n  INTEGRATION_DISCONNECTED: 'integration.disconnected',\n  INTEGRATION_ERROR: 'integration.error',\n  \n  // Analytics events\n  ANALYTICS_REPORT_GENERATED: 'analytics.report_generated',\n  ANALYTICS_THRESHOLD_REACHED: 'analytics.threshold_reached',\n  \n  // System events\n  WEBHOOK_TEST: 'webhook.test'\n} as const"],"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","ignoreList":[]}