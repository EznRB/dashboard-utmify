a029b72fa2c5fc808b2fb733ba7284dc
/* istanbul ignore next */
function cov_1llo868sqg() {
  var path = "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\services\\roas-roi.service.ts";
  var hash = "8daa9f61c34dca23355dd93209e082a6b8504fc6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\services\\roas-roi.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 8
        },
        end: {
          line: 6,
          column: 29
        }
      },
      "1": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 14,
          column: 21
        }
      },
      "2": {
        start: {
          line: 14,
          column: 12
        },
        end: {
          line: 14,
          column: 21
        }
      },
      "3": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 58
        }
      },
      "4": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 23,
          column: 21
        }
      },
      "5": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 21
        }
      },
      "6": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 82
        }
      },
      "7": {
        start: {
          line: 30,
          column: 26
        },
        end: {
          line: 30,
          column: 66
        }
      },
      "8": {
        start: {
          line: 31,
          column: 23
        },
        end: {
          line: 31,
          column: 42
        }
      },
      "9": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 42,
          column: 10
        }
      },
      "10": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 49,
          column: 31
        }
      },
      "11": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 31
        }
      },
      "12": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 51,
          column: 26
        }
      },
      "13": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 26
        }
      },
      "14": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 53,
          column: 29
        }
      },
      "15": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 29
        }
      },
      "16": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 22
        }
      },
      "17": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 61,
          column: 31
        }
      },
      "18": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 31
        }
      },
      "19": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 63,
          column: 26
        }
      },
      "20": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 26
        }
      },
      "21": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 65,
          column: 29
        }
      },
      "22": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 29
        }
      },
      "23": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 22
        }
      },
      "24": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "25": {
        start: {
          line: 73,
          column: 30
        },
        end: {
          line: 88,
          column: 14
        }
      },
      "26": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 105,
          column: 15
        }
      },
      "27": {
        start: {
          line: 90,
          column: 37
        },
        end: {
          line: 90,
          column: 114
        }
      },
      "28": {
        start: {
          line: 90,
          column: 83
        },
        end: {
          line: 90,
          column: 110
        }
      },
      "29": {
        start: {
          line: 91,
          column: 37
        },
        end: {
          line: 91,
          column: 114
        }
      },
      "30": {
        start: {
          line: 91,
          column: 83
        },
        end: {
          line: 91,
          column: 110
        }
      },
      "31": {
        start: {
          line: 92,
          column: 29
        },
        end: {
          line: 92,
          column: 75
        }
      },
      "32": {
        start: {
          line: 93,
          column: 39
        },
        end: {
          line: 93,
          column: 49
        }
      },
      "33": {
        start: {
          line: 94,
          column: 16
        },
        end: {
          line: 104,
          column: 18
        }
      },
      "34": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 69
        }
      },
      "35": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 56
        }
      },
      "36": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 160,
          column: 9
        }
      },
      "37": {
        start: {
          line: 119,
          column: 30
        },
        end: {
          line: 134,
          column: 14
        }
      },
      "38": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 155,
          column: 15
        }
      },
      "39": {
        start: {
          line: 136,
          column: 37
        },
        end: {
          line: 136,
          column: 114
        }
      },
      "40": {
        start: {
          line: 136,
          column: 83
        },
        end: {
          line: 136,
          column: 110
        }
      },
      "41": {
        start: {
          line: 137,
          column: 37
        },
        end: {
          line: 137,
          column: 114
        }
      },
      "42": {
        start: {
          line: 137,
          column: 83
        },
        end: {
          line: 137,
          column: 110
        }
      },
      "43": {
        start: {
          line: 139,
          column: 40
        },
        end: {
          line: 139,
          column: 80
        }
      },
      "44": {
        start: {
          line: 140,
          column: 37
        },
        end: {
          line: 140,
          column: 73
        }
      },
      "45": {
        start: {
          line: 141,
          column: 36
        },
        end: {
          line: 141,
          column: 120
        }
      },
      "46": {
        start: {
          line: 142,
          column: 16
        },
        end: {
          line: 154,
          column: 18
        }
      },
      "47": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 158,
          column: 68
        }
      },
      "48": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 159,
          column: 55
        }
      },
      "49": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 203,
          column: 9
        }
      },
      "50": {
        start: {
          line: 168,
          column: 33
        },
        end: {
          line: 180,
          column: 7
        }
      },
      "51": {
        start: {
          line: 181,
          column: 28
        },
        end: {
          line: 181,
          column: 111
        }
      },
      "52": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 198,
          column: 15
        }
      },
      "53": {
        start: {
          line: 183,
          column: 32
        },
        end: {
          line: 183,
          column: 65
        }
      },
      "54": {
        start: {
          line: 184,
          column: 32
        },
        end: {
          line: 184,
          column: 66
        }
      },
      "55": {
        start: {
          line: 185,
          column: 40
        },
        end: {
          line: 185,
          column: 53
        }
      },
      "56": {
        start: {
          line: 186,
          column: 37
        },
        end: {
          line: 186,
          column: 51
        }
      },
      "57": {
        start: {
          line: 187,
          column: 34
        },
        end: {
          line: 187,
          column: 74
        }
      },
      "58": {
        start: {
          line: 188,
          column: 31
        },
        end: {
          line: 188,
          column: 50
        }
      },
      "59": {
        start: {
          line: 189,
          column: 16
        },
        end: {
          line: 197,
          column: 18
        }
      },
      "60": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 201,
          column: 65
        }
      },
      "61": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 202,
          column: 52
        }
      },
      "62": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 216,
          column: 9
        }
      },
      "63": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 215,
          column: 14
        }
      },
      "64": {
        start: {
          line: 217,
          column: 23
        },
        end: {
          line: 217,
          column: 54
        }
      },
      "65": {
        start: {
          line: 218,
          column: 25
        },
        end: {
          line: 218,
          column: 56
        }
      },
      "66": {
        start: {
          line: 219,
          column: 23
        },
        end: {
          line: 219,
          column: 40
        }
      },
      "67": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 225,
          column: 10
        }
      },
      "68": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 283,
          column: 9
        }
      },
      "69": {
        start: {
          line: 232,
          column: 64
        },
        end: {
          line: 236,
          column: 14
        }
      },
      "70": {
        start: {
          line: 238,
          column: 33
        },
        end: {
          line: 238,
          column: 94
        }
      },
      "71": {
        start: {
          line: 238,
          column: 72
        },
        end: {
          line: 238,
          column: 90
        }
      },
      "72": {
        start: {
          line: 239,
          column: 33
        },
        end: {
          line: 239,
          column: 94
        }
      },
      "73": {
        start: {
          line: 239,
          column: 72
        },
        end: {
          line: 239,
          column: 90
        }
      },
      "74": {
        start: {
          line: 240,
          column: 30
        },
        end: {
          line: 240,
          column: 92
        }
      },
      "75": {
        start: {
          line: 240,
          column: 68
        },
        end: {
          line: 240,
          column: 88
        }
      },
      "76": {
        start: {
          line: 241,
          column: 32
        },
        end: {
          line: 241,
          column: 91
        }
      },
      "77": {
        start: {
          line: 241,
          column: 70
        },
        end: {
          line: 241,
          column: 87
        }
      },
      "78": {
        start: {
          line: 242,
          column: 28
        },
        end: {
          line: 244,
          column: 19
        }
      },
      "79": {
        start: {
          line: 243,
          column: 57
        },
        end: {
          line: 243,
          column: 72
        }
      },
      "80": {
        start: {
          line: 245,
          column: 27
        },
        end: {
          line: 247,
          column: 19
        }
      },
      "81": {
        start: {
          line: 246,
          column: 56
        },
        end: {
          line: 246,
          column: 70
        }
      },
      "82": {
        start: {
          line: 249,
          column: 29
        },
        end: {
          line: 249,
          column: 171
        }
      },
      "83": {
        start: {
          line: 249,
          column: 72
        },
        end: {
          line: 249,
          column: 113
        }
      },
      "84": {
        start: {
          line: 250,
          column: 30
        },
        end: {
          line: 250,
          column: 175
        }
      },
      "85": {
        start: {
          line: 250,
          column: 74
        },
        end: {
          line: 250,
          column: 117
        }
      },
      "86": {
        start: {
          line: 252,
          column: 27
        },
        end: {
          line: 252,
          column: 88
        }
      },
      "87": {
        start: {
          line: 253,
          column: 12
        },
        end: {
          line: 278,
          column: 14
        }
      },
      "88": {
        start: {
          line: 264,
          column: 55
        },
        end: {
          line: 264,
          column: 91
        }
      },
      "89": {
        start: {
          line: 269,
          column: 55
        },
        end: {
          line: 269,
          column: 92
        }
      },
      "90": {
        start: {
          line: 281,
          column: 12
        },
        end: {
          line: 281,
          column: 72
        }
      },
      "91": {
        start: {
          line: 282,
          column: 12
        },
        end: {
          line: 282,
          column: 59
        }
      },
      "92": {
        start: {
          line: 289,
          column: 23
        },
        end: {
          line: 289,
          column: 25
        }
      },
      "93": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 314,
          column: 11
        }
      },
      "94": {
        start: {
          line: 292,
          column: 12
        },
        end: {
          line: 313,
          column: 13
        }
      },
      "95": {
        start: {
          line: 293,
          column: 16
        },
        end: {
          line: 301,
          column: 19
        }
      },
      "96": {
        start: {
          line: 303,
          column: 17
        },
        end: {
          line: 313,
          column: 13
        }
      },
      "97": {
        start: {
          line: 304,
          column: 16
        },
        end: {
          line: 312,
          column: 19
        }
      },
      "98": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 328,
          column: 11
        }
      },
      "99": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 327,
          column: 13
        }
      },
      "100": {
        start: {
          line: 318,
          column: 16
        },
        end: {
          line: 326,
          column: 19
        }
      },
      "101": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 329,
          column: 22
        }
      },
      "102": {
        start: {
          line: 335,
          column: 29
        },
        end: {
          line: 335,
          column: 97
        }
      },
      "103": {
        start: {
          line: 336,
          column: 8
        },
        end: {
          line: 338,
          column: 29
        }
      },
      "104": {
        start: {
          line: 337,
          column: 28
        },
        end: {
          line: 337,
          column: 43
        }
      },
      "105": {
        start: {
          line: 344,
          column: 29
        },
        end: {
          line: 344,
          column: 96
        }
      },
      "106": {
        start: {
          line: 345,
          column: 8
        },
        end: {
          line: 347,
          column: 29
        }
      },
      "107": {
        start: {
          line: 346,
          column: 28
        },
        end: {
          line: 346,
          column: 41
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 5,
            column: 5
          }
        },
        loc: {
          start: {
            line: 5,
            column: 24
          },
          end: {
            line: 7,
            column: 5
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 36
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 37
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 21
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        loc: {
          start: {
            line: 29,
            column: 82
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 29
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        loc: {
          start: {
            line: 47,
            column: 24
          },
          end: {
            line: 55,
            column: 5
          }
        },
        line: 47
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        },
        loc: {
          start: {
            line: 59,
            column: 22
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 59
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        },
        loc: {
          start: {
            line: 71,
            column: 68
          },
          end: {
            line: 111,
            column: 5
          }
        },
        line: 71
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 89,
            column: 33
          },
          end: {
            line: 89,
            column: 34
          }
        },
        loc: {
          start: {
            line: 89,
            column: 45
          },
          end: {
            line: 105,
            column: 13
          }
        },
        line: 89
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 90,
            column: 66
          },
          end: {
            line: 90,
            column: 67
          }
        },
        loc: {
          start: {
            line: 90,
            column: 83
          },
          end: {
            line: 90,
            column: 110
          }
        },
        line: 90
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 91,
            column: 66
          },
          end: {
            line: 91,
            column: 67
          }
        },
        loc: {
          start: {
            line: 91,
            column: 83
          },
          end: {
            line: 91,
            column: 110
          }
        },
        line: 91
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 115,
            column: 4
          },
          end: {
            line: 115,
            column: 5
          }
        },
        loc: {
          start: {
            line: 117,
            column: 6
          },
          end: {
            line: 161,
            column: 5
          }
        },
        line: 117
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 135,
            column: 33
          },
          end: {
            line: 135,
            column: 34
          }
        },
        loc: {
          start: {
            line: 135,
            column: 45
          },
          end: {
            line: 155,
            column: 13
          }
        },
        line: 135
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 136,
            column: 66
          },
          end: {
            line: 136,
            column: 67
          }
        },
        loc: {
          start: {
            line: 136,
            column: 83
          },
          end: {
            line: 136,
            column: 110
          }
        },
        line: 136
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 137,
            column: 66
          },
          end: {
            line: 137,
            column: 67
          }
        },
        loc: {
          start: {
            line: 137,
            column: 83
          },
          end: {
            line: 137,
            column: 110
          }
        },
        line: 137
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 165,
            column: 4
          },
          end: {
            line: 165,
            column: 5
          }
        },
        loc: {
          start: {
            line: 165,
            column: 86
          },
          end: {
            line: 204,
            column: 5
          }
        },
        line: 165
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 182,
            column: 31
          },
          end: {
            line: 182,
            column: 32
          }
        },
        loc: {
          start: {
            line: 182,
            column: 41
          },
          end: {
            line: 198,
            column: 13
          }
        },
        line: 182
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 208,
            column: 4
          },
          end: {
            line: 208,
            column: 5
          }
        },
        loc: {
          start: {
            line: 208,
            column: 29
          },
          end: {
            line: 226,
            column: 5
          }
        },
        line: 208
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 230,
            column: 4
          },
          end: {
            line: 230,
            column: 5
          }
        },
        loc: {
          start: {
            line: 230,
            column: 70
          },
          end: {
            line: 284,
            column: 5
          }
        },
        line: 230
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 238,
            column: 57
          },
          end: {
            line: 238,
            column: 58
          }
        },
        loc: {
          start: {
            line: 238,
            column: 72
          },
          end: {
            line: 238,
            column: 90
          }
        },
        line: 238
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 239,
            column: 57
          },
          end: {
            line: 239,
            column: 58
          }
        },
        loc: {
          start: {
            line: 239,
            column: 72
          },
          end: {
            line: 239,
            column: 90
          }
        },
        line: 239
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 240,
            column: 53
          },
          end: {
            line: 240,
            column: 54
          }
        },
        loc: {
          start: {
            line: 240,
            column: 68
          },
          end: {
            line: 240,
            column: 88
          }
        },
        line: 240
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 241,
            column: 55
          },
          end: {
            line: 241,
            column: 56
          }
        },
        loc: {
          start: {
            line: 241,
            column: 70
          },
          end: {
            line: 241,
            column: 87
          }
        },
        line: 241
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 243,
            column: 42
          },
          end: {
            line: 243,
            column: 43
          }
        },
        loc: {
          start: {
            line: 243,
            column: 57
          },
          end: {
            line: 243,
            column: 72
          }
        },
        line: 243
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 246,
            column: 41
          },
          end: {
            line: 246,
            column: 42
          }
        },
        loc: {
          start: {
            line: 246,
            column: 56
          },
          end: {
            line: 246,
            column: 70
          }
        },
        line: 246
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 249,
            column: 53
          },
          end: {
            line: 249,
            column: 54
          }
        },
        loc: {
          start: {
            line: 249,
            column: 72
          },
          end: {
            line: 249,
            column: 113
          }
        },
        line: 249
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 250,
            column: 54
          },
          end: {
            line: 250,
            column: 55
          }
        },
        loc: {
          start: {
            line: 250,
            column: 74
          },
          end: {
            line: 250,
            column: 117
          }
        },
        line: 250
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 264,
            column: 50
          },
          end: {
            line: 264,
            column: 51
          }
        },
        loc: {
          start: {
            line: 264,
            column: 55
          },
          end: {
            line: 264,
            column: 91
          }
        },
        line: 264
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 269,
            column: 50
          },
          end: {
            line: 269,
            column: 51
          }
        },
        loc: {
          start: {
            line: 269,
            column: 55
          },
          end: {
            line: 269,
            column: 92
          }
        },
        line: 269
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 288,
            column: 4
          },
          end: {
            line: 288,
            column: 5
          }
        },
        loc: {
          start: {
            line: 288,
            column: 61
          },
          end: {
            line: 330,
            column: 5
          }
        },
        line: 288
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 291,
            column: 33
          },
          end: {
            line: 291,
            column: 34
          }
        },
        loc: {
          start: {
            line: 291,
            column: 41
          },
          end: {
            line: 314,
            column: 9
          }
        },
        line: 291
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 316,
            column: 32
          },
          end: {
            line: 316,
            column: 33
          }
        },
        loc: {
          start: {
            line: 316,
            column: 40
          },
          end: {
            line: 328,
            column: 9
          }
        },
        line: 316
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 334,
            column: 4
          },
          end: {
            line: 334,
            column: 5
          }
        },
        loc: {
          start: {
            line: 334,
            column: 80
          },
          end: {
            line: 339,
            column: 5
          }
        },
        line: 334
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 337,
            column: 18
          },
          end: {
            line: 337,
            column: 19
          }
        },
        loc: {
          start: {
            line: 337,
            column: 28
          },
          end: {
            line: 337,
            column: 43
          }
        },
        line: 337
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 343,
            column: 4
          },
          end: {
            line: 343,
            column: 5
          }
        },
        loc: {
          start: {
            line: 343,
            column: 79
          },
          end: {
            line: 348,
            column: 5
          }
        },
        line: 343
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 346,
            column: 18
          },
          end: {
            line: 346,
            column: 19
          }
        },
        loc: {
          start: {
            line: 346,
            column: 28
          },
          end: {
            line: 346,
            column: 41
          }
        },
        line: 346
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 8
          },
          end: {
            line: 14,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 13,
            column: 8
          },
          end: {
            line: 14,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 13
      },
      "1": {
        loc: {
          start: {
            line: 13,
            column: 12
          },
          end: {
            line: 13,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 12
          },
          end: {
            line: 13,
            column: 20
          }
        }, {
          start: {
            line: 13,
            column: 24
          },
          end: {
            line: 13,
            column: 37
          }
        }],
        line: 13
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 23,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 23,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 22,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 22,
            column: 22
          }
        }, {
          start: {
            line: 22,
            column: 26
          },
          end: {
            line: 22,
            column: 41
          }
        }],
        line: 22
      },
      "4": {
        loc: {
          start: {
            line: 29,
            column: 43
          },
          end: {
            line: 29,
            column: 62
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 29,
            column: 61
          },
          end: {
            line: 29,
            column: 62
          }
        }],
        line: 29
      },
      "5": {
        loc: {
          start: {
            line: 29,
            column: 64
          },
          end: {
            line: 29,
            column: 80
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 29,
            column: 79
          },
          end: {
            line: 29,
            column: 80
          }
        }],
        line: 29
      },
      "6": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 49,
            column: 31
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 49,
            column: 31
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "7": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 51,
            column: 26
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 51,
            column: 26
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "8": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 53,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 53,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "9": {
        loc: {
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 61,
            column: 31
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 61,
            column: 31
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "10": {
        loc: {
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 63,
            column: 26
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 63,
            column: 26
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "11": {
        loc: {
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 65,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 65,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "12": {
        loc: {
          start: {
            line: 90,
            column: 90
          },
          end: {
            line: 90,
            column: 109
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 90
          },
          end: {
            line: 90,
            column: 104
          }
        }, {
          start: {
            line: 90,
            column: 108
          },
          end: {
            line: 90,
            column: 109
          }
        }],
        line: 90
      },
      "13": {
        loc: {
          start: {
            line: 91,
            column: 90
          },
          end: {
            line: 91,
            column: 109
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 90
          },
          end: {
            line: 91,
            column: 104
          }
        }, {
          start: {
            line: 91,
            column: 108
          },
          end: {
            line: 91,
            column: 109
          }
        }],
        line: 91
      },
      "14": {
        loc: {
          start: {
            line: 115,
            column: 67
          },
          end: {
            line: 115,
            column: 98
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 115,
            column: 95
          },
          end: {
            line: 115,
            column: 98
          }
        }],
        line: 115
      },
      "15": {
        loc: {
          start: {
            line: 116,
            column: 4
          },
          end: {
            line: 116,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 116,
            column: 28
          },
          end: {
            line: 116,
            column: 32
          }
        }],
        line: 116
      },
      "16": {
        loc: {
          start: {
            line: 136,
            column: 90
          },
          end: {
            line: 136,
            column: 109
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 136,
            column: 90
          },
          end: {
            line: 136,
            column: 104
          }
        }, {
          start: {
            line: 136,
            column: 108
          },
          end: {
            line: 136,
            column: 109
          }
        }],
        line: 136
      },
      "17": {
        loc: {
          start: {
            line: 137,
            column: 90
          },
          end: {
            line: 137,
            column: 109
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 137,
            column: 90
          },
          end: {
            line: 137,
            column: 104
          }
        }, {
          start: {
            line: 137,
            column: 108
          },
          end: {
            line: 137,
            column: 109
          }
        }],
        line: 137
      },
      "18": {
        loc: {
          start: {
            line: 165,
            column: 63
          },
          end: {
            line: 165,
            column: 84
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 165,
            column: 77
          },
          end: {
            line: 165,
            column: 84
          }
        }],
        line: 165
      },
      "19": {
        loc: {
          start: {
            line: 183,
            column: 32
          },
          end: {
            line: 183,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 183,
            column: 32
          },
          end: {
            line: 183,
            column: 60
          }
        }, {
          start: {
            line: 183,
            column: 64
          },
          end: {
            line: 183,
            column: 65
          }
        }],
        line: 183
      },
      "20": {
        loc: {
          start: {
            line: 184,
            column: 32
          },
          end: {
            line: 184,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 184,
            column: 32
          },
          end: {
            line: 184,
            column: 61
          }
        }, {
          start: {
            line: 184,
            column: 65
          },
          end: {
            line: 184,
            column: 66
          }
        }],
        line: 184
      },
      "21": {
        loc: {
          start: {
            line: 209,
            column: 8
          },
          end: {
            line: 216,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 209,
            column: 8
          },
          end: {
            line: 216,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 209
      },
      "22": {
        loc: {
          start: {
            line: 224,
            column: 19
          },
          end: {
            line: 224,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 224,
            column: 32
          },
          end: {
            line: 224,
            column: 43
          }
        }, {
          start: {
            line: 224,
            column: 46
          },
          end: {
            line: 224,
            column: 81
          }
        }],
        line: 224
      },
      "23": {
        loc: {
          start: {
            line: 224,
            column: 46
          },
          end: {
            line: 224,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 224,
            column: 59
          },
          end: {
            line: 224,
            column: 70
          }
        }, {
          start: {
            line: 224,
            column: 73
          },
          end: {
            line: 224,
            column: 81
          }
        }],
        line: 224
      },
      "24": {
        loc: {
          start: {
            line: 242,
            column: 28
          },
          end: {
            line: 244,
            column: 19
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 243,
            column: 18
          },
          end: {
            line: 243,
            column: 102
          }
        }, {
          start: {
            line: 244,
            column: 18
          },
          end: {
            line: 244,
            column: 19
          }
        }],
        line: 242
      },
      "25": {
        loc: {
          start: {
            line: 245,
            column: 27
          },
          end: {
            line: 247,
            column: 19
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 246,
            column: 18
          },
          end: {
            line: 246,
            column: 99
          }
        }, {
          start: {
            line: 247,
            column: 18
          },
          end: {
            line: 247,
            column: 19
          }
        }],
        line: 245
      },
      "26": {
        loc: {
          start: {
            line: 249,
            column: 72
          },
          end: {
            line: 249,
            column: 113
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 249,
            column: 99
          },
          end: {
            line: 249,
            column: 106
          }
        }, {
          start: {
            line: 249,
            column: 109
          },
          end: {
            line: 249,
            column: 113
          }
        }],
        line: 249
      },
      "27": {
        loc: {
          start: {
            line: 249,
            column: 115
          },
          end: {
            line: 249,
            column: 170
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 249,
            column: 115
          },
          end: {
            line: 249,
            column: 134
          }
        }, {
          start: {
            line: 249,
            column: 138
          },
          end: {
            line: 249,
            column: 170
          }
        }],
        line: 249
      },
      "28": {
        loc: {
          start: {
            line: 250,
            column: 74
          },
          end: {
            line: 250,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 250,
            column: 102
          },
          end: {
            line: 250,
            column: 109
          }
        }, {
          start: {
            line: 250,
            column: 112
          },
          end: {
            line: 250,
            column: 117
          }
        }],
        line: 250
      },
      "29": {
        loc: {
          start: {
            line: 250,
            column: 119
          },
          end: {
            line: 250,
            column: 174
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 250,
            column: 119
          },
          end: {
            line: 250,
            column: 138
          }
        }, {
          start: {
            line: 250,
            column: 142
          },
          end: {
            line: 250,
            column: 174
          }
        }],
        line: 250
      },
      "30": {
        loc: {
          start: {
            line: 264,
            column: 29
          },
          end: {
            line: 264,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 264,
            column: 29
          },
          end: {
            line: 264,
            column: 97
          }
        }, {
          start: {
            line: 264,
            column: 101
          },
          end: {
            line: 264,
            column: 102
          }
        }],
        line: 264
      },
      "31": {
        loc: {
          start: {
            line: 269,
            column: 29
          },
          end: {
            line: 269,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 269,
            column: 29
          },
          end: {
            line: 269,
            column: 98
          }
        }, {
          start: {
            line: 269,
            column: 102
          },
          end: {
            line: 269,
            column: 103
          }
        }],
        line: 269
      },
      "32": {
        loc: {
          start: {
            line: 292,
            column: 12
          },
          end: {
            line: 313,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 292,
            column: 12
          },
          end: {
            line: 313,
            column: 13
          }
        }, {
          start: {
            line: 303,
            column: 17
          },
          end: {
            line: 313,
            column: 13
          }
        }],
        line: 292
      },
      "33": {
        loc: {
          start: {
            line: 294,
            column: 26
          },
          end: {
            line: 294,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 294,
            column: 44
          },
          end: {
            line: 294,
            column: 54
          }
        }, {
          start: {
            line: 294,
            column: 57
          },
          end: {
            line: 294,
            column: 66
          }
        }],
        line: 294
      },
      "34": {
        loc: {
          start: {
            line: 303,
            column: 17
          },
          end: {
            line: 313,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 303,
            column: 17
          },
          end: {
            line: 313,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 303
      },
      "35": {
        loc: {
          start: {
            line: 317,
            column: 12
          },
          end: {
            line: 327,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 317,
            column: 12
          },
          end: {
            line: 327,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 317
      },
      "36": {
        loc: {
          start: {
            line: 319,
            column: 26
          },
          end: {
            line: 319,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 319,
            column: 41
          },
          end: {
            line: 319,
            column: 51
          }
        }, {
          start: {
            line: 319,
            column: 54
          },
          end: {
            line: 319,
            column: 63
          }
        }],
        line: 319
      },
      "37": {
        loc: {
          start: {
            line: 334,
            column: 68
          },
          end: {
            line: 334,
            column: 78
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 334,
            column: 76
          },
          end: {
            line: 334,
            column: 78
          }
        }],
        line: 334
      },
      "38": {
        loc: {
          start: {
            line: 343,
            column: 67
          },
          end: {
            line: 343,
            column: 77
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 343,
            column: 75
          },
          end: {
            line: 343,
            column: 77
          }
        }],
        line: 343
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0],
      "15": [0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0],
      "38": [0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\services\\roas-roi.service.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\services\\roas-roi.service.ts"],
      sourcesContent: ["import { subDays, format } from 'date-fns';\nimport { logger } from '../utils/logger';\n\nexport interface ROASCalculation {\n  campaignId: string;\n  campaignName: string;\n  platform: string;\n  revenue: number;\n  adSpend: number;\n  roas: number;\n  roasPercentage: number;\n  status: 'excellent' | 'good' | 'average' | 'poor';\n  period: string;\n}\n\nexport interface ROICalculation {\n  campaignId: string;\n  campaignName: string;\n  platform: string;\n  revenue: number;\n  totalCost: number;\n  profit: number;\n  roi: number;\n  roiPercentage: number;\n  status: 'excellent' | 'good' | 'average' | 'poor';\n  costBreakdown: {\n    adSpend: number;\n    operationalCost: number;\n    platformFees: number;\n  };\n  period: string;\n}\n\nexport interface ROASROITrend {\n  date: string;\n  roas: number;\n  roi: number;\n  revenue: number;\n  adSpend: number;\n  totalCost: number;\n  profit: number;\n}\n\nexport interface ROASROIAnalysis {\n  summary: {\n    totalRevenue: number;\n    totalAdSpend: number;\n    totalCost: number;\n    totalProfit: number;\n    avgROAS: number;\n    avgROI: number;\n    bestPerformingCampaign: {\n      name: string;\n      roas: number;\n      roi: number;\n    };\n    worstPerformingCampaign: {\n      name: string;\n      roas: number;\n      roi: number;\n    };\n  };\n  campaigns: {\n    roas: ROASCalculation[];\n    roi: ROICalculation[];\n  };\n  trends: ROASROITrend[];\n  alerts: {\n    type: 'critical' | 'warning' | 'info';\n    message: string;\n    campaignId?: string;\n    campaignName?: string;\n    metric: 'roas' | 'roi';\n    value: number;\n    threshold: number;\n  }[];\n}\n\nexport class ROASROIService {\n  private prisma: any;\n\n  constructor(prisma: any) {\n    this.prisma = prisma;\n  }\n\n  /**\n   * Calculate ROAS (Return on Ad Spend)\n   * Formula: revenue / ad_spend\n   */\n  calculateROAS(revenue: number, adSpend: number): number {\n    if (!adSpend || adSpend === 0) return 0;\n    return parseFloat((revenue / adSpend).toFixed(2));\n  }\n\n  /**\n   * Calculate ROI (Return on Investment)\n   * Formula: (revenue - total_cost) / total_cost * 100\n   */\n  calculateROI(revenue: number, totalCost: number): number {\n    if (!totalCost || totalCost === 0) return 0;\n    return parseFloat((((revenue - totalCost) / totalCost) * 100).toFixed(2));\n  }\n\n  /**\n   * Calculate detailed ROI with cost breakdown\n   */\n  calculateDetailedROI(\n    revenue: number,\n    adSpend: number,\n    operationalCost: number = 0,\n    platformFees: number = 0\n  ): {\n    revenue: number;\n    totalCost: number;\n    profit: number;\n    roiPercentage: number;\n    costBreakdown: {\n      adSpend: number;\n      operationalCost: number;\n      platformFees: number;\n    };\n  } {\n    const totalCost = adSpend + operationalCost + platformFees;\n    const profit = revenue - totalCost;\n    \n    return {\n      revenue,\n      totalCost,\n      profit,\n      roiPercentage: this.calculateROI(revenue, totalCost),\n      costBreakdown: {\n        adSpend,\n        operationalCost,\n        platformFees\n      }\n    };\n  }\n\n  /**\n   * Get ROAS status based on value\n   */\n  getROASStatus(roas: number): 'excellent' | 'good' | 'average' | 'poor' {\n    if (roas > 4.0) return 'excellent';\n    if (roas >= 2.5) return 'good';\n    if (roas >= 1.5) return 'average';\n    return 'poor';\n  }\n\n  /**\n   * Get ROI status based on percentage\n   */\n  getROIStatus(roi: number): 'excellent' | 'good' | 'average' | 'poor' {\n    if (roi > 200) return 'excellent';\n    if (roi >= 100) return 'good';\n    if (roi >= 50) return 'average';\n    return 'poor';\n  }\n\n  /**\n   * Calculate ROAS for campaigns in a date range\n   */\n  async calculateCampaignROAS(\n    organizationId: string,\n    startDate: Date,\n    endDate: Date\n  ): Promise<ROASCalculation[]> {\n    try {\n      const campaigns = await this.prisma.campaign.findMany({\n        where: {\n          organizationId,\n          status: 'ACTIVE'\n        },\n        include: {\n          metricsDaily: {\n            where: {\n              date: {\n                gte: startDate,\n                lte: endDate\n              }\n            }\n          }\n        }\n      });\n\n      return campaigns.map(campaign => {\n        const totalRevenue = campaign.metricsDaily.reduce((sum, metric) => sum + (metric.revenue || 0), 0);\n        const totalAdSpend = campaign.metricsDaily.reduce((sum, metric) => sum + (metric.adSpend || 0), 0);\n        const roas = this.calculateROAS(totalRevenue, totalAdSpend);\n        const roasPercentage = roas * 100;\n\n        return {\n          campaignId: campaign.id,\n          campaignName: campaign.name,\n          platform: campaign.platform,\n          revenue: totalRevenue,\n          adSpend: totalAdSpend,\n          roas,\n          roasPercentage,\n          status: this.getROASStatus(roas),\n          period: `${format(startDate, 'yyyy-MM-dd')} to ${format(endDate, 'yyyy-MM-dd')}`\n        };\n      });\n    } catch (error) {\n      logger.error('Failed to calculate campaign ROAS', error);\n      throw new Error('Failed to calculate ROAS');\n    }\n  }\n\n  /**\n   * Calculate ROI for campaigns in a date range\n   */\n  async calculateCampaignROI(\n    organizationId: string,\n    startDate: Date,\n    endDate: Date,\n    operationalCostPercentage: number = 0.1, // 10% default operational cost\n    platformFeePercentage: number = 0.05 // 5% default platform fees\n  ): Promise<ROICalculation[]> {\n    try {\n      const campaigns = await this.prisma.campaign.findMany({\n        where: {\n          organizationId,\n          status: 'ACTIVE'\n        },\n        include: {\n          metricsDaily: {\n            where: {\n              date: {\n                gte: startDate,\n                lte: endDate\n              }\n            }\n          }\n        }\n      });\n\n      return campaigns.map(campaign => {\n        const totalRevenue = campaign.metricsDaily.reduce((sum, metric) => sum + (metric.revenue || 0), 0);\n        const totalAdSpend = campaign.metricsDaily.reduce((sum, metric) => sum + (metric.adSpend || 0), 0);\n        \n        // Calculate additional costs\n        const operationalCost = totalRevenue * operationalCostPercentage;\n        const platformFees = totalAdSpend * platformFeePercentage;\n        \n        const detailedROI = this.calculateDetailedROI(\n          totalRevenue,\n          totalAdSpend,\n          operationalCost,\n          platformFees\n        );\n\n        return {\n          campaignId: campaign.id,\n          campaignName: campaign.name,\n          platform: campaign.platform,\n          revenue: totalRevenue,\n          totalCost: detailedROI.totalCost,\n          profit: detailedROI.profit,\n          roi: detailedROI.roiPercentage,\n          roiPercentage: detailedROI.roiPercentage,\n          status: this.getROIStatus(detailedROI.roiPercentage),\n          costBreakdown: detailedROI.costBreakdown,\n          period: `${format(startDate, 'yyyy-MM-dd')} to ${format(endDate, 'yyyy-MM-dd')}`\n        };\n      });\n    } catch (error) {\n      logger.error('Failed to calculate campaign ROI', error);\n      throw new Error('Failed to calculate ROI');\n    }\n  }\n\n  /**\n   * Get ROAS/ROI trends over time\n   */\n  async getROASROITrends(\n    organizationId: string,\n    startDate: Date,\n    endDate: Date,\n    granularity: 'daily' | 'weekly' | 'monthly' = 'daily'\n  ): Promise<ROASROITrend[]> {\n    try {\n      // Get aggregated metrics by date\n      const metricsQuery = `\n        SELECT \n          DATE(date) as metric_date,\n          SUM(revenue) as total_revenue,\n          SUM(\"adSpend\") as total_ad_spend\n        FROM \"MetricsDaily\" md\n        JOIN \"Campaign\" c ON md.\"campaignId\" = c.id\n        WHERE c.\"organizationId\" = $1\n          AND md.date >= $2\n          AND md.date <= $3\n        GROUP BY DATE(date)\n        ORDER BY metric_date ASC\n      `;\n\n      const results = await this.prisma.$queryRawUnsafe(\n        metricsQuery,\n        organizationId,\n        startDate,\n        endDate\n      ) as any[];\n\n      return results.map(result => {\n        const revenue = Number(result.total_revenue) || 0;\n        const adSpend = Number(result.total_ad_spend) || 0;\n        const operationalCost = revenue * 0.1; // 10% operational cost\n        const platformFees = adSpend * 0.05; // 5% platform fees\n        const totalCost = adSpend + operationalCost + platformFees;\n        const profit = revenue - totalCost;\n        \n        return {\n          date: format(new Date(result.metric_date), 'yyyy-MM-dd'),\n          roas: this.calculateROAS(revenue, adSpend),\n          roi: this.calculateROI(revenue, totalCost),\n          revenue,\n          adSpend,\n          totalCost,\n          profit\n        };\n      });\n    } catch (error) {\n      logger.error('Failed to get ROAS/ROI trends', error);\n      throw new Error('Failed to get trends');\n    }\n  }\n\n  /**\n   * Analyze ROI trend\n   */\n  analyzeROITrend(roiData: { roi: number }[]): {\n    currentROI: number;\n    previousROI: number;\n    changePercentage: number;\n    trend: 'improving' | 'declining' | 'stable' | 'insufficient_data';\n  } {\n    if (roiData.length < 2) {\n      return { \n        currentROI: 0, \n        previousROI: 0, \n        changePercentage: 0, \n        trend: 'insufficient_data' \n      };\n    }\n    \n    const latest = roiData[roiData.length - 1].roi;\n    const previous = roiData[roiData.length - 2].roi;\n    const change = latest - previous;\n    \n    return {\n      currentROI: latest,\n      previousROI: previous,\n      changePercentage: parseFloat(change.toFixed(2)),\n      trend: change > 0 ? 'improving' : change < 0 ? 'declining' : 'stable'\n    };\n  }\n\n  /**\n   * Generate comprehensive ROAS/ROI analysis\n   */\n  async generateROASROIAnalysis(\n    organizationId: string,\n    startDate: Date,\n    endDate: Date\n  ): Promise<ROASROIAnalysis> {\n    try {\n      const [roasCalculations, roiCalculations, trends] = await Promise.all([\n        this.calculateCampaignROAS(organizationId, startDate, endDate),\n        this.calculateCampaignROI(organizationId, startDate, endDate),\n        this.getROASROITrends(organizationId, startDate, endDate)\n      ]);\n\n      // Calculate summary\n      const totalRevenue = roasCalculations.reduce((sum, calc) => sum + calc.revenue, 0);\n      const totalAdSpend = roasCalculations.reduce((sum, calc) => sum + calc.adSpend, 0);\n      const totalCost = roiCalculations.reduce((sum, calc) => sum + calc.totalCost, 0);\n      const totalProfit = roiCalculations.reduce((sum, calc) => sum + calc.profit, 0);\n      const avgROAS = roasCalculations.length > 0 \n        ? roasCalculations.reduce((sum, calc) => sum + calc.roas, 0) / roasCalculations.length \n        : 0;\n      const avgROI = roiCalculations.length > 0 \n        ? roiCalculations.reduce((sum, calc) => sum + calc.roi, 0) / roiCalculations.length \n        : 0;\n\n      // Find best and worst performing campaigns\n      const bestROAS = roasCalculations.reduce((best, current) => \n        current.roas > best.roas ? current : best, roasCalculations[0] || { name: 'N/A', roas: 0, roi: 0 });\n      const worstROAS = roasCalculations.reduce((worst, current) => \n        current.roas < worst.roas ? current : worst, roasCalculations[0] || { name: 'N/A', roas: 0, roi: 0 });\n\n      // Generate alerts\n      const alerts = this.generateROASROIAlerts(roasCalculations, roiCalculations);\n\n      return {\n        summary: {\n          totalRevenue,\n          totalAdSpend,\n          totalCost,\n          totalProfit,\n          avgROAS: parseFloat(avgROAS.toFixed(2)),\n          avgROI: parseFloat(avgROI.toFixed(2)),\n          bestPerformingCampaign: {\n            name: bestROAS.campaignName,\n            roas: bestROAS.roas,\n            roi: roiCalculations.find(r => r.campaignId === bestROAS.campaignId)?.roi || 0\n          },\n          worstPerformingCampaign: {\n            name: worstROAS.campaignName,\n            roas: worstROAS.roas,\n            roi: roiCalculations.find(r => r.campaignId === worstROAS.campaignId)?.roi || 0\n          }\n        },\n        campaigns: {\n          roas: roasCalculations,\n          roi: roiCalculations\n        },\n        trends,\n        alerts\n      };\n    } catch (error) {\n      logger.error('Failed to generate ROAS/ROI analysis', error);\n      throw new Error('Failed to generate analysis');\n    }\n  }\n\n  /**\n   * Generate alerts based on ROAS/ROI thresholds\n   */\n  private generateROASROIAlerts(\n    roasCalculations: ROASCalculation[],\n    roiCalculations: ROICalculation[]\n  ) {\n    const alerts: ROASROIAnalysis['alerts'] = [];\n\n    // ROAS alerts\n    roasCalculations.forEach(calc => {\n      if (calc.roas < 1.5) {\n        alerts.push({\n          type: calc.roas < 1.0 ? 'critical' : 'warning',\n          message: `ROAS muito baixo para campanha ${calc.campaignName}`,\n          campaignId: calc.campaignId,\n          campaignName: calc.campaignName,\n          metric: 'roas',\n          value: calc.roas,\n          threshold: 1.5\n        });\n      } else if (calc.roas > 6.0) {\n        alerts.push({\n          type: 'info',\n          message: `ROAS excepcionalmente alto para campanha ${calc.campaignName}`,\n          campaignId: calc.campaignId,\n          campaignName: calc.campaignName,\n          metric: 'roas',\n          value: calc.roas,\n          threshold: 6.0\n        });\n      }\n    });\n\n    // ROI alerts\n    roiCalculations.forEach(calc => {\n      if (calc.roi < 50) {\n        alerts.push({\n          type: calc.roi < 0 ? 'critical' : 'warning',\n          message: `ROI baixo para campanha ${calc.campaignName}`,\n          campaignId: calc.campaignId,\n          campaignName: calc.campaignName,\n          metric: 'roi',\n          value: calc.roi,\n          threshold: 50\n        });\n      }\n    });\n\n    return alerts;\n  }\n\n  /**\n   * Get top performing campaigns by ROAS\n   */\n  async getTopCampaignsByROAS(\n    organizationId: string,\n    startDate: Date,\n    endDate: Date,\n    limit: number = 10\n  ): Promise<ROASCalculation[]> {\n    const calculations = await this.calculateCampaignROAS(organizationId, startDate, endDate);\n    return calculations\n      .sort((a, b) => b.roas - a.roas)\n      .slice(0, limit);\n  }\n\n  /**\n   * Get top performing campaigns by ROI\n   */\n  async getTopCampaignsByROI(\n    organizationId: string,\n    startDate: Date,\n    endDate: Date,\n    limit: number = 10\n  ): Promise<ROICalculation[]> {\n    const calculations = await this.calculateCampaignROI(organizationId, startDate, endDate);\n    return calculations\n      .sort((a, b) => b.roi - a.roi)\n      .slice(0, limit);\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8daa9f61c34dca23355dd93209e082a6b8504fc6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1llo868sqg = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1llo868sqg();
import { format } from 'date-fns';
import { logger } from '../utils/logger';
export class ROASROIService {
  prisma;
  constructor(prisma) {
    /* istanbul ignore next */
    cov_1llo868sqg().f[0]++;
    cov_1llo868sqg().s[0]++;
    this.prisma = prisma;
  }
  /**
   * Calculate ROAS (Return on Ad Spend)
   * Formula: revenue / ad_spend
   */
  calculateROAS(revenue, adSpend) {
    /* istanbul ignore next */
    cov_1llo868sqg().f[1]++;
    cov_1llo868sqg().s[1]++;
    if (
    /* istanbul ignore next */
    (cov_1llo868sqg().b[1][0]++, !adSpend) ||
    /* istanbul ignore next */
    (cov_1llo868sqg().b[1][1]++, adSpend === 0)) {
      /* istanbul ignore next */
      cov_1llo868sqg().b[0][0]++;
      cov_1llo868sqg().s[2]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_1llo868sqg().b[0][1]++;
    }
    cov_1llo868sqg().s[3]++;
    return parseFloat((revenue / adSpend).toFixed(2));
  }
  /**
   * Calculate ROI (Return on Investment)
   * Formula: (revenue - total_cost) / total_cost * 100
   */
  calculateROI(revenue, totalCost) {
    /* istanbul ignore next */
    cov_1llo868sqg().f[2]++;
    cov_1llo868sqg().s[4]++;
    if (
    /* istanbul ignore next */
    (cov_1llo868sqg().b[3][0]++, !totalCost) ||
    /* istanbul ignore next */
    (cov_1llo868sqg().b[3][1]++, totalCost === 0)) {
      /* istanbul ignore next */
      cov_1llo868sqg().b[2][0]++;
      cov_1llo868sqg().s[5]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_1llo868sqg().b[2][1]++;
    }
    cov_1llo868sqg().s[6]++;
    return parseFloat(((revenue - totalCost) / totalCost * 100).toFixed(2));
  }
  /**
   * Calculate detailed ROI with cost breakdown
   */
  calculateDetailedROI(revenue, adSpend, operationalCost =
  /* istanbul ignore next */
  (cov_1llo868sqg().b[4][0]++, 0), platformFees =
  /* istanbul ignore next */
  (cov_1llo868sqg().b[5][0]++, 0)) {
    /* istanbul ignore next */
    cov_1llo868sqg().f[3]++;
    const totalCost =
    /* istanbul ignore next */
    (cov_1llo868sqg().s[7]++, adSpend + operationalCost + platformFees);
    const profit =
    /* istanbul ignore next */
    (cov_1llo868sqg().s[8]++, revenue - totalCost);
    /* istanbul ignore next */
    cov_1llo868sqg().s[9]++;
    return {
      revenue,
      totalCost,
      profit,
      roiPercentage: this.calculateROI(revenue, totalCost),
      costBreakdown: {
        adSpend,
        operationalCost,
        platformFees
      }
    };
  }
  /**
   * Get ROAS status based on value
   */
  getROASStatus(roas) {
    /* istanbul ignore next */
    cov_1llo868sqg().f[4]++;
    cov_1llo868sqg().s[10]++;
    if (roas > 4.0) {
      /* istanbul ignore next */
      cov_1llo868sqg().b[6][0]++;
      cov_1llo868sqg().s[11]++;
      return 'excellent';
    } else
    /* istanbul ignore next */
    {
      cov_1llo868sqg().b[6][1]++;
    }
    cov_1llo868sqg().s[12]++;
    if (roas >= 2.5) {
      /* istanbul ignore next */
      cov_1llo868sqg().b[7][0]++;
      cov_1llo868sqg().s[13]++;
      return 'good';
    } else
    /* istanbul ignore next */
    {
      cov_1llo868sqg().b[7][1]++;
    }
    cov_1llo868sqg().s[14]++;
    if (roas >= 1.5) {
      /* istanbul ignore next */
      cov_1llo868sqg().b[8][0]++;
      cov_1llo868sqg().s[15]++;
      return 'average';
    } else
    /* istanbul ignore next */
    {
      cov_1llo868sqg().b[8][1]++;
    }
    cov_1llo868sqg().s[16]++;
    return 'poor';
  }
  /**
   * Get ROI status based on percentage
   */
  getROIStatus(roi) {
    /* istanbul ignore next */
    cov_1llo868sqg().f[5]++;
    cov_1llo868sqg().s[17]++;
    if (roi > 200) {
      /* istanbul ignore next */
      cov_1llo868sqg().b[9][0]++;
      cov_1llo868sqg().s[18]++;
      return 'excellent';
    } else
    /* istanbul ignore next */
    {
      cov_1llo868sqg().b[9][1]++;
    }
    cov_1llo868sqg().s[19]++;
    if (roi >= 100) {
      /* istanbul ignore next */
      cov_1llo868sqg().b[10][0]++;
      cov_1llo868sqg().s[20]++;
      return 'good';
    } else
    /* istanbul ignore next */
    {
      cov_1llo868sqg().b[10][1]++;
    }
    cov_1llo868sqg().s[21]++;
    if (roi >= 50) {
      /* istanbul ignore next */
      cov_1llo868sqg().b[11][0]++;
      cov_1llo868sqg().s[22]++;
      return 'average';
    } else
    /* istanbul ignore next */
    {
      cov_1llo868sqg().b[11][1]++;
    }
    cov_1llo868sqg().s[23]++;
    return 'poor';
  }
  /**
   * Calculate ROAS for campaigns in a date range
   */
  async calculateCampaignROAS(organizationId, startDate, endDate) {
    /* istanbul ignore next */
    cov_1llo868sqg().f[6]++;
    cov_1llo868sqg().s[24]++;
    try {
      const campaigns =
      /* istanbul ignore next */
      (cov_1llo868sqg().s[25]++, await this.prisma.campaign.findMany({
        where: {
          organizationId,
          status: 'ACTIVE'
        },
        include: {
          metricsDaily: {
            where: {
              date: {
                gte: startDate,
                lte: endDate
              }
            }
          }
        }
      }));
      /* istanbul ignore next */
      cov_1llo868sqg().s[26]++;
      return campaigns.map(campaign => {
        /* istanbul ignore next */
        cov_1llo868sqg().f[7]++;
        const totalRevenue =
        /* istanbul ignore next */
        (cov_1llo868sqg().s[27]++, campaign.metricsDaily.reduce((sum, metric) => {
          /* istanbul ignore next */
          cov_1llo868sqg().f[8]++;
          cov_1llo868sqg().s[28]++;
          return sum + (
          /* istanbul ignore next */
          (cov_1llo868sqg().b[12][0]++, metric.revenue) ||
          /* istanbul ignore next */
          (cov_1llo868sqg().b[12][1]++, 0));
        }, 0));
        const totalAdSpend =
        /* istanbul ignore next */
        (cov_1llo868sqg().s[29]++, campaign.metricsDaily.reduce((sum, metric) => {
          /* istanbul ignore next */
          cov_1llo868sqg().f[9]++;
          cov_1llo868sqg().s[30]++;
          return sum + (
          /* istanbul ignore next */
          (cov_1llo868sqg().b[13][0]++, metric.adSpend) ||
          /* istanbul ignore next */
          (cov_1llo868sqg().b[13][1]++, 0));
        }, 0));
        const roas =
        /* istanbul ignore next */
        (cov_1llo868sqg().s[31]++, this.calculateROAS(totalRevenue, totalAdSpend));
        const roasPercentage =
        /* istanbul ignore next */
        (cov_1llo868sqg().s[32]++, roas * 100);
        /* istanbul ignore next */
        cov_1llo868sqg().s[33]++;
        return {
          campaignId: campaign.id,
          campaignName: campaign.name,
          platform: campaign.platform,
          revenue: totalRevenue,
          adSpend: totalAdSpend,
          roas,
          roasPercentage,
          status: this.getROASStatus(roas),
          period: `${format(startDate, 'yyyy-MM-dd')} to ${format(endDate, 'yyyy-MM-dd')}`
        };
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1llo868sqg().s[34]++;
      logger.error('Failed to calculate campaign ROAS', error);
      /* istanbul ignore next */
      cov_1llo868sqg().s[35]++;
      throw new Error('Failed to calculate ROAS');
    }
  }
  /**
   * Calculate ROI for campaigns in a date range
   */
  async calculateCampaignROI(organizationId, startDate, endDate, operationalCostPercentage =
  /* istanbul ignore next */
  (cov_1llo868sqg().b[14][0]++, 0.1),
  // 10% default operational cost
  platformFeePercentage =
  /* istanbul ignore next */
  (cov_1llo868sqg().b[15][0]++, 0.05) // 5% default platform fees
  ) {
    /* istanbul ignore next */
    cov_1llo868sqg().f[10]++;
    cov_1llo868sqg().s[36]++;
    try {
      const campaigns =
      /* istanbul ignore next */
      (cov_1llo868sqg().s[37]++, await this.prisma.campaign.findMany({
        where: {
          organizationId,
          status: 'ACTIVE'
        },
        include: {
          metricsDaily: {
            where: {
              date: {
                gte: startDate,
                lte: endDate
              }
            }
          }
        }
      }));
      /* istanbul ignore next */
      cov_1llo868sqg().s[38]++;
      return campaigns.map(campaign => {
        /* istanbul ignore next */
        cov_1llo868sqg().f[11]++;
        const totalRevenue =
        /* istanbul ignore next */
        (cov_1llo868sqg().s[39]++, campaign.metricsDaily.reduce((sum, metric) => {
          /* istanbul ignore next */
          cov_1llo868sqg().f[12]++;
          cov_1llo868sqg().s[40]++;
          return sum + (
          /* istanbul ignore next */
          (cov_1llo868sqg().b[16][0]++, metric.revenue) ||
          /* istanbul ignore next */
          (cov_1llo868sqg().b[16][1]++, 0));
        }, 0));
        const totalAdSpend =
        /* istanbul ignore next */
        (cov_1llo868sqg().s[41]++, campaign.metricsDaily.reduce((sum, metric) => {
          /* istanbul ignore next */
          cov_1llo868sqg().f[13]++;
          cov_1llo868sqg().s[42]++;
          return sum + (
          /* istanbul ignore next */
          (cov_1llo868sqg().b[17][0]++, metric.adSpend) ||
          /* istanbul ignore next */
          (cov_1llo868sqg().b[17][1]++, 0));
        }, 0));
        // Calculate additional costs
        const operationalCost =
        /* istanbul ignore next */
        (cov_1llo868sqg().s[43]++, totalRevenue * operationalCostPercentage);
        const platformFees =
        /* istanbul ignore next */
        (cov_1llo868sqg().s[44]++, totalAdSpend * platformFeePercentage);
        const detailedROI =
        /* istanbul ignore next */
        (cov_1llo868sqg().s[45]++, this.calculateDetailedROI(totalRevenue, totalAdSpend, operationalCost, platformFees));
        /* istanbul ignore next */
        cov_1llo868sqg().s[46]++;
        return {
          campaignId: campaign.id,
          campaignName: campaign.name,
          platform: campaign.platform,
          revenue: totalRevenue,
          totalCost: detailedROI.totalCost,
          profit: detailedROI.profit,
          roi: detailedROI.roiPercentage,
          roiPercentage: detailedROI.roiPercentage,
          status: this.getROIStatus(detailedROI.roiPercentage),
          costBreakdown: detailedROI.costBreakdown,
          period: `${format(startDate, 'yyyy-MM-dd')} to ${format(endDate, 'yyyy-MM-dd')}`
        };
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1llo868sqg().s[47]++;
      logger.error('Failed to calculate campaign ROI', error);
      /* istanbul ignore next */
      cov_1llo868sqg().s[48]++;
      throw new Error('Failed to calculate ROI');
    }
  }
  /**
   * Get ROAS/ROI trends over time
   */
  async getROASROITrends(organizationId, startDate, endDate, granularity =
  /* istanbul ignore next */
  (cov_1llo868sqg().b[18][0]++, 'daily')) {
    /* istanbul ignore next */
    cov_1llo868sqg().f[14]++;
    cov_1llo868sqg().s[49]++;
    try {
      // Get aggregated metrics by date
      const metricsQuery =
      /* istanbul ignore next */
      (cov_1llo868sqg().s[50]++, `
        SELECT 
          DATE(date) as metric_date,
          SUM(revenue) as total_revenue,
          SUM("adSpend") as total_ad_spend
        FROM "MetricsDaily" md
        JOIN "Campaign" c ON md."campaignId" = c.id
        WHERE c."organizationId" = $1
          AND md.date >= $2
          AND md.date <= $3
        GROUP BY DATE(date)
        ORDER BY metric_date ASC
      `);
      const results =
      /* istanbul ignore next */
      (cov_1llo868sqg().s[51]++, await this.prisma.$queryRawUnsafe(metricsQuery, organizationId, startDate, endDate));
      /* istanbul ignore next */
      cov_1llo868sqg().s[52]++;
      return results.map(result => {
        /* istanbul ignore next */
        cov_1llo868sqg().f[15]++;
        const revenue =
        /* istanbul ignore next */
        (cov_1llo868sqg().s[53]++,
        /* istanbul ignore next */
        (cov_1llo868sqg().b[19][0]++, Number(result.total_revenue)) ||
        /* istanbul ignore next */
        (cov_1llo868sqg().b[19][1]++, 0));
        const adSpend =
        /* istanbul ignore next */
        (cov_1llo868sqg().s[54]++,
        /* istanbul ignore next */
        (cov_1llo868sqg().b[20][0]++, Number(result.total_ad_spend)) ||
        /* istanbul ignore next */
        (cov_1llo868sqg().b[20][1]++, 0));
        const operationalCost =
        /* istanbul ignore next */
        (cov_1llo868sqg().s[55]++, revenue * 0.1); // 10% operational cost
        const platformFees =
        /* istanbul ignore next */
        (cov_1llo868sqg().s[56]++, adSpend * 0.05); // 5% platform fees
        const totalCost =
        /* istanbul ignore next */
        (cov_1llo868sqg().s[57]++, adSpend + operationalCost + platformFees);
        const profit =
        /* istanbul ignore next */
        (cov_1llo868sqg().s[58]++, revenue - totalCost);
        /* istanbul ignore next */
        cov_1llo868sqg().s[59]++;
        return {
          date: format(new Date(result.metric_date), 'yyyy-MM-dd'),
          roas: this.calculateROAS(revenue, adSpend),
          roi: this.calculateROI(revenue, totalCost),
          revenue,
          adSpend,
          totalCost,
          profit
        };
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1llo868sqg().s[60]++;
      logger.error('Failed to get ROAS/ROI trends', error);
      /* istanbul ignore next */
      cov_1llo868sqg().s[61]++;
      throw new Error('Failed to get trends');
    }
  }
  /**
   * Analyze ROI trend
   */
  analyzeROITrend(roiData) {
    /* istanbul ignore next */
    cov_1llo868sqg().f[16]++;
    cov_1llo868sqg().s[62]++;
    if (roiData.length < 2) {
      /* istanbul ignore next */
      cov_1llo868sqg().b[21][0]++;
      cov_1llo868sqg().s[63]++;
      return {
        currentROI: 0,
        previousROI: 0,
        changePercentage: 0,
        trend: 'insufficient_data'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1llo868sqg().b[21][1]++;
    }
    const latest =
    /* istanbul ignore next */
    (cov_1llo868sqg().s[64]++, roiData[roiData.length - 1].roi);
    const previous =
    /* istanbul ignore next */
    (cov_1llo868sqg().s[65]++, roiData[roiData.length - 2].roi);
    const change =
    /* istanbul ignore next */
    (cov_1llo868sqg().s[66]++, latest - previous);
    /* istanbul ignore next */
    cov_1llo868sqg().s[67]++;
    return {
      currentROI: latest,
      previousROI: previous,
      changePercentage: parseFloat(change.toFixed(2)),
      trend: change > 0 ?
      /* istanbul ignore next */
      (cov_1llo868sqg().b[22][0]++, 'improving') :
      /* istanbul ignore next */
      (cov_1llo868sqg().b[22][1]++, change < 0 ?
      /* istanbul ignore next */
      (cov_1llo868sqg().b[23][0]++, 'declining') :
      /* istanbul ignore next */
      (cov_1llo868sqg().b[23][1]++, 'stable'))
    };
  }
  /**
   * Generate comprehensive ROAS/ROI analysis
   */
  async generateROASROIAnalysis(organizationId, startDate, endDate) {
    /* istanbul ignore next */
    cov_1llo868sqg().f[17]++;
    cov_1llo868sqg().s[68]++;
    try {
      const [roasCalculations, roiCalculations, trends] =
      /* istanbul ignore next */
      (cov_1llo868sqg().s[69]++, await Promise.all([this.calculateCampaignROAS(organizationId, startDate, endDate), this.calculateCampaignROI(organizationId, startDate, endDate), this.getROASROITrends(organizationId, startDate, endDate)]));
      // Calculate summary
      const totalRevenue =
      /* istanbul ignore next */
      (cov_1llo868sqg().s[70]++, roasCalculations.reduce((sum, calc) => {
        /* istanbul ignore next */
        cov_1llo868sqg().f[18]++;
        cov_1llo868sqg().s[71]++;
        return sum + calc.revenue;
      }, 0));
      const totalAdSpend =
      /* istanbul ignore next */
      (cov_1llo868sqg().s[72]++, roasCalculations.reduce((sum, calc) => {
        /* istanbul ignore next */
        cov_1llo868sqg().f[19]++;
        cov_1llo868sqg().s[73]++;
        return sum + calc.adSpend;
      }, 0));
      const totalCost =
      /* istanbul ignore next */
      (cov_1llo868sqg().s[74]++, roiCalculations.reduce((sum, calc) => {
        /* istanbul ignore next */
        cov_1llo868sqg().f[20]++;
        cov_1llo868sqg().s[75]++;
        return sum + calc.totalCost;
      }, 0));
      const totalProfit =
      /* istanbul ignore next */
      (cov_1llo868sqg().s[76]++, roiCalculations.reduce((sum, calc) => {
        /* istanbul ignore next */
        cov_1llo868sqg().f[21]++;
        cov_1llo868sqg().s[77]++;
        return sum + calc.profit;
      }, 0));
      const avgROAS =
      /* istanbul ignore next */
      (cov_1llo868sqg().s[78]++, roasCalculations.length > 0 ?
      /* istanbul ignore next */
      (cov_1llo868sqg().b[24][0]++, roasCalculations.reduce((sum, calc) => {
        /* istanbul ignore next */
        cov_1llo868sqg().f[22]++;
        cov_1llo868sqg().s[79]++;
        return sum + calc.roas;
      }, 0) / roasCalculations.length) :
      /* istanbul ignore next */
      (cov_1llo868sqg().b[24][1]++, 0));
      const avgROI =
      /* istanbul ignore next */
      (cov_1llo868sqg().s[80]++, roiCalculations.length > 0 ?
      /* istanbul ignore next */
      (cov_1llo868sqg().b[25][0]++, roiCalculations.reduce((sum, calc) => {
        /* istanbul ignore next */
        cov_1llo868sqg().f[23]++;
        cov_1llo868sqg().s[81]++;
        return sum + calc.roi;
      }, 0) / roiCalculations.length) :
      /* istanbul ignore next */
      (cov_1llo868sqg().b[25][1]++, 0));
      // Find best and worst performing campaigns
      const bestROAS =
      /* istanbul ignore next */
      (cov_1llo868sqg().s[82]++, roasCalculations.reduce((best, current) => {
        /* istanbul ignore next */
        cov_1llo868sqg().f[24]++;
        cov_1llo868sqg().s[83]++;
        return current.roas > best.roas ?
        /* istanbul ignore next */
        (cov_1llo868sqg().b[26][0]++, current) :
        /* istanbul ignore next */
        (cov_1llo868sqg().b[26][1]++, best);
      },
      /* istanbul ignore next */
      (cov_1llo868sqg().b[27][0]++, roasCalculations[0]) ||
      /* istanbul ignore next */
      (cov_1llo868sqg().b[27][1]++, {
        name: 'N/A',
        roas: 0,
        roi: 0
      })));
      const worstROAS =
      /* istanbul ignore next */
      (cov_1llo868sqg().s[84]++, roasCalculations.reduce((worst, current) => {
        /* istanbul ignore next */
        cov_1llo868sqg().f[25]++;
        cov_1llo868sqg().s[85]++;
        return current.roas < worst.roas ?
        /* istanbul ignore next */
        (cov_1llo868sqg().b[28][0]++, current) :
        /* istanbul ignore next */
        (cov_1llo868sqg().b[28][1]++, worst);
      },
      /* istanbul ignore next */
      (cov_1llo868sqg().b[29][0]++, roasCalculations[0]) ||
      /* istanbul ignore next */
      (cov_1llo868sqg().b[29][1]++, {
        name: 'N/A',
        roas: 0,
        roi: 0
      })));
      // Generate alerts
      const alerts =
      /* istanbul ignore next */
      (cov_1llo868sqg().s[86]++, this.generateROASROIAlerts(roasCalculations, roiCalculations));
      /* istanbul ignore next */
      cov_1llo868sqg().s[87]++;
      return {
        summary: {
          totalRevenue,
          totalAdSpend,
          totalCost,
          totalProfit,
          avgROAS: parseFloat(avgROAS.toFixed(2)),
          avgROI: parseFloat(avgROI.toFixed(2)),
          bestPerformingCampaign: {
            name: bestROAS.campaignName,
            roas: bestROAS.roas,
            roi:
            /* istanbul ignore next */
            (cov_1llo868sqg().b[30][0]++, roiCalculations.find(r => {
              /* istanbul ignore next */
              cov_1llo868sqg().f[26]++;
              cov_1llo868sqg().s[88]++;
              return r.campaignId === bestROAS.campaignId;
            })?.roi) ||
            /* istanbul ignore next */
            (cov_1llo868sqg().b[30][1]++, 0)
          },
          worstPerformingCampaign: {
            name: worstROAS.campaignName,
            roas: worstROAS.roas,
            roi:
            /* istanbul ignore next */
            (cov_1llo868sqg().b[31][0]++, roiCalculations.find(r => {
              /* istanbul ignore next */
              cov_1llo868sqg().f[27]++;
              cov_1llo868sqg().s[89]++;
              return r.campaignId === worstROAS.campaignId;
            })?.roi) ||
            /* istanbul ignore next */
            (cov_1llo868sqg().b[31][1]++, 0)
          }
        },
        campaigns: {
          roas: roasCalculations,
          roi: roiCalculations
        },
        trends,
        alerts
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1llo868sqg().s[90]++;
      logger.error('Failed to generate ROAS/ROI analysis', error);
      /* istanbul ignore next */
      cov_1llo868sqg().s[91]++;
      throw new Error('Failed to generate analysis');
    }
  }
  /**
   * Generate alerts based on ROAS/ROI thresholds
   */
  generateROASROIAlerts(roasCalculations, roiCalculations) {
    /* istanbul ignore next */
    cov_1llo868sqg().f[28]++;
    const alerts =
    /* istanbul ignore next */
    (cov_1llo868sqg().s[92]++, []);
    // ROAS alerts
    /* istanbul ignore next */
    cov_1llo868sqg().s[93]++;
    roasCalculations.forEach(calc => {
      /* istanbul ignore next */
      cov_1llo868sqg().f[29]++;
      cov_1llo868sqg().s[94]++;
      if (calc.roas < 1.5) {
        /* istanbul ignore next */
        cov_1llo868sqg().b[32][0]++;
        cov_1llo868sqg().s[95]++;
        alerts.push({
          type: calc.roas < 1.0 ?
          /* istanbul ignore next */
          (cov_1llo868sqg().b[33][0]++, 'critical') :
          /* istanbul ignore next */
          (cov_1llo868sqg().b[33][1]++, 'warning'),
          message: `ROAS muito baixo para campanha ${calc.campaignName}`,
          campaignId: calc.campaignId,
          campaignName: calc.campaignName,
          metric: 'roas',
          value: calc.roas,
          threshold: 1.5
        });
      } else {
        /* istanbul ignore next */
        cov_1llo868sqg().b[32][1]++;
        cov_1llo868sqg().s[96]++;
        if (calc.roas > 6.0) {
          /* istanbul ignore next */
          cov_1llo868sqg().b[34][0]++;
          cov_1llo868sqg().s[97]++;
          alerts.push({
            type: 'info',
            message: `ROAS excepcionalmente alto para campanha ${calc.campaignName}`,
            campaignId: calc.campaignId,
            campaignName: calc.campaignName,
            metric: 'roas',
            value: calc.roas,
            threshold: 6.0
          });
        } else
        /* istanbul ignore next */
        {
          cov_1llo868sqg().b[34][1]++;
        }
      }
    });
    // ROI alerts
    /* istanbul ignore next */
    cov_1llo868sqg().s[98]++;
    roiCalculations.forEach(calc => {
      /* istanbul ignore next */
      cov_1llo868sqg().f[30]++;
      cov_1llo868sqg().s[99]++;
      if (calc.roi < 50) {
        /* istanbul ignore next */
        cov_1llo868sqg().b[35][0]++;
        cov_1llo868sqg().s[100]++;
        alerts.push({
          type: calc.roi < 0 ?
          /* istanbul ignore next */
          (cov_1llo868sqg().b[36][0]++, 'critical') :
          /* istanbul ignore next */
          (cov_1llo868sqg().b[36][1]++, 'warning'),
          message: `ROI baixo para campanha ${calc.campaignName}`,
          campaignId: calc.campaignId,
          campaignName: calc.campaignName,
          metric: 'roi',
          value: calc.roi,
          threshold: 50
        });
      } else
      /* istanbul ignore next */
      {
        cov_1llo868sqg().b[35][1]++;
      }
    });
    /* istanbul ignore next */
    cov_1llo868sqg().s[101]++;
    return alerts;
  }
  /**
   * Get top performing campaigns by ROAS
   */
  async getTopCampaignsByROAS(organizationId, startDate, endDate, limit =
  /* istanbul ignore next */
  (cov_1llo868sqg().b[37][0]++, 10)) {
    /* istanbul ignore next */
    cov_1llo868sqg().f[31]++;
    const calculations =
    /* istanbul ignore next */
    (cov_1llo868sqg().s[102]++, await this.calculateCampaignROAS(organizationId, startDate, endDate));
    /* istanbul ignore next */
    cov_1llo868sqg().s[103]++;
    return calculations.sort((a, b) => {
      /* istanbul ignore next */
      cov_1llo868sqg().f[32]++;
      cov_1llo868sqg().s[104]++;
      return b.roas - a.roas;
    }).slice(0, limit);
  }
  /**
   * Get top performing campaigns by ROI
   */
  async getTopCampaignsByROI(organizationId, startDate, endDate, limit =
  /* istanbul ignore next */
  (cov_1llo868sqg().b[38][0]++, 10)) {
    /* istanbul ignore next */
    cov_1llo868sqg().f[33]++;
    const calculations =
    /* istanbul ignore next */
    (cov_1llo868sqg().s[105]++, await this.calculateCampaignROI(organizationId, startDate, endDate));
    /* istanbul ignore next */
    cov_1llo868sqg().s[106]++;
    return calculations.sort((a, b) => {
      /* istanbul ignore next */
      cov_1llo868sqg().f[34]++;
      cov_1llo868sqg().s[107]++;
      return b.roi - a.roi;
    }).slice(0, limit);
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,