5634cc608edc514a6a3d442fecebc841
/* istanbul ignore next */
function cov_1rylm45tiu() {
  var path = "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\strategies\\jwt.strategy.ts";
  var hash = "8de75d7121d9579d2aede0e672925369f9df410f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\strategies\\jwt.strategy.ts",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 17
        },
        end: {
          line: 6,
          column: 1
        }
      },
      "1": {
        start: {
          line: 2,
          column: 12
        },
        end: {
          line: 2,
          column: 28
        }
      },
      "2": {
        start: {
          line: 2,
          column: 34
        },
        end: {
          line: 2,
          column: 125
        }
      },
      "3": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 4,
          column: 150
        }
      },
      "4": {
        start: {
          line: 3,
          column: 79
        },
        end: {
          line: 3,
          column: 131
        }
      },
      "5": {
        start: {
          line: 4,
          column: 9
        },
        end: {
          line: 4,
          column: 150
        }
      },
      "6": {
        start: {
          line: 4,
          column: 22
        },
        end: {
          line: 4,
          column: 43
        }
      },
      "7": {
        start: {
          line: 4,
          column: 58
        },
        end: {
          line: 4,
          column: 150
        }
      },
      "8": {
        start: {
          line: 4,
          column: 81
        },
        end: {
          line: 4,
          column: 150
        }
      },
      "9": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 5,
          column: 66
        }
      },
      "10": {
        start: {
          line: 7,
          column: 17
        },
        end: {
          line: 9,
          column: 1
        }
      },
      "11": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 109
        }
      },
      "12": {
        start: {
          line: 8,
          column: 79
        },
        end: {
          line: 8,
          column: 109
        }
      },
      "13": {
        start: {
          line: 16,
          column: 18
        },
        end: {
          line: 47,
          column: 1
        }
      },
      "14": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 24,
          column: 11
        }
      },
      "15": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 43
        }
      },
      "16": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 29
        }
      },
      "17": {
        start: {
          line: 29,
          column: 39
        },
        end: {
          line: 29,
          column: 46
        }
      },
      "18": {
        start: {
          line: 31,
          column: 21
        },
        end: {
          line: 38,
          column: 10
        }
      },
      "19": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 41,
          column: 9
        }
      },
      "20": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 74
        }
      },
      "21": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 45,
          column: 10
        }
      },
      "22": {
        start: {
          line: 48,
          column: 0
        },
        end: {
          line: 51,
          column: 16
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 1,
            column: 46
          },
          end: {
            line: 1,
            column: 47
          }
        },
        loc: {
          start: {
            line: 1,
            column: 87
          },
          end: {
            line: 6,
            column: 1
          }
        },
        line: 1
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 47
          }
        },
        loc: {
          start: {
            line: 7,
            column: 62
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 7
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 39
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 19
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 28
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 28
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 1,
            column: 17
          },
          end: {
            line: 6,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1,
            column: 18
          },
          end: {
            line: 1,
            column: 22
          }
        }, {
          start: {
            line: 1,
            column: 26
          },
          end: {
            line: 1,
            column: 41
          }
        }, {
          start: {
            line: 1,
            column: 46
          },
          end: {
            line: 6,
            column: 1
          }
        }],
        line: 1
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 34
          },
          end: {
            line: 2,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 42
          },
          end: {
            line: 2,
            column: 48
          }
        }, {
          start: {
            line: 2,
            column: 51
          },
          end: {
            line: 2,
            column: 125
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 2,
            column: 51
          },
          end: {
            line: 2,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 67
          },
          end: {
            line: 2,
            column: 118
          }
        }, {
          start: {
            line: 2,
            column: 121
          },
          end: {
            line: 2,
            column: 125
          }
        }],
        line: 2
      },
      "3": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 4,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 4,
            column: 150
          }
        }, {
          start: {
            line: 4,
            column: 9
          },
          end: {
            line: 4,
            column: 150
          }
        }],
        line: 3
      },
      "4": {
        loc: {
          start: {
            line: 3,
            column: 8
          },
          end: {
            line: 3,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 8
          },
          end: {
            line: 3,
            column: 35
          }
        }, {
          start: {
            line: 3,
            column: 39
          },
          end: {
            line: 3,
            column: 77
          }
        }],
        line: 3
      },
      "5": {
        loc: {
          start: {
            line: 4,
            column: 58
          },
          end: {
            line: 4,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 58
          },
          end: {
            line: 4,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 4
      },
      "6": {
        loc: {
          start: {
            line: 4,
            column: 85
          },
          end: {
            line: 4,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 86
          },
          end: {
            line: 4,
            column: 143
          }
        }, {
          start: {
            line: 4,
            column: 148
          },
          end: {
            line: 4,
            column: 149
          }
        }],
        line: 4
      },
      "7": {
        loc: {
          start: {
            line: 4,
            column: 86
          },
          end: {
            line: 4,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 4,
            column: 94
          },
          end: {
            line: 4,
            column: 98
          }
        }, {
          start: {
            line: 4,
            column: 101
          },
          end: {
            line: 4,
            column: 143
          }
        }],
        line: 4
      },
      "8": {
        loc: {
          start: {
            line: 4,
            column: 101
          },
          end: {
            line: 4,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 4,
            column: 109
          },
          end: {
            line: 4,
            column: 126
          }
        }, {
          start: {
            line: 4,
            column: 129
          },
          end: {
            line: 4,
            column: 143
          }
        }],
        line: 4
      },
      "9": {
        loc: {
          start: {
            line: 5,
            column: 11
          },
          end: {
            line: 5,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 11
          },
          end: {
            line: 5,
            column: 16
          }
        }, {
          start: {
            line: 5,
            column: 20
          },
          end: {
            line: 5,
            column: 21
          }
        }, {
          start: {
            line: 5,
            column: 25
          },
          end: {
            line: 5,
            column: 62
          }
        }],
        line: 5
      },
      "10": {
        loc: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 9,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 7,
            column: 18
          },
          end: {
            line: 7,
            column: 22
          }
        }, {
          start: {
            line: 7,
            column: 26
          },
          end: {
            line: 7,
            column: 41
          }
        }, {
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 9,
            column: 1
          }
        }],
        line: 7
      },
      "11": {
        loc: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 109
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 109
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 8
      },
      "12": {
        loc: {
          start: {
            line: 8,
            column: 8
          },
          end: {
            line: 8,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 8
          },
          end: {
            line: 8,
            column: 35
          }
        }, {
          start: {
            line: 8,
            column: 39
          },
          end: {
            line: 8,
            column: 77
          }
        }],
        line: 8
      },
      "13": {
        loc: {
          start: {
            line: 23,
            column: 25
          },
          end: {
            line: 23,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 25
          },
          end: {
            line: 23,
            column: 56
          }
        }, {
          start: {
            line: 23,
            column: 60
          },
          end: {
            line: 23,
            column: 77
          }
        }],
        line: 23
      },
      "14": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "15": {
        loc: {
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 39,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 39,
            column: 17
          }
        }, {
          start: {
            line: 39,
            column: 21
          },
          end: {
            line: 39,
            column: 35
          }
        }],
        line: 39
      },
      "16": {
        loc: {
          start: {
            line: 50,
            column: 37
          },
          end: {
            line: 50,
            column: 133
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 50,
            column: 122
          },
          end: {
            line: 50,
            column: 124
          }
        }, {
          start: {
            line: 50,
            column: 127
          },
          end: {
            line: 50,
            column: 133
          }
        }],
        line: 50
      },
      "17": {
        loc: {
          start: {
            line: 50,
            column: 50
          },
          end: {
            line: 50,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 50
          },
          end: {
            line: 50,
            column: 86
          }
        }, {
          start: {
            line: 50,
            column: 90
          },
          end: {
            line: 50,
            column: 103
          }
        }],
        line: 50
      },
      "18": {
        loc: {
          start: {
            line: 50,
            column: 135
          },
          end: {
            line: 50,
            column: 231
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 50,
            column: 220
          },
          end: {
            line: 50,
            column: 222
          }
        }, {
          start: {
            line: 50,
            column: 225
          },
          end: {
            line: 50,
            column: 231
          }
        }],
        line: 50
      },
      "19": {
        loc: {
          start: {
            line: 50,
            column: 148
          },
          end: {
            line: 50,
            column: 201
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 148
          },
          end: {
            line: 50,
            column: 184
          }
        }, {
          start: {
            line: 50,
            column: 188
          },
          end: {
            line: 50,
            column: 201
          }
        }],
        line: 50
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\strategies\\jwt.strategy.ts",
      mappings: ";;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,qBAAqB,EAAE,MAAM,gBAAgB,CAAC;AACnE,OAAO,EAAE,gBAAgB,EAAE,MAAM,kBAAkB,CAAC;AACpD,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAC;AACpD,OAAO,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAC;AAC/C,OAAO,EAAE,aAAa,EAAE,MAAM,4BAA4B,CAAC;AAUpD,IAAM,WAAW,GAAjB,MAAM,WAAY,SAAQ,gBAAgB,CAAC,QAAQ,CAAC;IAEtC;IACA;IAFnB,YACmB,aAA4B,EAC5B,MAAqB;QAEtC,KAAK,CAAC;YACJ,cAAc,EAAE,UAAU,CAAC,2BAA2B,EAAE;YACxD,gBAAgB,EAAE,KAAK;YACvB,WAAW,EAAE,aAAa,CAAC,GAAG,CAAS,YAAY,CAAC,IAAI,iBAAiB;SAC1E,CAAC,CAAC;QAPc,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAe;IAOxC,CAAC;IAED,KAAK,CAAC,QAAQ,CAAC,OAAmB;QAChC,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,OAAO,CAAC;QAEvC,mCAAmC;QACnC,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;YAC7C,KAAK,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE;YACrB,MAAM,EAAE;gBACN,EAAE,EAAE,IAAI;gBACR,KAAK,EAAE,IAAI;gBACX,QAAQ,EAAE,IAAI;aACf;SACF,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC5B,MAAM,IAAI,qBAAqB,CAAC,4BAA4B,CAAC,CAAC;QAChE,CAAC;QAED,OAAO;YACL,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB,CAAC;IACJ,CAAC;CACF,CAAA;AAlCY,WAAW;IADvB,UAAU,EAAE;yDAGuB,aAAa,oBAAb,aAAa,oDACpB,aAAa,oBAAb,aAAa;GAH7B,WAAW,CAkCvB",
      names: [],
      sources: ["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\strategies\\jwt.strategy.ts"],
      sourcesContent: ["import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { ConfigService } from '@nestjs/config';\nimport { PrismaService } from '../database/prisma.service';\n\ninterface JwtPayload {\n  sub: string;\n  email: string;\n  iat: number;\n  exp: number;\n}\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly prisma: PrismaService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get<string>('JWT_SECRET') || 'your-secret-key',\n    });\n  }\n\n  async validate(payload: JwtPayload) {\n    const { sub: userId, email } = payload;\n\n    // Verify user exists and is active\n    const user = await this.prisma.user.findUnique({\n      where: { id: userId },\n      select: {\n        id: true,\n        email: true,\n        isActive: true,\n      },\n    });\n\n    if (!user || !user.isActive) {\n      throw new UnauthorizedException('User not found or inactive');\n    }\n\n    return {\n      id: user.id,\n      email: user.email,\n    };\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8de75d7121d9579d2aede0e672925369f9df410f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1rylm45tiu = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1rylm45tiu();
var __decorate =
/* istanbul ignore next */
(cov_1rylm45tiu().s[0]++,
/* istanbul ignore next */
(cov_1rylm45tiu().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1rylm45tiu().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_1rylm45tiu().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_1rylm45tiu().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_1rylm45tiu().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_1rylm45tiu().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_1rylm45tiu().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_1rylm45tiu().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_1rylm45tiu().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_1rylm45tiu().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_1rylm45tiu().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_1rylm45tiu().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_1rylm45tiu().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_1rylm45tiu().b[3][0]++;
    cov_1rylm45tiu().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_1rylm45tiu().b[3][1]++;
    cov_1rylm45tiu().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_1rylm45tiu().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_1rylm45tiu().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_1rylm45tiu().b[5][0]++;
        cov_1rylm45tiu().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_1rylm45tiu().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_1rylm45tiu().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_1rylm45tiu().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_1rylm45tiu().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_1rylm45tiu().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_1rylm45tiu().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_1rylm45tiu().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_1rylm45tiu().s[9]++;
  return /* istanbul ignore next */(cov_1rylm45tiu().b[9][0]++, c > 3) &&
  /* istanbul ignore next */
  (cov_1rylm45tiu().b[9][1]++, r) &&
  /* istanbul ignore next */
  (cov_1rylm45tiu().b[9][2]++, Object.defineProperty(target, key, r)), r;
}));
var __metadata =
/* istanbul ignore next */
(cov_1rylm45tiu().s[10]++,
/* istanbul ignore next */
(cov_1rylm45tiu().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_1rylm45tiu().b[10][1]++, this.__metadata) ||
/* istanbul ignore next */
(cov_1rylm45tiu().b[10][2]++, function (k, v) {
  /* istanbul ignore next */
  cov_1rylm45tiu().f[1]++;
  cov_1rylm45tiu().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_1rylm45tiu().b[12][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_1rylm45tiu().b[12][1]++, typeof Reflect.metadata === "function")) {
    /* istanbul ignore next */
    cov_1rylm45tiu().b[11][0]++;
    cov_1rylm45tiu().s[12]++;
    return Reflect.metadata(k, v);
  } else
  /* istanbul ignore next */
  {
    cov_1rylm45tiu().b[11][1]++;
  }
}));
var _a, _b;
import { Injectable, UnauthorizedException } from '@nestjs/common';
import { PassportStrategy } from '@nestjs/passport';
import { ExtractJwt, Strategy } from 'passport-jwt';
import { ConfigService } from '@nestjs/config';
import { PrismaService } from '../database/prisma.service';
/* istanbul ignore next */
cov_1rylm45tiu().s[13]++;
let JwtStrategy = class JwtStrategy extends PassportStrategy(Strategy) {
  configService;
  prisma;
  constructor(configService, prisma) {
    /* istanbul ignore next */
    cov_1rylm45tiu().f[2]++;
    cov_1rylm45tiu().s[14]++;
    super({
      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),
      ignoreExpiration: false,
      secretOrKey:
      /* istanbul ignore next */
      (cov_1rylm45tiu().b[13][0]++, configService.get('JWT_SECRET')) ||
      /* istanbul ignore next */
      (cov_1rylm45tiu().b[13][1]++, 'your-secret-key')
    });
    /* istanbul ignore next */
    cov_1rylm45tiu().s[15]++;
    this.configService = configService;
    /* istanbul ignore next */
    cov_1rylm45tiu().s[16]++;
    this.prisma = prisma;
  }
  async validate(payload) {
    /* istanbul ignore next */
    cov_1rylm45tiu().f[3]++;
    const {
      sub: userId,
      email
    } =
    /* istanbul ignore next */
    (cov_1rylm45tiu().s[17]++, payload);
    // Verify user exists and is active
    const user =
    /* istanbul ignore next */
    (cov_1rylm45tiu().s[18]++, await this.prisma.user.findUnique({
      where: {
        id: userId
      },
      select: {
        id: true,
        email: true,
        isActive: true
      }
    }));
    /* istanbul ignore next */
    cov_1rylm45tiu().s[19]++;
    if (
    /* istanbul ignore next */
    (cov_1rylm45tiu().b[15][0]++, !user) ||
    /* istanbul ignore next */
    (cov_1rylm45tiu().b[15][1]++, !user.isActive)) {
      /* istanbul ignore next */
      cov_1rylm45tiu().b[14][0]++;
      cov_1rylm45tiu().s[20]++;
      throw new UnauthorizedException('User not found or inactive');
    } else
    /* istanbul ignore next */
    {
      cov_1rylm45tiu().b[14][1]++;
    }
    cov_1rylm45tiu().s[21]++;
    return {
      id: user.id,
      email: user.email
    };
  }
};
/* istanbul ignore next */
cov_1rylm45tiu().s[22]++;
JwtStrategy = __decorate([Injectable(), __metadata("design:paramtypes", [typeof (_a =
/* istanbul ignore next */
(cov_1rylm45tiu().b[17][0]++, typeof ConfigService !== "undefined") &&
/* istanbul ignore next */
(cov_1rylm45tiu().b[17][1]++, ConfigService)) === "function" ?
/* istanbul ignore next */
(cov_1rylm45tiu().b[16][0]++, _a) :
/* istanbul ignore next */
(cov_1rylm45tiu().b[16][1]++, Object), typeof (_b =
/* istanbul ignore next */
(cov_1rylm45tiu().b[19][0]++, typeof PrismaService !== "undefined") &&
/* istanbul ignore next */
(cov_1rylm45tiu().b[19][1]++, PrismaService)) === "function" ?
/* istanbul ignore next */
(cov_1rylm45tiu().b[18][0]++, _b) :
/* istanbul ignore next */
(cov_1rylm45tiu().b[18][1]++, Object)])], JwtStrategy);
export { JwtStrategy };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXJ5bG00NXRpdSIsImFjdHVhbENvdmVyYWdlIiwiSW5qZWN0YWJsZSIsIlVuYXV0aG9yaXplZEV4Y2VwdGlvbiIsIlBhc3Nwb3J0U3RyYXRlZ3kiLCJFeHRyYWN0Snd0IiwiU3RyYXRlZ3kiLCJDb25maWdTZXJ2aWNlIiwiUHJpc21hU2VydmljZSIsInMiLCJKd3RTdHJhdGVneSIsImNvbmZpZ1NlcnZpY2UiLCJwcmlzbWEiLCJjb25zdHJ1Y3RvciIsImYiLCJqd3RGcm9tUmVxdWVzdCIsImZyb21BdXRoSGVhZGVyQXNCZWFyZXJUb2tlbiIsImlnbm9yZUV4cGlyYXRpb24iLCJzZWNyZXRPcktleSIsImIiLCJnZXQiLCJ2YWxpZGF0ZSIsInBheWxvYWQiLCJzdWIiLCJ1c2VySWQiLCJlbWFpbCIsInVzZXIiLCJmaW5kVW5pcXVlIiwid2hlcmUiLCJpZCIsInNlbGVjdCIsImlzQWN0aXZlIiwiX19kZWNvcmF0ZSIsIl9hIiwiT2JqZWN0IiwiX2IiXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXEVuem8gTWFyY2Vsb1xcRGVza3RvcFxcUHJvamV0b3MgRW1wcmVzYVxcU2FhcyBVdG1pZnlcXHV0bWlmeS1jbG9uZVxcYXBwc1xcYXBpXFxzcmNcXHN0cmF0ZWdpZXNcXGp3dC5zdHJhdGVneS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlLCBVbmF1dGhvcml6ZWRFeGNlcHRpb24gfSBmcm9tICdAbmVzdGpzL2NvbW1vbic7XG5pbXBvcnQgeyBQYXNzcG9ydFN0cmF0ZWd5IH0gZnJvbSAnQG5lc3Rqcy9wYXNzcG9ydCc7XG5pbXBvcnQgeyBFeHRyYWN0Snd0LCBTdHJhdGVneSB9IGZyb20gJ3Bhc3Nwb3J0LWp3dCc7XG5pbXBvcnQgeyBDb25maWdTZXJ2aWNlIH0gZnJvbSAnQG5lc3Rqcy9jb25maWcnO1xuaW1wb3J0IHsgUHJpc21hU2VydmljZSB9IGZyb20gJy4uL2RhdGFiYXNlL3ByaXNtYS5zZXJ2aWNlJztcblxuaW50ZXJmYWNlIEp3dFBheWxvYWQge1xuICBzdWI6IHN0cmluZztcbiAgZW1haWw6IHN0cmluZztcbiAgaWF0OiBudW1iZXI7XG4gIGV4cDogbnVtYmVyO1xufVxuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgSnd0U3RyYXRlZ3kgZXh0ZW5kcyBQYXNzcG9ydFN0cmF0ZWd5KFN0cmF0ZWd5KSB7XG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgcmVhZG9ubHkgY29uZmlnU2VydmljZTogQ29uZmlnU2VydmljZSxcbiAgICBwcml2YXRlIHJlYWRvbmx5IHByaXNtYTogUHJpc21hU2VydmljZSxcbiAgKSB7XG4gICAgc3VwZXIoe1xuICAgICAgand0RnJvbVJlcXVlc3Q6IEV4dHJhY3RKd3QuZnJvbUF1dGhIZWFkZXJBc0JlYXJlclRva2VuKCksXG4gICAgICBpZ25vcmVFeHBpcmF0aW9uOiBmYWxzZSxcbiAgICAgIHNlY3JldE9yS2V5OiBjb25maWdTZXJ2aWNlLmdldDxzdHJpbmc+KCdKV1RfU0VDUkVUJykgfHwgJ3lvdXItc2VjcmV0LWtleScsXG4gICAgfSk7XG4gIH1cblxuICBhc3luYyB2YWxpZGF0ZShwYXlsb2FkOiBKd3RQYXlsb2FkKSB7XG4gICAgY29uc3QgeyBzdWI6IHVzZXJJZCwgZW1haWwgfSA9IHBheWxvYWQ7XG5cbiAgICAvLyBWZXJpZnkgdXNlciBleGlzdHMgYW5kIGlzIGFjdGl2ZVxuICAgIGNvbnN0IHVzZXIgPSBhd2FpdCB0aGlzLnByaXNtYS51c2VyLmZpbmRVbmlxdWUoe1xuICAgICAgd2hlcmU6IHsgaWQ6IHVzZXJJZCB9LFxuICAgICAgc2VsZWN0OiB7XG4gICAgICAgIGlkOiB0cnVlLFxuICAgICAgICBlbWFpbDogdHJ1ZSxcbiAgICAgICAgaXNBY3RpdmU6IHRydWUsXG4gICAgICB9LFxuICAgIH0pO1xuXG4gICAgaWYgKCF1c2VyIHx8ICF1c2VyLmlzQWN0aXZlKSB7XG4gICAgICB0aHJvdyBuZXcgVW5hdXRob3JpemVkRXhjZXB0aW9uKCdVc2VyIG5vdCBmb3VuZCBvciBpbmFjdGl2ZScpO1xuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICBpZDogdXNlci5pZCxcbiAgICAgIGVtYWlsOiB1c2VyLmVtYWlsLFxuICAgIH07XG4gIH1cbn0iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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