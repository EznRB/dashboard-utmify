{"version":3,"names":["cov_1rylm45tiu","actualCoverage","Injectable","UnauthorizedException","PassportStrategy","ExtractJwt","Strategy","ConfigService","PrismaService","s","JwtStrategy","configService","prisma","constructor","f","jwtFromRequest","fromAuthHeaderAsBearerToken","ignoreExpiration","secretOrKey","b","get","validate","payload","sub","userId","email","user","findUnique","where","id","select","isActive","__decorate","_a","Object","_b"],"sources":["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\strategies\\jwt.strategy.ts"],"sourcesContent":["import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { ConfigService } from '@nestjs/config';\nimport { PrismaService } from '../database/prisma.service';\n\ninterface JwtPayload {\n  sub: string;\n  email: string;\n  iat: number;\n  exp: number;\n}\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly prisma: PrismaService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get<string>('JWT_SECRET') || 'your-secret-key',\n    });\n  }\n\n  async validate(payload: JwtPayload) {\n    const { sub: userId, email } = payload;\n\n    // Verify user exists and is active\n    const user = await this.prisma.user.findUnique({\n      where: { id: userId },\n      select: {\n        id: true,\n        email: true,\n        isActive: true,\n      },\n    });\n\n    if (!user || !user.isActive) {\n      throw new UnauthorizedException('User not found or inactive');\n    }\n\n    return {\n      id: user.id,\n      email: user.email,\n    };\n  }\n}"],"mappingsca;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAdb,SAASE,UAAU,EAAEC,qBAAqB,QAAQ,gBAAgB;AAClE,SAASC,gBAAgB,QAAQ,kBAAkB;AACnD,SAASC,UAAU,EAAEC,QAAQ,QAAQ,cAAc;AACnD,SAASC,aAAa,QAAQ,gBAAgB;AAC9C,SAASC,aAAa,QAAQ,4BAA4B;AAAC;AAAAR,cAAA,GAAAS,CAAA;AAUpD,IAAMC,WAAW,GAAjB,MAAMA,WAAY,SAAQN,gBAAgB,CAACE,QAAQ,CAAC;EAEtCK,aAAA;EACAC,MAAA;EAFnBC,YACmBF,aAA4B,EAC5BC,MAAqB;IAAA;IAAAZ,cAAA,GAAAc,CAAA;IAAAd,cAAA,GAAAS,CAAA;IAEtC,KAAK,CAAC;MACJM,cAAc,EAAEV,UAAU,CAACW,2BAA2B,EAAE;MACxDC,gBAAgB,EAAE,KAAK;MACvBC,WAAW;MAAE;MAAA,CAAAlB,cAAA,GAAAmB,CAAA,WAAAR,aAAa,CAACS,GAAG,CAAS,YAAY,CAAC;MAAA;MAAA,CAAApB,cAAA,GAAAmB,CAAA,WAAI,iBAAiB;KAC1E,CAAC;IAAC;IAAAnB,cAAA,GAAAS,CAAA;IAPc,KAAAE,aAAa,GAAbA,aAAa;IAAe;IAAAX,cAAA,GAAAS,CAAA;IAC5B,KAAAG,MAAM,GAANA,MAAM;EAOzB;EAEA,MAAMS,QAAQA,CAACC,OAAmB;IAAA;IAAAtB,cAAA,GAAAc,CAAA;IAChC,MAAM;MAAES,GAAG,EAAEC,MAAM;MAAEC;IAAK,CAAE;IAAA;IAAA,CAAAzB,cAAA,GAAAS,CAAA,QAAGa,OAAO;IAEtC;IACA,MAAMI,IAAI;IAAA;IAAA,CAAA1B,cAAA,GAAAS,CAAA,QAAG,MAAM,IAAI,CAACG,MAAM,CAACc,IAAI,CAACC,UAAU,CAAC;MAC7CC,KAAK,EAAE;QAAEC,EAAE,EAAEL;MAAM,CAAE;MACrBM,MAAM,EAAE;QACND,EAAE,EAAE,IAAI;QACRJ,KAAK,EAAE,IAAI;QACXM,QAAQ,EAAE;;KAEb,CAAC;IAAC;IAAA/B,cAAA,GAAAS,CAAA;IAEH;IAAI;IAAA,CAAAT,cAAA,GAAAmB,CAAA,YAACO,IAAI;IAAA;IAAA,CAAA1B,cAAA,GAAAmB,CAAA,WAAI,CAACO,IAAI,CAACK,QAAQ,GAAE;MAAA;MAAA/B,cAAA,GAAAmB,CAAA;MAAAnB,cAAA,GAAAS,CAAA;MAC3B,MAAM,IAAIN,qBAAqB,CAAC,4BAA4B,CAAC;IAC/D,CAAC;IAAA;IAAA;MAAAH,cAAA,GAAAmB,CAAA;IAAA;IAAAnB,cAAA,GAAAS,CAAA;IAED,OAAO;MACLoB,EAAE,EAAEH,IAAI,CAACG,EAAE;MACXJ,KAAK,EAAEC,IAAI,CAACD;KACb;EACH;CACD;AAAA;AAAAzB,cAAA,GAAAS,CAAA;AAlCYC,WAAW,GAAAsB,UAAA,EADvB9B,UAAU,EAAE,E;;qCAGuBK,aAAa;AAAA;AAAA,CAAAP,cAAA,GAAAmB,CAAA,WAAbZ,aAAa;AAAA;AAAA,CAAAP,cAAA,GAAAmB,CAAA,WAAAc,EAAA;AAAA;AAAA,CAAAjC,cAAA,GAAAmB,CAAA,WAAAe,MAAA,WAAAC,EAAA;AAAA;AAAA,CAAAnC,cAAA,GAAAmB,CAAA,kBACpBX,aAAa;AAAA;AAAA,CAAAR,cAAA,GAAAmB,CAAA,WAAbX,aAAa;AAAA;AAAA,CAAAR,cAAA,GAAAmB,CAAA,WAAAgB,EAAA;AAAA;AAAA,CAAAnC,cAAA,GAAAmB,CAAA,WAAAe,MAAA,I,EAH7BxB,WAAW,CAkCvB","ignoreList":[]}