{"version":3,"names":["cov_1tgt7ebh6e","actualCoverage","authMiddleware","organizationMiddleware","WebhookService","ApiError","logger","z","MetaWebhookSchema","s","object","string","entry","array","id","time","number","changes","field","value","any","GoogleWebhookSchema","message","data","messageId","publishTime","subscription","StripeWebhookSchema","literal","type","created","livemode","boolean","WhatsAppWebhookSchema","WebhookConfigSchema","name","min","max","url","eventTypes","enum","secret","optional","headers","record","timeout","default","isActive","webhooksRoutes","fastify","f","webhookService","db","post","preHandler","schema","tags","summary","properties","body","response","success","request","reply","signature","processIncomingWebhook","provider","payload","sourceIp","ip","userAgent","status","send","error","get","querystring","required","mode","challenge","verifyToken","query","b","process","env","META_WEBHOOK_VERIFY_TOKEN","WHATSAPP_WEBHOOK_VERIFY_TOKEN","register","authenticatedWebhookRoutes","addHook","items","createdAt","organizationId","organization","config","createWebhookConfig","totalSent","totalFailed","lastSentAt","nullable","configs","getWebhookConfigs","configId","eventType","isSuccess","limit","minimum","maximum","offset","logs","statusCode","responseTime","attempt","total","hasMore","filters","result","getWebhookLogs","logId","sendTestWebhook","retryWebhook","put","params","partial","updatedAt","updateWebhookConfig","delete","deleteWebhookConfig"],"sources":["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\routes\\webhooks.routes.ts"],"sourcesContent":["import { FastifyInstance, FastifyRequest, FastifyReply } from 'fastify';\nimport { authMiddleware, organizationMiddleware, apiKeyMiddleware } from '../middleware/auth.middleware';\nimport { WebhookService } from '../services/webhook.service';\nimport { ApiError } from '../utils/errors';\nimport { logger } from '../utils/logger';\nimport { z } from 'zod';\n\n// Webhook payload schemas\nconst MetaWebhookSchema = z.object({\n  object: z.string(),\n  entry: z.array(z.object({\n    id: z.string(),\n    time: z.number(),\n    changes: z.array(z.object({\n      field: z.string(),\n      value: z.any(),\n    })),\n  })),\n});\n\nconst GoogleWebhookSchema = z.object({\n  message: z.object({\n    data: z.string(), // Base64 encoded\n    messageId: z.string(),\n    publishTime: z.string(),\n  }),\n  subscription: z.string(),\n});\n\nconst StripeWebhookSchema = z.object({\n  id: z.string(),\n  object: z.literal('event'),\n  type: z.string(),\n  data: z.object({\n    object: z.any(),\n  }),\n  created: z.number(),\n  livemode: z.boolean(),\n});\n\nconst WhatsAppWebhookSchema = z.object({\n  object: z.string(),\n  entry: z.array(z.object({\n    id: z.string(),\n    changes: z.array(z.object({\n      field: z.string(),\n      value: z.any(),\n    })),\n  })),\n});\n\nconst WebhookConfigSchema = z.object({\n  name: z.string().min(1).max(255),\n  url: z.string().url(),\n  eventTypes: z.array(z.enum(['NEW_CONVERSION', 'GOAL_REACHED', 'BUDGET_EXCEEDED', 'CAMPAIGN_PAUSED'])),\n  secret: z.string().optional(),\n  headers: z.record(z.string()).optional(),\n  timeout: z.number().min(1).max(300).default(30),\n  isActive: z.boolean().default(true),\n});\n\nexport async function webhooksRoutes(fastify: FastifyInstance) {\n  const webhookService = new WebhookService(fastify.db);\n\n  // Incoming webhook endpoints (no auth required, but signature validation)\n  \n  // Meta Ads webhook\n  fastify.post(\n    '/meta',\n    {\n      preHandler: [], // No auth middleware for incoming webhooks\n      schema: {\n        tags: ['Webhooks'],\n        summary: 'Receive Meta Ads webhook',\n        headers: {\n          type: 'object',\n          properties: {\n            'x-hub-signature-256': { type: 'string' },\n          },\n        },\n        body: MetaWebhookSchema,\n        response: {\n          200: {\n            type: 'object',\n            properties: {\n              success: { type: 'boolean' },\n            },\n          },\n        },\n      },\n    },\n    async (request: FastifyRequest, reply: FastifyReply) => {\n      try {\n        const signature = request.headers['x-hub-signature-256'] as string;\n        const body = request.body as z.infer<typeof MetaWebhookSchema>;\n        \n        // Process webhook asynchronously\n        await webhookService.processIncomingWebhook({\n          provider: 'META_ADS',\n          signature,\n          payload: body,\n          headers: request.headers,\n          sourceIp: request.ip,\n          userAgent: request.headers['user-agent'],\n        });\n\n        return reply.status(200).send({ success: true });\n      } catch (error) {\n        logger.error('Error processing Meta webhook:', error);\n        return reply.status(200).send({ success: true }); // Always return 200 for webhooks\n      }\n    }\n  );\n\n  // Google Ads webhook\n  fastify.post(\n    '/google',\n    {\n      preHandler: [],\n      schema: {\n        tags: ['Webhooks'],\n        summary: 'Receive Google Ads webhook',\n        body: GoogleWebhookSchema,\n        response: {\n          200: {\n            type: 'object',\n            properties: {\n              success: { type: 'boolean' },\n            },\n          },\n        },\n      },\n    },\n    async (request: FastifyRequest, reply: FastifyReply) => {\n      try {\n        const body = request.body as z.infer<typeof GoogleWebhookSchema>;\n        \n        await webhookService.processIncomingWebhook({\n          provider: 'GOOGLE_ADS',\n          payload: body,\n          headers: request.headers,\n          sourceIp: request.ip,\n          userAgent: request.headers['user-agent'],\n        });\n\n        return reply.status(200).send({ success: true });\n      } catch (error) {\n        logger.error('Error processing Google webhook:', error);\n        return reply.status(200).send({ success: true });\n      }\n    }\n  );\n\n  // Stripe webhook\n  fastify.post(\n    '/stripe',\n    {\n      preHandler: [],\n      schema: {\n        tags: ['Webhooks'],\n        summary: 'Receive Stripe webhook',\n        headers: {\n          type: 'object',\n          properties: {\n            'stripe-signature': { type: 'string' },\n          },\n        },\n        body: StripeWebhookSchema,\n        response: {\n          200: {\n            type: 'object',\n            properties: {\n              success: { type: 'boolean' },\n            },\n          },\n        },\n      },\n    },\n    async (request: FastifyRequest, reply: FastifyReply) => {\n      try {\n        const signature = request.headers['stripe-signature'] as string;\n        const body = request.body as z.infer<typeof StripeWebhookSchema>;\n        \n        await webhookService.processIncomingWebhook({\n          provider: 'STRIPE',\n          signature,\n          payload: body,\n          headers: request.headers,\n          sourceIp: request.ip,\n          userAgent: request.headers['user-agent'],\n        });\n\n        return reply.status(200).send({ success: true });\n      } catch (error) {\n        logger.error('Error processing Stripe webhook:', error);\n        return reply.status(200).send({ success: true });\n      }\n    }\n  );\n\n  // WhatsApp webhook\n  fastify.post(\n    '/whatsapp',\n    {\n      preHandler: [],\n      schema: {\n        tags: ['Webhooks'],\n        summary: 'Receive WhatsApp webhook',\n        headers: {\n          type: 'object',\n          properties: {\n            'x-hub-signature-256': { type: 'string' },\n          },\n        },\n        body: WhatsAppWebhookSchema,\n        response: {\n          200: {\n            type: 'object',\n            properties: {\n              success: { type: 'boolean' },\n            },\n          },\n        },\n      },\n    },\n    async (request: FastifyRequest, reply: FastifyReply) => {\n      try {\n        const signature = request.headers['x-hub-signature-256'] as string;\n        const body = request.body as z.infer<typeof WhatsAppWebhookSchema>;\n        \n        await webhookService.processIncomingWebhook({\n          provider: 'WHATSAPP',\n          signature,\n          payload: body,\n          headers: request.headers,\n          sourceIp: request.ip,\n          userAgent: request.headers['user-agent'],\n        });\n\n        return reply.status(200).send({ success: true });\n      } catch (error) {\n        logger.error('Error processing WhatsApp webhook:', error);\n        return reply.status(200).send({ success: true });\n      }\n    }\n  );\n\n  // Webhook verification endpoints (for Meta and WhatsApp)\n  fastify.get(\n    '/meta',\n    {\n      schema: {\n        tags: ['Webhooks'],\n        summary: 'Verify Meta webhook',\n        querystring: {\n          type: 'object',\n          properties: {\n            'hub.mode': { type: 'string' },\n            'hub.challenge': { type: 'string' },\n            'hub.verify_token': { type: 'string' },\n          },\n          required: ['hub.mode', 'hub.challenge', 'hub.verify_token'],\n        },\n      },\n    },\n    async (request: FastifyRequest, reply: FastifyReply) => {\n      const { 'hub.mode': mode, 'hub.challenge': challenge, 'hub.verify_token': verifyToken } = request.query as any;\n      \n      if (mode === 'subscribe' && verifyToken === process.env.META_WEBHOOK_VERIFY_TOKEN) {\n        return reply.status(200).send(challenge);\n      }\n      \n      return reply.status(403).send('Forbidden');\n    }\n  );\n\n  fastify.get(\n    '/whatsapp',\n    {\n      schema: {\n        tags: ['Webhooks'],\n        summary: 'Verify WhatsApp webhook',\n        querystring: {\n          type: 'object',\n          properties: {\n            'hub.mode': { type: 'string' },\n            'hub.challenge': { type: 'string' },\n            'hub.verify_token': { type: 'string' },\n          },\n          required: ['hub.mode', 'hub.challenge', 'hub.verify_token'],\n        },\n      },\n    },\n    async (request: FastifyRequest, reply: FastifyReply) => {\n      const { 'hub.mode': mode, 'hub.challenge': challenge, 'hub.verify_token': verifyToken } = request.query as any;\n      \n      if (mode === 'subscribe' && verifyToken === process.env.WHATSAPP_WEBHOOK_VERIFY_TOKEN) {\n        return reply.status(200).send(challenge);\n      }\n      \n      return reply.status(403).send('Forbidden');\n    }\n  );\n\n  // Authenticated webhook management endpoints\n  fastify.register(async function authenticatedWebhookRoutes(fastify) {\n    // Add authentication middleware\n    fastify.addHook('preHandler', authMiddleware);\n    fastify.addHook('preHandler', organizationMiddleware);\n\n    // Configure outgoing webhook\n    fastify.post(\n      '/configure',\n      {\n        schema: {\n          tags: ['Webhooks'],\n          summary: 'Configure outgoing webhook',\n          body: WebhookConfigSchema,\n          response: {\n            201: {\n              type: 'object',\n              properties: {\n                success: { type: 'boolean' },\n                data: {\n                  type: 'object',\n                  properties: {\n                    id: { type: 'string' },\n                    name: { type: 'string' },\n                    url: { type: 'string' },\n                    eventTypes: { type: 'array', items: { type: 'string' } },\n                    isActive: { type: 'boolean' },\n                    createdAt: { type: 'string' },\n                  },\n                },\n              },\n            },\n          },\n        },\n      },\n      async (request: FastifyRequest, reply: FastifyReply) => {\n        try {\n          const body = request.body as z.infer<typeof WebhookConfigSchema>;\n          const organizationId = request.organization!.id;\n\n          const config = await webhookService.createWebhookConfig(organizationId, body);\n\n          return reply.status(201).send({\n            success: true,\n            data: config,\n          });\n        } catch (error) {\n          logger.error('Error creating webhook config:', error);\n          throw new ApiError('Failed to create webhook configuration', 'WEBHOOK_CONFIG_ERROR', 500);\n        }\n      }\n    );\n\n    // Get webhook configurations\n    fastify.get(\n      '/configs',\n      {\n        schema: {\n          tags: ['Webhooks'],\n          summary: 'Get webhook configurations',\n          response: {\n            200: {\n              type: 'object',\n              properties: {\n                success: { type: 'boolean' },\n                data: {\n                  type: 'array',\n                  items: {\n                    type: 'object',\n                    properties: {\n                      id: { type: 'string' },\n                      name: { type: 'string' },\n                      url: { type: 'string' },\n                      eventTypes: { type: 'array', items: { type: 'string' } },\n                      isActive: { type: 'boolean' },\n                      totalSent: { type: 'number' },\n                      totalFailed: { type: 'number' },\n                      lastSentAt: { type: 'string', nullable: true },\n                      createdAt: { type: 'string' },\n                    },\n                  },\n                },\n              },\n            },\n          },\n        },\n      },\n      async (request: FastifyRequest, reply: FastifyReply) => {\n        try {\n          const organizationId = request.organization!.id;\n          const configs = await webhookService.getWebhookConfigs(organizationId);\n\n          return reply.status(200).send({\n            success: true,\n            data: configs,\n          });\n        } catch (error) {\n          logger.error('Error getting webhook configs:', error);\n          throw new ApiError('Failed to get webhook configurations', 'WEBHOOK_CONFIGS_ERROR', 500);\n        }\n      }\n    );\n\n    // Get webhook logs\n    fastify.get(\n      '/logs',\n      {\n        schema: {\n          tags: ['Webhooks'],\n          summary: 'Get webhook logs',\n          querystring: {\n            type: 'object',\n            properties: {\n              configId: { type: 'string' },\n              eventType: { type: 'string' },\n              isSuccess: { type: 'boolean' },\n              limit: { type: 'number', minimum: 1, maximum: 100, default: 20 },\n              offset: { type: 'number', minimum: 0, default: 0 },\n            },\n          },\n          response: {\n            200: {\n              type: 'object',\n              properties: {\n                success: { type: 'boolean' },\n                data: {\n                  type: 'object',\n                  properties: {\n                    logs: {\n                      type: 'array',\n                      items: {\n                        type: 'object',\n                        properties: {\n                          id: { type: 'string' },\n                          url: { type: 'string' },\n                          eventType: { type: 'string' },\n                          statusCode: { type: 'number', nullable: true },\n                          responseTime: { type: 'number', nullable: true },\n                          isSuccess: { type: 'boolean' },\n                          attempt: { type: 'number' },\n                          error: { type: 'string', nullable: true },\n                          createdAt: { type: 'string' },\n                        },\n                      },\n                    },\n                    total: { type: 'number' },\n                    hasMore: { type: 'boolean' },\n                  },\n                },\n              },\n            },\n          },\n        },\n      },\n      async (request: FastifyRequest, reply: FastifyReply) => {\n        try {\n          const organizationId = request.organization!.id;\n          const filters = request.query as any;\n          \n          const result = await webhookService.getWebhookLogs(organizationId, filters);\n\n          return reply.status(200).send({\n            success: true,\n            data: result,\n          });\n        } catch (error) {\n          logger.error('Error getting webhook logs:', error);\n          throw new ApiError('Failed to get webhook logs', 'WEBHOOK_LOGS_ERROR', 500);\n        }\n      }\n    );\n\n    // Test webhook\n    fastify.post(\n      '/test',\n      {\n        schema: {\n          tags: ['Webhooks'],\n          summary: 'Send test webhook',\n          body: {\n            type: 'object',\n            properties: {\n              configId: { type: 'string' },\n              eventType: { type: 'string', enum: ['NEW_CONVERSION', 'GOAL_REACHED', 'BUDGET_EXCEEDED', 'CAMPAIGN_PAUSED'] },\n            },\n            required: ['configId', 'eventType'],\n          },\n          response: {\n            200: {\n              type: 'object',\n              properties: {\n                success: { type: 'boolean' },\n                data: {\n                  type: 'object',\n                  properties: {\n                    logId: { type: 'string' },\n                    statusCode: { type: 'number' },\n                    responseTime: { type: 'number' },\n                    isSuccess: { type: 'boolean' },\n                  },\n                },\n              },\n            },\n          },\n        },\n      },\n      async (request: FastifyRequest, reply: FastifyReply) => {\n        try {\n          const { configId, eventType } = request.body as any;\n          const organizationId = request.organization!.id;\n\n          const result = await webhookService.sendTestWebhook(organizationId, configId, eventType);\n\n          return reply.status(200).send({\n            success: true,\n            data: result,\n          });\n        } catch (error) {\n          logger.error('Error sending test webhook:', error);\n          throw new ApiError('Failed to send test webhook', 'WEBHOOK_TEST_ERROR', 500);\n        }\n      }\n    );\n\n    // Retry failed webhook\n    fastify.post(\n      '/retry',\n      {\n        schema: {\n          tags: ['Webhooks'],\n          summary: 'Retry failed webhook',\n          body: {\n            type: 'object',\n            properties: {\n              logId: { type: 'string' },\n            },\n            required: ['logId'],\n          },\n          response: {\n            200: {\n              type: 'object',\n              properties: {\n                success: { type: 'boolean' },\n                data: {\n                  type: 'object',\n                  properties: {\n                    logId: { type: 'string' },\n                    statusCode: { type: 'number' },\n                    responseTime: { type: 'number' },\n                    isSuccess: { type: 'boolean' },\n                  },\n                },\n              },\n            },\n          },\n        },\n      },\n      async (request: FastifyRequest, reply: FastifyReply) => {\n        try {\n          const { logId } = request.body as any;\n          const organizationId = request.organization!.id;\n\n          const result = await webhookService.retryWebhook(organizationId, logId);\n\n          return reply.status(200).send({\n            success: true,\n            data: result,\n          });\n        } catch (error) {\n          logger.error('Error retrying webhook:', error);\n          throw new ApiError('Failed to retry webhook', 'WEBHOOK_RETRY_ERROR', 500);\n        }\n      }\n    );\n\n    // Update webhook configuration\n    fastify.put(\n      '/configs/:configId',\n      {\n        schema: {\n          tags: ['Webhooks'],\n          summary: 'Update webhook configuration',\n          params: {\n            type: 'object',\n            properties: {\n              configId: { type: 'string' },\n            },\n            required: ['configId'],\n          },\n          body: WebhookConfigSchema.partial(),\n          response: {\n            200: {\n              type: 'object',\n              properties: {\n                success: { type: 'boolean' },\n                data: {\n                  type: 'object',\n                  properties: {\n                    id: { type: 'string' },\n                    name: { type: 'string' },\n                    url: { type: 'string' },\n                    eventTypes: { type: 'array', items: { type: 'string' } },\n                    isActive: { type: 'boolean' },\n                    updatedAt: { type: 'string' },\n                  },\n                },\n              },\n            },\n          },\n        },\n      },\n      async (request: FastifyRequest, reply: FastifyReply) => {\n        try {\n          const { configId } = request.params as any;\n          const body = request.body as Partial<z.infer<typeof WebhookConfigSchema>>;\n          const organizationId = request.organization!.id;\n\n          const config = await webhookService.updateWebhookConfig(organizationId, configId, body);\n\n          return reply.status(200).send({\n            success: true,\n            data: config,\n          });\n        } catch (error) {\n          logger.error('Error updating webhook config:', error);\n          throw new ApiError('Failed to update webhook configuration', 'WEBHOOK_UPDATE_ERROR', 500);\n        }\n      }\n    );\n\n    // Delete webhook configuration\n    fastify.delete(\n      '/configs/:configId',\n      {\n        schema: {\n          tags: ['Webhooks'],\n          summary: 'Delete webhook configuration',\n          params: {\n            type: 'object',\n            properties: {\n              configId: { type: 'string' },\n            },\n            required: ['configId'],\n          },\n          response: {\n            200: {\n              type: 'object',\n              properties: {\n                success: { type: 'boolean' },\n              },\n            },\n          },\n        },\n      },\n      async (request: FastifyRequest, reply: FastifyReply) => {\n        try {\n          const { configId } = request.params as any;\n          const organizationId = request.organization!.id;\n\n          await webhookService.deleteWebhookConfig(organizationId, configId);\n\n          return reply.status(200).send({\n            success: true,\n          });\n        } catch (error) {\n          logger.error('Error deleting webhook config:', error);\n          throw new ApiError('Failed to delete webhook configuration', 'WEBHOOK_DELETE_ERROR', 500);\n        }\n      }\n    );\n  });\n}"],"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","ignoreList":[]}