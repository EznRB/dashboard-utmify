{"version":3,"names":["cov_tdcvulbeh","actualCoverage","Injectable","Logger","PrismaClient","PrismaService","s","PrismaService_1","logger","name","constructor","f","log","emit","level","onModuleInit","process","env","NODE_ENV","b","$on","e","debug","query","params","duration","error","message","warn","$connect","onModuleDestroy","$disconnect","enableShutdownHooks","app","close","healthCheck","$queryRaw","__decorate"],"sources":["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\database\\prisma.service.ts"],"sourcesContent":["import { Injectable, OnModuleInit, OnModuleDestroy, Logger } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit, OnModuleDestroy {\n  private readonly logger = new Logger(PrismaService.name);\n\n  constructor() {\n    super({\n      log: [\n        {\n          emit: 'event',\n          level: 'query',\n        },\n        {\n          emit: 'event',\n          level: 'error',\n        },\n        {\n          emit: 'event',\n          level: 'info',\n        },\n        {\n          emit: 'event',\n          level: 'warn',\n        },\n      ],\n    });\n  }\n\n  async onModuleInit() {\n    // Log database queries in development\n    if (process.env.NODE_ENV === 'development') {\n      this.$on('query', (e) => {\n        this.logger.debug(`Query: ${e.query}`);\n        this.logger.debug(`Params: ${e.params}`);\n        this.logger.debug(`Duration: ${e.duration}ms`);\n      });\n    }\n\n    this.$on('error', (e) => {\n      this.logger.error('Database error:', e);\n    });\n\n    this.$on('info', (e) => {\n      this.logger.log('Database info:', e.message);\n    });\n\n    this.$on('warn', (e) => {\n      this.logger.warn('Database warning:', e.message);\n    });\n\n    try {\n      await this.$connect();\n      this.logger.log('Successfully connected to database');\n    } catch (error) {\n      this.logger.error('Failed to connect to database:', error);\n      throw error;\n    }\n  }\n\n  async onModuleDestroy() {\n    try {\n      await this.$disconnect();\n      this.logger.log('Disconnected from database');\n    } catch (error) {\n      this.logger.error('Error disconnecting from database:', error);\n    }\n  }\n\n  /**\n   * Clean shutdown helper\n   */\n  async enableShutdownHooks(app: any) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n\n  /**\n   * Health check for database connection\n   */\n  async healthCheck(): Promise<boolean> {\n    try {\n      await this.$queryRaw`SELECT 1`;\n      return true;\n    } catch {\n      return false;\n    }\n  }\n}"],"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","ignoreList":[]}