281536f9c1b33cd7a9ae5bdb42d293d2
/* istanbul ignore next */
function cov_1e8a0gbxo4() {
  var path = "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\index.ts";
  var hash = "b48cb98591a066ec2b57e65f6e17186066aaf14a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\index.ts",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 12
        },
        end: {
          line: 15,
          column: 2
        }
      },
      "1": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 26,
          column: 3
        }
      },
      "2": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 25,
          column: 27
        }
      },
      "3": {
        start: {
          line: 28,
          column: 0
        },
        end: {
          line: 28,
          column: 34
        }
      },
      "4": {
        start: {
          line: 30,
          column: 0
        },
        end: {
          line: 30,
          column: 40
        }
      },
      "5": {
        start: {
          line: 32,
          column: 14
        },
        end: {
          line: 63,
          column: 1
        }
      },
      "6": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 31
        }
      },
      "7": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 30
        }
      },
      "8": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "9": {
        start: {
          line: 50,
          column: 24
        },
        end: {
          line: 53,
          column: 10
        }
      },
      "10": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 54
        }
      },
      "11": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 55
        }
      },
      "12": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 93
        }
      },
      "13": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 87
        }
      },
      "14": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 53
        }
      },
      "15": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 24
        }
      },
      "16": {
        start: {
          line: 65,
          column: 0
        },
        end: {
          line: 65,
          column: 22
        }
      },
      "17": {
        start: {
          line: 67,
          column: 0
        },
        end: {
          line: 81,
          column: 3
        }
      },
      "18": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 73,
          column: 66
        }
      },
      "19": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 74,
          column: 50
        }
      },
      "20": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 75,
          column: 37
        }
      },
      "21": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 76,
          column: 39
        }
      },
      "22": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 79,
          column: 5
        }
      },
      "23": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 46
        }
      },
      "24": {
        start: {
          line: 83,
          column: 0
        },
        end: {
          line: 86,
          column: 3
        }
      },
      "25": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 84,
          column: 46
        }
      },
      "26": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 85,
          column: 20
        }
      },
      "27": {
        start: {
          line: 88,
          column: 0
        },
        end: {
          line: 88,
          column: 8
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 17,
            column: 25
          },
          end: {
            line: 17,
            column: 26
          }
        },
        loc: {
          start: {
            line: 17,
            column: 44
          },
          end: {
            line: 26,
            column: 1
          }
        },
        line: 17
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 32,
            column: 14
          },
          end: {
            line: 32,
            column: 15
          }
        },
        loc: {
          start: {
            line: 32,
            column: 26
          },
          end: {
            line: 63,
            column: 1
          }
        },
        line: 32
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 67,
            column: 33
          },
          end: {
            line: 67,
            column: 34
          }
        },
        loc: {
          start: {
            line: 67,
            column: 54
          },
          end: {
            line: 81,
            column: 1
          }
        },
        line: 67
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 83,
            column: 32
          },
          end: {
            line: 83,
            column: 33
          }
        },
        loc: {
          start: {
            line: 83,
            column: 43
          },
          end: {
            line: 86,
            column: 1
          }
        },
        line: 83
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 56,
            column: 37
          },
          end: {
            line: 56,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 56,
            column: 59
          },
          end: {
            line: 56,
            column: 70
          }
        }, {
          start: {
            line: 56,
            column: 73
          },
          end: {
            line: 56,
            column: 89
          }
        }],
        line: 56
      },
      "1": {
        loc: {
          start: {
            line: 57,
            column: 34
          },
          end: {
            line: 57,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 57,
            column: 53
          },
          end: {
            line: 57,
            column: 64
          }
        }, {
          start: {
            line: 57,
            column: 67
          },
          end: {
            line: 57,
            column: 83
          }
        }],
        line: 57
      },
      "2": {
        loc: {
          start: {
            line: 71,
            column: 15
          },
          end: {
            line: 71,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 71,
            column: 41
          },
          end: {
            line: 71,
            column: 53
          }
        }, {
          start: {
            line: 71,
            column: 56
          },
          end: {
            line: 71,
            column: 82
          }
        }],
        line: 71
      },
      "3": {
        loc: {
          start: {
            line: 72,
            column: 17
          },
          end: {
            line: 72,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 72,
            column: 43
          },
          end: {
            line: 72,
            column: 57
          }
        }, {
          start: {
            line: 72,
            column: 60
          },
          end: {
            line: 72,
            column: 74
          }
        }],
        line: 72
      },
      "4": {
        loc: {
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\index.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Enzo Marcelo\\Desktop\\Projetos Empresa\\Saas Utmify\\utmify-clone\\apps\\api\\src\\index.ts"],
      sourcesContent: ["import 'dotenv/config'\nimport Fastify from 'fastify'\nimport { gracefulShutdown } from './utils/graceful-shutdown'\nimport { logger } from './utils/logger'\nimport { registerPlugins } from './config/plugins'\nimport { registerRoutes } from './routes'\nimport { errorHandler, notFoundHandler } from './utils/errors'\nimport { config } from './config/env'\nimport { getWorkerManager } from './workers'\nimport { getJobManager } from './jobs'\nimport { getQueueManager } from './queue'\n\n// Create Fastify instance\nconst app = Fastify({\n  logger: false, // We use our custom logger\n  trustProxy: true,\n  requestIdLogLabel: 'requestId',\n  requestIdHeader: 'x-request-id',\n})\n\n// Add request logging\napp.addHook('onRequest', async (request) => {\n  logger.info({\n    request: {\n      method: request.method,\n      url: request.url,\n      headers: request.headers,\n      ip: request.ip,\n    },\n  }, 'Incoming request')\n})\n\n// Global error handler\napp.setErrorHandler(errorHandler)\n\n// 404 handler\napp.setNotFoundHandler(notFoundHandler)\n\n// Start server\nconst start = async () => {\n  // Register plugins\n  await registerPlugins(app)\n\n  // Register routes\n  await registerRoutes(app)\n  try {\n    // TEMPORARILY DISABLED - Initialize workers\n    // const workerManager = getWorkerManager(app.db)\n    // await workerManager.start()\n    // logger.info('Workers initialized successfully')\n    \n    // TEMPORARILY DISABLED - Initialize scheduled jobs\n    // const jobManager = getJobManager(app.db)\n    // await jobManager.start()\n    // logger.info('Scheduled jobs initialized successfully')\n    \n    // TEMPORARILY DISABLED - Initialize queue system\n    // const queueManager = getQueueManager(app.db)\n    // await queueManager.initialize()\n    // logger.info('Queue system initialized successfully')\n    \n    const address = await app.listen({\n      port: config.PORT,\n      host: config.HOST,\n    })\n    \n    logger.info(`Server listening on ${address}`)\n    logger.info(`Environment: ${config.NODE_ENV}`)\n    logger.info(`Database URL: ${config.DATABASE_URL ? 'Connected' : 'Not configured'}`)\n    logger.info(`Redis URL: ${config.REDIS_URL ? 'Connected' : 'Not configured'}`)\n  } catch (error) {\n    logger.error(error, 'Error starting server')\n    process.exit(1)\n  }\n}\n\n// Setup graceful shutdown\ngracefulShutdown(app)\n\n// Handle unhandled promise rejections - TEMPORARILY NOT EXITING FOR DEBUGGING\nprocess.on('unhandledRejection', (reason, promise) => {\n  logger.error({\n    reason,\n    promise,\n    stack: reason instanceof Error ? reason.stack : 'No stack trace available',\n    message: reason instanceof Error ? reason.message : String(reason)\n  }, 'Unhandled promise rejection - NOT EXITING FOR DEBUGGING')\n  console.error('UNHANDLED REJECTION DETAILS:')\n  console.error('Reason:', reason)\n  console.error('Promise:', promise)\n  if (reason instanceof Error) {\n    console.error('Stack:', reason.stack)\n  }\n  // Temporarily commented out to debug: process.exit(1)\n})\n\n// Handle uncaught exceptions\nprocess.on('uncaughtException', (error) => {\n  logger.error(error, 'Uncaught exception')\n  process.exit(1)\n})\n\n// Start the server\nstart()"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b48cb98591a066ec2b57e65f6e17186066aaf14a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1e8a0gbxo4 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1e8a0gbxo4();
import 'dotenv/config';
import Fastify from 'fastify';
import { gracefulShutdown } from './utils/graceful-shutdown';
import { logger } from './utils/logger';
import { registerPlugins } from './config/plugins';
import { registerRoutes } from './routes';
import { errorHandler, notFoundHandler } from './utils/errors';
import { config } from './config/env';
// Create Fastify instance
const app =
/* istanbul ignore next */
(cov_1e8a0gbxo4().s[0]++, Fastify({
  logger: false,
  // We use our custom logger
  trustProxy: true,
  requestIdLogLabel: 'requestId',
  requestIdHeader: 'x-request-id'
}));
// Add request logging
/* istanbul ignore next */
cov_1e8a0gbxo4().s[1]++;
app.addHook('onRequest', async request => {
  /* istanbul ignore next */
  cov_1e8a0gbxo4().f[0]++;
  cov_1e8a0gbxo4().s[2]++;
  logger.info({
    request: {
      method: request.method,
      url: request.url,
      headers: request.headers,
      ip: request.ip
    }
  }, 'Incoming request');
});
// Global error handler
/* istanbul ignore next */
cov_1e8a0gbxo4().s[3]++;
app.setErrorHandler(errorHandler);
// 404 handler
/* istanbul ignore next */
cov_1e8a0gbxo4().s[4]++;
app.setNotFoundHandler(notFoundHandler);
// Start server
/* istanbul ignore next */
cov_1e8a0gbxo4().s[5]++;
const start = async () => {
  /* istanbul ignore next */
  cov_1e8a0gbxo4().f[1]++;
  cov_1e8a0gbxo4().s[6]++;
  // Register plugins
  await registerPlugins(app);
  // Register routes
  /* istanbul ignore next */
  cov_1e8a0gbxo4().s[7]++;
  await registerRoutes(app);
  /* istanbul ignore next */
  cov_1e8a0gbxo4().s[8]++;
  try {
    // TEMPORARILY DISABLED - Initialize workers
    // const workerManager = getWorkerManager(app.db)
    // await workerManager.start()
    // logger.info('Workers initialized successfully')
    // TEMPORARILY DISABLED - Initialize scheduled jobs
    // const jobManager = getJobManager(app.db)
    // await jobManager.start()
    // logger.info('Scheduled jobs initialized successfully')
    // TEMPORARILY DISABLED - Initialize queue system
    // const queueManager = getQueueManager(app.db)
    // await queueManager.initialize()
    // logger.info('Queue system initialized successfully')
    const address =
    /* istanbul ignore next */
    (cov_1e8a0gbxo4().s[9]++, await app.listen({
      port: config.PORT,
      host: config.HOST
    }));
    /* istanbul ignore next */
    cov_1e8a0gbxo4().s[10]++;
    logger.info(`Server listening on ${address}`);
    /* istanbul ignore next */
    cov_1e8a0gbxo4().s[11]++;
    logger.info(`Environment: ${config.NODE_ENV}`);
    /* istanbul ignore next */
    cov_1e8a0gbxo4().s[12]++;
    logger.info(`Database URL: ${config.DATABASE_URL ?
    /* istanbul ignore next */
    (cov_1e8a0gbxo4().b[0][0]++, 'Connected') :
    /* istanbul ignore next */
    (cov_1e8a0gbxo4().b[0][1]++, 'Not configured')}`);
    /* istanbul ignore next */
    cov_1e8a0gbxo4().s[13]++;
    logger.info(`Redis URL: ${config.REDIS_URL ?
    /* istanbul ignore next */
    (cov_1e8a0gbxo4().b[1][0]++, 'Connected') :
    /* istanbul ignore next */
    (cov_1e8a0gbxo4().b[1][1]++, 'Not configured')}`);
  } catch (error) {
    /* istanbul ignore next */
    cov_1e8a0gbxo4().s[14]++;
    logger.error(error, 'Error starting server');
    /* istanbul ignore next */
    cov_1e8a0gbxo4().s[15]++;
    process.exit(1);
  }
};
// Setup graceful shutdown
/* istanbul ignore next */
cov_1e8a0gbxo4().s[16]++;
gracefulShutdown(app);
// Handle unhandled promise rejections - TEMPORARILY NOT EXITING FOR DEBUGGING
/* istanbul ignore next */
cov_1e8a0gbxo4().s[17]++;
process.on('unhandledRejection', (reason, promise) => {
  /* istanbul ignore next */
  cov_1e8a0gbxo4().f[2]++;
  cov_1e8a0gbxo4().s[18]++;
  logger.error({
    reason,
    promise,
    stack: reason instanceof Error ?
    /* istanbul ignore next */
    (cov_1e8a0gbxo4().b[2][0]++, reason.stack) :
    /* istanbul ignore next */
    (cov_1e8a0gbxo4().b[2][1]++, 'No stack trace available'),
    message: reason instanceof Error ?
    /* istanbul ignore next */
    (cov_1e8a0gbxo4().b[3][0]++, reason.message) :
    /* istanbul ignore next */
    (cov_1e8a0gbxo4().b[3][1]++, String(reason))
  }, 'Unhandled promise rejection - NOT EXITING FOR DEBUGGING');
  /* istanbul ignore next */
  cov_1e8a0gbxo4().s[19]++;
  console.error('UNHANDLED REJECTION DETAILS:');
  /* istanbul ignore next */
  cov_1e8a0gbxo4().s[20]++;
  console.error('Reason:', reason);
  /* istanbul ignore next */
  cov_1e8a0gbxo4().s[21]++;
  console.error('Promise:', promise);
  /* istanbul ignore next */
  cov_1e8a0gbxo4().s[22]++;
  if (reason instanceof Error) {
    /* istanbul ignore next */
    cov_1e8a0gbxo4().b[4][0]++;
    cov_1e8a0gbxo4().s[23]++;
    console.error('Stack:', reason.stack);
  } else
  /* istanbul ignore next */
  {
    cov_1e8a0gbxo4().b[4][1]++;
  }
  // Temporarily commented out to debug: process.exit(1)
});
// Handle uncaught exceptions
/* istanbul ignore next */
cov_1e8a0gbxo4().s[24]++;
process.on('uncaughtException', error => {
  /* istanbul ignore next */
  cov_1e8a0gbxo4().f[3]++;
  cov_1e8a0gbxo4().s[25]++;
  logger.error(error, 'Uncaught exception');
  /* istanbul ignore next */
  cov_1e8a0gbxo4().s[26]++;
  process.exit(1);
});
// Start the server
/* istanbul ignore next */
cov_1e8a0gbxo4().s[27]++;
start();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,